/*! For license information please see main.5d9fd345.js.LICENSE.txt */
(()=>{var e={353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(I){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var r={},s={};function o(e,t){var n,a,o;return t?(o=0<=(e>>>=0)&&e<256)&&(a=s[e])?a:(n=c(e,(0|e)<0?-1:0,!0),o&&(s[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(a=r[e])?a:(n=c(e,e<0?-1:0,!1),o&&(r[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?i(-e,t).neg():c(e%d|0,e/d|0,t)}function c(e,t,a){return new n(e,t,a)}n.fromInt=o,n.fromNumber=i,n.fromBits=c;var l=Math.pow;function u(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return u(e.substring(1),t,n).neg();for(var r=i(l(n,8)),s=g,o=0;o<e.length;o+=8){var c=Math.min(8,e.length-o),h=parseInt(e.substring(o,o+c),n);if(c<8){var d=i(l(n,c));s=s.mul(d).add(i(h))}else s=(s=s.mul(r)).add(i(h))}return s.unsigned=t,s}function h(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?u(e,t):c(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=u,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var x=o(1,!0);n.UONE=x;var v=o(-1);n.NEG_ONE=v;var w=c(-1,2147483647,!1);n.MAX_VALUE=w;var k=c(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=c(0,-2147483648,!1);n.MIN_VALUE=S;var N=n.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=i(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=i(l(e,6),this.unsigned),s=this,o="";;){var c=s.div(r),u=(s.sub(c.mul(r)).toInt()>>>0).toString(e);if((s=c).isZero())return u+o;for(;u.length<6;)u="0"+u;o=""+u+o}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1===(1&this.low)},N.isEven=function(){return 0===(1&this.low)},N.equals=function(e){return a(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(a(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},N.neg=N.negate,N.add=function(e){a(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,l=e.low>>>16,u=0,d=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,d+=(p+=r+l)>>>16,u+=(d+=n+i)>>>16,u+=t+o,c((p&=65535)<<16|(f&=65535),(u&=65535)<<16|(d&=65535),this.unsigned)},N.subtract=function(e){return a(e)||(e=h(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=h(e)),t)return c(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,s=this.low>>>16,o=65535&this.low,l=e.high>>>16,u=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=o*p)>>>16,y+=(b+=s*p)>>>16,b&=65535,y+=(b+=o*d)>>>16,f+=(y+=r*p)>>>16,y&=65535,f+=(y+=s*d)>>>16,y&=65535,f+=(y+=o*u)>>>16,f+=n*p+r*d+s*u+o*l,c((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(a(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;s=y}else{if(this.eq(S))return e.eq(b)||e.eq(v)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(r=this.sub(e.mul(n)),s=n.add(r.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),u=o<=48?1:l(2,o-48),d=i(n),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=i(n-=u,this.unsigned)).mul(e);d.isZero()&&(d=b),s=s.add(d),r=r.sub(p)}return s},N.div=N.divide,N.modulo=function(e){return a(e)||(e=h(e)),t?c((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return c(~this.low,~this.high,this.unsigned)},N.and=function(e){return a(e)||(e=h(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return a(e)||(e=h(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return a(e)||(e=h(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},730:(e,t,n)=>{"use strict";var a=n(43),r=n(853);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,i={};function c(e,t){l(e,t),l(e+"Capture",t)}function l(e,t){for(i[e]=t,e=0;e<t.length;e++)o.add(t[e])}var u=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),h=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function m(e,t,n,a,r,s,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=a,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function x(e,t,n,a){var r=g.hasOwnProperty(t)?g[t]:null;(null!==r?0!==r.type:a||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,a){if(null===t||"undefined"===typeof t||function(e,t,n,a){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,r,a)&&(n=null),a||null===r?function(e){return!!h.call(f,e)||!h.call(p,e)&&(d.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):r.mustUseProperty?e[r.propertyName]=null===n?3!==r.type&&"":n:(t=r.attributeName,a=r.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var v=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),N=Symbol.for("react.strict_mode"),I=Symbol.for("react.profiler"),T=Symbol.for("react.provider"),C=Symbol.for("react.context"),E=Symbol.for("react.forward_ref"),R=Symbol.for("react.suspense"),A=Symbol.for("react.suspense_list"),_=Symbol.for("react.memo"),F=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var D=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var O=Symbol.iterator;function M(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=O&&e[O]||e["@@iterator"])?e:null}var L,z=Object.assign;function P(e){if(void 0===L)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);L=t&&t[1]||""}return"\n"+L+e}var B=!1;function W(e,t){if(!e||B)return"";B=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(l){var a=l}Reflect.construct(e,[],t)}else{try{t.call()}catch(l){a=l}e.call(t.prototype)}else{try{throw Error()}catch(l){a=l}e()}}catch(l){if(l&&a&&"string"===typeof l.stack){for(var r=l.stack.split("\n"),s=a.stack.split("\n"),o=r.length-1,i=s.length-1;1<=o&&0<=i&&r[o]!==s[i];)i--;for(;1<=o&&0<=i;o--,i--)if(r[o]!==s[i]){if(1!==o||1!==i)do{if(o--,0>--i||r[o]!==s[i]){var c="\n"+r[o].replace(" at new "," at ");return e.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",e.displayName)),c}}while(1<=o&&0<=i);break}}}finally{B=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?P(e):""}function V(e){switch(e.tag){case 5:return P(e.type);case 16:return P("Lazy");case 13:return P("Suspense");case 19:return P("SuspenseList");case 0:case 2:case 15:return e=W(e.type,!1);case 11:return e=W(e.type.render,!1);case 1:return e=W(e.type,!0);default:return""}}function U(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case k:return"Portal";case I:return"Profiler";case N:return"StrictMode";case R:return"Suspense";case A:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case C:return(e.displayName||"Context")+".Consumer";case T:return(e._context.displayName||"Context")+".Provider";case E:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case _:return null!==(t=e.displayName||null)?t:U(e.type)||"Memo";case F:t=e._payload,e=e._init;try{return U(e(t))}catch(n){}}return null}function G(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return U(t);case 8:return t===N?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function H(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function j(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function q(e){e._valueTracker||(e._valueTracker=function(e){var t=j(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){a=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function K(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=j(e)?e.checked?"true":"false":e.value),(e=a)!==n&&(t.setValue(e),!0)}function X(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Y(e,t){var n=t.checked;return z({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Q(e,t){var n=null==t.defaultValue?"":t.defaultValue,a=null!=t.checked?t.checked:t.defaultChecked;n=H(null!=t.value?t.value:n),e._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Z(e,t){null!=(t=t.checked)&&x(e,"checked",t,!1)}function J(e,t){Z(e,t);var n=H(t.value),a=t.type;if(null!=n)"number"===a?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,H(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function $(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!("submit"!==a&&"reset"!==a||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&X(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,a){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&a&&(e[n].defaultSelected=!0)}else{for(n=""+H(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(a&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return z({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(s(92));if(te(n)){if(1<n.length)throw Error(s(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:H(n)}}function se(e,t){var n=H(t.value),a=H(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=a&&(e.defaultValue=""+a)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ce(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var le,ue,he=(ue=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((le=le||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=le.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,a){MSApp.execUnsafeLocalFunction((function(){return ue(e,t)}))}:ue);function de(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var a=0===n.indexOf("--"),r=me(n,t[n],a);"float"===n&&(n="cssFloat"),a?e.setProperty(n,r):e[n]=r}}Object.keys(pe).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ye=z({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(s(62))}}function xe(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ve=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Se=null,Ne=null;function Ie(e){if(e=xr(e)){if("function"!==typeof ke)throw Error(s(280));var t=e.stateNode;t&&(t=wr(t),ke(e.stateNode,e.type,t))}}function Te(e){Se?Ne?Ne.push(e):Ne=[e]:Se=e}function Ce(){if(Se){var e=Se,t=Ne;if(Ne=Se=null,Ie(e),t)for(e=0;e<t.length;e++)Ie(t[e])}}function Ee(e,t){return e(t)}function Re(){}var Ae=!1;function _e(e,t,n){if(Ae)return e(t,n);Ae=!0;try{return Ee(e,t,n)}finally{Ae=!1,(null!==Se||null!==Ne)&&(Re(),Ce())}}function Fe(e,t){var n=e.stateNode;if(null===n)return null;var a=wr(n);if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(s(231,t,typeof n));return n}var De=!1;if(u)try{var Oe={};Object.defineProperty(Oe,"passive",{get:function(){De=!0}}),window.addEventListener("test",Oe,Oe),window.removeEventListener("test",Oe,Oe)}catch(ue){De=!1}function Me(e,t,n,a,r,s,o,i,c){var l=Array.prototype.slice.call(arguments,3);try{t.apply(n,l)}catch(u){this.onError(u)}}var Le=!1,ze=null,Pe=!1,Be=null,We={onError:function(e){Le=!0,ze=e}};function Ve(e,t,n,a,r,s,o,i,c){Le=!1,ze=null,Me.apply(We,arguments)}function Ue(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function He(e){if(Ue(e)!==e)throw Error(s(188))}function je(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ue(e)))throw Error(s(188));return t!==e?null:e}for(var n=e,a=t;;){var r=n.return;if(null===r)break;var o=r.alternate;if(null===o){if(null!==(a=r.return)){n=a;continue}break}if(r.child===o.child){for(o=r.child;o;){if(o===n)return He(r),e;if(o===a)return He(r),t;o=o.sibling}throw Error(s(188))}if(n.return!==a.return)n=r,a=o;else{for(var i=!1,c=r.child;c;){if(c===n){i=!0,n=r,a=o;break}if(c===a){i=!0,a=r,n=o;break}c=c.sibling}if(!i){for(c=o.child;c;){if(c===n){i=!0,n=o,a=r;break}if(c===a){i=!0,a=o,n=r;break}c=c.sibling}if(!i)throw Error(s(189))}}if(n.alternate!==a)throw Error(s(190))}if(3!==n.tag)throw Error(s(188));return n.stateNode.current===n?e:t}(e))?qe(e):null}function qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=qe(e);if(null!==t)return t;e=e.sibling}return null}var Ke=r.unstable_scheduleCallback,Xe=r.unstable_cancelCallback,Ye=r.unstable_shouldYield,Qe=r.unstable_requestPaint,Ze=r.unstable_now,Je=r.unstable_getCurrentPriorityLevel,$e=r.unstable_ImmediatePriority,et=r.unstable_UserBlockingPriority,tt=r.unstable_NormalPriority,nt=r.unstable_LowPriority,at=r.unstable_IdlePriority,rt=null,st=null;var ot=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(it(e)/ct|0)|0},it=Math.log,ct=Math.LN2;var lt=64,ut=4194304;function ht(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var n=e.pendingLanes;if(0===n)return 0;var a=0,r=e.suspendedLanes,s=e.pingedLanes,o=268435455&n;if(0!==o){var i=o&~r;0!==i?a=ht(i):0!==(s&=o)&&(a=ht(s))}else 0!==(o=n&~r)?a=ht(o):0!==s&&(a=ht(s));if(0===a)return 0;if(0!==t&&t!==a&&0===(t&r)&&((r=a&-a)>=(s=t&-t)||16===r&&0!==(4194240&s)))return t;if(0!==(4&a)&&(a|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=a;0<t;)r=1<<(n=31-ot(t)),a|=e[n],t&=~r;return a}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=lt;return 0===(4194240&(lt<<=1))&&(lt=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-ot(n),r=1<<a;r&t|e[a]&t&&(e[a]|=t),n&=~r}}var xt=0;function vt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var wt,kt,St,Nt,It,Tt=!1,Ct=[],Et=null,Rt=null,At=null,_t=new Map,Ft=new Map,Dt=[],Ot="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Mt(e,t){switch(e){case"focusin":case"focusout":Et=null;break;case"dragenter":case"dragleave":Rt=null;break;case"mouseover":case"mouseout":At=null;break;case"pointerover":case"pointerout":_t.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ft.delete(t.pointerId)}}function Lt(e,t,n,a,r,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:s,targetContainers:[r]},null!==t&&(null!==(t=xr(t))&&kt(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==r&&-1===t.indexOf(r)&&t.push(r),e)}function zt(e){var t=br(e.target);if(null!==t){var n=Ue(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void It(e.priority,(function(){St(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Pt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Yt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=xr(n))&&kt(t),e.blockedOn=n,!1;var a=new(n=e.nativeEvent).constructor(n.type,n);ve=a,n.target.dispatchEvent(a),ve=null,t.shift()}return!0}function Bt(e,t,n){Pt(e)&&n.delete(t)}function Wt(){Tt=!1,null!==Et&&Pt(Et)&&(Et=null),null!==Rt&&Pt(Rt)&&(Rt=null),null!==At&&Pt(At)&&(At=null),_t.forEach(Bt),Ft.forEach(Bt)}function Vt(e,t){e.blockedOn===t&&(e.blockedOn=null,Tt||(Tt=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Wt)))}function Ut(e){function t(t){return Vt(t,e)}if(0<Ct.length){Vt(Ct[0],e);for(var n=1;n<Ct.length;n++){var a=Ct[n];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==Et&&Vt(Et,e),null!==Rt&&Vt(Rt,e),null!==At&&Vt(At,e),_t.forEach(t),Ft.forEach(t),n=0;n<Dt.length;n++)(a=Dt[n]).blockedOn===e&&(a.blockedOn=null);for(;0<Dt.length&&null===(n=Dt[0]).blockedOn;)zt(n),null===n.blockedOn&&Dt.shift()}var Gt=v.ReactCurrentBatchConfig,Ht=!0;function jt(e,t,n,a){var r=xt,s=Gt.transition;Gt.transition=null;try{xt=1,Kt(e,t,n,a)}finally{xt=r,Gt.transition=s}}function qt(e,t,n,a){var r=xt,s=Gt.transition;Gt.transition=null;try{xt=4,Kt(e,t,n,a)}finally{xt=r,Gt.transition=s}}function Kt(e,t,n,a){if(Ht){var r=Yt(e,t,n,a);if(null===r)Ha(e,t,a,Xt,n),Mt(e,a);else if(function(e,t,n,a,r){switch(t){case"focusin":return Et=Lt(Et,e,t,n,a,r),!0;case"dragenter":return Rt=Lt(Rt,e,t,n,a,r),!0;case"mouseover":return At=Lt(At,e,t,n,a,r),!0;case"pointerover":var s=r.pointerId;return _t.set(s,Lt(_t.get(s)||null,e,t,n,a,r)),!0;case"gotpointercapture":return s=r.pointerId,Ft.set(s,Lt(Ft.get(s)||null,e,t,n,a,r)),!0}return!1}(r,e,t,n,a))a.stopPropagation();else if(Mt(e,a),4&t&&-1<Ot.indexOf(e)){for(;null!==r;){var s=xr(r);if(null!==s&&wt(s),null===(s=Yt(e,t,n,a))&&Ha(e,t,a,Xt,n),s===r)break;r=s}null!==r&&a.stopPropagation()}else Ha(e,t,a,null,n)}}var Xt=null;function Yt(e,t,n,a){if(Xt=null,null!==(e=br(e=we(a))))if(null===(t=Ue(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ge(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Xt=e,null}function Qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case $e:return 1;case et:return 4;case tt:case nt:return 16;case at:return 536870912;default:return 16}default:return 16}}var Zt=null,Jt=null,$t=null;function en(){if($t)return $t;var e,t,n=Jt,a=n.length,r="value"in Zt?Zt.value:Zt.textContent,s=r.length;for(e=0;e<a&&n[e]===r[e];e++);var o=a-e;for(t=1;t<=o&&n[a-t]===r[s-t];t++);return $t=r.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function an(){return!1}function rn(e){function t(t,n,a,r,s){for(var o in this._reactName=t,this._targetInst=a,this.type=n,this.nativeEvent=r,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(r):r[o]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?nn:an,this.isPropagationStopped=an,this}return z(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var sn,on,cn,ln={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},un=rn(ln),hn=z({},ln,{view:0,detail:0}),dn=rn(hn),pn=z({},hn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:In,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(sn=e.screenX-cn.screenX,on=e.screenY-cn.screenY):on=sn=0,cn=e),sn)},movementY:function(e){return"movementY"in e?e.movementY:on}}),fn=rn(pn),mn=rn(z({},pn,{dataTransfer:0})),gn=rn(z({},hn,{relatedTarget:0})),yn=rn(z({},ln,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=z({},ln,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),xn=rn(bn),vn=rn(z({},ln,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Nn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function In(){return Nn}var Tn=z({},hn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:In,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Cn=rn(Tn),En=rn(z({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Rn=rn(z({},hn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:In})),An=rn(z({},ln,{propertyName:0,elapsedTime:0,pseudoElement:0})),_n=z({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Fn=rn(_n),Dn=[9,13,27,32],On=u&&"CompositionEvent"in window,Mn=null;u&&"documentMode"in document&&(Mn=document.documentMode);var Ln=u&&"TextEvent"in window&&!Mn,zn=u&&(!On||Mn&&8<Mn&&11>=Mn),Pn=String.fromCharCode(32),Bn=!1;function Wn(e,t){switch(e){case"keyup":return-1!==Dn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Vn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Un=!1;var Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function jn(e,t,n,a){Te(a),0<(t=qa(t,"onChange")).length&&(n=new un("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var qn=null,Kn=null;function Xn(e){Pa(e,0)}function Yn(e){if(K(vr(e)))return e}function Qn(e,t){if("change"===e)return t}var Zn=!1;if(u){var Jn;if(u){var $n="oninput"in document;if(!$n){var ea=document.createElement("div");ea.setAttribute("oninput","return;"),$n="function"===typeof ea.oninput}Jn=$n}else Jn=!1;Zn=Jn&&(!document.documentMode||9<document.documentMode)}function ta(){qn&&(qn.detachEvent("onpropertychange",na),Kn=qn=null)}function na(e){if("value"===e.propertyName&&Yn(Kn)){var t=[];jn(t,Kn,e,we(e)),_e(Xn,t)}}function aa(e,t,n){"focusin"===e?(ta(),Kn=n,(qn=t).attachEvent("onpropertychange",na)):"focusout"===e&&ta()}function ra(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yn(Kn)}function sa(e,t){if("click"===e)return Yn(t)}function oa(e,t){if("input"===e||"change"===e)return Yn(t)}var ia="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function ca(e,t){if(ia(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var r=n[a];if(!h.call(t,r)||!ia(e[r],t[r]))return!1}return!0}function la(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ua(e,t){var n,a=la(e);for(e=0;a;){if(3===a.nodeType){if(n=e+a.textContent.length,e<=t&&n>=t)return{node:a,offset:t-e};e=n}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=la(a)}}function ha(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?ha(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function da(){for(var e=window,t=X();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(a){n=!1}if(!n)break;t=X((e=t.contentWindow).document)}return t}function pa(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fa(e){var t=da(),n=e.focusedElem,a=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&ha(n.ownerDocument.documentElement,n)){if(null!==a&&pa(n))if(t=a.start,void 0===(e=a.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var r=n.textContent.length,s=Math.min(a.start,r);a=void 0===a.end?s:Math.min(a.end,r),!e.extend&&s>a&&(r=a,a=s,s=r),r=ua(n,s);var o=ua(n,a);r&&o&&(1!==e.rangeCount||e.anchorNode!==r.node||e.anchorOffset!==r.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(r.node,r.offset),e.removeAllRanges(),s>a?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var ma=u&&"documentMode"in document&&11>=document.documentMode,ga=null,ya=null,ba=null,xa=!1;function va(e,t,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;xa||null==ga||ga!==X(a)||("selectionStart"in(a=ga)&&pa(a)?a={start:a.selectionStart,end:a.selectionEnd}:a={anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},ba&&ca(ba,a)||(ba=a,0<(a=qa(ya,"onSelect")).length&&(t=new un("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=ga)))}function wa(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var ka={animationend:wa("Animation","AnimationEnd"),animationiteration:wa("Animation","AnimationIteration"),animationstart:wa("Animation","AnimationStart"),transitionend:wa("Transition","TransitionEnd")},Sa={},Na={};function Ia(e){if(Sa[e])return Sa[e];if(!ka[e])return e;var t,n=ka[e];for(t in n)if(n.hasOwnProperty(t)&&t in Na)return Sa[e]=n[t];return e}u&&(Na=document.createElement("div").style,"AnimationEvent"in window||(delete ka.animationend.animation,delete ka.animationiteration.animation,delete ka.animationstart.animation),"TransitionEvent"in window||delete ka.transitionend.transition);var Ta=Ia("animationend"),Ca=Ia("animationiteration"),Ea=Ia("animationstart"),Ra=Ia("transitionend"),Aa=new Map,_a="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Fa(e,t){Aa.set(e,t),c(t,[e])}for(var Da=0;Da<_a.length;Da++){var Oa=_a[Da];Fa(Oa.toLowerCase(),"on"+(Oa[0].toUpperCase()+Oa.slice(1)))}Fa(Ta,"onAnimationEnd"),Fa(Ca,"onAnimationIteration"),Fa(Ea,"onAnimationStart"),Fa("dblclick","onDoubleClick"),Fa("focusin","onFocus"),Fa("focusout","onBlur"),Fa(Ra,"onTransitionEnd"),l("onMouseEnter",["mouseout","mouseover"]),l("onMouseLeave",["mouseout","mouseover"]),l("onPointerEnter",["pointerout","pointerover"]),l("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ma="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),La=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ma));function za(e,t,n){var a=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,a,r,o,i,c,l){if(Ve.apply(this,arguments),Le){if(!Le)throw Error(s(198));var u=ze;Le=!1,ze=null,Pe||(Pe=!0,Be=u)}}(a,t,void 0,e),e.currentTarget=null}function Pa(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var a=e[n],r=a.event;a=a.listeners;e:{var s=void 0;if(t)for(var o=a.length-1;0<=o;o--){var i=a[o],c=i.instance,l=i.currentTarget;if(i=i.listener,c!==s&&r.isPropagationStopped())break e;za(r,i,l),s=c}else for(o=0;o<a.length;o++){if(c=(i=a[o]).instance,l=i.currentTarget,i=i.listener,c!==s&&r.isPropagationStopped())break e;za(r,i,l),s=c}}}if(Pe)throw e=Be,Pe=!1,Be=null,e}function Ba(e,t){var n=t[mr];void 0===n&&(n=t[mr]=new Set);var a=e+"__bubble";n.has(a)||(Ga(t,e,2,!1),n.add(a))}function Wa(e,t,n){var a=0;t&&(a|=4),Ga(n,e,a,t)}var Va="_reactListening"+Math.random().toString(36).slice(2);function Ua(e){if(!e[Va]){e[Va]=!0,o.forEach((function(t){"selectionchange"!==t&&(La.has(t)||Wa(t,!1,e),Wa(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Va]||(t[Va]=!0,Wa("selectionchange",!1,t))}}function Ga(e,t,n,a){switch(Qt(t)){case 1:var r=jt;break;case 4:r=qt;break;default:r=Kt}n=r.bind(null,t,n,e),r=void 0,!De||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(r=!0),a?void 0!==r?e.addEventListener(t,n,{capture:!0,passive:r}):e.addEventListener(t,n,!0):void 0!==r?e.addEventListener(t,n,{passive:r}):e.addEventListener(t,n,!1)}function Ha(e,t,n,a,r){var s=a;if(0===(1&t)&&0===(2&t)&&null!==a)e:for(;;){if(null===a)return;var o=a.tag;if(3===o||4===o){var i=a.stateNode.containerInfo;if(i===r||8===i.nodeType&&i.parentNode===r)break;if(4===o)for(o=a.return;null!==o;){var c=o.tag;if((3===c||4===c)&&((c=o.stateNode.containerInfo)===r||8===c.nodeType&&c.parentNode===r))return;o=o.return}for(;null!==i;){if(null===(o=br(i)))return;if(5===(c=o.tag)||6===c){a=s=o;continue e}i=i.parentNode}}a=a.return}_e((function(){var a=s,r=we(n),o=[];e:{var i=Aa.get(e);if(void 0!==i){var c=un,l=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":c=Cn;break;case"focusin":l="focus",c=gn;break;case"focusout":l="blur",c=gn;break;case"beforeblur":case"afterblur":c=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":c=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":c=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":c=Rn;break;case Ta:case Ca:case Ea:c=yn;break;case Ra:c=An;break;case"scroll":c=dn;break;case"wheel":c=Fn;break;case"copy":case"cut":case"paste":c=xn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":c=En}var u=0!==(4&t),h=!u&&"scroll"===e,d=u?null!==i?i+"Capture":null:i;u=[];for(var p,f=a;null!==f;){var m=(p=f).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&(null!=(m=Fe(f,d))&&u.push(ja(f,m,p)))),h)break;f=f.return}0<u.length&&(i=new c(i,l,null,n,r),o.push({event:i,listeners:u}))}}if(0===(7&t)){if(c="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===ve||!(l=n.relatedTarget||n.fromElement)||!br(l)&&!l[fr])&&(c||i)&&(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,c?(c=a,null!==(l=(l=n.relatedTarget||n.toElement)?br(l):null)&&(l!==(h=Ue(l))||5!==l.tag&&6!==l.tag)&&(l=null)):(c=null,l=a),c!==l)){if(u=fn,m="onMouseLeave",d="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(u=En,m="onPointerLeave",d="onPointerEnter",f="pointer"),h=null==c?i:vr(c),p=null==l?i:vr(l),(i=new u(m,f+"leave",c,n,r)).target=h,i.relatedTarget=p,m=null,br(r)===a&&((u=new u(d,f+"enter",l,n,r)).target=p,u.relatedTarget=h,m=u),h=m,c&&l)e:{for(d=l,f=0,p=u=c;p;p=Ka(p))f++;for(p=0,m=d;m;m=Ka(m))p++;for(;0<f-p;)u=Ka(u),f--;for(;0<p-f;)d=Ka(d),p--;for(;f--;){if(u===d||null!==d&&u===d.alternate)break e;u=Ka(u),d=Ka(d)}u=null}else u=null;null!==c&&Xa(o,i,c,u,!1),null!==l&&null!==h&&Xa(o,h,l,u,!0)}if("select"===(c=(i=a?vr(a):window).nodeName&&i.nodeName.toLowerCase())||"input"===c&&"file"===i.type)var g=Qn;else if(Hn(i))if(Zn)g=oa;else{g=ra;var y=aa}else(c=i.nodeName)&&"input"===c.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(g=sa);switch(g&&(g=g(e,a))?jn(o,g,n,r):(y&&y(e,i,a),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ee(i,"number",i.value)),y=a?vr(a):window,e){case"focusin":(Hn(y)||"true"===y.contentEditable)&&(ga=y,ya=a,ba=null);break;case"focusout":ba=ya=ga=null;break;case"mousedown":xa=!0;break;case"contextmenu":case"mouseup":case"dragend":xa=!1,va(o,n,r);break;case"selectionchange":if(ma)break;case"keydown":case"keyup":va(o,n,r)}var b;if(On)e:{switch(e){case"compositionstart":var x="onCompositionStart";break e;case"compositionend":x="onCompositionEnd";break e;case"compositionupdate":x="onCompositionUpdate";break e}x=void 0}else Un?Wn(e,n)&&(x="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(x="onCompositionStart");x&&(zn&&"ko"!==n.locale&&(Un||"onCompositionStart"!==x?"onCompositionEnd"===x&&Un&&(b=en()):(Jt="value"in(Zt=r)?Zt.value:Zt.textContent,Un=!0)),0<(y=qa(a,x)).length&&(x=new vn(x,e,null,n,r),o.push({event:x,listeners:y}),b?x.data=b:null!==(b=Vn(n))&&(x.data=b))),(b=Ln?function(e,t){switch(e){case"compositionend":return Vn(t);case"keypress":return 32!==t.which?null:(Bn=!0,Pn);case"textInput":return(e=t.data)===Pn&&Bn?null:e;default:return null}}(e,n):function(e,t){if(Un)return"compositionend"===e||!On&&Wn(e,t)?(e=en(),$t=Jt=Zt=null,Un=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return zn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(a=qa(a,"onBeforeInput")).length&&(r=new vn("onBeforeInput","beforeinput",null,n,r),o.push({event:r,listeners:a}),r.data=b))}Pa(o,t)}))}function ja(e,t,n){return{instance:e,listener:t,currentTarget:n}}function qa(e,t){for(var n=t+"Capture",a=[];null!==e;){var r=e,s=r.stateNode;5===r.tag&&null!==s&&(r=s,null!=(s=Fe(e,n))&&a.unshift(ja(e,s,r)),null!=(s=Fe(e,t))&&a.push(ja(e,s,r))),e=e.return}return a}function Ka(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Xa(e,t,n,a,r){for(var s=t._reactName,o=[];null!==n&&n!==a;){var i=n,c=i.alternate,l=i.stateNode;if(null!==c&&c===a)break;5===i.tag&&null!==l&&(i=l,r?null!=(c=Fe(n,s))&&o.unshift(ja(n,c,i)):r||null!=(c=Fe(n,s))&&o.push(ja(n,c,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Ya=/\r\n?/g,Qa=/\u0000|\uFFFD/g;function Za(e){return("string"===typeof e?e:""+e).replace(Ya,"\n").replace(Qa,"")}function Ja(e,t,n){if(t=Za(t),Za(e)!==t&&n)throw Error(s(425))}function $a(){}var er=null,tr=null;function nr(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ar="function"===typeof setTimeout?setTimeout:void 0,rr="function"===typeof clearTimeout?clearTimeout:void 0,sr="function"===typeof Promise?Promise:void 0,or="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof sr?function(e){return sr.resolve(null).then(e).catch(ir)}:ar;function ir(e){setTimeout((function(){throw e}))}function cr(e,t){var n=t,a=0;do{var r=n.nextSibling;if(e.removeChild(n),r&&8===r.nodeType)if("/$"===(n=r.data)){if(0===a)return e.removeChild(r),void Ut(t);a--}else"$"!==n&&"$?"!==n&&"$!"!==n||a++;n=r}while(n);Ut(t)}function lr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ur(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var hr=Math.random().toString(36).slice(2),dr="__reactFiber$"+hr,pr="__reactProps$"+hr,fr="__reactContainer$"+hr,mr="__reactEvents$"+hr,gr="__reactListeners$"+hr,yr="__reactHandles$"+hr;function br(e){var t=e[dr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fr]||n[dr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ur(e);null!==e;){if(n=e[dr])return n;e=ur(e)}return t}n=(e=n).parentNode}return null}function xr(e){return!(e=e[dr]||e[fr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function vr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function wr(e){return e[pr]||null}var kr=[],Sr=-1;function Nr(e){return{current:e}}function Ir(e){0>Sr||(e.current=kr[Sr],kr[Sr]=null,Sr--)}function Tr(e,t){Sr++,kr[Sr]=e.current,e.current=t}var Cr={},Er=Nr(Cr),Rr=Nr(!1),Ar=Cr;function _r(e,t){var n=e.type.contextTypes;if(!n)return Cr;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var r,s={};for(r in n)s[r]=t[r];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function Fr(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Dr(){Ir(Rr),Ir(Er)}function Or(e,t,n){if(Er.current!==Cr)throw Error(s(168));Tr(Er,t),Tr(Rr,n)}function Mr(e,t,n){var a=e.stateNode;if(t=t.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var r in a=a.getChildContext())if(!(r in t))throw Error(s(108,G(e)||"Unknown",r));return z({},n,a)}function Lr(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Cr,Ar=Er.current,Tr(Er,e),Tr(Rr,Rr.current),!0}function zr(e,t,n){var a=e.stateNode;if(!a)throw Error(s(169));n?(e=Mr(e,t,Ar),a.__reactInternalMemoizedMergedChildContext=e,Ir(Rr),Ir(Er),Tr(Er,e)):Ir(Rr),Tr(Rr,n)}var Pr=null,Br=!1,Wr=!1;function Vr(e){null===Pr?Pr=[e]:Pr.push(e)}function Ur(){if(!Wr&&null!==Pr){Wr=!0;var e=0,t=xt;try{var n=Pr;for(xt=1;e<n.length;e++){var a=n[e];do{a=a(!0)}while(null!==a)}Pr=null,Br=!1}catch(r){throw null!==Pr&&(Pr=Pr.slice(e+1)),Ke($e,Ur),r}finally{xt=t,Wr=!1}}return null}var Gr=[],Hr=0,jr=null,qr=0,Kr=[],Xr=0,Yr=null,Qr=1,Zr="";function Jr(e,t){Gr[Hr++]=qr,Gr[Hr++]=jr,jr=e,qr=t}function $r(e,t,n){Kr[Xr++]=Qr,Kr[Xr++]=Zr,Kr[Xr++]=Yr,Yr=e;var a=Qr;e=Zr;var r=32-ot(a)-1;a&=~(1<<r),n+=1;var s=32-ot(t)+r;if(30<s){var o=r-r%5;s=(a&(1<<o)-1).toString(32),a>>=o,r-=o,Qr=1<<32-ot(t)+r|n<<r|a,Zr=s+e}else Qr=1<<s|n<<r|a,Zr=e}function es(e){null!==e.return&&(Jr(e,1),$r(e,1,0))}function ts(e){for(;e===jr;)jr=Gr[--Hr],Gr[Hr]=null,qr=Gr[--Hr],Gr[Hr]=null;for(;e===Yr;)Yr=Kr[--Xr],Kr[Xr]=null,Zr=Kr[--Xr],Kr[Xr]=null,Qr=Kr[--Xr],Kr[Xr]=null}var ns=null,as=null,rs=!1,ss=null;function os(e,t){var n=_l(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function is(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ns=e,as=lr(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ns=e,as=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Yr?{id:Qr,overflow:Zr}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=_l(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ns=e,as=null,!0);default:return!1}}function cs(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ls(e){if(rs){var t=as;if(t){var n=t;if(!is(e,t)){if(cs(e))throw Error(s(418));t=lr(n.nextSibling);var a=ns;t&&is(e,t)?os(a,n):(e.flags=-4097&e.flags|2,rs=!1,ns=e)}}else{if(cs(e))throw Error(s(418));e.flags=-4097&e.flags|2,rs=!1,ns=e}}}function us(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ns=e}function hs(e){if(e!==ns)return!1;if(!rs)return us(e),rs=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!nr(e.type,e.memoizedProps)),t&&(t=as)){if(cs(e))throw ds(),Error(s(418));for(;t;)os(e,t),t=lr(t.nextSibling)}if(us(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){as=lr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}as=null}}else as=ns?lr(e.stateNode.nextSibling):null;return!0}function ds(){for(var e=as;e;)e=lr(e.nextSibling)}function ps(){as=ns=null,rs=!1}function fs(e){null===ss?ss=[e]:ss.push(e)}var ms=v.ReactCurrentBatchConfig;function gs(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(s(309));var a=n.stateNode}if(!a)throw Error(s(147,e));var r=a,o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!==typeof e)throw Error(s(284));if(!n._owner)throw Error(s(290,e))}return e}function ys(e,t){throw e=Object.prototype.toString.call(t),Error(s(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function bs(e){return(0,e._init)(e._payload)}function xs(e){function t(t,n){if(e){var a=t.deletions;null===a?(t.deletions=[n],t.flags|=16):a.push(n)}}function n(n,a){if(!e)return null;for(;null!==a;)t(n,a),a=a.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=Dl(e,t)).index=0,e.sibling=null,e}function o(t,n,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<n?(t.flags|=2,n):a:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function c(e,t,n,a){return null===t||6!==t.tag?((t=zl(n,e.mode,a)).return=e,t):((t=r(t,n)).return=e,t)}function l(e,t,n,a){var s=n.type;return s===S?h(e,t,n.props.children,a,n.key):null!==t&&(t.elementType===s||"object"===typeof s&&null!==s&&s.$$typeof===F&&bs(s)===t.type)?((a=r(t,n.props)).ref=gs(e,t,n),a.return=e,a):((a=Ol(n.type,n.key,n.props,null,e.mode,a)).ref=gs(e,t,n),a.return=e,a)}function u(e,t,n,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Pl(n,e.mode,a)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function h(e,t,n,a,s){return null===t||7!==t.tag?((t=Ml(n,e.mode,a,s)).return=e,t):((t=r(t,n)).return=e,t)}function d(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=zl(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Ol(t.type,t.key,t.props,null,e.mode,n)).ref=gs(e,null,t),n.return=e,n;case k:return(t=Pl(t,e.mode,n)).return=e,t;case F:return d(e,(0,t._init)(t._payload),n)}if(te(t)||M(t))return(t=Ml(t,e.mode,n,null)).return=e,t;ys(e,t)}return null}function p(e,t,n,a){var r=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==r?null:c(e,t,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===r?l(e,t,n,a):null;case k:return n.key===r?u(e,t,n,a):null;case F:return p(e,t,(r=n._init)(n._payload),a)}if(te(n)||M(n))return null!==r?null:h(e,t,n,a,null);ys(e,n)}return null}function f(e,t,n,a,r){if("string"===typeof a&&""!==a||"number"===typeof a)return c(t,e=e.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case w:return l(t,e=e.get(null===a.key?n:a.key)||null,a,r);case k:return u(t,e=e.get(null===a.key?n:a.key)||null,a,r);case F:return f(e,t,n,(0,a._init)(a._payload),r)}if(te(a)||M(a))return h(t,e=e.get(n)||null,a,r,null);ys(t,a)}return null}function m(r,s,i,c){for(var l=null,u=null,h=s,m=s=0,g=null;null!==h&&m<i.length;m++){h.index>m?(g=h,h=null):g=h.sibling;var y=p(r,h,i[m],c);if(null===y){null===h&&(h=g);break}e&&h&&null===y.alternate&&t(r,h),s=o(y,s,m),null===u?l=y:u.sibling=y,u=y,h=g}if(m===i.length)return n(r,h),rs&&Jr(r,m),l;if(null===h){for(;m<i.length;m++)null!==(h=d(r,i[m],c))&&(s=o(h,s,m),null===u?l=h:u.sibling=h,u=h);return rs&&Jr(r,m),l}for(h=a(r,h);m<i.length;m++)null!==(g=f(h,r,m,i[m],c))&&(e&&null!==g.alternate&&h.delete(null===g.key?m:g.key),s=o(g,s,m),null===u?l=g:u.sibling=g,u=g);return e&&h.forEach((function(e){return t(r,e)})),rs&&Jr(r,m),l}function g(r,i,c,l){var u=M(c);if("function"!==typeof u)throw Error(s(150));if(null==(c=u.call(c)))throw Error(s(151));for(var h=u=null,m=i,g=i=0,y=null,b=c.next();null!==m&&!b.done;g++,b=c.next()){m.index>g?(y=m,m=null):y=m.sibling;var x=p(r,m,b.value,l);if(null===x){null===m&&(m=y);break}e&&m&&null===x.alternate&&t(r,m),i=o(x,i,g),null===h?u=x:h.sibling=x,h=x,m=y}if(b.done)return n(r,m),rs&&Jr(r,g),u;if(null===m){for(;!b.done;g++,b=c.next())null!==(b=d(r,b.value,l))&&(i=o(b,i,g),null===h?u=b:h.sibling=b,h=b);return rs&&Jr(r,g),u}for(m=a(r,m);!b.done;g++,b=c.next())null!==(b=f(m,r,g,b.value,l))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),i=o(b,i,g),null===h?u=b:h.sibling=b,h=b);return e&&m.forEach((function(e){return t(r,e)})),rs&&Jr(r,g),u}return function e(a,s,o,c){if("object"===typeof o&&null!==o&&o.type===S&&null===o.key&&(o=o.props.children),"object"===typeof o&&null!==o){switch(o.$$typeof){case w:e:{for(var l=o.key,u=s;null!==u;){if(u.key===l){if((l=o.type)===S){if(7===u.tag){n(a,u.sibling),(s=r(u,o.props.children)).return=a,a=s;break e}}else if(u.elementType===l||"object"===typeof l&&null!==l&&l.$$typeof===F&&bs(l)===u.type){n(a,u.sibling),(s=r(u,o.props)).ref=gs(a,u,o),s.return=a,a=s;break e}n(a,u);break}t(a,u),u=u.sibling}o.type===S?((s=Ml(o.props.children,a.mode,c,o.key)).return=a,a=s):((c=Ol(o.type,o.key,o.props,null,a.mode,c)).ref=gs(a,s,o),c.return=a,a=c)}return i(a);case k:e:{for(u=o.key;null!==s;){if(s.key===u){if(4===s.tag&&s.stateNode.containerInfo===o.containerInfo&&s.stateNode.implementation===o.implementation){n(a,s.sibling),(s=r(s,o.children||[])).return=a,a=s;break e}n(a,s);break}t(a,s),s=s.sibling}(s=Pl(o,a.mode,c)).return=a,a=s}return i(a);case F:return e(a,s,(u=o._init)(o._payload),c)}if(te(o))return m(a,s,o,c);if(M(o))return g(a,s,o,c);ys(a,o)}return"string"===typeof o&&""!==o||"number"===typeof o?(o=""+o,null!==s&&6===s.tag?(n(a,s.sibling),(s=r(s,o)).return=a,a=s):(n(a,s),(s=zl(o,a.mode,c)).return=a,a=s),i(a)):n(a,s)}}var vs=xs(!0),ws=xs(!1),ks=Nr(null),Ss=null,Ns=null,Is=null;function Ts(){Is=Ns=Ss=null}function Cs(e){var t=ks.current;Ir(ks),e._currentValue=t}function Es(e,t,n){for(;null!==e;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==a&&(a.childLanes|=t)):null!==a&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}}function Rs(e,t){Ss=e,Is=Ns=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(xi=!0),e.firstContext=null)}function As(e){var t=e._currentValue;if(Is!==e)if(e={context:e,memoizedValue:t,next:null},null===Ns){if(null===Ss)throw Error(s(308));Ns=e,Ss.dependencies={lanes:0,firstContext:e}}else Ns=Ns.next=e;return t}var _s=null;function Fs(e){null===_s?_s=[e]:_s.push(e)}function Ds(e,t,n,a){var r=t.interleaved;return null===r?(n.next=n,Fs(t)):(n.next=r.next,r.next=n),t.interleaved=n,Os(e,a)}function Os(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Ms=!1;function Ls(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function zs(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ps(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Bs(e,t,n){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,0!==(2&Ec)){var r=a.pending;return null===r?t.next=t:(t.next=r.next,r.next=t),a.pending=t,Os(e,n)}return null===(r=a.interleaved)?(t.next=t,Fs(a)):(t.next=r.next,r.next=t),a.interleaved=t,Os(e,n)}function Ws(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}function Vs(e,t){var n=e.updateQueue,a=e.alternate;if(null!==a&&n===(a=a.updateQueue)){var r=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===s?r=s=o:s=s.next=o,n=n.next}while(null!==n);null===s?r=s=t:s=s.next=t}else r=s=t;return n={baseState:a.baseState,firstBaseUpdate:r,lastBaseUpdate:s,shared:a.shared,effects:a.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Us(e,t,n,a){var r=e.updateQueue;Ms=!1;var s=r.firstBaseUpdate,o=r.lastBaseUpdate,i=r.shared.pending;if(null!==i){r.shared.pending=null;var c=i,l=c.next;c.next=null,null===o?s=l:o.next=l,o=c;var u=e.alternate;null!==u&&((i=(u=u.updateQueue).lastBaseUpdate)!==o&&(null===i?u.firstBaseUpdate=l:i.next=l,u.lastBaseUpdate=c))}if(null!==s){var h=r.baseState;for(o=0,u=l=c=null,i=s;;){var d=i.lane,p=i.eventTime;if((a&d)===d){null!==u&&(u=u.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var f=e,m=i;switch(d=t,p=n,m.tag){case 1:if("function"===typeof(f=m.payload)){h=f.call(p,h,d);break e}h=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(d="function"===typeof(f=m.payload)?f.call(p,h,d):f)||void 0===d)break e;h=z({},h,d);break e;case 2:Ms=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(d=r.effects)?r.effects=[i]:d.push(i))}else p={eventTime:p,lane:d,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===u?(l=u=p,c=h):u=u.next=p,o|=d;if(null===(i=i.next)){if(null===(i=r.shared.pending))break;i=(d=i).next,d.next=null,r.lastBaseUpdate=d,r.shared.pending=null}}if(null===u&&(c=h),r.baseState=c,r.firstBaseUpdate=l,r.lastBaseUpdate=u,null!==(t=r.shared.interleaved)){r=t;do{o|=r.lane,r=r.next}while(r!==t)}else null===s&&(r.shared.lanes=0);Lc|=o,e.lanes=o,e.memoizedState=h}}function Gs(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],r=a.callback;if(null!==r){if(a.callback=null,a=n,"function"!==typeof r)throw Error(s(191,r));r.call(a)}}}var Hs={},js=Nr(Hs),qs=Nr(Hs),Ks=Nr(Hs);function Xs(e){if(e===Hs)throw Error(s(174));return e}function Ys(e,t){switch(Tr(Ks,t),Tr(qs,e),Tr(js,Hs),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ce(null,"");break;default:t=ce(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Ir(js),Tr(js,t)}function Qs(){Ir(js),Ir(qs),Ir(Ks)}function Zs(e){Xs(Ks.current);var t=Xs(js.current),n=ce(t,e.type);t!==n&&(Tr(qs,e),Tr(js,n))}function Js(e){qs.current===e&&(Ir(js),Ir(qs))}var $s=Nr(0);function eo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var to=[];function no(){for(var e=0;e<to.length;e++)to[e]._workInProgressVersionPrimary=null;to.length=0}var ao=v.ReactCurrentDispatcher,ro=v.ReactCurrentBatchConfig,so=0,oo=null,io=null,co=null,lo=!1,uo=!1,ho=0,po=0;function fo(){throw Error(s(321))}function mo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ia(e[n],t[n]))return!1;return!0}function go(e,t,n,a,r,o){if(so=o,oo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ao.current=null===e||null===e.memoizedState?$o:ei,e=n(a,r),uo){o=0;do{if(uo=!1,ho=0,25<=o)throw Error(s(301));o+=1,co=io=null,t.updateQueue=null,ao.current=ti,e=n(a,r)}while(uo)}if(ao.current=Jo,t=null!==io&&null!==io.next,so=0,co=io=oo=null,lo=!1,t)throw Error(s(300));return e}function yo(){var e=0!==ho;return ho=0,e}function bo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===co?oo.memoizedState=co=e:co=co.next=e,co}function xo(){if(null===io){var e=oo.alternate;e=null!==e?e.memoizedState:null}else e=io.next;var t=null===co?oo.memoizedState:co.next;if(null!==t)co=t,io=e;else{if(null===e)throw Error(s(310));e={memoizedState:(io=e).memoizedState,baseState:io.baseState,baseQueue:io.baseQueue,queue:io.queue,next:null},null===co?oo.memoizedState=co=e:co=co.next=e}return co}function vo(e,t){return"function"===typeof t?t(e):t}function wo(e){var t=xo(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=io,r=a.baseQueue,o=n.pending;if(null!==o){if(null!==r){var i=r.next;r.next=o.next,o.next=i}a.baseQueue=r=o,n.pending=null}if(null!==r){o=r.next,a=a.baseState;var c=i=null,l=null,u=o;do{var h=u.lane;if((so&h)===h)null!==l&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),a=u.hasEagerState?u.eagerState:e(a,u.action);else{var d={lane:h,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===l?(c=l=d,i=a):l=l.next=d,oo.lanes|=h,Lc|=h}u=u.next}while(null!==u&&u!==o);null===l?i=a:l.next=c,ia(a,t.memoizedState)||(xi=!0),t.memoizedState=a,t.baseState=i,t.baseQueue=l,n.lastRenderedState=a}if(null!==(e=n.interleaved)){r=e;do{o=r.lane,oo.lanes|=o,Lc|=o,r=r.next}while(r!==e)}else null===r&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function ko(e){var t=xo(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=n.dispatch,r=n.pending,o=t.memoizedState;if(null!==r){n.pending=null;var i=r=r.next;do{o=e(o,i.action),i=i.next}while(i!==r);ia(o,t.memoizedState)||(xi=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,a]}function So(){}function No(e,t){var n=oo,a=xo(),r=t(),o=!ia(a.memoizedState,r);if(o&&(a.memoizedState=r,xi=!0),a=a.queue,Lo(Co.bind(null,n,a,e),[e]),a.getSnapshot!==t||o||null!==co&&1&co.memoizedState.tag){if(n.flags|=2048,_o(9,To.bind(null,n,a,r,t),void 0,null),null===Rc)throw Error(s(349));0!==(30&so)||Io(n,t,r)}return r}function Io(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function To(e,t,n,a){t.value=n,t.getSnapshot=a,Eo(t)&&Ro(e)}function Co(e,t,n){return n((function(){Eo(t)&&Ro(e)}))}function Eo(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ia(e,n)}catch(a){return!0}}function Ro(e){var t=Os(e,1);null!==t&&nl(t,e,1,-1)}function Ao(e){var t=bo();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:vo,lastRenderedState:e},t.queue=e,e=e.dispatch=Xo.bind(null,oo,e),[t.memoizedState,e]}function _o(e,t,n,a){return e={tag:e,create:t,destroy:n,deps:a,next:null},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function Fo(){return xo().memoizedState}function Do(e,t,n,a){var r=bo();oo.flags|=e,r.memoizedState=_o(1|t,n,void 0,void 0===a?null:a)}function Oo(e,t,n,a){var r=xo();a=void 0===a?null:a;var s=void 0;if(null!==io){var o=io.memoizedState;if(s=o.destroy,null!==a&&mo(a,o.deps))return void(r.memoizedState=_o(t,n,s,a))}oo.flags|=e,r.memoizedState=_o(1|t,n,s,a)}function Mo(e,t){return Do(8390656,8,e,t)}function Lo(e,t){return Oo(2048,8,e,t)}function zo(e,t){return Oo(4,2,e,t)}function Po(e,t){return Oo(4,4,e,t)}function Bo(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Wo(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Oo(4,4,Bo.bind(null,t,e),n)}function Vo(){}function Uo(e,t){var n=xo();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&mo(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Go(e,t){var n=xo();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&mo(t,a[1])?a[0]:(e=e(),n.memoizedState=[e,t],e)}function Ho(e,t,n){return 0===(21&so)?(e.baseState&&(e.baseState=!1,xi=!0),e.memoizedState=n):(ia(n,t)||(n=mt(),oo.lanes|=n,Lc|=n,e.baseState=!0),t)}function jo(e,t){var n=xt;xt=0!==n&&4>n?n:4,e(!0);var a=ro.transition;ro.transition={};try{e(!1),t()}finally{xt=n,ro.transition=a}}function qo(){return xo().memoizedState}function Ko(e,t,n){var a=tl(e);if(n={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null},Yo(e))Qo(t,n);else if(null!==(n=Ds(e,t,n,a))){nl(n,e,a,el()),Zo(n,t,a)}}function Xo(e,t,n){var a=tl(e),r={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null};if(Yo(e))Qo(t,r);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var o=t.lastRenderedState,i=s(o,n);if(r.hasEagerState=!0,r.eagerState=i,ia(i,o)){var c=t.interleaved;return null===c?(r.next=r,Fs(t)):(r.next=c.next,c.next=r),void(t.interleaved=r)}}catch(l){}null!==(n=Ds(e,t,r,a))&&(nl(n,e,a,r=el()),Zo(n,t,a))}}function Yo(e){var t=e.alternate;return e===oo||null!==t&&t===oo}function Qo(e,t){uo=lo=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Zo(e,t,n){if(0!==(4194240&n)){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}var Jo={readContext:As,useCallback:fo,useContext:fo,useEffect:fo,useImperativeHandle:fo,useInsertionEffect:fo,useLayoutEffect:fo,useMemo:fo,useReducer:fo,useRef:fo,useState:fo,useDebugValue:fo,useDeferredValue:fo,useTransition:fo,useMutableSource:fo,useSyncExternalStore:fo,useId:fo,unstable_isNewReconciler:!1},$o={readContext:As,useCallback:function(e,t){return bo().memoizedState=[e,void 0===t?null:t],e},useContext:As,useEffect:Mo,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Do(4194308,4,Bo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Do(4194308,4,e,t)},useInsertionEffect:function(e,t){return Do(4,2,e,t)},useMemo:function(e,t){var n=bo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var a=bo();return t=void 0!==n?n(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=Ko.bind(null,oo,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},bo().memoizedState=e},useState:Ao,useDebugValue:Vo,useDeferredValue:function(e){return bo().memoizedState=e},useTransition:function(){var e=Ao(!1),t=e[0];return e=jo.bind(null,e[1]),bo().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var a=oo,r=bo();if(rs){if(void 0===n)throw Error(s(407));n=n()}else{if(n=t(),null===Rc)throw Error(s(349));0!==(30&so)||Io(a,t,n)}r.memoizedState=n;var o={value:n,getSnapshot:t};return r.queue=o,Mo(Co.bind(null,a,o,e),[e]),a.flags|=2048,_o(9,To.bind(null,a,o,n,t),void 0,null),n},useId:function(){var e=bo(),t=Rc.identifierPrefix;if(rs){var n=Zr;t=":"+t+"R"+(n=(Qr&~(1<<32-ot(Qr)-1)).toString(32)+n),0<(n=ho++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=po++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ei={readContext:As,useCallback:Uo,useContext:As,useEffect:Lo,useImperativeHandle:Wo,useInsertionEffect:zo,useLayoutEffect:Po,useMemo:Go,useReducer:wo,useRef:Fo,useState:function(){return wo(vo)},useDebugValue:Vo,useDeferredValue:function(e){return Ho(xo(),io.memoizedState,e)},useTransition:function(){return[wo(vo)[0],xo().memoizedState]},useMutableSource:So,useSyncExternalStore:No,useId:qo,unstable_isNewReconciler:!1},ti={readContext:As,useCallback:Uo,useContext:As,useEffect:Lo,useImperativeHandle:Wo,useInsertionEffect:zo,useLayoutEffect:Po,useMemo:Go,useReducer:ko,useRef:Fo,useState:function(){return ko(vo)},useDebugValue:Vo,useDeferredValue:function(e){var t=xo();return null===io?t.memoizedState=e:Ho(t,io.memoizedState,e)},useTransition:function(){return[ko(vo)[0],xo().memoizedState]},useMutableSource:So,useSyncExternalStore:No,useId:qo,unstable_isNewReconciler:!1};function ni(e,t){if(e&&e.defaultProps){for(var n in t=z({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function ai(e,t,n,a){n=null===(n=n(a,t=e.memoizedState))||void 0===n?t:z({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ri={isMounted:function(e){return!!(e=e._reactInternals)&&Ue(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var a=el(),r=tl(e),s=Ps(a,r);s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Bs(e,s,r))&&(nl(t,e,r,a),Ws(t,e,r))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=el(),r=tl(e),s=Ps(a,r);s.tag=1,s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Bs(e,s,r))&&(nl(t,e,r,a),Ws(t,e,r))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=el(),a=tl(e),r=Ps(n,a);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),null!==(t=Bs(e,r,a))&&(nl(t,e,a,n),Ws(t,e,a))}};function si(e,t,n,a,r,s,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,s,o):!t.prototype||!t.prototype.isPureReactComponent||(!ca(n,a)||!ca(r,s))}function oi(e,t,n){var a=!1,r=Cr,s=t.contextType;return"object"===typeof s&&null!==s?s=As(s):(r=Fr(t)?Ar:Er.current,s=(a=null!==(a=t.contextTypes)&&void 0!==a)?_r(e,r):Cr),t=new t(n,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ri,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=s),t}function ii(e,t,n,a){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,a),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&ri.enqueueReplaceState(t,t.state,null)}function ci(e,t,n,a){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs={},Ls(e);var s=t.contextType;"object"===typeof s&&null!==s?r.context=As(s):(s=Fr(t)?Ar:Er.current,r.context=_r(e,s)),r.state=e.memoizedState,"function"===typeof(s=t.getDerivedStateFromProps)&&(ai(e,t,s,n),r.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(t=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&ri.enqueueReplaceState(r,r.state,null),Us(e,n,r,a),r.state=e.memoizedState),"function"===typeof r.componentDidMount&&(e.flags|=4194308)}function li(e,t){try{var n="",a=t;do{n+=V(a),a=a.return}while(a);var r=n}catch(s){r="\nError generating stack: "+s.message+"\n"+s.stack}return{value:e,source:t,stack:r,digest:null}}function ui(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function hi(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var di="function"===typeof WeakMap?WeakMap:Map;function pi(e,t,n){(n=Ps(-1,n)).tag=3,n.payload={element:null};var a=t.value;return n.callback=function(){Hc||(Hc=!0,jc=a),hi(0,t)},n}function fi(e,t,n){(n=Ps(-1,n)).tag=3;var a=e.type.getDerivedStateFromError;if("function"===typeof a){var r=t.value;n.payload=function(){return a(r)},n.callback=function(){hi(0,t)}}var s=e.stateNode;return null!==s&&"function"===typeof s.componentDidCatch&&(n.callback=function(){hi(0,t),"function"!==typeof a&&(null===qc?qc=new Set([this]):qc.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function mi(e,t,n){var a=e.pingCache;if(null===a){a=e.pingCache=new di;var r=new Set;a.set(t,r)}else void 0===(r=a.get(t))&&(r=new Set,a.set(t,r));r.has(n)||(r.add(n),e=Il.bind(null,e,t,n),t.then(e,e))}function gi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function yi(e,t,n,a,r){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Ps(-1,1)).tag=2,Bs(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=r,e)}var bi=v.ReactCurrentOwner,xi=!1;function vi(e,t,n,a){t.child=null===e?ws(t,null,n,a):vs(t,e.child,n,a)}function wi(e,t,n,a,r){n=n.render;var s=t.ref;return Rs(t,r),a=go(e,t,n,a,s,r),n=yo(),null===e||xi?(rs&&n&&es(t),t.flags|=1,vi(e,t,a,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Hi(e,t,r))}function ki(e,t,n,a,r){if(null===e){var s=n.type;return"function"!==typeof s||Fl(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ol(n.type,null,a,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,Si(e,t,s,a,r))}if(s=e.child,0===(e.lanes&r)){var o=s.memoizedProps;if((n=null!==(n=n.compare)?n:ca)(o,a)&&e.ref===t.ref)return Hi(e,t,r)}return t.flags|=1,(e=Dl(s,a)).ref=t.ref,e.return=t,t.child=e}function Si(e,t,n,a,r){if(null!==e){var s=e.memoizedProps;if(ca(s,a)&&e.ref===t.ref){if(xi=!1,t.pendingProps=a=s,0===(e.lanes&r))return t.lanes=e.lanes,Hi(e,t,r);0!==(131072&e.flags)&&(xi=!0)}}return Ti(e,t,n,a,r)}function Ni(e,t,n){var a=t.pendingProps,r=a.children,s=null!==e?e.memoizedState:null;if("hidden"===a.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Tr(Dc,Fc),Fc|=n;else{if(0===(1073741824&n))return e=null!==s?s.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Tr(Dc,Fc),Fc|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==s?s.baseLanes:n,Tr(Dc,Fc),Fc|=a}else null!==s?(a=s.baseLanes|n,t.memoizedState=null):a=n,Tr(Dc,Fc),Fc|=a;return vi(e,t,r,n),t.child}function Ii(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Ti(e,t,n,a,r){var s=Fr(n)?Ar:Er.current;return s=_r(t,s),Rs(t,r),n=go(e,t,n,a,s,r),a=yo(),null===e||xi?(rs&&a&&es(t),t.flags|=1,vi(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Hi(e,t,r))}function Ci(e,t,n,a,r){if(Fr(n)){var s=!0;Lr(t)}else s=!1;if(Rs(t,r),null===t.stateNode)Gi(e,t),oi(t,n,a),ci(t,n,a,r),a=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var c=o.context,l=n.contextType;"object"===typeof l&&null!==l?l=As(l):l=_r(t,l=Fr(n)?Ar:Er.current);var u=n.getDerivedStateFromProps,h="function"===typeof u||"function"===typeof o.getSnapshotBeforeUpdate;h||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==a||c!==l)&&ii(t,o,a,l),Ms=!1;var d=t.memoizedState;o.state=d,Us(t,a,o,r),c=t.memoizedState,i!==a||d!==c||Rr.current||Ms?("function"===typeof u&&(ai(t,n,u,a),c=t.memoizedState),(i=Ms||si(t,n,i,a,d,c,l))?(h||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(t.flags|=4194308)):("function"===typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=c),o.props=a,o.state=c,o.context=l,a=i):("function"===typeof o.componentDidMount&&(t.flags|=4194308),a=!1)}else{o=t.stateNode,zs(e,t),i=t.memoizedProps,l=t.type===t.elementType?i:ni(t.type,i),o.props=l,h=t.pendingProps,d=o.context,"object"===typeof(c=n.contextType)&&null!==c?c=As(c):c=_r(t,c=Fr(n)?Ar:Er.current);var p=n.getDerivedStateFromProps;(u="function"===typeof p||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==h||d!==c)&&ii(t,o,a,c),Ms=!1,d=t.memoizedState,o.state=d,Us(t,a,o,r);var f=t.memoizedState;i!==h||d!==f||Rr.current||Ms?("function"===typeof p&&(ai(t,n,p,a),f=t.memoizedState),(l=Ms||si(t,n,l,a,d,f,c)||!1)?(u||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(a,f,c),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(a,f,c)),"function"===typeof o.componentDidUpdate&&(t.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=f),o.props=a,o.state=f,o.context=c,a=l):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),a=!1)}return Ei(e,t,n,a,s,r)}function Ei(e,t,n,a,r,s){Ii(e,t);var o=0!==(128&t.flags);if(!a&&!o)return r&&zr(t,n,!1),Hi(e,t,s);a=t.stateNode,bi.current=t;var i=o&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return t.flags|=1,null!==e&&o?(t.child=vs(t,e.child,null,s),t.child=vs(t,null,i,s)):vi(e,t,i,s),t.memoizedState=a.state,r&&zr(t,n,!0),t.child}function Ri(e){var t=e.stateNode;t.pendingContext?Or(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Or(0,t.context,!1),Ys(e,t.containerInfo)}function Ai(e,t,n,a,r){return ps(),fs(r),t.flags|=256,vi(e,t,n,a),t.child}var _i,Fi,Di,Oi,Mi={dehydrated:null,treeContext:null,retryLane:0};function Li(e){return{baseLanes:e,cachePool:null,transitions:null}}function zi(e,t,n){var a,r=t.pendingProps,o=$s.current,i=!1,c=0!==(128&t.flags);if((a=c)||(a=(null===e||null!==e.memoizedState)&&0!==(2&o)),a?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),Tr($s,1&o),null===e)return ls(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(c=r.children,e=r.fallback,i?(r=t.mode,i=t.child,c={mode:"hidden",children:c},0===(1&r)&&null!==i?(i.childLanes=0,i.pendingProps=c):i=Ll(c,r,0,null),e=Ml(e,r,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=Li(n),t.memoizedState=Mi,e):Pi(t,c));if(null!==(o=e.memoizedState)&&null!==(a=o.dehydrated))return function(e,t,n,a,r,o,i){if(n)return 256&t.flags?(t.flags&=-257,Bi(e,t,i,a=ui(Error(s(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=a.fallback,r=t.mode,a=Ll({mode:"visible",children:a.children},r,0,null),(o=Ml(o,r,i,null)).flags|=2,a.return=t,o.return=t,a.sibling=o,t.child=a,0!==(1&t.mode)&&vs(t,e.child,null,i),t.child.memoizedState=Li(i),t.memoizedState=Mi,o);if(0===(1&t.mode))return Bi(e,t,i,null);if("$!"===r.data){if(a=r.nextSibling&&r.nextSibling.dataset)var c=a.dgst;return a=c,Bi(e,t,i,a=ui(o=Error(s(419)),a,void 0))}if(c=0!==(i&e.childLanes),xi||c){if(null!==(a=Rc)){switch(i&-i){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}0!==(r=0!==(r&(a.suspendedLanes|i))?0:r)&&r!==o.retryLane&&(o.retryLane=r,Os(e,r),nl(a,e,r,-1))}return ml(),Bi(e,t,i,a=ui(Error(s(421))))}return"$?"===r.data?(t.flags|=128,t.child=e.child,t=Cl.bind(null,e),r._reactRetry=t,null):(e=o.treeContext,as=lr(r.nextSibling),ns=t,rs=!0,ss=null,null!==e&&(Kr[Xr++]=Qr,Kr[Xr++]=Zr,Kr[Xr++]=Yr,Qr=e.id,Zr=e.overflow,Yr=t),t=Pi(t,a.children),t.flags|=4096,t)}(e,t,c,r,a,o,n);if(i){i=r.fallback,c=t.mode,a=(o=e.child).sibling;var l={mode:"hidden",children:r.children};return 0===(1&c)&&t.child!==o?((r=t.child).childLanes=0,r.pendingProps=l,t.deletions=null):(r=Dl(o,l)).subtreeFlags=14680064&o.subtreeFlags,null!==a?i=Dl(a,i):(i=Ml(i,c,n,null)).flags|=2,i.return=t,r.return=t,r.sibling=i,t.child=r,r=i,i=t.child,c=null===(c=e.child.memoizedState)?Li(n):{baseLanes:c.baseLanes|n,cachePool:null,transitions:c.transitions},i.memoizedState=c,i.childLanes=e.childLanes&~n,t.memoizedState=Mi,r}return e=(i=e.child).sibling,r=Dl(i,{mode:"visible",children:r.children}),0===(1&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function Pi(e,t){return(t=Ll({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Bi(e,t,n,a){return null!==a&&fs(a),vs(t,e.child,null,n),(e=Pi(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Wi(e,t,n){e.lanes|=t;var a=e.alternate;null!==a&&(a.lanes|=t),Es(e.return,t,n)}function Vi(e,t,n,a,r){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:r}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=a,s.tail=n,s.tailMode=r)}function Ui(e,t,n){var a=t.pendingProps,r=a.revealOrder,s=a.tail;if(vi(e,t,a.children,n),0!==(2&(a=$s.current)))a=1&a|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Wi(e,n,t);else if(19===e.tag)Wi(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(Tr($s,a),0===(1&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===eo(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Vi(t,!1,r,n,s);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===eo(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Vi(t,!0,n,null,s);break;case"together":Vi(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Gi(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Hi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Lc|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(n=Dl(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Dl(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function ji(e,t){if(!rs)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function qi(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,a=0;if(t)for(var r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=14680064&r.subtreeFlags,a|=14680064&r.flags,r.return=e,r=r.sibling;else for(r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=r.subtreeFlags,a|=r.flags,r.return=e,r=r.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function Ki(e,t,n){var a=t.pendingProps;switch(ts(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qi(t),null;case 1:case 17:return Fr(t.type)&&Dr(),qi(t),null;case 3:return a=t.stateNode,Qs(),Ir(Rr),Ir(Er),no(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(hs(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ss&&(ol(ss),ss=null))),Fi(e,t),qi(t),null;case 5:Js(t);var r=Xs(Ks.current);if(n=t.type,null!==e&&null!=t.stateNode)Di(e,t,n,a,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(null===t.stateNode)throw Error(s(166));return qi(t),null}if(e=Xs(js.current),hs(t)){a=t.stateNode,n=t.type;var o=t.memoizedProps;switch(a[dr]=t,a[pr]=o,e=0!==(1&t.mode),n){case"dialog":Ba("cancel",a),Ba("close",a);break;case"iframe":case"object":case"embed":Ba("load",a);break;case"video":case"audio":for(r=0;r<Ma.length;r++)Ba(Ma[r],a);break;case"source":Ba("error",a);break;case"img":case"image":case"link":Ba("error",a),Ba("load",a);break;case"details":Ba("toggle",a);break;case"input":Q(a,o),Ba("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!o.multiple},Ba("invalid",a);break;case"textarea":re(a,o),Ba("invalid",a)}for(var c in be(n,o),r=null,o)if(o.hasOwnProperty(c)){var l=o[c];"children"===c?"string"===typeof l?a.textContent!==l&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,l,e),r=["children",l]):"number"===typeof l&&a.textContent!==""+l&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,l,e),r=["children",""+l]):i.hasOwnProperty(c)&&null!=l&&"onScroll"===c&&Ba("scroll",a)}switch(n){case"input":q(a),$(a,o,!0);break;case"textarea":q(a),oe(a);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(a.onclick=$a)}a=r,t.updateQueue=a,null!==a&&(t.flags|=4)}else{c=9===r.nodeType?r:r.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof a.is?e=c.createElement(n,{is:a.is}):(e=c.createElement(n),"select"===n&&(c=e,a.multiple?c.multiple=!0:a.size&&(c.size=a.size))):e=c.createElementNS(e,n),e[dr]=t,e[pr]=a,_i(e,t,!1,!1),t.stateNode=e;e:{switch(c=xe(n,a),n){case"dialog":Ba("cancel",e),Ba("close",e),r=a;break;case"iframe":case"object":case"embed":Ba("load",e),r=a;break;case"video":case"audio":for(r=0;r<Ma.length;r++)Ba(Ma[r],e);r=a;break;case"source":Ba("error",e),r=a;break;case"img":case"image":case"link":Ba("error",e),Ba("load",e),r=a;break;case"details":Ba("toggle",e),r=a;break;case"input":Q(e,a),r=Y(e,a),Ba("invalid",e);break;case"option":default:r=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},r=z({},a,{value:void 0}),Ba("invalid",e);break;case"textarea":re(e,a),r=ae(e,a),Ba("invalid",e)}for(o in be(n,r),l=r)if(l.hasOwnProperty(o)){var u=l[o];"style"===o?ge(e,u):"dangerouslySetInnerHTML"===o?null!=(u=u?u.__html:void 0)&&he(e,u):"children"===o?"string"===typeof u?("textarea"!==n||""!==u)&&de(e,u):"number"===typeof u&&de(e,""+u):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(i.hasOwnProperty(o)?null!=u&&"onScroll"===o&&Ba("scroll",e):null!=u&&x(e,o,u,c))}switch(n){case"input":q(e),$(e,a,!1);break;case"textarea":q(e),oe(e);break;case"option":null!=a.value&&e.setAttribute("value",""+H(a.value));break;case"select":e.multiple=!!a.multiple,null!=(o=a.value)?ne(e,!!a.multiple,o,!1):null!=a.defaultValue&&ne(e,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof r.onClick&&(e.onclick=$a)}switch(n){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return qi(t),null;case 6:if(e&&null!=t.stateNode)Oi(e,t,e.memoizedProps,a);else{if("string"!==typeof a&&null===t.stateNode)throw Error(s(166));if(n=Xs(Ks.current),Xs(js.current),hs(t)){if(a=t.stateNode,n=t.memoizedProps,a[dr]=t,(o=a.nodeValue!==n)&&null!==(e=ns))switch(e.tag){case 3:Ja(a.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Ja(a.nodeValue,n,0!==(1&e.mode))}o&&(t.flags|=4)}else(a=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[dr]=t,t.stateNode=a}return qi(t),null;case 13:if(Ir($s),a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(rs&&null!==as&&0!==(1&t.mode)&&0===(128&t.flags))ds(),ps(),t.flags|=98560,o=!1;else if(o=hs(t),null!==a&&null!==a.dehydrated){if(null===e){if(!o)throw Error(s(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(s(317));o[dr]=t}else ps(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;qi(t),o=!1}else null!==ss&&(ol(ss),ss=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((a=null!==a)!==(null!==e&&null!==e.memoizedState)&&a&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&$s.current)?0===Oc&&(Oc=3):ml())),null!==t.updateQueue&&(t.flags|=4),qi(t),null);case 4:return Qs(),Fi(e,t),null===e&&Ua(t.stateNode.containerInfo),qi(t),null;case 10:return Cs(t.type._context),qi(t),null;case 19:if(Ir($s),null===(o=t.memoizedState))return qi(t),null;if(a=0!==(128&t.flags),null===(c=o.rendering))if(a)ji(o,!1);else{if(0!==Oc||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(c=eo(e))){for(t.flags|=128,ji(o,!1),null!==(a=c.updateQueue)&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=n,n=t.child;null!==n;)e=a,(o=n).flags&=14680066,null===(c=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=c.childLanes,o.lanes=c.lanes,o.child=c.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=c.memoizedProps,o.memoizedState=c.memoizedState,o.updateQueue=c.updateQueue,o.type=c.type,e=c.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Tr($s,1&$s.current|2),t.child}e=e.sibling}null!==o.tail&&Ze()>Uc&&(t.flags|=128,a=!0,ji(o,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=eo(c))){if(t.flags|=128,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ji(o,!0),null===o.tail&&"hidden"===o.tailMode&&!c.alternate&&!rs)return qi(t),null}else 2*Ze()-o.renderingStartTime>Uc&&1073741824!==n&&(t.flags|=128,a=!0,ji(o,!1),t.lanes=4194304);o.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=o.last)?n.sibling=c:t.child=c,o.last=c)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Ze(),t.sibling=null,n=$s.current,Tr($s,a?1&n|2:1&n),t):(qi(t),null);case 22:case 23:return hl(),a=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==a&&(t.flags|=8192),a&&0!==(1&t.mode)?0!==(1073741824&Fc)&&(qi(t),6&t.subtreeFlags&&(t.flags|=8192)):qi(t),null;case 24:case 25:return null}throw Error(s(156,t.tag))}function Xi(e,t){switch(ts(t),t.tag){case 1:return Fr(t.type)&&Dr(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Qs(),Ir(Rr),Ir(Er),no(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Js(t),null;case 13:if(Ir($s),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(s(340));ps()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Ir($s),null;case 4:return Qs(),null;case 10:return Cs(t.type._context),null;case 22:case 23:return hl(),null;default:return null}}_i=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Fi=function(){},Di=function(e,t,n,a){var r=e.memoizedProps;if(r!==a){e=t.stateNode,Xs(js.current);var s,o=null;switch(n){case"input":r=Y(e,r),a=Y(e,a),o=[];break;case"select":r=z({},r,{value:void 0}),a=z({},a,{value:void 0}),o=[];break;case"textarea":r=ae(e,r),a=ae(e,a),o=[];break;default:"function"!==typeof r.onClick&&"function"===typeof a.onClick&&(e.onclick=$a)}for(u in be(n,a),n=null,r)if(!a.hasOwnProperty(u)&&r.hasOwnProperty(u)&&null!=r[u])if("style"===u){var c=r[u];for(s in c)c.hasOwnProperty(s)&&(n||(n={}),n[s]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(i.hasOwnProperty(u)?o||(o=[]):(o=o||[]).push(u,null));for(u in a){var l=a[u];if(c=null!=r?r[u]:void 0,a.hasOwnProperty(u)&&l!==c&&(null!=l||null!=c))if("style"===u)if(c){for(s in c)!c.hasOwnProperty(s)||l&&l.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in l)l.hasOwnProperty(s)&&c[s]!==l[s]&&(n||(n={}),n[s]=l[s])}else n||(o||(o=[]),o.push(u,n)),n=l;else"dangerouslySetInnerHTML"===u?(l=l?l.__html:void 0,c=c?c.__html:void 0,null!=l&&c!==l&&(o=o||[]).push(u,l)):"children"===u?"string"!==typeof l&&"number"!==typeof l||(o=o||[]).push(u,""+l):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(i.hasOwnProperty(u)?(null!=l&&"onScroll"===u&&Ba("scroll",e),o||c===l||(o=[])):(o=o||[]).push(u,l))}n&&(o=o||[]).push("style",n);var u=o;(t.updateQueue=u)&&(t.flags|=4)}},Oi=function(e,t,n,a){n!==a&&(t.flags|=4)};var Yi=!1,Qi=!1,Zi="function"===typeof WeakSet?WeakSet:Set,Ji=null;function $i(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(a){Nl(e,t,a)}else n.current=null}function ec(e,t,n){try{n()}catch(a){Nl(e,t,a)}}var tc=!1;function nc(e,t,n){var a=t.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var r=a=a.next;do{if((r.tag&e)===e){var s=r.destroy;r.destroy=void 0,void 0!==s&&ec(t,n,s)}r=r.next}while(r!==a)}}function ac(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var a=n.create;n.destroy=a()}n=n.next}while(n!==t)}}function rc(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function sc(e){var t=e.alternate;null!==t&&(e.alternate=null,sc(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[dr],delete t[pr],delete t[mr],delete t[gr],delete t[yr])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function oc(e){return 5===e.tag||3===e.tag||4===e.tag}function ic(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||oc(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function cc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=$a));else if(4!==a&&null!==(e=e.child))for(cc(e,t,n),e=e.sibling;null!==e;)cc(e,t,n),e=e.sibling}function lc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==a&&null!==(e=e.child))for(lc(e,t,n),e=e.sibling;null!==e;)lc(e,t,n),e=e.sibling}var uc=null,hc=!1;function dc(e,t,n){for(n=n.child;null!==n;)pc(e,t,n),n=n.sibling}function pc(e,t,n){if(st&&"function"===typeof st.onCommitFiberUnmount)try{st.onCommitFiberUnmount(rt,n)}catch(i){}switch(n.tag){case 5:Qi||$i(n,t);case 6:var a=uc,r=hc;uc=null,dc(e,t,n),hc=r,null!==(uc=a)&&(hc?(e=uc,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):uc.removeChild(n.stateNode));break;case 18:null!==uc&&(hc?(e=uc,n=n.stateNode,8===e.nodeType?cr(e.parentNode,n):1===e.nodeType&&cr(e,n),Ut(e)):cr(uc,n.stateNode));break;case 4:a=uc,r=hc,uc=n.stateNode.containerInfo,hc=!0,dc(e,t,n),uc=a,hc=r;break;case 0:case 11:case 14:case 15:if(!Qi&&(null!==(a=n.updateQueue)&&null!==(a=a.lastEffect))){r=a=a.next;do{var s=r,o=s.destroy;s=s.tag,void 0!==o&&(0!==(2&s)||0!==(4&s))&&ec(n,t,o),r=r.next}while(r!==a)}dc(e,t,n);break;case 1:if(!Qi&&($i(n,t),"function"===typeof(a=n.stateNode).componentWillUnmount))try{a.props=n.memoizedProps,a.state=n.memoizedState,a.componentWillUnmount()}catch(i){Nl(n,t,i)}dc(e,t,n);break;case 21:dc(e,t,n);break;case 22:1&n.mode?(Qi=(a=Qi)||null!==n.memoizedState,dc(e,t,n),Qi=a):dc(e,t,n);break;default:dc(e,t,n)}}function fc(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zi),t.forEach((function(t){var a=El.bind(null,e,t);n.has(t)||(n.add(t),t.then(a,a))}))}}function mc(e,t){var n=t.deletions;if(null!==n)for(var a=0;a<n.length;a++){var r=n[a];try{var o=e,i=t,c=i;e:for(;null!==c;){switch(c.tag){case 5:uc=c.stateNode,hc=!1;break e;case 3:case 4:uc=c.stateNode.containerInfo,hc=!0;break e}c=c.return}if(null===uc)throw Error(s(160));pc(o,i,r),uc=null,hc=!1;var l=r.alternate;null!==l&&(l.return=null),r.return=null}catch(u){Nl(r,t,u)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gc(t,e),t=t.sibling}function gc(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(mc(t,e),yc(e),4&a){try{nc(3,e,e.return),ac(3,e)}catch(g){Nl(e,e.return,g)}try{nc(5,e,e.return)}catch(g){Nl(e,e.return,g)}}break;case 1:mc(t,e),yc(e),512&a&&null!==n&&$i(n,n.return);break;case 5:if(mc(t,e),yc(e),512&a&&null!==n&&$i(n,n.return),32&e.flags){var r=e.stateNode;try{de(r,"")}catch(g){Nl(e,e.return,g)}}if(4&a&&null!=(r=e.stateNode)){var o=e.memoizedProps,i=null!==n?n.memoizedProps:o,c=e.type,l=e.updateQueue;if(e.updateQueue=null,null!==l)try{"input"===c&&"radio"===o.type&&null!=o.name&&Z(r,o),xe(c,i);var u=xe(c,o);for(i=0;i<l.length;i+=2){var h=l[i],d=l[i+1];"style"===h?ge(r,d):"dangerouslySetInnerHTML"===h?he(r,d):"children"===h?de(r,d):x(r,h,d,u)}switch(c){case"input":J(r,o);break;case"textarea":se(r,o);break;case"select":var p=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!o.multiple;var f=o.value;null!=f?ne(r,!!o.multiple,f,!1):p!==!!o.multiple&&(null!=o.defaultValue?ne(r,!!o.multiple,o.defaultValue,!0):ne(r,!!o.multiple,o.multiple?[]:"",!1))}r[pr]=o}catch(g){Nl(e,e.return,g)}}break;case 6:if(mc(t,e),yc(e),4&a){if(null===e.stateNode)throw Error(s(162));r=e.stateNode,o=e.memoizedProps;try{r.nodeValue=o}catch(g){Nl(e,e.return,g)}}break;case 3:if(mc(t,e),yc(e),4&a&&null!==n&&n.memoizedState.isDehydrated)try{Ut(t.containerInfo)}catch(g){Nl(e,e.return,g)}break;case 4:default:mc(t,e),yc(e);break;case 13:mc(t,e),yc(e),8192&(r=e.child).flags&&(o=null!==r.memoizedState,r.stateNode.isHidden=o,!o||null!==r.alternate&&null!==r.alternate.memoizedState||(Vc=Ze())),4&a&&fc(e);break;case 22:if(h=null!==n&&null!==n.memoizedState,1&e.mode?(Qi=(u=Qi)||h,mc(t,e),Qi=u):mc(t,e),yc(e),8192&a){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!h&&0!==(1&e.mode))for(Ji=e,h=e.child;null!==h;){for(d=Ji=h;null!==Ji;){switch(f=(p=Ji).child,p.tag){case 0:case 11:case 14:case 15:nc(4,p,p.return);break;case 1:$i(p,p.return);var m=p.stateNode;if("function"===typeof m.componentWillUnmount){a=p,n=p.return;try{t=a,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){Nl(a,n,g)}}break;case 5:$i(p,p.return);break;case 22:if(null!==p.memoizedState){wc(d);continue}}null!==f?(f.return=p,Ji=f):wc(d)}h=h.sibling}e:for(h=null,d=e;;){if(5===d.tag){if(null===h){h=d;try{r=d.stateNode,u?"function"===typeof(o=r.style).setProperty?o.setProperty("display","none","important"):o.display="none":(c=d.stateNode,i=void 0!==(l=d.memoizedProps.style)&&null!==l&&l.hasOwnProperty("display")?l.display:null,c.style.display=me("display",i))}catch(g){Nl(e,e.return,g)}}}else if(6===d.tag){if(null===h)try{d.stateNode.nodeValue=u?"":d.memoizedProps}catch(g){Nl(e,e.return,g)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;h===d&&(h=null),d=d.return}h===d&&(h=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:mc(t,e),yc(e),4&a&&fc(e);case 21:}}function yc(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(oc(n)){var a=n;break e}n=n.return}throw Error(s(160))}switch(a.tag){case 5:var r=a.stateNode;32&a.flags&&(de(r,""),a.flags&=-33),lc(e,ic(e),r);break;case 3:case 4:var o=a.stateNode.containerInfo;cc(e,ic(e),o);break;default:throw Error(s(161))}}catch(i){Nl(e,e.return,i)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bc(e,t,n){Ji=e,xc(e,t,n)}function xc(e,t,n){for(var a=0!==(1&e.mode);null!==Ji;){var r=Ji,s=r.child;if(22===r.tag&&a){var o=null!==r.memoizedState||Yi;if(!o){var i=r.alternate,c=null!==i&&null!==i.memoizedState||Qi;i=Yi;var l=Qi;if(Yi=o,(Qi=c)&&!l)for(Ji=r;null!==Ji;)c=(o=Ji).child,22===o.tag&&null!==o.memoizedState?kc(r):null!==c?(c.return=o,Ji=c):kc(r);for(;null!==s;)Ji=s,xc(s,t,n),s=s.sibling;Ji=r,Yi=i,Qi=l}vc(e)}else 0!==(8772&r.subtreeFlags)&&null!==s?(s.return=r,Ji=s):vc(e)}}function vc(e){for(;null!==Ji;){var t=Ji;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Qi||ac(5,t);break;case 1:var a=t.stateNode;if(4&t.flags&&!Qi)if(null===n)a.componentDidMount();else{var r=t.elementType===t.type?n.memoizedProps:ni(t.type,n.memoizedProps);a.componentDidUpdate(r,n.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&Gs(t,o,a);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Gs(t,i,n)}break;case 5:var c=t.stateNode;if(null===n&&4&t.flags){n=c;var l=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&n.focus();break;case"img":l.src&&(n.src=l.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var u=t.alternate;if(null!==u){var h=u.memoizedState;if(null!==h){var d=h.dehydrated;null!==d&&Ut(d)}}}break;default:throw Error(s(163))}Qi||512&t.flags&&rc(t)}catch(p){Nl(t,t.return,p)}}if(t===e){Ji=null;break}if(null!==(n=t.sibling)){n.return=t.return,Ji=n;break}Ji=t.return}}function wc(e){for(;null!==Ji;){var t=Ji;if(t===e){Ji=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Ji=n;break}Ji=t.return}}function kc(e){for(;null!==Ji;){var t=Ji;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{ac(4,t)}catch(c){Nl(t,n,c)}break;case 1:var a=t.stateNode;if("function"===typeof a.componentDidMount){var r=t.return;try{a.componentDidMount()}catch(c){Nl(t,r,c)}}var s=t.return;try{rc(t)}catch(c){Nl(t,s,c)}break;case 5:var o=t.return;try{rc(t)}catch(c){Nl(t,o,c)}}}catch(c){Nl(t,t.return,c)}if(t===e){Ji=null;break}var i=t.sibling;if(null!==i){i.return=t.return,Ji=i;break}Ji=t.return}}var Sc,Nc=Math.ceil,Ic=v.ReactCurrentDispatcher,Tc=v.ReactCurrentOwner,Cc=v.ReactCurrentBatchConfig,Ec=0,Rc=null,Ac=null,_c=0,Fc=0,Dc=Nr(0),Oc=0,Mc=null,Lc=0,zc=0,Pc=0,Bc=null,Wc=null,Vc=0,Uc=1/0,Gc=null,Hc=!1,jc=null,qc=null,Kc=!1,Xc=null,Yc=0,Qc=0,Zc=null,Jc=-1,$c=0;function el(){return 0!==(6&Ec)?Ze():-1!==Jc?Jc:Jc=Ze()}function tl(e){return 0===(1&e.mode)?1:0!==(2&Ec)&&0!==_c?_c&-_c:null!==ms.transition?(0===$c&&($c=mt()),$c):0!==(e=xt)?e:e=void 0===(e=window.event)?16:Qt(e.type)}function nl(e,t,n,a){if(50<Qc)throw Qc=0,Zc=null,Error(s(185));yt(e,n,a),0!==(2&Ec)&&e===Rc||(e===Rc&&(0===(2&Ec)&&(zc|=n),4===Oc&&il(e,_c)),al(e,a),1===n&&0===Ec&&0===(1&t.mode)&&(Uc=Ze()+500,Br&&Ur()))}function al(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,r=e.expirationTimes,s=e.pendingLanes;0<s;){var o=31-ot(s),i=1<<o,c=r[o];-1===c?0!==(i&n)&&0===(i&a)||(r[o]=pt(i,t)):c<=t&&(e.expiredLanes|=i),s&=~i}}(e,t);var a=dt(e,e===Rc?_c:0);if(0===a)null!==n&&Xe(n),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(null!=n&&Xe(n),1===t)0===e.tag?function(e){Br=!0,Vr(e)}(cl.bind(null,e)):Vr(cl.bind(null,e)),or((function(){0===(6&Ec)&&Ur()})),n=null;else{switch(vt(a)){case 1:n=$e;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=at}n=Rl(n,rl.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function rl(e,t){if(Jc=-1,$c=0,0!==(6&Ec))throw Error(s(327));var n=e.callbackNode;if(kl()&&e.callbackNode!==n)return null;var a=dt(e,e===Rc?_c:0);if(0===a)return null;if(0!==(30&a)||0!==(a&e.expiredLanes)||t)t=gl(e,a);else{t=a;var r=Ec;Ec|=2;var o=fl();for(Rc===e&&_c===t||(Gc=null,Uc=Ze()+500,dl(e,t));;)try{bl();break}catch(c){pl(e,c)}Ts(),Ic.current=o,Ec=r,null!==Ac?t=0:(Rc=null,_c=0,t=Oc)}if(0!==t){if(2===t&&(0!==(r=ft(e))&&(a=r,t=sl(e,r))),1===t)throw n=Mc,dl(e,0),il(e,a),al(e,Ze()),n;if(6===t)il(e,a);else{if(r=e.current.alternate,0===(30&a)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var a=0;a<n.length;a++){var r=n[a],s=r.getSnapshot;r=r.value;try{if(!ia(s(),r))return!1}catch(i){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(r)&&(2===(t=gl(e,a))&&(0!==(o=ft(e))&&(a=o,t=sl(e,o))),1===t))throw n=Mc,dl(e,0),il(e,a),al(e,Ze()),n;switch(e.finishedWork=r,e.finishedLanes=a,t){case 0:case 1:throw Error(s(345));case 2:case 5:wl(e,Wc,Gc);break;case 3:if(il(e,a),(130023424&a)===a&&10<(t=Vc+500-Ze())){if(0!==dt(e,0))break;if(((r=e.suspendedLanes)&a)!==a){el(),e.pingedLanes|=e.suspendedLanes&r;break}e.timeoutHandle=ar(wl.bind(null,e,Wc,Gc),t);break}wl(e,Wc,Gc);break;case 4:if(il(e,a),(4194240&a)===a)break;for(t=e.eventTimes,r=-1;0<a;){var i=31-ot(a);o=1<<i,(i=t[i])>r&&(r=i),a&=~o}if(a=r,10<(a=(120>(a=Ze()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*Nc(a/1960))-a)){e.timeoutHandle=ar(wl.bind(null,e,Wc,Gc),a);break}wl(e,Wc,Gc);break;default:throw Error(s(329))}}}return al(e,Ze()),e.callbackNode===n?rl.bind(null,e):null}function sl(e,t){var n=Bc;return e.current.memoizedState.isDehydrated&&(dl(e,t).flags|=256),2!==(e=gl(e,t))&&(t=Wc,Wc=n,null!==t&&ol(t)),e}function ol(e){null===Wc?Wc=e:Wc.push.apply(Wc,e)}function il(e,t){for(t&=~Pc,t&=~zc,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),a=1<<n;e[n]=-1,t&=~a}}function cl(e){if(0!==(6&Ec))throw Error(s(327));kl();var t=dt(e,0);if(0===(1&t))return al(e,Ze()),null;var n=gl(e,t);if(0!==e.tag&&2===n){var a=ft(e);0!==a&&(t=a,n=sl(e,a))}if(1===n)throw n=Mc,dl(e,0),il(e,t),al(e,Ze()),n;if(6===n)throw Error(s(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,wl(e,Wc,Gc),al(e,Ze()),null}function ll(e,t){var n=Ec;Ec|=1;try{return e(t)}finally{0===(Ec=n)&&(Uc=Ze()+500,Br&&Ur())}}function ul(e){null!==Xc&&0===Xc.tag&&0===(6&Ec)&&kl();var t=Ec;Ec|=1;var n=Cc.transition,a=xt;try{if(Cc.transition=null,xt=1,e)return e()}finally{xt=a,Cc.transition=n,0===(6&(Ec=t))&&Ur()}}function hl(){Fc=Dc.current,Ir(Dc)}function dl(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,rr(n)),null!==Ac)for(n=Ac.return;null!==n;){var a=n;switch(ts(a),a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&Dr();break;case 3:Qs(),Ir(Rr),Ir(Er),no();break;case 5:Js(a);break;case 4:Qs();break;case 13:case 19:Ir($s);break;case 10:Cs(a.type._context);break;case 22:case 23:hl()}n=n.return}if(Rc=e,Ac=e=Dl(e.current,null),_c=Fc=t,Oc=0,Mc=null,Pc=zc=Lc=0,Wc=Bc=null,null!==_s){for(t=0;t<_s.length;t++)if(null!==(a=(n=_s[t]).interleaved)){n.interleaved=null;var r=a.next,s=n.pending;if(null!==s){var o=s.next;s.next=r,a.next=o}n.pending=a}_s=null}return e}function pl(e,t){for(;;){var n=Ac;try{if(Ts(),ao.current=Jo,lo){for(var a=oo.memoizedState;null!==a;){var r=a.queue;null!==r&&(r.pending=null),a=a.next}lo=!1}if(so=0,co=io=oo=null,uo=!1,ho=0,Tc.current=null,null===n||null===n.return){Oc=1,Mc=t,Ac=null;break}e:{var o=e,i=n.return,c=n,l=t;if(t=_c,c.flags|=32768,null!==l&&"object"===typeof l&&"function"===typeof l.then){var u=l,h=c,d=h.tag;if(0===(1&h.mode)&&(0===d||11===d||15===d)){var p=h.alternate;p?(h.updateQueue=p.updateQueue,h.memoizedState=p.memoizedState,h.lanes=p.lanes):(h.updateQueue=null,h.memoizedState=null)}var f=gi(i);if(null!==f){f.flags&=-257,yi(f,i,c,0,t),1&f.mode&&mi(o,u,t),l=u;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(l),t.updateQueue=g}else m.add(l);break e}if(0===(1&t)){mi(o,u,t),ml();break e}l=Error(s(426))}else if(rs&&1&c.mode){var y=gi(i);if(null!==y){0===(65536&y.flags)&&(y.flags|=256),yi(y,i,c,0,t),fs(li(l,c));break e}}o=l=li(l,c),4!==Oc&&(Oc=2),null===Bc?Bc=[o]:Bc.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Vs(o,pi(0,l,t));break e;case 1:c=l;var b=o.type,x=o.stateNode;if(0===(128&o.flags)&&("function"===typeof b.getDerivedStateFromError||null!==x&&"function"===typeof x.componentDidCatch&&(null===qc||!qc.has(x)))){o.flags|=65536,t&=-t,o.lanes|=t,Vs(o,fi(o,c,t));break e}}o=o.return}while(null!==o)}vl(n)}catch(v){t=v,Ac===n&&null!==n&&(Ac=n=n.return);continue}break}}function fl(){var e=Ic.current;return Ic.current=Jo,null===e?Jo:e}function ml(){0!==Oc&&3!==Oc&&2!==Oc||(Oc=4),null===Rc||0===(268435455&Lc)&&0===(268435455&zc)||il(Rc,_c)}function gl(e,t){var n=Ec;Ec|=2;var a=fl();for(Rc===e&&_c===t||(Gc=null,dl(e,t));;)try{yl();break}catch(r){pl(e,r)}if(Ts(),Ec=n,Ic.current=a,null!==Ac)throw Error(s(261));return Rc=null,_c=0,Oc}function yl(){for(;null!==Ac;)xl(Ac)}function bl(){for(;null!==Ac&&!Ye();)xl(Ac)}function xl(e){var t=Sc(e.alternate,e,Fc);e.memoizedProps=e.pendingProps,null===t?vl(e):Ac=t,Tc.current=null}function vl(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=Ki(n,t,Fc)))return void(Ac=n)}else{if(null!==(n=Xi(n,t)))return n.flags&=32767,void(Ac=n);if(null===e)return Oc=6,void(Ac=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Ac=t);Ac=t=e}while(null!==t);0===Oc&&(Oc=5)}function wl(e,t,n){var a=xt,r=Cc.transition;try{Cc.transition=null,xt=1,function(e,t,n,a){do{kl()}while(null!==Xc);if(0!==(6&Ec))throw Error(s(327));n=e.finishedWork;var r=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(s(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<n;){var r=31-ot(n),s=1<<r;t[r]=0,a[r]=-1,e[r]=-1,n&=~s}}(e,o),e===Rc&&(Ac=Rc=null,_c=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||Kc||(Kc=!0,Rl(tt,(function(){return kl(),null}))),o=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||o){o=Cc.transition,Cc.transition=null;var i=xt;xt=1;var c=Ec;Ec|=4,Tc.current=null,function(e,t){if(er=Ht,pa(e=da())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(a&&0!==a.rangeCount){n=a.anchorNode;var r=a.anchorOffset,o=a.focusNode;a=a.focusOffset;try{n.nodeType,o.nodeType}catch(w){n=null;break e}var i=0,c=-1,l=-1,u=0,h=0,d=e,p=null;t:for(;;){for(var f;d!==n||0!==r&&3!==d.nodeType||(c=i+r),d!==o||0!==a&&3!==d.nodeType||(l=i+a),3===d.nodeType&&(i+=d.nodeValue.length),null!==(f=d.firstChild);)p=d,d=f;for(;;){if(d===e)break t;if(p===n&&++u===r&&(c=i),p===o&&++h===a&&(l=i),null!==(f=d.nextSibling))break;p=(d=p).parentNode}d=f}n=-1===c||-1===l?null:{start:c,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(tr={focusedElem:e,selectionRange:n},Ht=!1,Ji=t;null!==Ji;)if(e=(t=Ji).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Ji=e;else for(;null!==Ji;){t=Ji;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=t.stateNode,x=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:ni(t.type,g),y);b.__reactInternalSnapshotBeforeUpdate=x}break;case 3:var v=t.stateNode.containerInfo;1===v.nodeType?v.textContent="":9===v.nodeType&&v.documentElement&&v.removeChild(v.documentElement);break;default:throw Error(s(163))}}catch(w){Nl(t,t.return,w)}if(null!==(e=t.sibling)){e.return=t.return,Ji=e;break}Ji=t.return}m=tc,tc=!1}(e,n),gc(n,e),fa(tr),Ht=!!er,tr=er=null,e.current=n,bc(n,e,r),Qe(),Ec=c,xt=i,Cc.transition=o}else e.current=n;if(Kc&&(Kc=!1,Xc=e,Yc=r),o=e.pendingLanes,0===o&&(qc=null),function(e){if(st&&"function"===typeof st.onCommitFiberRoot)try{st.onCommitFiberRoot(rt,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),al(e,Ze()),null!==t)for(a=e.onRecoverableError,n=0;n<t.length;n++)r=t[n],a(r.value,{componentStack:r.stack,digest:r.digest});if(Hc)throw Hc=!1,e=jc,jc=null,e;0!==(1&Yc)&&0!==e.tag&&kl(),o=e.pendingLanes,0!==(1&o)?e===Zc?Qc++:(Qc=0,Zc=e):Qc=0,Ur()}(e,t,n,a)}finally{Cc.transition=r,xt=a}return null}function kl(){if(null!==Xc){var e=vt(Yc),t=Cc.transition,n=xt;try{if(Cc.transition=null,xt=16>e?16:e,null===Xc)var a=!1;else{if(e=Xc,Xc=null,Yc=0,0!==(6&Ec))throw Error(s(331));var r=Ec;for(Ec|=4,Ji=e.current;null!==Ji;){var o=Ji,i=o.child;if(0!==(16&Ji.flags)){var c=o.deletions;if(null!==c){for(var l=0;l<c.length;l++){var u=c[l];for(Ji=u;null!==Ji;){var h=Ji;switch(h.tag){case 0:case 11:case 15:nc(8,h,o)}var d=h.child;if(null!==d)d.return=h,Ji=d;else for(;null!==Ji;){var p=(h=Ji).sibling,f=h.return;if(sc(h),h===u){Ji=null;break}if(null!==p){p.return=f,Ji=p;break}Ji=f}}}var m=o.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}Ji=o}}if(0!==(2064&o.subtreeFlags)&&null!==i)i.return=o,Ji=i;else e:for(;null!==Ji;){if(0!==(2048&(o=Ji).flags))switch(o.tag){case 0:case 11:case 15:nc(9,o,o.return)}var b=o.sibling;if(null!==b){b.return=o.return,Ji=b;break e}Ji=o.return}}var x=e.current;for(Ji=x;null!==Ji;){var v=(i=Ji).child;if(0!==(2064&i.subtreeFlags)&&null!==v)v.return=i,Ji=v;else e:for(i=x;null!==Ji;){if(0!==(2048&(c=Ji).flags))try{switch(c.tag){case 0:case 11:case 15:ac(9,c)}}catch(k){Nl(c,c.return,k)}if(c===i){Ji=null;break e}var w=c.sibling;if(null!==w){w.return=c.return,Ji=w;break e}Ji=c.return}}if(Ec=r,Ur(),st&&"function"===typeof st.onPostCommitFiberRoot)try{st.onPostCommitFiberRoot(rt,e)}catch(k){}a=!0}return a}finally{xt=n,Cc.transition=t}}return!1}function Sl(e,t,n){e=Bs(e,t=pi(0,t=li(n,t),1),1),t=el(),null!==e&&(yt(e,1,t),al(e,t))}function Nl(e,t,n){if(3===e.tag)Sl(e,e,n);else for(;null!==t;){if(3===t.tag){Sl(t,e,n);break}if(1===t.tag){var a=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===qc||!qc.has(a))){t=Bs(t,e=fi(t,e=li(n,e),1),1),e=el(),null!==t&&(yt(t,1,e),al(t,e));break}}t=t.return}}function Il(e,t,n){var a=e.pingCache;null!==a&&a.delete(t),t=el(),e.pingedLanes|=e.suspendedLanes&n,Rc===e&&(_c&n)===n&&(4===Oc||3===Oc&&(130023424&_c)===_c&&500>Ze()-Vc?dl(e,0):Pc|=n),al(e,t)}function Tl(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ut,0===(130023424&(ut<<=1))&&(ut=4194304)));var n=el();null!==(e=Os(e,t))&&(yt(e,t,n),al(e,n))}function Cl(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Tl(e,n)}function El(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,r=e.memoizedState;null!==r&&(n=r.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(s(314))}null!==a&&a.delete(t),Tl(e,n)}function Rl(e,t){return Ke(e,t)}function Al(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function _l(e,t,n,a){return new Al(e,t,n,a)}function Fl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Dl(e,t){var n=e.alternate;return null===n?((n=_l(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ol(e,t,n,a,r,o){var i=2;if(a=e,"function"===typeof e)Fl(e)&&(i=1);else if("string"===typeof e)i=5;else e:switch(e){case S:return Ml(n.children,r,o,t);case N:i=8,r|=8;break;case I:return(e=_l(12,n,t,2|r)).elementType=I,e.lanes=o,e;case R:return(e=_l(13,n,t,r)).elementType=R,e.lanes=o,e;case A:return(e=_l(19,n,t,r)).elementType=A,e.lanes=o,e;case D:return Ll(n,r,o,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case T:i=10;break e;case C:i=9;break e;case E:i=11;break e;case _:i=14;break e;case F:i=16,a=null;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=_l(i,n,t,r)).elementType=e,t.type=a,t.lanes=o,t}function Ml(e,t,n,a){return(e=_l(7,e,a,t)).lanes=n,e}function Ll(e,t,n,a){return(e=_l(22,e,a,t)).elementType=D,e.lanes=n,e.stateNode={isHidden:!1},e}function zl(e,t,n){return(e=_l(6,e,null,t)).lanes=n,e}function Pl(e,t,n){return(t=_l(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Bl(e,t,n,a,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=a,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function Wl(e,t,n,a,r,s,o,i,c){return e=new Bl(e,t,n,i,c),1===t?(t=1,!0===s&&(t|=8)):t=0,s=_l(3,null,null,t),e.current=s,s.stateNode=e,s.memoizedState={element:a,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ls(s),e}function Vl(e){if(!e)return Cr;e:{if(Ue(e=e._reactInternals)!==e||1!==e.tag)throw Error(s(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Fr(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(s(171))}if(1===e.tag){var n=e.type;if(Fr(n))return Mr(e,n,t)}return t}function Ul(e,t,n,a,r,s,o,i,c){return(e=Wl(n,a,!0,e,0,s,0,i,c)).context=Vl(null),n=e.current,(s=Ps(a=el(),r=tl(n))).callback=void 0!==t&&null!==t?t:null,Bs(n,s,r),e.current.lanes=r,yt(e,r,a),al(e,a),e}function Gl(e,t,n,a){var r=t.current,s=el(),o=tl(r);return n=Vl(n),null===t.context?t.context=n:t.pendingContext=n,(t=Ps(s,o)).payload={element:e},null!==(a=void 0===a?null:a)&&(t.callback=a),null!==(e=Bs(r,t,o))&&(nl(e,r,o,s),Ws(e,r,o)),o}function Hl(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function jl(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function ql(e,t){jl(e,t),(e=e.alternate)&&jl(e,t)}Sc=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Rr.current)xi=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return xi=!1,function(e,t,n){switch(t.tag){case 3:Ri(t),ps();break;case 5:Zs(t);break;case 1:Fr(t.type)&&Lr(t);break;case 4:Ys(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,r=t.memoizedProps.value;Tr(ks,a._currentValue),a._currentValue=r;break;case 13:if(null!==(a=t.memoizedState))return null!==a.dehydrated?(Tr($s,1&$s.current),t.flags|=128,null):0!==(n&t.child.childLanes)?zi(e,t,n):(Tr($s,1&$s.current),null!==(e=Hi(e,t,n))?e.sibling:null);Tr($s,1&$s.current);break;case 19:if(a=0!==(n&t.childLanes),0!==(128&e.flags)){if(a)return Ui(e,t,n);t.flags|=128}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),Tr($s,$s.current),a)break;return null;case 22:case 23:return t.lanes=0,Ni(e,t,n)}return Hi(e,t,n)}(e,t,n);xi=0!==(131072&e.flags)}else xi=!1,rs&&0!==(1048576&t.flags)&&$r(t,qr,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;Gi(e,t),e=t.pendingProps;var r=_r(t,Er.current);Rs(t,n),r=go(null,t,a,e,r,n);var o=yo();return t.flags|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Fr(a)?(o=!0,Lr(t)):o=!1,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,Ls(t),r.updater=ri,t.stateNode=r,r._reactInternals=t,ci(t,a,e,n),t=Ei(null,t,a,!0,o,n)):(t.tag=0,rs&&o&&es(t),vi(null,t,r,n),t=t.child),t;case 16:a=t.elementType;e:{switch(Gi(e,t),e=t.pendingProps,a=(r=a._init)(a._payload),t.type=a,r=t.tag=function(e){if("function"===typeof e)return Fl(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===E)return 11;if(e===_)return 14}return 2}(a),e=ni(a,e),r){case 0:t=Ti(null,t,a,e,n);break e;case 1:t=Ci(null,t,a,e,n);break e;case 11:t=wi(null,t,a,e,n);break e;case 14:t=ki(null,t,a,ni(a.type,e),n);break e}throw Error(s(306,a,""))}return t;case 0:return a=t.type,r=t.pendingProps,Ti(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 1:return a=t.type,r=t.pendingProps,Ci(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 3:e:{if(Ri(t),null===e)throw Error(s(387));a=t.pendingProps,r=(o=t.memoizedState).element,zs(e,t),Us(t,a,null,n);var i=t.memoizedState;if(a=i.element,o.isDehydrated){if(o={element:a,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Ai(e,t,a,n,r=li(Error(s(423)),t));break e}if(a!==r){t=Ai(e,t,a,n,r=li(Error(s(424)),t));break e}for(as=lr(t.stateNode.containerInfo.firstChild),ns=t,rs=!0,ss=null,n=ws(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ps(),a===r){t=Hi(e,t,n);break e}vi(e,t,a,n)}t=t.child}return t;case 5:return Zs(t),null===e&&ls(t),a=t.type,r=t.pendingProps,o=null!==e?e.memoizedProps:null,i=r.children,nr(a,r)?i=null:null!==o&&nr(a,o)&&(t.flags|=32),Ii(e,t),vi(e,t,i,n),t.child;case 6:return null===e&&ls(t),null;case 13:return zi(e,t,n);case 4:return Ys(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=vs(t,null,a,n):vi(e,t,a,n),t.child;case 11:return a=t.type,r=t.pendingProps,wi(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 7:return vi(e,t,t.pendingProps,n),t.child;case 8:case 12:return vi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(a=t.type._context,r=t.pendingProps,o=t.memoizedProps,i=r.value,Tr(ks,a._currentValue),a._currentValue=i,null!==o)if(ia(o.value,i)){if(o.children===r.children&&!Rr.current){t=Hi(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var c=o.dependencies;if(null!==c){i=o.child;for(var l=c.firstContext;null!==l;){if(l.context===a){if(1===o.tag){(l=Ps(-1,n&-n)).tag=2;var u=o.updateQueue;if(null!==u){var h=(u=u.shared).pending;null===h?l.next=l:(l.next=h.next,h.next=l),u.pending=l}}o.lanes|=n,null!==(l=o.alternate)&&(l.lanes|=n),Es(o.return,n,t),c.lanes|=n;break}l=l.next}}else if(10===o.tag)i=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(i=o.return))throw Error(s(341));i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),Es(i,n,t),i=o.sibling}else i=o.child;if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===t){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}vi(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,a=t.pendingProps.children,Rs(t,n),a=a(r=As(r)),t.flags|=1,vi(e,t,a,n),t.child;case 14:return r=ni(a=t.type,t.pendingProps),ki(e,t,a,r=ni(a.type,r),n);case 15:return Si(e,t,t.type,t.pendingProps,n);case 17:return a=t.type,r=t.pendingProps,r=t.elementType===a?r:ni(a,r),Gi(e,t),t.tag=1,Fr(a)?(e=!0,Lr(t)):e=!1,Rs(t,n),oi(t,a,r),ci(t,a,r,n),Ei(null,t,a,!0,e,n);case 19:return Ui(e,t,n);case 22:return Ni(e,t,n)}throw Error(s(156,t.tag))};var Kl="function"===typeof reportError?reportError:function(e){console.error(e)};function Xl(e){this._internalRoot=e}function Yl(e){this._internalRoot=e}function Ql(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Jl(){}function $l(e,t,n,a,r){var s=n._reactRootContainer;if(s){var o=s;if("function"===typeof r){var i=r;r=function(){var e=Hl(o);i.call(e)}}Gl(t,o,e,r)}else o=function(e,t,n,a,r){if(r){if("function"===typeof a){var s=a;a=function(){var e=Hl(o);s.call(e)}}var o=Ul(t,a,e,0,null,!1,0,"",Jl);return e._reactRootContainer=o,e[fr]=o.current,Ua(8===e.nodeType?e.parentNode:e),ul(),o}for(;r=e.lastChild;)e.removeChild(r);if("function"===typeof a){var i=a;a=function(){var e=Hl(c);i.call(e)}}var c=Wl(e,0,!1,null,0,!1,0,"",Jl);return e._reactRootContainer=c,e[fr]=c.current,Ua(8===e.nodeType?e.parentNode:e),ul((function(){Gl(t,c,n,a)})),c}(n,t,e,r,a);return Hl(o)}Yl.prototype.render=Xl.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(s(409));Gl(e,t,null,null)},Yl.prototype.unmount=Xl.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;ul((function(){Gl(null,e,null,null)})),t[fr]=null}},Yl.prototype.unstable_scheduleHydration=function(e){if(e){var t=Nt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Dt.length&&0!==t&&t<Dt[n].priority;n++);Dt.splice(n,0,e),0===n&&zt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ht(t.pendingLanes);0!==n&&(bt(t,1|n),al(t,Ze()),0===(6&Ec)&&(Uc=Ze()+500,Ur()))}break;case 13:ul((function(){var t=Os(e,1);if(null!==t){var n=el();nl(t,e,1,n)}})),ql(e,1)}},kt=function(e){if(13===e.tag){var t=Os(e,134217728);if(null!==t)nl(t,e,134217728,el());ql(e,134217728)}},St=function(e){if(13===e.tag){var t=tl(e),n=Os(e,t);if(null!==n)nl(n,e,t,el());ql(e,t)}},Nt=function(){return xt},It=function(e,t){var n=xt;try{return xt=e,t()}finally{xt=n}},ke=function(e,t,n){switch(t){case"input":if(J(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var r=wr(a);if(!r)throw Error(s(90));K(a),J(a,r)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ee=ll,Re=ul;var eu={usingClientEntryPoint:!1,Events:[xr,vr,wr,Te,Ce,ll]},tu={findFiberByHostInstance:br,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nu={bundleType:tu.bundleType,version:tu.version,rendererPackageName:tu.rendererPackageName,rendererConfig:tu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:v.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=je(e))?null:e.stateNode},findFiberByHostInstance:tu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var au=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!au.isDisabled&&au.supportsFiber)try{rt=au.inject(nu),st=au}catch(ue){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=eu,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ql(t))throw Error(s(200));return function(e,t,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==a?null:""+a,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Ql(e))throw Error(s(299));var n=!1,a="",r=Kl;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(r=t.onRecoverableError)),t=Wl(e,1,!1,null,0,n,0,a,r),e[fr]=t.current,Ua(8===e.nodeType?e.parentNode:e),new Xl(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(s(188));throw e=Object.keys(e).join(","),Error(s(268,e))}return e=null===(e=je(t))?null:e.stateNode},t.flushSync=function(e){return ul(e)},t.hydrate=function(e,t,n){if(!Zl(t))throw Error(s(200));return $l(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Ql(e))throw Error(s(405));var a=null!=n&&n.hydratedSources||null,r=!1,o="",i=Kl;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(r=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Ul(t,null,e,1,null!=n?n:null,r,0,o,i),e[fr]=t.current,Ua(e),a)for(e=0;e<a.length;e++)r=(r=(n=a[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,r]:t.mutableSourceEagerHydrationData.push(n,r);return new Yl(t)},t.render=function(e,t,n){if(!Zl(t))throw Error(s(200));return $l(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zl(e))throw Error(s(40));return!!e._reactRootContainer&&(ul((function(){$l(null,null,e,!1,(function(){e._reactRootContainer=null,e[fr]=null}))})),!0)},t.unstable_batchedUpdates=ll,t.unstable_renderSubtreeIntoContainer=function(e,t,n,a){if(!Zl(n))throw Error(s(200));if(null==e||void 0===e._reactInternals)throw Error(s(38));return $l(e,t,n,!1,a)},t.version="18.3.1-next-f1338f8080-20240426"},391:(e,t,n)=>{"use strict";var a=n(950);t.createRoot=a.createRoot,t.hydrateRoot=a.hydrateRoot},950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(730)},153:(e,t,n)=>{"use strict";var a=n(43),r=Symbol.for("react.element"),s=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,i=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,n){var a,s={},l=null,u=null;for(a in void 0!==n&&(l=""+n),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(u=t.ref),t)o.call(t,a)&&!c.hasOwnProperty(a)&&(s[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===s[a]&&(s[a]=t[a]);return{$$typeof:r,type:e,key:l,ref:u,props:s,_owner:i.current}}t.jsx=l,t.jsxs=l},202:(e,t)=>{"use strict";var n=Symbol.for("react.element"),a=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),c=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),h=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function x(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var v=x.prototype=new b;v.constructor=x,m(v,y.prototype),v.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,S={current:null},N={key:!0,ref:!0,__self:!0,__source:!0};function I(e,t,a){var r,s={},o=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)k.call(t,r)&&!N.hasOwnProperty(r)&&(s[r]=t[r]);var c=arguments.length-2;if(1===c)s.children=a;else if(1<c){for(var l=Array(c),u=0;u<c;u++)l[u]=arguments[u+2];s.children=l}if(e&&e.defaultProps)for(r in c=e.defaultProps)void 0===s[r]&&(s[r]=c[r]);return{$$typeof:n,type:e,key:o,ref:i,props:s,_owner:S.current}}function T(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var C=/\/+/g;function E(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function R(e,t,r,s,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var c=!1;if(null===e)c=!0;else switch(i){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case n:case a:c=!0}}if(c)return o=o(c=e),e=""===s?"."+E(c,0):s,w(o)?(r="",null!=e&&(r=e.replace(C,"$&/")+"/"),R(o,t,r,"",(function(e){return e}))):null!=o&&(T(o)&&(o=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,r+(!o.key||c&&c.key===o.key?"":(""+o.key).replace(C,"$&/")+"/")+e)),t.push(o)),1;if(c=0,s=""===s?".":s+":",w(e))for(var l=0;l<e.length;l++){var u=s+E(i=e[l],l);c+=R(i,t,r,u,o)}else if(u=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"===typeof u)for(e=u.call(e),l=0;!(i=e.next()).done;)c+=R(i=i.value,t,r,u=s+E(i,l++),o);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return c}function A(e,t,n){if(null==e)return e;var a=[],r=0;return R(e,a,"","",(function(e){return t.call(n,e,r++)})),a}function _(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var F={current:null},D={transition:null},O={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:D,ReactCurrentOwner:S};function M(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:A,forEach:function(e,t,n){A(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return A(e,(function(){t++})),t},toArray:function(e){return A(e,(function(e){return e}))||[]},only:function(e){if(!T(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=r,t.Profiler=o,t.PureComponent=x,t.StrictMode=s,t.Suspense=u,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,t.act=M,t.cloneElement=function(e,t,a){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=m({},e.props),s=e.key,o=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,i=S.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(l in t)k.call(t,l)&&!N.hasOwnProperty(l)&&(r[l]=void 0===t[l]&&void 0!==c?c[l]:t[l])}var l=arguments.length-2;if(1===l)r.children=a;else if(1<l){c=Array(l);for(var u=0;u<l;u++)c[u]=arguments[u+2];r.children=c}return{$$typeof:n,type:e.type,key:s,ref:o,props:r,_owner:i}},t.createContext=function(e){return(e={$$typeof:c,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=I,t.createFactory=function(e){var t=I.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:_}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=D.transition;D.transition={};try{e()}finally{D.transition=t}},t.unstable_act=M,t.useCallback=function(e,t){return F.current.useCallback(e,t)},t.useContext=function(e){return F.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return F.current.useDeferredValue(e)},t.useEffect=function(e,t){return F.current.useEffect(e,t)},t.useId=function(){return F.current.useId()},t.useImperativeHandle=function(e,t,n){return F.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return F.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return F.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return F.current.useMemo(e,t)},t.useReducer=function(e,t,n){return F.current.useReducer(e,t,n)},t.useRef=function(e){return F.current.useRef(e)},t.useState=function(e){return F.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return F.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return F.current.useTransition()},t.version="18.3.1"},43:(e,t,n)=>{"use strict";e.exports=n(202)},579:(e,t,n)=>{"use strict";e.exports=n(153)},234:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var a=n-1>>>1,r=e[a];if(!(0<s(r,t)))break e;e[a]=t,e[n]=r,n=a}}function a(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var a=0,r=e.length,o=r>>>1;a<o;){var i=2*(a+1)-1,c=e[i],l=i+1,u=e[l];if(0>s(c,n))l<r&&0>s(u,c)?(e[a]=u,e[l]=n,a=l):(e[a]=c,e[i]=n,a=i);else{if(!(l<r&&0>s(u,n)))break e;e[a]=u,e[l]=n,a=l}}}return t}function s(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,c=i.now();t.unstable_now=function(){return i.now()-c}}var l=[],u=[],h=1,d=null,p=3,f=!1,m=!1,g=!1,y="function"===typeof setTimeout?setTimeout:null,b="function"===typeof clearTimeout?clearTimeout:null,x="undefined"!==typeof setImmediate?setImmediate:null;function v(e){for(var t=a(u);null!==t;){if(null===t.callback)r(u);else{if(!(t.startTime<=e))break;r(u),t.sortIndex=t.expirationTime,n(l,t)}t=a(u)}}function w(e){if(g=!1,v(e),!m)if(null!==a(l))m=!0,D(k);else{var t=a(u);null!==t&&O(w,t.startTime-e)}}function k(e,n){m=!1,g&&(g=!1,b(T),T=-1),f=!0;var s=p;try{for(v(n),d=a(l);null!==d&&(!(d.expirationTime>n)||e&&!R());){var o=d.callback;if("function"===typeof o){d.callback=null,p=d.priorityLevel;var i=o(d.expirationTime<=n);n=t.unstable_now(),"function"===typeof i?d.callback=i:d===a(l)&&r(l),v(n)}else r(l);d=a(l)}if(null!==d)var c=!0;else{var h=a(u);null!==h&&O(w,h.startTime-n),c=!1}return c}finally{d=null,p=s,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,N=!1,I=null,T=-1,C=5,E=-1;function R(){return!(t.unstable_now()-E<C)}function A(){if(null!==I){var e=t.unstable_now();E=e;var n=!0;try{n=I(!0,e)}finally{n?S():(N=!1,I=null)}}else N=!1}if("function"===typeof x)S=function(){x(A)};else if("undefined"!==typeof MessageChannel){var _=new MessageChannel,F=_.port2;_.port1.onmessage=A,S=function(){F.postMessage(null)}}else S=function(){y(A,0)};function D(e){I=e,N||(N=!0,S())}function O(e,n){T=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,D(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return a(l)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,r,s){var o=t.unstable_now();switch("object"===typeof s&&null!==s?s="number"===typeof(s=s.delay)&&0<s?o+s:o:s=o,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:h++,callback:r,priorityLevel:e,startTime:s,expirationTime:i=s+i,sortIndex:-1},s>o?(e.sortIndex=s,n(u,e),null===a(l)&&e===a(u)&&(g?(b(T),T=-1):g=!0,O(w,s-o))):(e.sortIndex=i,n(l,e),m||f||(m=!0,D(k))),e},t.unstable_shouldYield=R,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},853:(e,t,n)=>{"use strict";e.exports=n(234)},334:(e,t,n)=>{var a=n(359),r=n(66),s=n(16),o=n(538),i=n(288),c=n(262),l=n(430);l.alea=a,l.xor128=r,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=c,e.exports=l},359:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function c(e,t){var n=new o(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.alea=c}(0,e=n.nmd(e),n.amdD)},262:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.tychei=c}(0,e=n.nmd(e),n.amdD)},66:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xor128=c}(0,e=n.nmd(e),n.amdD)},288:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,o,i=[],c=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,c=Math.max(c,t.length)),r=0,s=-32;s<c;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(o=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(o=o+1640531527|0,r=0==(n=i[127&s]^=a+o)?r+1:0);for(r>=128&&(i[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=i[r+34&127],n=i[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[r]=a^n;e.w=o,e.X=i,e.i=r}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xor4096=c}(0,e=n.nmd(e),n.amdD)},538:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xorshift7=c}(0,e=n.nmd(e),n.amdD)},16:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xorwow=c}(0,e=n.nmd(e),n.amdD)},430:function(e,t,n){var a;!function(r,s,o){var i,c=256,l=o.pow(c,6),u=o.pow(2,52),h=2*u,d=c-1;function p(e,t,n){var a=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(c):(e=new Uint8Array(c),(r.crypto||r.msCrypto).getRandomValues(e)),b(e)}catch(a){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,b(s)]}}():e,3),a),p=new f(a),x=function(){for(var e=p.g(6),t=l,n=0;e<u;)e=(e+n)*c,t*=c,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),s),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,p),e.state=function(){return m(p,{})}),n?(o.random=e,t):e})(x,d,"global"in t?t.global:this==o,t.state)}function f(e){var t,n=e.length,a=this,r=0,s=a.i=a.j=0,o=a.S=[];for(n||(e=[n++]);r<c;)o[r]=r++;for(r=0;r<c;r++)o[r]=o[s=d&s+e[r%n]+(t=o[r])],o[s]=t;(a.g=function(e){for(var t,n=0,r=a.i,s=a.j,o=a.S;e--;)t=o[r=d&r+1],n=n*c+o[d&(o[r]=o[s=d&s+t])+(o[s]=t)];return a.i=r,a.j=s,n})(c)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(g(e[n],t-1))}catch(s){}return a.length?a:"string"==r?e:e+"\0"}function y(e,t){for(var n,a=e+"",r=0;r<a.length;)t[d&r]=d&(n^=19*t[d&r])+a.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(o.random(),s),e.exports){e.exports=p;try{i=n(996)}catch(x){}}else void 0===(a=function(){return p}.call(t,n,t,e))||(e.exports=a)}("undefined"!==typeof self?self:this,[],Math)},817:()=>{},590:()=>{},530:()=>{},108:()=>{},551:()=>{},996:()=>{}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var s=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},(()=>{var e,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__;n.t=function(a,r){if(1&r&&(a=this(a)),8&r)return a;if("object"===typeof a&&a){if(4&r&&a.__esModule)return a;if(16&r&&"function"===typeof a.then)return a}var s=Object.create(null);n.r(s);var o={};e=e||[null,t({}),t([]),t(t)];for(var i=2&r&&a;"object"==typeof i&&!~e.indexOf(i);i=t(i))Object.getOwnPropertyNames(i).forEach((e=>o[e]=()=>a[e]));return o.default=()=>a,n.d(s,o),s}})(),n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,a)=>(n.f[a](e,t),t)),[])),n.u=e=>"static/js/"+e+".0b3dd17d.chunk.js",n.miniCssF=e=>{},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={},t="phone_cam_streamer:";n.l=(a,r,s,o)=>{if(e[a])e[a].push(r);else{var i,c;if(void 0!==s)for(var l=document.getElementsByTagName("script"),u=0;u<l.length;u++){var h=l[u];if(h.getAttribute("src")==a||h.getAttribute("data-webpack")==t+s){i=h;break}}i||(c=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,n.nc&&i.setAttribute("nonce",n.nc),i.setAttribute("data-webpack",t+s),i.src=a),e[a]=[r];var d=(t,n)=>{i.onerror=i.onload=null,clearTimeout(p);var r=e[a];if(delete e[a],i.parentNode&&i.parentNode.removeChild(i),r&&r.forEach((e=>e(n))),t)return t(n)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=d.bind(null,i.onerror),i.onload=d.bind(null,i.onload),c&&document.head.appendChild(i)}}})(),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/robo_magellan/",(()=>{var e={792:0};n.f.j=(t,a)=>{var r=n.o(e,t)?e[t]:void 0;if(0!==r)if(r)a.push(r[2]);else{var s=new Promise(((n,a)=>r=e[t]=[n,a]));a.push(r[2]=s);var o=n.p+n.u(t),i=new Error;n.l(o,(a=>{if(n.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var s=a&&("load"===a.type?"missing":a.type),o=a&&a.target&&a.target.src;i.message="Loading chunk "+t+" failed.\n("+s+": "+o+")",i.name="ChunkLoadError",i.type=s,i.request=o,r[1](i)}}),"chunk-"+t,t)}};var t=(t,a)=>{var r,s,o=a[0],i=a[1],c=a[2],l=0;if(o.some((t=>0!==e[t]))){for(r in i)n.o(i,r)&&(n.m[r]=i[r]);if(c)c(n)}for(t&&t(a);l<o.length;l++)s=o[l],n.o(e,s)&&e[s]&&e[s][0](),e[s]=0},a=self.webpackChunkphone_cam_streamer=self.webpackChunkphone_cam_streamer||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})(),(()=>{"use strict";var e={};n.r(e),n.d(e,{exclude:()=>tt,extract:()=>Ye,parse:()=>Qe,parseUrl:()=>Je,pick:()=>et,stringify:()=>Ze,stringifyUrl:()=>$e});var t={};n.r(t),n.d(t,{CompositeArrayBuffer:()=>Bo,browserFiles:()=>Dc,browserHTTPRequest:()=>Uc,concatenateArrayBuffers:()=>ri,copyModel:()=>Gi,decodeWeights:()=>Yo,decodeWeightsStream:()=>ei,encodeWeights:()=>Xo,fromMemory:()=>qc,fromMemorySync:()=>Kc,getLoadHandlers:()=>mi,getModelArtifactsForJSON:()=>ci,getModelArtifactsForJSONSync:()=>ii,getModelArtifactsInfoForJSON:()=>li,getSaveHandlers:()=>fi,getWeightSpecs:()=>ui,http:()=>Vc,isHTTPScheme:()=>Bc,listModels:()=>Vi,loadWeights:()=>Lc,moveModel:()=>Hi,registerLoadRouter:()=>pi,registerSaveRouter:()=>di,removeModel:()=>Ui,weightsLoaderFactory:()=>zc,withSaveHandler:()=>Xc,withSaveHandlerSync:()=>Yc});var a={};n.r(a),n.d(a,{assertParamsValid:()=>nl,computeFlatOffset:()=>ml,computeOutShape:()=>rl,getNormalizedAxes:()=>cl,isSliceContinous:()=>fl,maskToAxes:()=>al,parseSliceParams:()=>gl,sliceInfo:()=>yl,startForAxis:()=>dl,startIndicesWithElidedDims:()=>ll,stopForAxis:()=>pl,stopIndicesWithElidedDims:()=>ul,stridesForAxis:()=>hl,stridesWithElidedDims:()=>sl});var r={};n.r(r),n.d(r,{conv2d:()=>Ap,depthwiseConv2d:()=>Dp,matMul:()=>Op});var s={};n.r(s),n.d(s,{collectGatherOpShapeInfo:()=>qm,computeOutShape:()=>jm,segOpComputeOptimalWindowSize:()=>Hm});var o={};n.r(o),n.d(o,{ERF_A1:()=>cm,ERF_A2:()=>lm,ERF_A3:()=>um,ERF_A4:()=>hm,ERF_A5:()=>dm,ERF_P:()=>im,PARALLELIZE_THRESHOLD:()=>Qf,RowPartitionType:()=>jf,SELU_SCALE:()=>om,SELU_SCALEALPHA:()=>sm,applyActivation:()=>Ep,assertAndGetBroadcastShape:()=>Sc,assertAxesAreInnerMostDims:()=>Hu,assertParamsConsistent:()=>Gf,assignToTypedArray:()=>bm,axesAreInnerMostDims:()=>Wu,calculateShapes:()=>rp,checkEinsumDimSizes:()=>Cm,checkPadOnDimRoundingMode:()=>jl,combineLocations:()=>Vu,combineRaggedTensorToTensorShapes:()=>qf,complexWithEvenIndex:()=>mm,complexWithOddIndex:()=>gm,computeConv2DInfo:()=>Ol,computeConv3DInfo:()=>Ml,computeDefaultPad:()=>Ll,computeDilation2DInfo:()=>_l,computeOptimalWindowSize:()=>Zf,computeOutAndReduceShapes:()=>Uu,computeOutShape:()=>Hf,computePool2DInfo:()=>Fl,computePool3DInfo:()=>Dl,convertConv2DDataFormat:()=>Hl,decodeEinsumEquation:()=>Im,eitherStridesOrDilationsAreOne:()=>Ul,expandShapeToKeepDim:()=>Gu,exponent:()=>vm,exponents:()=>xm,fromStringArrayToUint8:()=>Xm,fromUint8ToStringArray:()=>Km,getAxesPermutation:()=>ju,getBroadcastDims:()=>wc,getComplexWithIndex:()=>ym,getEinsumComputePath:()=>Em,getEinsumPermutation:()=>Tm,getFusedBiasGradient:()=>Cp,getFusedDyActivation:()=>Tp,getImageCenter:()=>Jf,getInnerMostAxes:()=>Ku,getPermuted:()=>em,getRaggedRank:()=>Xf,getReductionAxes:()=>kc,getReshaped:()=>$f,getReshapedPermuted:()=>tm,getRowPartitionTypesHelper:()=>Kf,getSliceBeginCoords:()=>nm,getSliceSize:()=>am,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Fm,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Dm,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Om,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>zm,getSparseReshapeInputOutputMismatchErrorMessage:()=>Bm,getSparseReshapeInputOutputMultipleErrorMessage:()=>Pm,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Mm,getSparseReshapeNegativeOutputDimErrorMessage:()=>Lm,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Gm,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Wm,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Vm,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Um,getUndoAxesPermutation:()=>qu,isIdentityPermutation:()=>Rm,log:()=>cs,mergeRealAndImagArrays:()=>pm,prepareAndValidate:()=>rm,prepareSplitSize:()=>_m,segment_util:()=>s,shouldFuse:()=>Rp,slice_util:()=>a,splitRealAndImagArrays:()=>fm,stridesOrDilationsArePositive:()=>Gl,tupleValuesAreOne:()=>Vl,upcastType:()=>lo,validateDefaultValueShape:()=>Yf,validateInput:()=>ap,validateUpdateShape:()=>np,warn:()=>is});var i={};n.r(i),n.d(i,{json:()=>gS});var c={};n.r(c),n.d(c,{json:()=>yS});var l={};n.r(l),n.d(l,{json:()=>bS});var u={};n.r(u),n.d(u,{json:()=>xS});var h={};n.r(h),n.d(h,{json:()=>vS});var d={};n.r(d),n.d(d,{json:()=>wS});var p={};n.r(p),n.d(p,{json:()=>kS});var f={};n.r(f),n.d(f,{json:()=>SS});var m={};n.r(m),n.d(m,{json:()=>NS});var g={};n.r(g),n.d(g,{json:()=>IS});var y={};n.r(y),n.d(y,{json:()=>TS});var b={};n.r(b),n.d(b,{json:()=>CS});var x={};n.r(x),n.d(x,{json:()=>ES});var v={};n.r(v),n.d(v,{json:()=>RS});var w={};n.r(w),n.d(w,{json:()=>AS});var k={};n.r(k),n.d(k,{json:()=>_S});var S={};n.r(S),n.d(S,{json:()=>FS});var N={};n.r(N),n.d(N,{json:()=>DS});var I={};n.r(I),n.d(I,{json:()=>OS});var T={};n.r(T),n.d(T,{OP_SCOPE_SUFFIX:()=>Do,abs:()=>vc,acos:()=>xl,acosh:()=>vl,add:()=>$i,addN:()=>wl,all:()=>kl,any:()=>Sl,argMax:()=>Nl,argMin:()=>Il,asin:()=>Tl,asinh:()=>Cl,atan:()=>El,atan2:()=>Rl,atanh:()=>Al,avgPool:()=>Kl,avgPool3d:()=>Xl,basicLSTMCell:()=>eu,batchNorm:()=>nu,batchNorm2d:()=>au,batchNorm3d:()=>ru,batchNorm4d:()=>su,batchToSpaceND:()=>tu,bincount:()=>ou,bitwiseAnd:()=>iu,booleanMaskAsync:()=>mp,broadcastArgs:()=>cu,broadcastTo:()=>lu,buffer:()=>Yi,cast:()=>Qi,ceil:()=>uu,clipByValue:()=>hu,clone:()=>Zi,complex:()=>Mo,concat:()=>Yl,concat1d:()=>du,concat2d:()=>pu,concat3d:()=>fu,concat4d:()=>mu,conv1d:()=>yu,conv2d:()=>gu,conv2dTranspose:()=>xu,conv3d:()=>vu,conv3dTranspose:()=>ku,cos:()=>Su,cosh:()=>Nu,cosineWindow:()=>Sp,cumprod:()=>Iu,cumsum:()=>Tu,denseBincount:()=>Cu,depthToSpace:()=>Eu,depthwiseConv2d:()=>Ru,diag:()=>Au,dilation2d:()=>_u,div:()=>tc,divNoNan:()=>Ou,dot:()=>Mu,dropout:()=>wp,einsum:()=>Lu,elu:()=>zu,enclosingPowerOfTwo:()=>kp,ensureShape:()=>Pu,equal:()=>Fu,erf:()=>Bu,euclideanNorm:()=>$u,exp:()=>eh,expandDims:()=>th,expm1:()=>nh,eye:()=>rh,fft:()=>Wd,fill:()=>mc,floor:()=>sh,floorDiv:()=>ec,fused:()=>r,gather:()=>oh,gatherND:()=>vp,greater:()=>ih,greaterEqual:()=>ch,ifft:()=>Vd,imag:()=>lh,image:()=>Mf,inTopKAsync:()=>Np,irfft:()=>Ud,isFinite:()=>uh,isInf:()=>hh,isNaN:()=>dh,leakyRelu:()=>ph,less:()=>fh,lessEqual:()=>mh,linalg:()=>Lf,linspace:()=>gh,localResponseNormalization:()=>yh,log:()=>bh,log1p:()=>xh,logSigmoid:()=>kh,logSoftmax:()=>Sh,logSumExp:()=>Nh,logicalAnd:()=>Ih,logicalNot:()=>Th,logicalOr:()=>Ch,logicalXor:()=>Eh,losses:()=>zf,lowerBound:()=>_h,matMul:()=>Ql,max:()=>Xu,maxPool:()=>Fh,maxPool3d:()=>Dh,maxPoolWithArgmax:()=>Oh,maximum:()=>Nc,mean:()=>Mh,meshgrid:()=>Ph,min:()=>Yu,minimum:()=>Bh,mirrorPad:()=>Wh,mod:()=>Vh,moments:()=>Uh,movingAverage:()=>yp,mul:()=>nc,multiRNNCell:()=>Gh,multinomial:()=>Hh,neg:()=>vh,norm:()=>Ju,notEqual:()=>jh,oneHot:()=>qh,ones:()=>zh,onesLike:()=>Kh,op:()=>Oo,outerProduct:()=>Xh,pad:()=>Yh,pad1d:()=>Qh,pad2d:()=>Zh,pad3d:()=>Jh,pad4d:()=>$h,pool:()=>td,pow:()=>yc,prelu:()=>nd,print:()=>Ji,prod:()=>ad,raggedGather:()=>rd,raggedRange:()=>sd,raggedTensorToTensor:()=>od,rand:()=>id,randomGamma:()=>dd,randomNormal:()=>pd,randomStandardNormal:()=>fd,randomUniform:()=>md,randomUniformInt:()=>gd,range:()=>yd,real:()=>bd,reciprocal:()=>xd,relu:()=>vd,relu6:()=>wd,reshape:()=>ql,reverse:()=>kd,reverse1d:()=>Sd,reverse2d:()=>Nd,reverse3d:()=>Id,reverse4d:()=>Td,rfft:()=>Hd,round:()=>Cd,rsqrt:()=>Ed,scalar:()=>ic,scatterND:()=>bp,searchSorted:()=>Ah,selu:()=>Rd,separableConv2d:()=>Ad,setdiff1dAsync:()=>_d,sigmoid:()=>Zl,sign:()=>Fd,signal:()=>Of,sin:()=>Dd,sinh:()=>Od,slice:()=>Jl,slice1d:()=>Md,slice2d:()=>Ld,slice3d:()=>zd,slice4d:()=>Pd,softmax:()=>Bd,softplus:()=>wh,spaceToBatchND:()=>ed,sparse:()=>Pf,sparseToDense:()=>xp,spectral:()=>Df,split:()=>Gd,sqrt:()=>ac,square:()=>rc,squaredDifference:()=>jd,squeeze:()=>qd,stack:()=>Kd,step:()=>Xd,stridedSlice:()=>Yd,string:()=>Bf,sub:()=>bc,sum:()=>Qu,tan:()=>Qd,tanh:()=>$l,tensor:()=>zo,tensor1d:()=>Zd,tensor2d:()=>Jd,tensor3d:()=>Qc,tensor4d:()=>$d,tensor5d:()=>ep,tensor6d:()=>tp,tensorScatterUpdate:()=>sp,tile:()=>ah,topk:()=>op,transpose:()=>gp,truncatedNormal:()=>ip,unique:()=>cp,unsortedSegmentSum:()=>lp,unstack:()=>up,upperBound:()=>hp,variable:()=>dp,where:()=>Du,whereAsync:()=>fp,zeros:()=>Lh,zerosLike:()=>sc});var C={};n.r(C),n.d(C,{mx:()=>MI,XI:()=>CT,Nk:()=>ET,f6:()=>AT,ct:()=>AI,YG:()=>OT,hH:()=>WT,z3:()=>NC,sG:()=>MC,uM:()=>WC,vS:()=>aE,qB:()=>hE,GG:()=>pE,lg:()=>bE,rq:()=>mE,cu:()=>_E,WR:()=>EE,GE:()=>OE,px:()=>LE,jC:()=>ZE,He:()=>eR,hE:()=>uR,BF:()=>gC,Dk:()=>vR,cl:()=>ER,_B:()=>VR,ub:()=>qR,_f:()=>YR,Ku:()=>tA,qy:()=>aA,Zy:()=>mA,bu:()=>bA,zv:()=>wI,dH:()=>HI,HS:()=>ST,yH:()=>PA,l3:()=>WA,z9:()=>UA,x6:()=>KA,_m:()=>e_,eW:()=>s_,GK:()=>c_,SP:()=>h_,yr:()=>p_,dl:()=>qC,Dw:()=>x_,xT:()=>S_,_X:()=>ZI,wz:()=>A_});var E,R=n(43),A=n.t(R,2),_=n(391);function F(){return F=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},F.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(E||(E={}));const D="popstate";function O(e,t){if(!1===e||null===e||"undefined"===typeof e)throw new Error(t)}function M(e,t){if(!e){"undefined"!==typeof console&&console.warn(t);try{throw new Error(t)}catch(n){}}}function L(e,t){return{usr:e.state,key:e.key,idx:t}}function z(e,t,n,a){return void 0===n&&(n=null),F({pathname:"string"===typeof e?e:e.pathname,search:"",hash:""},"string"===typeof t?B(t):t,{state:n,key:t&&t.key||a||Math.random().toString(36).substr(2,8)})}function P(e){let{pathname:t="/",search:n="",hash:a=""}=e;return n&&"?"!==n&&(t+="?"===n.charAt(0)?n:"?"+n),a&&"#"!==a&&(t+="#"===a.charAt(0)?a:"#"+a),t}function B(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let a=e.indexOf("?");a>=0&&(t.search=e.substr(a),e=e.substr(0,a)),e&&(t.pathname=e)}return t}function W(e,t,n,a){void 0===a&&(a={});let{window:r=document.defaultView,v5Compat:s=!1}=a,o=r.history,i=E.Pop,c=null,l=u();function u(){return(o.state||{idx:null}).idx}function h(){i=E.Pop;let e=u(),t=null==e?null:e-l;l=e,c&&c({action:i,location:p.location,delta:t})}function d(e){let t="null"!==r.location.origin?r.location.origin:r.location.href,n="string"===typeof e?e:P(e);return n=n.replace(/ $/,"%20"),O(t,"No window.location.(origin|href) available to create URL for href: "+n),new URL(n,t)}null==l&&(l=0,o.replaceState(F({},o.state,{idx:l}),""));let p={get action(){return i},get location(){return e(r,o)},listen(e){if(c)throw new Error("A history only accepts one active listener");return r.addEventListener(D,h),c=e,()=>{r.removeEventListener(D,h),c=null}},createHref:e=>t(r,e),createURL:d,encodeLocation(e){let t=d(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(e,t){i=E.Push;let a=z(p.location,e,t);n&&n(a,e),l=u()+1;let h=L(a,l),d=p.createHref(a);try{o.pushState(h,"",d)}catch(f){if(f instanceof DOMException&&"DataCloneError"===f.name)throw f;r.location.assign(d)}s&&c&&c({action:i,location:p.location,delta:1})},replace:function(e,t){i=E.Replace;let a=z(p.location,e,t);n&&n(a,e),l=u();let r=L(a,l),h=p.createHref(a);o.replaceState(r,"",h),s&&c&&c({action:i,location:p.location,delta:0})},go:e=>o.go(e)};return p}var V;!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(V||(V={}));new Set(["lazy","caseSensitive","path","id","index","children"]);function U(e,t,n){return void 0===n&&(n="/"),G(e,t,n,!1)}function G(e,t,n,a){let r=ae(("string"===typeof t?B(t):t).pathname||"/",n);if(null==r)return null;let s=H(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){let n=e.length===t.length&&e.slice(0,-1).every(((e,n)=>e===t[n]));return n?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(s);let o=null;for(let i=0;null==o&&i<s.length;++i){let e=ne(r);o=ee(s[i],e,a)}return o}function H(e,t,n,a){void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===a&&(a="");let r=(e,r,s)=>{let o={relativePath:void 0===s?e.path||"":s,caseSensitive:!0===e.caseSensitive,childrenIndex:r,route:e};o.relativePath.startsWith("/")&&(O(o.relativePath.startsWith(a),'Absolute route path "'+o.relativePath+'" nested under path "'+a+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),o.relativePath=o.relativePath.slice(a.length));let i=re([a,o.relativePath]),c=n.concat(o);e.children&&e.children.length>0&&(O(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+i+'".'),H(e.children,t,c,i)),(null!=e.path||e.index)&&t.push({path:i,score:$(i,e.index),routesMeta:c})};return e.forEach(((e,t)=>{var n;if(""!==e.path&&null!=(n=e.path)&&n.includes("?"))for(let a of j(e.path))r(e,t,a);else r(e,t)})),t}function j(e){let t=e.split("/");if(0===t.length)return[];let[n,...a]=t,r=n.endsWith("?"),s=n.replace(/\?$/,"");if(0===a.length)return r?[s,""]:[s];let o=j(a.join("/")),i=[];return i.push(...o.map((e=>""===e?s:[s,e].join("/")))),r&&i.push(...o),i.map((t=>e.startsWith("/")&&""===t?"/":t))}const q=/^:[\w-]+$/,K=3,X=2,Y=1,Q=10,Z=-2,J=e=>"*"===e;function $(e,t){let n=e.split("/"),a=n.length;return n.some(J)&&(a+=Z),t&&(a+=X),n.filter((e=>!J(e))).reduce(((e,t)=>e+(q.test(t)?K:""===t?Y:Q)),a)}function ee(e,t,n){void 0===n&&(n=!1);let{routesMeta:a}=e,r={},s="/",o=[];for(let i=0;i<a.length;++i){let e=a[i],c=i===a.length-1,l="/"===s?t:t.slice(s.length)||"/",u=te({path:e.relativePath,caseSensitive:e.caseSensitive,end:c},l),h=e.route;if(!u&&c&&n&&!a[a.length-1].route.index&&(u=te({path:e.relativePath,caseSensitive:e.caseSensitive,end:!1},l)),!u)return null;Object.assign(r,u.params),o.push({params:r,pathname:re([s,u.pathname]),pathnameBase:se(re([s,u.pathnameBase])),route:h}),"/"!==u.pathnameBase&&(s=re([s,u.pathnameBase]))}return o}function te(e,t){"string"===typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[n,a]=function(e,t,n){void 0===t&&(t=!1);void 0===n&&(n=!0);M("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');let a=[],r="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,((e,t,n)=>(a.push({paramName:t,isOptional:null!=n}),n?"/?([^\\/]+)?":"/([^\\/]+)")));e.endsWith("*")?(a.push({paramName:"*"}),r+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?r+="\\/*$":""!==e&&"/"!==e&&(r+="(?:(?=\\/|$))");let s=new RegExp(r,t?void 0:"i");return[s,a]}(e.path,e.caseSensitive,e.end),r=t.match(n);if(!r)return null;let s=r[0],o=s.replace(/(.)\/+$/,"$1"),i=r.slice(1);return{params:a.reduce(((e,t,n)=>{let{paramName:a,isOptional:r}=t;if("*"===a){let e=i[n]||"";o=s.slice(0,s.length-e.length).replace(/(.)\/+$/,"$1")}const c=i[n];return e[a]=r&&!c?void 0:(c||"").replace(/%2F/g,"/"),e}),{}),pathname:s,pathnameBase:o,pattern:e}}function ne(e){try{return e.split("/").map((e=>decodeURIComponent(e).replace(/\//g,"%2F"))).join("/")}catch(t){return M(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+t+")."),e}}function ae(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,a=e.charAt(n);return a&&"/"!==a?null:e.slice(n)||"/"}const re=e=>e.join("/").replace(/\/\/+/g,"/"),se=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/");Error;function oe(e){return null!=e&&"number"===typeof e.status&&"string"===typeof e.statusText&&"boolean"===typeof e.internal&&"data"in e}const ie=["post","put","patch","delete"],ce=(new Set(ie),["get",...ie]);new Set(ce),new Set([301,302,303,307,308]),new Set([307,308]);Symbol("deferred");function le(){return le=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},le.apply(this,arguments)}const ue=R.createContext(null);const he=R.createContext(null);const de=R.createContext(null);const pe=R.createContext(null);const fe=R.createContext({outlet:null,matches:[],isDataRoute:!1});const me=R.createContext(null);function ge(){return null!=R.useContext(pe)}function ye(){return ge()||O(!1),R.useContext(pe).location}function be(e,t,n,a){ge()||O(!1);let{navigator:r}=R.useContext(de),{matches:s}=R.useContext(fe),o=s[s.length-1],i=o?o.params:{},c=(o&&o.pathname,o?o.pathnameBase:"/");o&&o.route;let l,u=ye();if(t){var h;let e="string"===typeof t?B(t):t;"/"===c||(null==(h=e.pathname)?void 0:h.startsWith(c))||O(!1),l=e}else l=u;let d=l.pathname||"/",p=d;if("/"!==c){let e=c.replace(/^\//,"").split("/");p="/"+d.replace(/^\//,"").split("/").slice(e.length).join("/")}let f=U(e,{pathname:p});let m=Se(f&&f.map((e=>Object.assign({},e,{params:Object.assign({},i,e.params),pathname:re([c,r.encodeLocation?r.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?c:re([c,r.encodeLocation?r.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])}))),s,n,a);return t&&m?R.createElement(pe.Provider,{value:{location:le({pathname:"/",search:"",hash:"",state:null,key:"default"},l),navigationType:E.Pop}},m):m}function xe(){let e=function(){var e;let t=R.useContext(me),n=Ie(Ne.UseRouteError),a=Te(Ne.UseRouteError);if(void 0!==t)return t;return null==(e=n.errors)?void 0:e[a]}(),t=oe(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),n=e instanceof Error?e.stack:null,a="rgba(200,200,200, 0.5)",r={padding:"0.5rem",backgroundColor:a};return R.createElement(R.Fragment,null,R.createElement("h2",null,"Unexpected Application Error!"),R.createElement("h3",{style:{fontStyle:"italic"}},t),n?R.createElement("pre",{style:r},n):null,null)}const ve=R.createElement(xe,null);class we extends R.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location||"idle"!==t.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:void 0!==e.error?e.error:t.error,location:t.location,revalidation:e.revalidation||t.revalidation}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return void 0!==this.state.error?R.createElement(fe.Provider,{value:this.props.routeContext},R.createElement(me.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function ke(e){let{routeContext:t,match:n,children:a}=e,r=R.useContext(ue);return r&&r.static&&r.staticContext&&(n.route.errorElement||n.route.ErrorBoundary)&&(r.staticContext._deepestRenderedBoundaryId=n.route.id),R.createElement(fe.Provider,{value:t},a)}function Se(e,t,n,a){var r;if(void 0===t&&(t=[]),void 0===n&&(n=null),void 0===a&&(a=null),null==e){var s;if(null==(s=n)||!s.errors)return null;e=n.matches}let o=e,i=null==(r=n)?void 0:r.errors;if(null!=i){let e=o.findIndex((e=>e.route.id&&void 0!==(null==i?void 0:i[e.route.id])));e>=0||O(!1),o=o.slice(0,Math.min(o.length,e+1))}let c=!1,l=-1;if(n&&a&&a.v7_partialHydration)for(let u=0;u<o.length;u++){let e=o[u];if((e.route.HydrateFallback||e.route.hydrateFallbackElement)&&(l=u),e.route.id){let{loaderData:t,errors:a}=n,r=e.route.loader&&void 0===t[e.route.id]&&(!a||void 0===a[e.route.id]);if(e.route.lazy||r){c=!0,o=l>=0?o.slice(0,l+1):[o[0]];break}}}return o.reduceRight(((e,a,r)=>{let s,u=!1,h=null,d=null;var p;n&&(s=i&&a.route.id?i[a.route.id]:void 0,h=a.route.errorElement||ve,c&&(l<0&&0===r?(p="route-fallback",!1||Ce[p]||(Ce[p]=!0),u=!0,d=null):l===r&&(u=!0,d=a.route.hydrateFallbackElement||null)));let f=t.concat(o.slice(0,r+1)),m=()=>{let t;return t=s?h:u?d:a.route.Component?R.createElement(a.route.Component,null):a.route.element?a.route.element:e,R.createElement(ke,{match:a,routeContext:{outlet:e,matches:f,isDataRoute:null!=n},children:t})};return n&&(a.route.ErrorBoundary||a.route.errorElement||0===r)?R.createElement(we,{location:n.location,revalidation:n.revalidation,component:h,error:s,children:m(),routeContext:{outlet:null,matches:f,isDataRoute:!0}}):m()}),null)}var Ne=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(Ne||{});function Ie(e){let t=R.useContext(he);return t||O(!1),t}function Te(e){let t=function(e){let t=R.useContext(fe);return t||O(!1),t}(),n=t.matches[t.matches.length-1];return n.route.id||O(!1),n.route.id}const Ce={};A.startTransition;function Ee(e){O(!1)}function Re(e){let{basename:t="/",children:n=null,location:a,navigationType:r=E.Pop,navigator:s,static:o=!1,future:i}=e;ge()&&O(!1);let c=t.replace(/^\/*/,"/"),l=R.useMemo((()=>({basename:c,navigator:s,static:o,future:le({v7_relativeSplatPath:!1},i)})),[c,i,s,o]);"string"===typeof a&&(a=B(a));let{pathname:u="/",search:h="",hash:d="",state:p=null,key:f="default"}=a,m=R.useMemo((()=>{let e=ae(u,c);return null==e?null:{location:{pathname:e,search:h,hash:d,state:p,key:f},navigationType:r}}),[c,u,h,d,p,f,r]);return null==m?null:R.createElement(de.Provider,{value:l},R.createElement(pe.Provider,{children:n,value:m}))}function Ae(e){let{children:t,location:n}=e;return be(_e(t),n)}new Promise((()=>{}));R.Component;function _e(e,t){void 0===t&&(t=[]);let n=[];return R.Children.forEach(e,((e,a)=>{if(!R.isValidElement(e))return;let r=[...t,a];if(e.type===R.Fragment)return void n.push.apply(n,_e(e.props.children,r));e.type!==Ee&&O(!1),e.props.index&&e.props.children&&O(!1);let s={id:e.props.id||r.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,Component:e.props.Component,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,ErrorBoundary:e.props.ErrorBoundary,hasErrorBoundary:null!=e.props.ErrorBoundary||null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle,lazy:e.props.lazy};e.props.children&&(s.children=_e(e.props.children,r)),n.push(s)})),n}const Fe="%[a-f0-9]{2}",De=new RegExp("("+Fe+")|([^%]+?)","gi"),Oe=new RegExp("("+Fe+")+","gi");function Me(e,t){try{return[decodeURIComponent(e.join(""))]}catch{}if(1===e.length)return e;t=t||1;const n=e.slice(0,t),a=e.slice(t);return Array.prototype.concat.call([],Me(n),Me(a))}function Le(e){try{return decodeURIComponent(e)}catch{let t=e.match(De)||[];for(let n=1;n<t.length;n++)t=(e=Me(t,n).join("")).match(De)||[];return e}}function ze(e){if("string"!==typeof e)throw new TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof e+"`");try{return decodeURIComponent(e)}catch{return function(e){const t={"%FE%FF":"\ufffd\ufffd","%FF%FE":"\ufffd\ufffd"};let n=Oe.exec(e);for(;n;){try{t[n[0]]=decodeURIComponent(n[0])}catch{const e=Le(n[0]);e!==n[0]&&(t[n[0]]=e)}n=Oe.exec(e)}t["%C2"]="\ufffd";const a=Object.keys(t);for(const r of a)e=e.replace(new RegExp(r,"g"),t[r]);return e}(e)}}function Pe(e,t){if("string"!==typeof e||"string"!==typeof t)throw new TypeError("Expected the arguments to be of type `string`");if(""===e||""===t)return[];const n=e.indexOf(t);return-1===n?[]:[e.slice(0,n),e.slice(n+t.length)]}function Be(e,t){const n={};if(Array.isArray(t))for(const a of t){const t=Object.getOwnPropertyDescriptor(e,a);null!==t&&void 0!==t&&t.enumerable&&Object.defineProperty(n,a,t)}else for(const a of Reflect.ownKeys(e)){const r=Object.getOwnPropertyDescriptor(e,a);if(r.enumerable){t(a,e[a],e)&&Object.defineProperty(n,a,r)}}return n}const We=e=>null===e||void 0===e,Ve=e=>encodeURIComponent(e).replaceAll(/[!'()*]/g,(e=>"%".concat(e.charCodeAt(0).toString(16).toUpperCase()))),Ue=Symbol("encodeFragmentIdentifier");function Ge(e){if("string"!==typeof e||1!==e.length)throw new TypeError("arrayFormatSeparator must be single character string")}function He(e,t){return t.encode?t.strict?Ve(e):encodeURIComponent(e):e}function je(e,t){return t.decode?ze(e):e}function qe(e){return Array.isArray(e)?e.sort():"object"===typeof e?qe(Object.keys(e)).sort(((e,t)=>Number(e)-Number(t))).map((t=>e[t])):e}function Ke(e){const t=e.indexOf("#");return-1!==t&&(e=e.slice(0,t)),e}function Xe(e,t){return t.parseNumbers&&!Number.isNaN(Number(e))&&"string"===typeof e&&""!==e.trim()?e=Number(e):!t.parseBooleans||null===e||"true"!==e.toLowerCase()&&"false"!==e.toLowerCase()||(e="true"===e.toLowerCase()),e}function Ye(e){const t=(e=Ke(e)).indexOf("?");return-1===t?"":e.slice(t+1)}function Qe(e,t){Ge((t={decode:!0,sort:!0,arrayFormat:"none",arrayFormatSeparator:",",parseNumbers:!1,parseBooleans:!1,...t}).arrayFormatSeparator);const n=function(e){let t;switch(e.arrayFormat){case"index":return(e,n,a)=>{t=/\[(\d*)]$/.exec(e),e=e.replace(/\[\d*]$/,""),t?(void 0===a[e]&&(a[e]={}),a[e][t[1]]=n):a[e]=n};case"bracket":return(e,n,a)=>{t=/(\[])$/.exec(e),e=e.replace(/\[]$/,""),t?void 0!==a[e]?a[e]=[...a[e],n]:a[e]=[n]:a[e]=n};case"colon-list-separator":return(e,n,a)=>{t=/(:list)$/.exec(e),e=e.replace(/:list$/,""),t?void 0!==a[e]?a[e]=[...a[e],n]:a[e]=[n]:a[e]=n};case"comma":case"separator":return(t,n,a)=>{const r="string"===typeof n&&n.includes(e.arrayFormatSeparator),s="string"===typeof n&&!r&&je(n,e).includes(e.arrayFormatSeparator);n=s?je(n,e):n;const o=r||s?n.split(e.arrayFormatSeparator).map((t=>je(t,e))):null===n?n:je(n,e);a[t]=o};case"bracket-separator":return(t,n,a)=>{const r=/(\[])$/.test(t);if(t=t.replace(/\[]$/,""),!r)return void(a[t]=n?je(n,e):n);const s=null===n?[]:n.split(e.arrayFormatSeparator).map((t=>je(t,e)));void 0!==a[t]?a[t]=[...a[t],...s]:a[t]=s};default:return(e,t,n)=>{void 0!==n[e]?n[e]=[...[n[e]].flat(),t]:n[e]=t}}}(t),a=Object.create(null);if("string"!==typeof e)return a;if(!(e=e.trim().replace(/^[?#&]/,"")))return a;for(const r of e.split("&")){if(""===r)continue;const e=t.decode?r.replaceAll("+"," "):r;let[s,o]=Pe(e,"=");void 0===s&&(s=e),o=void 0===o?null:["comma","separator","bracket-separator"].includes(t.arrayFormat)?o:je(o,t),n(je(s,t),o,a)}for(const[r,s]of Object.entries(a))if("object"===typeof s&&null!==s)for(const[e,n]of Object.entries(s))s[e]=Xe(n,t);else a[r]=Xe(s,t);return!1===t.sort?a:(!0===t.sort?Object.keys(a).sort():Object.keys(a).sort(t.sort)).reduce(((e,t)=>{const n=a[t];return e[t]=Boolean(n)&&"object"===typeof n&&!Array.isArray(n)?qe(n):n,e}),Object.create(null))}function Ze(e,t){if(!e)return"";Ge((t={encode:!0,strict:!0,arrayFormat:"none",arrayFormatSeparator:",",...t}).arrayFormatSeparator);const n=n=>t.skipNull&&We(e[n])||t.skipEmptyString&&""===e[n],a=function(e){switch(e.arrayFormat){case"index":return t=>(n,a)=>{const r=n.length;return void 0===a||e.skipNull&&null===a||e.skipEmptyString&&""===a?n:null===a?[...n,[He(t,e),"[",r,"]"].join("")]:[...n,[He(t,e),"[",He(r,e),"]=",He(a,e)].join("")]};case"bracket":return t=>(n,a)=>void 0===a||e.skipNull&&null===a||e.skipEmptyString&&""===a?n:null===a?[...n,[He(t,e),"[]"].join("")]:[...n,[He(t,e),"[]=",He(a,e)].join("")];case"colon-list-separator":return t=>(n,a)=>void 0===a||e.skipNull&&null===a||e.skipEmptyString&&""===a?n:null===a?[...n,[He(t,e),":list="].join("")]:[...n,[He(t,e),":list=",He(a,e)].join("")];case"comma":case"separator":case"bracket-separator":{const t="bracket-separator"===e.arrayFormat?"[]=":"=";return n=>(a,r)=>void 0===r||e.skipNull&&null===r||e.skipEmptyString&&""===r?a:(r=null===r?"":r,0===a.length?[[He(n,e),t,He(r,e)].join("")]:[[a,He(r,e)].join(e.arrayFormatSeparator)])}default:return t=>(n,a)=>void 0===a||e.skipNull&&null===a||e.skipEmptyString&&""===a?n:null===a?[...n,He(t,e)]:[...n,[He(t,e),"=",He(a,e)].join("")]}}(t),r={};for(const[o,i]of Object.entries(e))n(o)||(r[o]=i);const s=Object.keys(r);return!1!==t.sort&&s.sort(t.sort),s.map((n=>{const r=e[n];return void 0===r?"":null===r?He(n,t):Array.isArray(r)?0===r.length&&"bracket-separator"===t.arrayFormat?He(n,t)+"[]":r.reduce(a(n),[]).join("&"):He(n,t)+"="+He(r,t)})).filter((e=>e.length>0)).join("&")}function Je(e,t){var n,a;t={decode:!0,...t};let[r,s]=Pe(e,"#");return void 0===r&&(r=e),{url:null!==(n=null===(a=r)||void 0===a||null===(a=a.split("?"))||void 0===a?void 0:a[0])&&void 0!==n?n:"",query:Qe(Ye(e),t),...t&&t.parseFragmentIdentifier&&s?{fragmentIdentifier:je(s,t)}:{}}}function $e(e,t){t={encode:!0,strict:!0,[Ue]:!0,...t};const n=Ke(e.url).split("?")[0]||"";let a=Ze({...Qe(Ye(e.url),{sort:!1}),...e.query},t);a&&(a="?".concat(a));let r=function(e){let t="";const n=e.indexOf("#");return-1!==n&&(t=e.slice(n)),t}(e.url);if("string"===typeof e.fragmentIdentifier){const a=new URL(n);a.hash=e.fragmentIdentifier,r=t[Ue]?a.hash:"#".concat(e.fragmentIdentifier)}return"".concat(n).concat(a).concat(r)}function et(e,t,n){n={parseFragmentIdentifier:!0,[Ue]:!1,...n};const{url:a,query:r,fragmentIdentifier:s}=Je(e,n);return $e({url:a,query:Be(r,t),fragmentIdentifier:s},n)}function tt(e,t,n){return et(e,Array.isArray(t)?e=>!t.includes(e):(e,n)=>!t(e,n),n)}const nt=e;class at{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class rt{refCount(e){return st("refCount")}incRef(e){return st("incRef")}timerAvailable(){return!0}time(e){return st("time")}read(e){return st("read")}readSync(e){return st("readSync")}readToGPU(e,t){return st("readToGPU")}numDataIds(){return st("numDataIds")}disposeData(e,t){return st("disposeData")}write(e,t,n){return st("write")}move(e,t,n,a,r){return st("move")}createTensorFromGPUData(e,t,n){return st("createTensorFromGPUData")}memory(){return st("memory")}floatPrecision(){return st("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return st("dispose")}}function st(e){throw new Error("'".concat(e,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}function ot(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,lt(e,t,n)}function it(e,t,n){return Math.max(e,Math.min(t,n))}function ct(e){return e%2===0?e:e+1}function lt(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function ut(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function ht(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";ut(ft(e,t),(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}function dt(e){ut(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function pt(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ft(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function mt(e){return e%1===0}function gt(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function yt(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function bt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise(((r,s)=>{let o=0;const i=()=>{if(e())return void r();o++;const c=t(o);null!=n&&o>=n?s():null!=a?a(i,c):setTimeout(i,c)};i()}))}function xt(e,t){let n=1,a=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(s));a=s}else if(e[s]<0)throw Error("Shapes can not be < 0. Found ".concat(e[s]," at dim ").concat(s));if(-1===a){if(t>0&&t!==n)throw Error("Size(".concat(t,") must match the product of shape ").concat(e));return e}if(0===n)throw Error("Cannot infer the missing size in [".concat(e,"] when ")+"there are 0 elements");if(t%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(t," / ").concat(n));const r=e.slice();return r[a]=t/n,r}function vt(e,t){const n=t.length;return ut((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(e))),ut(e.every((e=>mt(e))),(()=>"All values in axis param must be integers but "+"got axis ".concat(e))),e.map((e=>e<0?n+e:e))}function wt(e,t){const n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||r?null:vt(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=s){if(s[o]===i&&1!==e[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(e[i],"' is not 1"));(null==s[o]||s[o]>i)&&1===e[i]&&(n.push(e[i]),a.push(i)),s[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),a.push(i))}return{newShape:n,keptDims:a}}function kt(e,t){return St(e,t)}function St(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type ".concat(e));n=new Array(t)}return n}function Nt(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function It(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype ".concat(e))}function Tt(e){return"string"===typeof e||e instanceof String}function Ct(e){return"number"===typeof e}function Et(e){return Array.isArray(e)?Et(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Ct(e)?"float32":Tt(e)?"string":"boolean"===typeof e?"bool":"float32"}function Rt(e){return!!(e&&e.constructor&&e.call&&e.apply)}function At(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function _t(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function Ft(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=new Array;if(1===t.length){const s=t[0]*(a?2:1);for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<s;t++)r[t]=Ft(e+t*i,o,n,a)}return r}function Dt(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error("[".concat(e,"] does not match the input size ").concat(t.length).concat(n?" for a complex tensor":"","."));return Ft(0,e,t,n)}function Ot(e,t){const n=Mt(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function Mt(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type ".concat(t))}function Lt(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Dt(e,new Float32Array(n));if("int32"===t)return Dt(e,new Int32Array(n));if("bool"===t)return Dt(e,new Uint8Array(n));throw new Error("Unknown data type ".concat(t))}function zt(e){e.forEach((t=>{ut(Number.isInteger(t)&&t>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(e,"].")))}))}function Pt(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function Bt(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function Wt(e){return e&&e.then&&"function"===typeof e.then}const Vt="tfjsflags";class Ut{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Gt,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Ht().getBool("IS_TEST")||Ht().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,"."))),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Ht().getBool("IS_TEST")||Ht().getBool("PROD")||console.warn("Setting feature override from URL ".concat(e,": ").concat(t,".")),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Wt(t))throw new Error("Flag ".concat(e," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag ".concat(e," as it has not been registered."));this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '".concat(e,"': no evaluation function found."));return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(Vt in e){e[Vt].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:t}(0,n)}))}}}function Gt(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,a[0],a[1]),a.join("=")})),t}function Ht(){return qt}let jt,qt=null;function Kt(){if(null==jt){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}jt=e}return jt}function Xt(e,t){const n=function(){const e=Kt();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}const Yt="Abs",Qt="Acos",Zt="Acosh",Jt="Add",$t="AddN",en="All",tn="Any",nn="ArgMax",an="ArgMin",rn="Asin",sn="Asinh",on="Atan",cn="Atanh",ln="Atan2",un="AvgPool",hn="AvgPoolGrad",dn="AvgPool3D",pn="AvgPool3DGrad",fn="BatchMatMul",mn="BatchToSpaceND",gn="Bincount",yn="BitwiseAnd",bn="BroadcastArgs",xn="Cast",vn="Ceil",wn="ClipByValue",kn="Complex",Sn="ComplexAbs",Nn="Concat",In="Conv2D",Tn="Conv2DBackpropFilter",Cn="Conv2DBackpropInput",En="Conv3D",Rn="Conv3DBackpropFilterV2",An="Conv3DBackpropInputV2",_n="Cos",Fn="Cosh",Dn="Cumprod",On="Cumsum",Mn="CropAndResize",Ln="DenseBincount",zn="DepthToSpace",Pn="DepthwiseConv2dNative",Bn="DepthwiseConv2dNativeBackpropFilter",Wn="DepthwiseConv2dNativeBackpropInput",Vn="Diag",Un="Dilation2D",Gn="Dilation2DBackpropInput",Hn="Dilation2DBackpropFilter",jn="Draw",qn="RealDiv",Kn="Einsum",Xn="Elu",Yn="EluGrad",Qn="Erf",Zn="Equal",Jn="Exp",$n="ExpandDims",ea="Expm1",ta="FFT",na="Fill",aa="FlipLeftRight",ra="Floor",sa="FloorDiv",oa="FusedBatchNorm",ia="GatherV2",ca="GatherNd",la="Greater",ua="GreaterEqual",ha="Identity",da="IFFT",pa="Imag",fa="IsFinite",ma="IsInf",ga="IsNan",ya="LeakyRelu",ba="Less",xa="LessEqual",va="LinSpace",wa="Log",ka="Log1p",Sa="LogicalAnd",Na="LogicalNot",Ia="LogicalOr",Ta="LRN",Ca="LRNGrad",Ea="Max",Ra="Maximum",Aa="MaxPool",_a="MaxPoolGrad",Fa="MaxPool3D",Da="MaxPool3DGrad",Oa="MaxPoolWithArgmax",Ma="Mean",La="Min",za="Minimum",Pa="MirrorPad",Ba="Mod",Wa="Multinomial",Va="Multiply",Ua="Neg",Ga="NotEqual",Ha="NonMaxSuppressionV3",ja="NonMaxSuppressionV4",qa="NonMaxSuppressionV5",Ka="OnesLike",Xa="OneHot",Ya="Pack",Qa="PadV2",Za="Pow",Ja="Prelu",$a="Prod",er="RaggedGather",tr="RaggedRange",nr="RaggedTensorToTensor",ar="Range",rr="Real",sr="Reciprocal",or="Relu",ir="Reshape",cr="ResizeNearestNeighbor",lr="ResizeNearestNeighborGrad",ur="ResizeBilinear",hr="ResizeBilinearGrad",dr="Relu6",pr="Reverse",fr="Round",mr="Rsqrt",gr="ScatterNd",yr="TensorScatterUpdate",br="SearchSorted",xr="Select",vr="Selu",wr="Slice",kr="Sin",Sr="Sinh",Nr="Sign",Ir="Sigmoid",Tr="Softplus",Cr="Sqrt",Er="Sum",Rr="SpaceToBatchND",Ar="SplitV",_r="Softmax",Fr="SparseFillEmptyRows",Dr="SparseReshape",Or="SparseSegmentMean",Mr="SparseSegmentSum",Lr="SparseToDense",zr="SquaredDifference",Pr="Square",Br="StaticRegexReplace",Wr="StridedSlice",Vr="StringNGrams",Ur="StringSplit",Gr="StringToHashBucketFast",Hr="Sub",jr="Tan",qr="Tanh",Kr="Tile",Xr="TopK",Yr="Transform",Qr="Transpose",Zr="Unique",Jr="Unpack",$r="UnsortedSegmentSum",es="ZerosLike",ts="Step",ns="FromPixels",as="RotateWithOffset",rs="_FusedMatMul",ss="FusedConv2D",os="FusedDepthwiseConv2D";function is(){Ht().getBool("IS_TEST")||Ht().getBool("PROD")||console.warn(...arguments)}function cs(){Ht().getBool("IS_TEST")||Ht().getBool("PROD")||console.log(...arguments)}const ls=Xt("kernelRegistry",(()=>new Map)),us=Xt("gradRegistry",(()=>new Map));function hs(e,t){const n=gs(e,t);return ls.get(n)}function ds(e){return us.get(e)}function ps(e){const t=ls.entries(),n=[];for(;;){const{done:a,value:r}=t.next();if(a)break;const[s,o]=r,[i]=s.split("_");i===e&&n.push(o)}return n}function fs(e){const{kernelName:t,backendName:n}=e,a=gs(t,n);ls.has(a)&&is("The kernel '".concat(t,"' for backend ")+"'".concat(n,"' is already registered")),ls.set(a,e)}function ms(e){const{kernelName:t}=e;us.has(t)&&Ht().getBool("DEBUG")&&is("Overriding the gradient for '".concat(t,"'")),us.set(t,e)}function gs(e,t){return"".concat(t,"_").concat(e)}function ys(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var bs=n(353);const xs=n.n(bs)()||bs;function vs(e){return xs.fromString(e,!0,16)}const ws=vs("c3a5c85c97cb3127"),ks=vs("b492b66fbe98f273"),Ss=vs("9ae16a3b2f90404f");function Ns(e){return e.xor(e.shru(47))}function Is(e,t,n){const a=e.slice(t,t+n);return xs.fromBytes(Array.from(a),!0,!0)}function Ts(e,t){return Is(e,t,8)}function Cs(e,t){return Is(e,t,4)}function Es(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Rs(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:vs("9ddfea08eb382d69"),a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function As(e,t,n,a){return function(e,t,n,a,r,s){r=r.add(e),s=Es(s.add(r).add(a),21);const o=r;return r=(r=r.add(t)).add(n),s=s.add(Es(r,44)),[r.add(a),s.add(o)]}(Ts(e,t),Ts(e,t+8),Ts(e,t+16),Ts(e,t+24),n,a)}function _s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=xs.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=Ss.add(2*t),a=Ts(e,0).add(Ss),r=Ts(e,t-8);return Rs(Es(r,37).mul(n).add(a),Es(a,25).add(r).mul(n),n)}if(t>=4){const n=Ss.add(2*t);return Rs(Cs(e,0).shl(3).add(t),Cs(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return Ns(Ss.mul(n).xor(ws.mul(a))).mul(Ss)}return Ss}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Ss.add(2*t),a=Ts(e,0).mul(ks),r=Ts(e,8),s=Ts(e,t-8).mul(n),o=Ts(e,t-16).mul(Ss);return Rs(Es(a.add(r),43).add(Es(s,30)).add(o),a.add(Es(r.add(Ss),18)).add(s),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Ss.add(2*t),a=Ts(e,0).mul(Ss),r=Ts(e,8),s=Ts(e,t-8).mul(n),o=Ts(e,t-16).mul(Ss),i=Es(a.add(r),43).add(Es(s,30)).add(o),c=Rs(i,a.add(Es(r.add(Ss),18)).add(s),n),l=Ts(e,16).mul(n),u=Ts(e,24),h=i.add(Ts(e,t-32)).mul(n),d=c.add(Ts(e,t-24)).mul(n);return Rs(Es(l.add(u),43).add(Es(h,30)).add(d),l.add(Es(u.add(a),18)).add(h),n)}(e,t);let a=n,r=n.mul(ks).add(113),s=Ns(r.mul(Ss).add(113)).mul(Ss),o=[xs.UZERO,xs.UZERO],i=[xs.UZERO,xs.UZERO];a=a.mul(Ss).add(Ts(e,0));let c=0;const l=64*(t-1>>6),u=l+(t-1&63)-63;do{a=Es(a.add(r).add(o[0]).add(Ts(e,c+8)),37).mul(ks),r=Es(r.add(o[1]).add(Ts(e,c+48)),42).mul(ks),a=a.xor(i[1]),r=r.add(o[0]).add(Ts(e,c+40)),s=Es(s.add(i[0]),33).mul(ks),o=As(e,c,o[1].mul(ks),a.add(i[0])),i=As(e,c+32,s.add(i[1]),r.add(Ts(e,c+16))),[s,a]=[a,s],c+=64}while(c!==l);const h=ks.add(s.and(255).shl(1));return c=u,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),a=Es(a.add(r).add(o[0]).add(Ts(e,c+8)),37).mul(h),r=Es(r.add(o[1]).add(Ts(e,c+48)),42).mul(h),a=a.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(Ts(e,c+40))),s=Es(s.add(i[0]),33).mul(h),o=As(e,c,o[1].mul(h),a.add(i[0])),i=As(e,c+32,s.add(i[1]),r.add(Ts(e,c+16))),[s,a]=[a,s],Rs(Rs(o[0],i[0],h).add(Ns(r).mul(ws)).add(s),Rs(o[1],i[1],h).add(a),h)}function Fs(e,t){return"string"===t?Ms(e):Ds([e],t)}function Ds(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Ps(e)),Ht().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(t," being uploaded contains ").concat(a,"."))}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type ".concat(t))}function Os(){return Ht().platform.now()}function Ms(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Ht().platform.encode(e,t)}function Ls(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Ht().platform.decode(e,t)}function zs(e){return null!=Ht().platform.isTypedArray?Ht().platform.isTypedArray(e):ys(e)}function Ps(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||Wt(e)||null==e||zs(e)&&n)t.push(e);else if(Array.isArray(e)||zs(e))for(let a=0;a<e.length;++a)Ps(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)Ps(e[r],t,n)}return t}class Bs{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Vs)}profileKernel(e,t,n){let a;const r=()=>{a=n()};let s;const o=Os();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(const e of a)e.dataSync();s=Promise.resolve({kernelMs:Os()-o})}if(Ht().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<a.length;i++){const t=a[i];t.data().then((n=>{Ws(n,t.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),a,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function Ws(e,t,n){if("float32"!==t)return!1;for(let a=0;a<e.length;a++){const t=e[a];if(isNaN(t)||!isFinite(t))return console.warn("Found ".concat(t," in the result of '").concat(n,"'")),!0}return!1}class Vs{logKernelProfile(e,t,n,a,r,s){const o="number"===typeof a?yt("".concat(a,"ms"),9):a.error,i=yt(e,25),c=t.rank,l=t.size,u=yt(t.shape.toString(),14);let h="";for(const d in r){const e=r[d];if(null!=e){const n=e.shape||t.shape,a=n.length;h+="".concat(d,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(c,"D ").concat(u,"\t%c").concat(l,"\t%c").concat(h,"\t%c").concat(s),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const Us=20,Gs=3,Hs=7;function js(e,t,n,a){const r=_t(t),s=function(e,t,n,a){const r=pt(t),s=a[a.length-1],o=new Array(s).fill(0),i=t.length,c="complex64"===n?Ys(e):e;if(i>1)for(let l=0;l<r/s;l++){const e=l*s;for(let t=0;t<s;t++)o[t]=Math.max(o[t],qs(c[e+t],0,n).length)}return o}(e,t,n,r),o=t.length,i=Xs(e,t,n,r,s),c=["Tensor"];return a&&(c.push("  dtype: ".concat(n)),c.push("  rank: ".concat(o)),c.push("  shape: [".concat(t,"]")),c.push("  values:")),c.push(i.map((e=>"    "+e)).join("\n")),c.join("\n")}function qs(e,t,n){let a;return a=Array.isArray(e)?"".concat(parseFloat(e[0].toFixed(Hs))," + ")+"".concat(parseFloat(e[1].toFixed(Hs)),"j"):Tt(e)?"'".concat(e,"'"):"bool"===n?Ks(e):parseFloat(e.toFixed(Hs)).toString(),yt(a,t)}function Ks(e){return 0===e?"false":"true"}function Xs(e,t,n,a,r){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const o="complex64"===n?2:1,i=t[0],c=t.length;if(0===c){if("complex64"===n){return[qs(Ys(e)[0],0,n)]}return"bool"===n?[Ks(e[0])]:[e[0].toString()]}if(1===c){if(i>Us){const t=Gs*o;let a=Array.from(e.slice(0,t)),s=Array.from(e.slice((i-Gs)*o,i*o));return"complex64"===n&&(a=Ys(a),s=Ys(s)),["["+a.map(((e,t)=>qs(e,r[t],n))).join(", ")+", ..., "+s.map(((e,t)=>qs(e,r[i-Gs+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Ys(e):Array.from(e)).map(((e,t)=>qs(e,r[t],n))).join(", ")+"]"]}const l=t.slice(1),u=a.slice(1),h=a[0]*o,d=[];if(i>Us){for(let t=0;t<Gs;t++){const a=t*h,s=a+h;d.push(...Xs(e.slice(a,s),l,n,u,r,!1))}d.push("...");for(let t=i-Gs;t<i;t++){const a=t*h,s=a+h;d.push(...Xs(e.slice(a,s),l,n,u,r,t===i-1))}}else for(let m=0;m<i;m++){const t=m*h,a=t+h;d.push(...Xs(e.slice(t,a),l,n,u,r,m===i-1))}const p=2===c?",":"";d[0]="["+(i>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=",\n";for(let m=2;m<c;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function Ys(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Qs{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=pt(e),null!=n){const e=n.length;ut(e===this.size,(()=>"Length of values '".concat(e,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||St(t,this.size),this.strides=_t(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),ut(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const r=this.locToIndex(n);this.values[r]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let a=0;for(const s of t){if(s<0||s>=this.shape[a]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}a++}let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=this.strides[s]*t[s];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Zs().makeTensor(this.values,this.shape,this.dtype)}}let Zs=null,Js=null,$s=null;class eo{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=pt(e),this.strides=_t(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Js.buffer(this.shape,this.dtype,e)}bufferSync(){return Js.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Dt(this.shape,e,"complex64"===this.dtype)}arraySync(){return Dt(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Zs().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>Ls(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Zs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Zs().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Ls(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Zs().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Zs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Js.print(this,e)}clone(){return this.throwIfDisposed(),Js.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return js(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Js.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),Zs().makeVariable(this,e,t,n)}}function to(){return Xt("Tensor",(()=>eo))}Object.defineProperty(eo,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),to();class no extends eo{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(e.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!ft(e.shape,this.shape))throw new Error("shape of the new value (".concat(e.shape,") and ")+"previous value (".concat(this.shape,") must match"));Zs().disposeTensor(this),this.dataId=e.dataId,Zs().incRef(this,null)}dispose(){Zs().disposeVariable(this),this.isDisposedInternal=!0}}var ao,ro,so,oo,io;Object.defineProperty(no,Symbol.hasInstance,{value:e=>e instanceof eo&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ao||(ao={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ro||(ro={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(so||(so={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(oo||(oo={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(io||(io={}));const co={float32:oo,int32:ro,bool:so,complex64:io};function lo(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast ".concat(e," with ").concat(t))}return co[e][t]}function uo(e){return lo(e,"int32")}function ho(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function po(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function fo(e,t){if(e.dtype===t.dtype)return[e,t];const n=lo(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function mo(e,t){return t.some((t=>t.id===e.id))}function go(e){const t=[];return yo(e,t,new Set),t}function yo(e,t,n){if(null==e)return;if(e instanceof eo)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!==typeof a)return;var a;const r=e;for(const s in r){const e=r[s];n.has(e)||(n.add(e),yo(e,t,n))}}function bo(e){return null!=e.kernelName}class xo{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class vo{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new xo}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error("The highest priority backend '".concat(e,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(is("".concat(e," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error("Backend name '".concat(e,"' not found in registry"));if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Bs(this.backendInstance),!0}setupRegisteredKernels(){ps(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){ps(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error("Cannot initialize backend ".concat(e,", no registration found."));try{const n=t.factory();if(!n||n instanceof rt||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,is("Initialization of backend ".concat(e," failed")),is(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return is("Initialization of backend ".concat(e," failed")),is(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error("".concat(e," backend not found in registry"));this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(a){throw t(),a}}nextTensorId(){return vo.nextTensorId++}nextVariableId(){return vo.nextVariableId++}clone(e){const t=ko.runKernel(ha,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return ko.runKernel(xn,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=hs(e,this.backendName)))throw new Error("Kernel '".concat(e,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-t-r-s;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(e,"'"))}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;let o,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=bo(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(bo(e)){const{kernelName:t,inputs:r,attrs:s}=e;null==this.backendName&&this.backend;const c=hs(t,this.backendName);ut(null!=c,(()=>"Cannot find registered kernel '".concat(t,"' for backend '").concat(this.backendName,"'"))),o=()=>{const e=this.backend.numDataIds();i=c.kernelFunc({inputs:r,attrs:s,backend:this.backend});const o=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const l=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){const e=this.getTensorsForGradient(t,r,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,r=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();i=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:l,attrs:u}=e,h=bo(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(c,l,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=o()})),a&&this.addTapeNode(c,l,t,h,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const a=ds(e);if(null!=a){const e=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(ut(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>r[t]));return s.concat(o)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&Tt(e[0])&&(r=e.map((e=>Ms(e))));const s=a.write(r,t,n),o=new eo(t,n,s,this.nextTensorId());if(this.trackTensor(o,a),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,a){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:r}=e,s=new eo(a,r,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const r=new no(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error("Variable with name ".concat(r.name," was already registered"));return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*It(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof no||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*It(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=ds(e);null!=i&&(a=i.gradFunc),null!=a&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=Mt(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=go(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(ut(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));ut(r instanceof eo,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const a={},r={};for(let c=0;c<t.length;c++)a[t[c].id]=!0;for(let c=0;c<e.length;c++){const n=e[c],s=n.inputs;for(const e in s){const o=s[e];let i=!1;for(let e=0;e<t.length;e++)if(a[o.id]){n.outputs.forEach((e=>a[e.id]=!0)),i=!0,r[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let c=e.length-1;c>=0;c--){const t=e[c],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let c=0;c<e.length;c++){const t=e[c];if(r[t.id]&&o[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];a[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,r);if(!a&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=Ot(pt(e),"float32");return ko.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){const s=t[r],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(s.kernelName,"."));const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error("Cannot backprop through input ".concat(t,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const r=n((()=>i[t]()));if("float32"!==r.dtype)throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"".concat(t," must have 'float32' dtype, but has '").concat(r.dtype,"'"));const o=s.inputs[t];if(!ft(r.shape,o.shape))throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"'".concat(t,"' has shape '").concat(r.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==e[o.id])e[o.id]=r;else{const t=e[o.id];e[o.id]=a(t,r),t.dispose()}}}}(e,s,(e=>this.tidy(e)),So);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){var t=this;return ut(Rt(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];let s;ut(a.every((e=>e instanceof eo)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};a.forEach(((e,t)=>{o[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(s=e(...a,n),ut(s.value instanceof eo,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),ut(Rt(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),backwardsFunc:(e,t)=>{const n=s.gradFunc(e,t),r=Array.isArray(n)?n:[n];ut(r.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),ut(r.every((e=>e instanceof eo)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return r.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Os(),n=await this.backend.time(e);return n.wallMs=Os()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new xo;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function wo(){const e=Kt();if(null==e._tfengine){const t=new Ut(e);e._tfengine=new vo(t)}var t;return t=e._tfengine.ENV,qt=t,Zs=()=>e._tfengine,e._tfengine}vo.nextTensorId=0,vo.nextVariableId=0;const ko=wo();function So(e,t){const n={a:e,b:t};return ko.runKernel(Jt,n)}let No;function Io(e){if(void 0!==No)return No;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function To(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}const Co=Ht();function Eo(e,t){let n=e;if(zs(e))return"string"===t?[]:[e.length];if(ho(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(po(e))return[e.buffer.size/(null==t?4:It(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||zs(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&Ht().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ro(e,a,[]),a}function Ro(e,t,n){if(n=n||[],!Array.isArray(e)&&!zs(e))return void ut(0===t.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(t[0]," elements")));ut(t.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements"))),ut(e.length===t[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(t[0]," ")+"elements, but has ".concat(e.length," elements")));const a=t.slice(1);for(let r=0;r<e.length;++r)Ro(e[r],a,n.concat(r))}function Ao(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(e," tensor, but got ").concat(t," tensor"))}}function _o(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof to())return Ao(a,e.dtype,t,n),e;let r=Et(e);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),Ao(a,r,t,n),null==e||!zs(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const a=null==e?"null":e.constructor.name;throw new Error("Argument '".concat(t,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const s=Eo(e,r);zs(e)||Array.isArray(e)||(e=[e]);const o="string"!==r?Ds(e,r):Ps(e,[],!0);return ko.makeTensor(o,s,r)}function Fo(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error("Argument ".concat(t," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return e.map(((e,r)=>_o(e,"".concat(t,"[").concat(r,"]"),n,a)))}Co.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Co.registerFlag("IS_BROWSER",(()=>To())),Co.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),Co.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Co.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Co.registerFlag("PROD",(()=>!1)),Co.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Co.getBool("DEBUG"))),Co.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Co.registerFlag("IS_TEST",(()=>!1)),Co.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Co.getBool("DEBUG"))),Co.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Co.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Co.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const Do="__op";function Oo(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(t.length," keys."));let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Do;const r=function(){ko.startScope(n);try{const e=a(...arguments);return Wt(e)&&console.error("Cannot return a Promise inside of tidy."),ko.endScope(e),e}catch(e){throw ko.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const Mo=Oo({complex_:function(e,t){const n=_o(e,"real","complex"),a=_o(t,"imag","complex");ht(n.shape,a.shape,"real and imag shapes, ".concat(n.shape," and ").concat(a.shape,", ")+"must match in call to tf.complex().");const r={real:n,imag:a};return ko.runKernel(kn,r)}});function Lo(e,t,n,a){if(null==a)a=Et(e);else if("complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(po(e)||ho(e)){if("float32"!==a&&"int32"!==a)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(a,"."));return ko.backend.createTensorFromGPUData(e,t||n,a)}if(!zs(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){zt(t);const e=pt(t),a=pt(n);ut(e===a,(()=>"Based on the provided shape, [".concat(t,"], the tensor should have ")+"".concat(e," values but has ").concat(a)));for(let r=0;r<n.length;++r){const e=n[r],a=r!==n.length-1||e!==pt(t.slice(r));ut(n[r]===t[r]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(t,"). ")))}}return zs(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==a?Ds(e,a):Ps(e,[],!0),ko.makeTensor(e,t,a)}function zo(e,t,n){return Lo(e,t,Eo(e,n),n)}const Po={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Bo{static join(e){return new Bo(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>zs(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error("Could not find start shard for byte ".concat(e));const a=new ArrayBuffer(t-e),r=new Uint8Array(a);let s=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],a=e+s-n.start,i=s,c=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,a,c-a);if(r.set(l,i),s+=l.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const r=Math.floor((a-n)/2)+n,s=t(e[r]);if(0===s)return r;s<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function Wo(){return ko}function Vo(){return ko.memory()}function Uo(e,t){return ko.tidy(e,t)}function Go(e){go(e).forEach((e=>e.dispose()))}function Ho(e){return ko.keep(e)}function jo(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return ko.registerBackend(e,t,n)}function qo(){return ko.backend}$s=function(e){Ht().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const Ko=4;async function Xo(e,t){const n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<r.length;++s){const o=r[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(o,"': ").concat(i.dtype));const c={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+Ko*t.length,a=new Uint8Array(n);let r=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);a.set(n,r),r+=Ko,a.set(e,r),r+=e.length}e(a)}));a.push(e)}else a.push(i.data());null!=t&&(c.group=t),n.push(c)}return{data:ti(await Promise.all(a)),specs:n}}function Yo(e,t){const n=new Bo(e),a={};let r=0;for(const s of t){const e=Qo(s,((e,t)=>n.slice(r+e,r+t)));a[s.name]=Jo(s,n.slice(r,r+e)),r+=e}return a}function Qo(e,t){const n=pt(e.shape);let a;if("quantization"in e){const t=e.quantization;a=Po[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=Ko+new Uint32Array(t(e,e+Ko))[0];return e}a=Po[e.dtype]}return n*a}async function Zo(e,t){const n=pt(e.shape);let a;if("quantization"in e){const t=e.quantization;a=Po[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=Ko+new Uint32Array(await t(e,e+Ko))[0];return e}a=Po[e.dtype]}return n*a}function Jo(e,t){const n=e.name,a=e.dtype,r=e.shape,s=pt(r);let o,i=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error("Weight ".concat(e.name," with quantization ").concat(r.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==r.dtype)throw new Error("Weight ".concat(e.name," has unknown ")+"quantization dtype ".concat(r.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==a)throw new Error("Weight ".concat(e.name," is quantized with ").concat(r.dtype," ")+"which only supports weights of type float32 not ".concat(a,"."))}const c=Po[r.dtype],l="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===a)if("uint8"===r.dtype||"uint16"===r.dtype){o=new Float32Array(l.length);for(let e=0;e<l.length;e++){const t=l[e];o[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error("Unsupported quantization type ".concat(r.dtype," ")+"for weight type float32.");{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let o=0;o<a.length;o++){const r=a[o],i=e[n[r>>10]+(1023&r)]+t[r>>10];s[o]=i}return new Float32Array(r)}}();o=e(l)}}else{if("int32"!==a)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(a));if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error("Unsupported quantization type ".concat(r.dtype," ")+"for weight type int32.");o=new Int32Array(l.length);for(let e=0;e<l.length;e++){const t=l[e];o[e]=Math.round(t*r.scale+r.min)}}i+=s*c}else if("string"===a){const n=pt(e.shape);o=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(i,i+Ko))[0];i+=Ko;const n=new Uint8Array(t.slice(i,i+e));o.push(n),i+=e}}else{const e=Po[a];if("float32"===a)o=new Float32Array(t);else if("int32"===a)o=new Int32Array(t);else{if("bool"!==a){if("complex64"===a){o=new Float32Array(t);const e=new Float32Array(o.length/2),n=new Float32Array(o.length/2);for(let t=0;t<e.length;t++)e[t]=o[2*t],n[t]=o[2*t+1];const a=zo(e,r,"float32"),s=zo(n,r,"float32"),i=Mo(a,s);return a.dispose(),s.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(a))}o=new Uint8Array(t)}i+=s*e}return zo(o,r,a)}async function $o(e,t,n){let a=new Uint8Array(t);for(;a.byteLength<n;){const{done:t,value:r}=await e.read();if(t&&null==r){const e=n-a.byteLength;throw new Error("Reader is done but ".concat(e," bytes are still expected"))}const s=new Uint8Array(a.length+r.byteLength);s.set(a,0),s.set(new Uint8Array(r),a.length),a=s}return a.buffer}async function ei(e,t){const n={},a=e.getReader();let r=new ArrayBuffer(0);for(const s of t){const e=await Zo(s,(async(e,t)=>(r=await $o(a,r,t),r.slice(e,t))));r=await $o(a,r,e);const t=r.slice(0,e);r=r.slice(e);const o=Jo(s,t);if(n[s.name]=o,"webgpu"===ko.backendName){const e=qo();"uploadToGPU"in e&&pt(o.shape)>=Ht().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(o.dataId)}}return n}function ti(e){if(null===e)throw new Error("Invalid input value: ".concat(JSON.stringify(e)));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(e.constructor.name))}));const a=new Uint8Array(t);let r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}const ni="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function ai(e){return ni?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function ri(e){return Bo.join(e)}function si(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function oi(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function ii(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function ci(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),ii(e,n,a)}function li(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:ai(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:ai(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Bo(e.weightData).byteLength}}function ui(e){const t=[];for(const n of e)t.push(...n.weights);return t}class hi{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==hi.instance&&(hi.instance=new hi),hi.instance}static registerSaveRouter(e){hi.getInstance().saveRouters.push(e)}static registerLoadRouter(e){hi.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return hi.getHandlers(e,"save")}static getLoadHandlers(e,t){return hi.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?hi.getInstance().loadRouters:hi.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&a.push(r)})),a}}const di=e=>hi.registerSaveRouter(e),pi=e=>hi.registerLoadRouter(e),fi=e=>hi.getSaveHandlers(e),mi=(e,t)=>hi.getLoadHandlers(e,t),gi="tensorflowjs",yi="models_store",bi="model_info_store";function xi(){if(!Ht().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function vi(e){const t=e.result;t.createObjectStore(yi,{keyPath:"modelPath"}),t.createObjectStore(bi,{keyPath:"modelPath"})}class wi{constructor(e){if(this.indexedDB=xi(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(gi,1);a.onupgradeneeded=()=>vi(a),a.onsuccess=()=>{const r=a.result;if(null==t){const t=r.transaction(yi,"readonly"),a=t.objectStore(yi).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=Bo.join(t.weightData);const a=li(t),o=r.transaction(bi,"readwrite");let i,c,l=o.objectStore(bi);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(s){return n(s)}i.onsuccess=()=>{c=r.transaction(yi,"readwrite");const i=c.objectStore(yi);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(s){return n(s)}u.onsuccess=()=>e({modelArtifactsInfo:a}),u.onerror=e=>{l=o.objectStore(bi);const t=l.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(u.error)),t.onerror=e=>(r.close(),n(u.error))}},i.onerror=e=>(r.close(),n(i.error)),o.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}}wi.URL_SCHEME="indexeddb://";const ki=e=>{return Ht().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(wi.URL_SCHEME)?(t=e.slice(wi.URL_SCHEME.length),new wi(t)):null;var t};hi.registerSaveRouter(ki),hi.registerLoadRouter(ki);class Si{constructor(){this.indexedDB=xi()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(gi,1);n.onupgradeneeded=()=>vi(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(bi,"readonly"),s=r.objectStore(bi).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(wi.URL_SCHEME)?t.slice(wi.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(gi,1);a.onupgradeneeded=()=>vi(a),a.onsuccess=()=>{const r=a.result,s=r.transaction(bi,"readwrite"),o=s.objectStore(bi),i=o.get(e);let c;i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error("Cannot find model with path '".concat(e,"' ")+"in IndexedDB."));{const a=o.delete(e),s=()=>{c=r.transaction(yi,"readwrite");const a=c.objectStore(yi).delete(e);a.onsuccess=()=>t(i.result.modelArtifactsInfo),a.onerror=e=>n(i.error)};a.onsuccess=s,a.onerror=e=>(s(),r.close(),n(i.error))}},i.onerror=e=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}},a.onerror=e=>n(a.error)}))}}const Ni="/",Ii="tensorflowjs_models",Ti="info",Ci="model_topology",Ei="weight_specs",Ri="weight_data",Ai="model_metadata";function _i(e){return{info:[Ii,e,Ti].join(Ni),topology:[Ii,e,Ci].join(Ni),weightSpecs:[Ii,e,Ei].join(Ni),weightData:[Ii,e,Ri].join(Ni),modelMetadata:[Ii,e,Ai].join(Ni)}}function Fi(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Di(e){const t=e.split(Ni);if(t.length<3)throw new Error("Invalid key format: ".concat(e));return t.slice(1,t.length-1).join(Ni)}class Oi{constructor(e){if(!Ht().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=_i(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=li(e),s=Bo.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,function(e){if(ni)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}(s));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw Fi(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(r.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(r.weightSpecsBytes,", ")+"weightDataBytes=".concat(r.weightDataBytes,"."))}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");t.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return t.weightData=function(e){if(ni){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}(s),t}}Oi.URL_SCHEME="localstorage://";const Mi=e=>{return Ht().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Oi.URL_SCHEME)?(t=e.slice(Oi.URL_SCHEME.length),new Oi(t)):null;var t};hi.registerSaveRouter(Mi),hi.registerLoadRouter(Mi);class Li{constructor(){ut(Ht().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),ut("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Ii+Ni,n=Ni+Ti;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(t)&&r.endsWith(n)){e[Di(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){var t;const n=_i(e=(t=e).startsWith(Oi.URL_SCHEME)?t.slice(Oi.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(e,"'"));const a=JSON.parse(this.LS.getItem(n.info));return Fi(n),a}}const zi="://";class Pi{constructor(){this.managers={}}static getInstance(){return null==Pi.instance&&(Pi.instance=new Pi),Pi.instance}static registerManager(e,t){ut(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(zi)&&(e=e.slice(0,e.indexOf(zi))),ut(e.length>0,(()=>"scheme must not be an empty string."));const n=Pi.getInstance();ut(null==n.managers[e],(()=>"A model store manager is already registered for scheme '".concat(e,"'."))),n.managers[e]=t}static getManager(e){const t=Pi.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '".concat(e,"'"));return t}static getSchemes(){return Object.keys(Pi.getInstance().managers)}}function Bi(e){if(-1===e.indexOf(zi))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(Pi.getSchemes().join(",")));return{scheme:e.split(zi)[0],path:e.split(zi)[1]}}async function Wi(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];ut(e!==t,(()=>"Old path and new path are the same: '".concat(e,"'")));const a=hi.getLoadHandlers(e);ut(a.length>0,(()=>"Copying failed because no load handler is found for source URL ".concat(e,"."))),ut(a.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(e,".")));const r=a[0],s=hi.getSaveHandlers(t);ut(s.length>0,(()=>"Copying failed because no save handler is found for destination "+"URL ".concat(t,"."))),ut(s.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(t,".")));const o=s[0],i=Bi(e).scheme,c=Bi(e).path,l=i===Bi(e).scheme,u=await r.load();n&&l&&await Pi.getManager(i).removeModel(c);const h=await o.save(u);return n&&!l&&await Pi.getManager(i).removeModel(c),h.modelArtifactsInfo}async function Vi(){const e=Pi.getSchemes(),t={};for(const n of e){const e=await Pi.getManager(n).listModels();for(const a in e){t[n+zi+a]=e[a]}}return t}async function Ui(e){const t=Bi(e);return Pi.getManager(t.scheme).removeModel(t.path)}async function Gi(e,t){return Wi(e,t,!1)}async function Hi(e,t){return Wi(e,t,!0)}class ji{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got ".concat(t));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&Ht().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return ys(e)}}if(Ht().get("IS_BROWSER")){Ht().setPlatform("browser",new ji);try{Pi.registerManager(Oi.URL_SCHEME,new Li)}catch(PV){}try{Pi.registerManager(wi.URL_SCHEME,new Si)}catch(PV){}}const qi=()=>n(817);let Ki;class Xi{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ht().global.fetch?Ht().global.fetch(e,t):(null==Ki&&(Ki=qi()),Ki(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(t));return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}function Yi(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",zt(e),new Qs(e,t,n)}Ht().get("IS_NODE")&&!Ht().get("IS_BROWSER")&&Ht().setPlatform("node",new Xi);const Qi=Oo({cast_:function(e,t){const n=_o(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error("Failed to cast to unknown dtype ".concat(t));if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},r={dtype:t};return ko.runKernel(xn,a,r)}});const Zi=Oo({clone_:function(e){const t={x:_o(e,"x","clone","string_or_numeric")};return ko.runKernel(ha,t)}});function Ji(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}wo();Js={buffer:Yi,cast:Qi,clone:Zi,print:Ji};const $i=Oo({add_:function(e,t){let n=_o(e,"a","add"),a=_o(t,"b","add");[n,a]=fo(n,a);const r={a:n,b:a};return ko.runKernel(Jt,r)}});const ec=Oo({floorDiv_:function(e,t){let n=_o(e,"a","floorDiv"),a=_o(t,"b","floorDiv");[n,a]=fo(n,a);const r={a:n,b:a};return ko.runKernel(sa,r)}});const tc=Oo({div_:function(e,t){let n=_o(e,"a","div"),a=_o(t,"b","div");if([n,a]=fo(n,a),"int32"===n.dtype&&"int32"===a.dtype)return ec(n,a);const r={a:n,b:a};return ko.runKernel(qn,r,{})}});const nc=Oo({mul_:function(e,t){let n=_o(e,"a","mul"),a=_o(t,"b","mul");[n,a]=fo(n,a);const r={a:n,b:a};return ko.runKernel(Va,r)}});const ac=Oo({sqrt_:function(e){const t={x:_o(e,"x","sqrt","float32")};return ko.runKernel(Cr,t)}});const rc=Oo({square_:function(e){const t=_o(e,"x","square");return ko.runKernel("Square",{x:t},{})}});const sc=Oo({zerosLike_:function(e){const t={x:_o(e,"x","zerosLike")};return ko.runKernel(es,t)}});function oc(e){return ko.customGrad(e)}function ic(e,t){if((zs(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&zs(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Lo(e,[],[],t)}const cc=new Map,lc=new Map;class uc{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class hc{constructor(){this.classNameMap={}}static getMap(){return null==hc.instance&&(hc.instance=new hc),hc.instance}static register(e){hc.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function dc(e,t,n){ut(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),ut("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),ut(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const a=t+">"+n;return hc.register(e),cc.set(a,e),lc.set(e,a),e}class pc extends uc{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return Go(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){ut(Rt(e),(()=>"The f passed in variableGrads(f) must be a function")),ut(null==t||Array.isArray(t)&&t.every((e=>e instanceof no)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in ko.registeredVariables)t.push(ko.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,r=t.length;t=t.filter((e=>e.trainable)),ut(t.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(r," variables is ")+"trainable."));const{value:s,grads:o}=ko.gradients(e,t,null,!0);ut(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),ut(0===s.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(s.rank," tensor")));const i={};return t.forEach(((e,t)=>{null!=o[t]&&(i[e.name]=o[t])})),null!=a&&a.forEach((e=>i[e.name]=null)),{value:s,grads:i}}(e,t)}dispose(){null!=this.iterations_&&Go(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ic(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(pc,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class fc extends pc{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ko.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=ko.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(t,"/accum_grad"),variable:Uo((()=>sc(a).variable(r)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(t,"/accum_var"),variable:Uo((()=>sc(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Uo((()=>{const e=$i(nc(o,this.rho),nc(rc(s),1-this.rho)),t=nc(tc(ac($i(i,this.epsilon)),ac($i(o,this.epsilon))),s),n=$i(nc(i,this.rho),nc(rc(t),1-this.rho));o.assign(e),i.assign(n);const r=$i(nc(t,-this.learningRate),a);a.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Go(this.accumulatedGrads.map((e=>e.variable))),Go(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function mc(e,t,n){zt(e);const a={shape:e,value:t,dtype:n=n||Et(t)};return ko.runKernel(na,{},a)}class gc extends pc{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=ko.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:"".concat(t,"/accumulator"),variable:Uo((()=>mc(a.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable;Uo((()=>{const e=$i(s,rc(r));s.assign(e);const t=$i(nc(tc(r,ac($i(e,ko.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Go(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const yc=Oo({pow_:function(e,t){let n=_o(e,"base","pow"),a=_o(t,"exp","pow");[n,a]=fo(n,a);const r={a:n,b:a};return ko.runKernel(Za,r)}});const bc=Oo({sub_:function(e,t){let n=_o(e,"a","sub"),a=_o(t,"b","sub");[n,a]=fo(n,a);const r={a:n,b:a};return ko.runKernel(Hr,r)}});class xc extends pc{static get className(){return"Adam"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Uo((()=>{this.accBeta1=ic(t).variable(),this.accBeta2=ic(n).variable()})),null==a&&(this.epsilon=ko.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Uo((()=>{const n=bc(1,this.accBeta1),a=bc(1,this.accBeta2);t.forEach(((t,r)=>{const s=ko.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:Uo((()=>sc(s).variable(o)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:"".concat(t,"/v"),variable:Uo((()=>sc(s).variable(o)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=$i(nc(c,this.beta1),nc(i,1-this.beta1)),h=$i(nc(l,this.beta2),nc(rc(i),1-this.beta2)),d=tc(u,n),p=tc(h,a);c.assign(u),l.assign(h);const f=$i(nc(tc(d,$i(ac(p),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign(nc(this.accBeta1,this.beta1)),this.accBeta2.assign(nc(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Go(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Go(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Uo((()=>{this.accBeta1.assign(yc(this.beta1,this.iterations_+1)),this.accBeta2.assign(yc(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const vc=Oo({abs_:function(e){const t=_o(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ko.runKernel(Sn,e)}{const e={x:t};return ko.runKernel(Yt,e)}}});function wc(e,t){const n=e.length,a=[];for(let r=0;r<n;r++){const s=n-1-r,o=e[s]||1;(t[t.length-1-r]||1)>1&&1===o&&a.unshift(s)}return a}function kc(e,t){const n=[];for(let a=0;a<t.length;a++){const r=e[e.length-a-1],s=t.length-a-1,o=t[s];(null==r||1===r&&o>1)&&n.unshift(s)}return n}function Sc(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let s=e[e.length-r-1];null==s&&(s=1);let o=t[t.length-r-1];if(null==o&&(o=1),1===s)a[n-r-1]=o;else if(1===o)a[n-r-1]=s;else{if(s!==o){const n="Operands could not be broadcast together with shapes "+"".concat(e," and ").concat(t,".");throw Error(n)}a[n-r-1]=s}}return a}const Nc=Oo({maximum_:function(e,t){let n=_o(e,"a","maximum"),a=_o(t,"b","maximum");[n,a]=fo(n,a),"bool"===n.dtype&&(n=Qi(n,"int32"),a=Qi(a,"int32")),Sc(n.shape,a.shape);const r={a:n,b:a};return ko.runKernel(Ra,r)}});class Ic extends pc{static get className(){return"Adamax"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Uo((()=>{this.iteration=ic(0).variable(),this.accBeta1=ic(t).variable()})),null==a&&(this.epsilon=ko.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Uo((()=>{const n=bc(1,this.accBeta1),a=tc(-this.learningRate,$i(nc(this.iteration,this.decay),1));t.forEach(((t,r)=>{const s=ko.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:sc(s).variable(o)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:"".concat(t,"/v"),variable:sc(s).variable(o)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=$i(nc(c,this.beta1),nc(i,1-this.beta1)),h=nc(l,this.beta2),d=vc(i),p=Nc(h,d);c.assign(u),l.assign(p);const f=$i(nc(tc(a,n),tc(u,$i(p,this.epsilon))),s);s.assign(f)})),this.iteration.assign($i(this.iteration,1)),this.accBeta1.assign(nc(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Go(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Go(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Tc extends pc{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=ko.registeredVariables[t];Uo((()=>{const e=$i(nc(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Ho(ic(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Cc extends Tc{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ic(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=ko.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:"".concat(t,"/momentum"),variable:Uo((()=>sc(a).variable(e)))}}const r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Uo((()=>{let e;const t=$i(nc(this.m,r),s);e=this.useNesterov?$i(nc(this.c,$i(s,nc(t,this.m))),a):$i(nc(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Go(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Ec extends pc{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=ko.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=ko.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(t,"/rms"),variable:Uo((()=>sc(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(t,"/momentum"),variable:Uo((()=>sc(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(t,"/mg"),variable:Uo((()=>sc(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Uo((()=>{const e=$i(nc(o,this.decay),nc(rc(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=$i(nc(t,this.decay),nc(s,1-this.decay)),c=tc(nc(s,this.learningRate),ac(bc(e,$i(rc(r),this.epsilon)))),l=$i(nc(i,this.momentum),c);o.assign(e),t.assign(r),i.assign(l);const u=bc(a,l);a.assign(u)}else{const e=$i(nc(o,this.decay),nc(rc(s),1-this.decay)),t=$i(nc(i,this.momentum),tc(nc(s,this.learningRate),ac($i(e,this.epsilon))));o.assign(e),i.assign(t);const n=bc(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Go(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Go(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Go(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Rc=[fc,gc,xc,Ic,Cc,Ec,Tc];function Ac(e){return new Promise((e=>setTimeout(e))).then(e)}class _c{constructor(e){if(!Ht().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(_c.URL_SCHEME)&&(e=e.slice(_c.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Bo.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=oi(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await Ac((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Ac((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:li(e)}}}}_c.URL_SCHEME="downloads://";class Fc{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(e));this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==a.weightsManifest)return void t(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void e({modelTopology:r});const s=ci(a,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const a=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(r).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>a("Failed to weights data from file of path '".concat(e,"'.")),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>si(e.name))),a={};for(const r of e)r.paths.forEach((e=>{const r=si(e);if(-1!==t.indexOf(r))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(r,"'"));if(t.push(r),-1===n.indexOf(r))throw new Error("Weight file with basename '".concat(r,"' is not provided."));a[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(t.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return a}}function Dc(e){return new Fc(e)}function Oc(e,t,n,a){!function(e){ut(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){ut(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(e))),ut(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(t))),ut(t>=e,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(e," and endFraction ")+"".concat(t)))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++r/e.length*(a-n);return t(o),s})),s))))}async function Mc(e,t){null==t&&(t={});const n=null==t.fetchFunc?Ht().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await Oc(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Oc(r,t.onProgress,.5,1)}async function Lc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return zc((e=>Mc(e,{requestInit:a})))(e,t,n)}function zc(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0;const r=t.map((()=>!1)),s={},o=null!=a?a.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const c="quantization"in e?e.quantization.dtype:e.dtype,l=Po[c]*pt(e.shape),u=()=>{r[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=a?a.forEach(((t,n)=>{t===e.name&&(u(),o[n]=!0)})):u(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=a.filter(((e,t)=>!o[t]));throw new Error("Could not find weights in manifest with names: "+"".concat(e.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];c.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const u=await e(l),h={};let d=0;return c.forEach((e=>{const n=t[e].paths.length,a=new Bo(u.slice(d,d+n));s[e].forEach((e=>{const t=Yo(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)h[n]=t[n]})),d+=n})),h}}hi.registerSaveRouter((e=>Ht().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(_c.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new _c(e)}(e.slice(_c.URL_SCHEME.length)):null));class Pc{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(ut("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Ht().platform.fetch,ut(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&ut(2===e.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(e.length,")."))),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=oi(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=Bo.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:li(e),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(a.status,"."))}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(e.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let t;try{t=await e.json()}catch(r){let e="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();return ci(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=ui(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?Ht().platform.fetch:t.fetchFunc;let r,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var o;s<e.length;){if(!r){const n=(await a(e[s],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:i,value:c}=await r.read();if(!i)return void n.enqueue(c);s++,r=void 0,null===(o=t.onProgress)||void 0===o||o.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}(t),r=this.weightPathPrefix||n,s=[],o=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(r+e+a);return this.weightUrlConverter&&s.push(...await Promise.all(o)),s}async loadWeights(e){const t=await this.getWeightUrls(e);return[ui(e),await Mc(t,this.loadOptions)]}}function Bc(e){return null!=e.match(Pc.URL_SCHEME_REGEX)}Pc.URL_SCHEME_REGEX=/^https?:\/\//;const Wc=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Bc(e))):Bc(e),n)return Vc(e,t)}return null};function Vc(e,t){return new Pc(e,t)}function Uc(e,t){return Vc(e,t)}hi.registerSaveRouter(Wc),hi.registerLoadRouter(Wc);class Gc{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class Hc{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class jc{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function qc(e,t,n,a){return new jc(Kc(...arguments))}function Kc(e,t,n,a){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new Gc(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Gc({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Gc({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a})}function Xc(e){return new Hc(e)}function Yc(e){return new Hc(e)}function Qc(e,t,n){if(dt(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const a=Eo(e,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Lo(e,t,a,n)}let Zc;function Jc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(e.constructor.name));i=!0}if(null!=hs(ns,ko.backendName)){const n={pixels:e},a={numChannels:t};return ko.runKernel(ns,n,a)}const[c,l]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let u,h;if(o)u=e.getContext("2d").getImageData(0,0,c,l).data;else if(a||n)u=e.data;else if(s||r||i){if(null==Zc)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Zc=new OffscreenCanvas(1,1).getContext("2d")}else Zc=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Zc.canvas.width=c,Zc.canvas.height=l,Zc.drawImage(e,0,0,c,l),u=Zc.getImageData(0,0,c,l).data}if(4===t)h=new Int32Array(u);else{const e=c*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=u[4*n+e]}return Qc(h,[l,c,t],"int32")}const $c=Oo({fromPixels_:Jc}),el=-2,tl=-1;function nl(e,t,n){const a=e.shape.length;ut(a===t.length,(()=>"Error in slice".concat(a,"D: Length of begin ").concat(t," must ")+"match the rank of the array (".concat(a,")."))),ut(a===n.length,(()=>"Error in slice".concat(a,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(a,").")));for(let r=0;r<a;++r)ut(t[r]+n[r]<=e.shape[r],(()=>"Error in slice".concat(a,"D: begin[").concat(r,"] + size[").concat(r,"] ")+"(".concat(t[r]+n[r],") would overflow input.shape[").concat(r,"] (").concat(e.shape[r],")")))}function al(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function rl(e,t,n){const a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function sl(e,t,n,a){const r=[...e];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)0===s?r[t]=1:(r.splice(t,0,1),r.pop());return r}function ol(e,t,n){return n<=e?n:n-(t-1)}function il(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function cl(e,t,n,a,r,s,o,i,c){const l=e.length;let u=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const c=t[0],l=n+1;u=ll(o,c,l,a,e),h=ul(i,c,l,r,e),d=sl(s,c,l,e)}else for(let p=0;p<l;p++)u[p]=dl(o,a,s,e,p,c),h[p]=pl(i,r,s,e,p,c),d[p]=hl(s,p,c);return{begin:u,end:h,strides:d}}function ll(e,t,n,a,r){const s=[...r],o=il(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const r=ol(t,n,i);let o=a[r];e&1<<r&&(o=0),s[i]=o}return s}function ul(e,t,n,a,r){const s=[...r],o=il(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{const r=ol(t,n,i);let o=a[r];e&1<<r&&(o=Number.MAX_SAFE_INTEGER),s[i]=o}for(let i=0;i<s.length;i++){const e=r[i];s[i]<0&&(s[i]+=e),s[i]=it(0,s[i],r[i])}return s}function hl(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function dl(e,t,n,a,r,s){let o=t[r];const i=n[r]||1;(e&1<<r||s&1<<r||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=a[r];return o<0&&(o+=c),o=it(0,o,c-1),o}function pl(e,t,n,a,r,s){let o=t[r];const i=n[r]||1;(e&1<<r||s&1<<r||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[r];return o<0&&(o+=c),o=i>0?it(0,o,c):it(-1,o,c-1),o}function fl(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function ml(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function gl(e,t,n){let a;const r=e.shape.length;let s;return a="number"===typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),a.forEach((e=>{ut(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(ut(-1===t,(()=>"Negative size values should be exactly -1 but got "+"".concat(t," for the slice() size at index ").concat(n,"."))),e.shape[n]-a[n]))),[a,s]}function yl(e,t,n,a,r,s,o,i,c){let l;if(null==a?(l=new Array(t.length),l.fill(1)):l=a,null!=o&&0!==(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:r,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:c};for(let b=0;b<h.dims;b++)u&&0!==(1<<b&i)&&h.numAddAxisAfterEllipsis++,1<<b&o&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(el),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(t.dims," dims, ").concat(t.begin.length,"."));null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(tl),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<e.length;++b){if(0===d.strides[b])throw Error("strides[".concat(b,"] must be non-zero"));const t=!!(d.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}const a=[d.beginMask&1<<b,d.endMask&1<<b],r=[d.strides[b]>0?0:-1,d.strides[b]>0?n:n-1];if(t&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[b];const s=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(t){const e=d.begin[b]<0?n+d.begin[b]:d.begin[b];if(d.begin[b]=e,d.end[b]=d.begin[b]+1,e<0||e>=n)throw Error("slice index ".concat(d.begin[b]," of dimension ").concat(b," out of bounds."))}else d.begin[b]=bl(d.begin[b],0,d.strides[b],n,a,r),d.end[b]=bl(d.end[b],1,d.strides[b],n,a,r);const e=1===d.strides[b]&&0===d.begin[b]&&d.end[b]===n;p=p&&e,f=f&&(0===b&&1===d.strides[b]||e)}else p=p&&1===d.strides[b]&&s,f=f&&(0===b&&1===d.strides[b]||s);let o,i=!1;if(d.beginValid&&d.endValid?(o=d.end[b]-d.begin[b],i=!0):t?(o=1,i=!0):s&&n>=0&&(o=d.strides[b]<0?-n:n,i=!0),i){let e;e=0===o||o<0!==d.strides[b]<0?0:Math.trunc(o/d.strides[b])+(o%d.strides[b]!==0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const e=d.finalShapeGatherIndices[b];e>=0?y.push(g[e]):e===el&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>d.finalShapeGatherIndices[t]!==el)),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function bl(e,t,n,a,r,s){if(r[t])return n>0?s[t]:s[t+1&1];{const t=e<0?a+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}const xl=Oo({acos_:function(e){const t={x:_o(e,"x","acos")};return ko.runKernel(Qt,t)}});const vl=Oo({acosh_:function(e){const t={x:_o(e,"x","acosh")};return ko.runKernel(Zt,t)}});const wl=Oo({addN_:function(e){ut(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),ut(e.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(e.length)));const t=e.map(((e,t)=>_o(e,"tensors".concat(t),"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!ft(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=t;return ko.runKernel($t,a)}});const kl=Oo({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:_o(e,"x","all","bool")},r={axis:t,keepDims:n};return ko.runKernel(en,a,r)}});const Sl=Oo({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:_o(e,"x","any","bool")},r={axis:t,keepDims:n};return ko.runKernel(tn,a,r)}});const Nl=Oo({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:_o(e,"x","argMax")},a={axis:t};return ko.runKernel(nn,n,a)}});const Il=Oo({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:_o(e,"x","argMin")},a={axis:t};return ko.runKernel(an,n,a)}});const Tl=Oo({asin_:function(e){const t={x:_o(e,"x","asin")};return ko.runKernel(rn,t)}});const Cl=Oo({asinh_:function(e){const t={x:_o(e,"x","asinh")};return ko.runKernel(sn,t)}});const El=Oo({atan_:function(e){const t={x:_o(e,"x","atan")};return ko.runKernel(on,t)}});const Rl=Oo({atan2_:function(e,t){let n=_o(e,"a","atan2"),a=_o(t,"b","atan2");[n,a]=fo(n,a);const r={a:n,b:a};return ko.runKernel(ln,r)}});const Al=Oo({atanh_:function(e){const t={x:_o(e,"x","atanh")};return ko.runKernel(cn,t)}});function _l(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;return Ol(e,[...t,e[3]],n,s,a,null,null,Hl(r))}function Fl(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[i,c]=zl(t);let l;if("channelsLast"===o)l=[i,c,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));l=[i,c,e[1],e[1]]}return Ol(e,l,n,a,r,s,!1,o)}function Dl(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,c,l]=Pl(t);let u,h;if("NDHWC"===o)h="channelsLast",u=[i,c,l,e[4],e[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat ".concat(o));h="channelsFirst",u=[i,c,l,e[1],e[1]]}return Ml(e,u,n,a,r,!1,h,s)}function Ol(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,l,u,h]=[-1,-1,-1,-1];if("channelsLast"===i)[c,l,u,h]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,h,l,u]=e}const[d,p,,f]=t,[m,g]=zl(n),[y,b]=zl(a),x=Bl(d,y),v=Bl(p,b),{padInfo:w,outHeight:k,outWidth:S}=function(e,t,n,a,r,s,o,i,c){let l,u,h;if("number"===typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,r){null==a&&(a=Ll(e,t,n));const s=e[0],o=e[1],i=Wl((s-t+2*a)/n+1,r),c=Wl((o-t+2*a)/n+1,r);return[i,c]}([t,n],s,a,e,i);u=r[0],h=r[1]}else if("same"===e){u=Math.ceil(t/a),h=Math.ceil(n/r);const e=Math.max(0,(u-1)*a+s-t),i=Math.max(0,(h-1)*r+o-n),c=Math.floor(e/2),d=e-c,p=Math.floor(i/2);l={top:c,bottom:d,left:p,right:i-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-s+1)/a),h=Math.ceil((n-o+1)/r);else{if("object"!==typeof e)throw Error("Unknown padding parameter: ".concat(e));{const d="channelsLast"===c?e[1][0]:e[2][0],p="channelsLast"===c?e[1][1]:e[2][1],f="channelsLast"===c?e[2][0]:e[3][0],m="channelsLast"===c?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},u=Wl((t-s+d+p)/a+1,i),h=Wl((n-o+f+m)/r+1,i)}}return{padInfo:l,outHeight:u,outWidth:h}}(r,l,u,m,g,x,v,s,i),N=o?f*h:f;let I;return"channelsFirst"===i?I=[c,N,k,S]:"channelsLast"===i&&(I=[c,k,S,N]),{batchSize:c,dataFormat:i,inHeight:l,inWidth:u,inChannels:h,outHeight:k,outWidth:S,outChannels:N,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:I,filterShape:t}}function Ml(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,l,u,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[c,l,u,h,d]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));[c,d,l,u,h]=e}const[p,f,m,,g]=t,[y,b,x]=Pl(n),[v,w,k]=Pl(a),S=Bl(p,v),N=Bl(f,w),I=Bl(m,k),{padInfo:T,outDepth:C,outHeight:E,outWidth:R}=function(e,t,n,a,r,s,o,i,c,l,u){let h,d,p,f;"valid"===e&&(e=0);if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,a,r,s){null==r&&(r=Ll(e,t[0],a[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*r>=t[i]&&(o[i]=Wl((e[i]-t[i]+2*r)/a[i]+1,s));return o}([t,n,a,1],[i,c,l],1,[r,s,o],e,u);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error("Unknown padding parameter: ".concat(e));{d=Math.ceil(t/r),p=Math.ceil(n/s),f=Math.ceil(a/o);const e=(d-1)*r+i-t,u=(p-1)*s+c-n,m=(f-1)*o+l-a,g=Math.floor(e/2),y=e-g,b=Math.floor(u/2),x=u-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,l,u,h,y,b,x,S,N,I,i),A=s?g*d:g;let _;return"channelsFirst"===o?_=[c,A,C,E,R]:"channelsLast"===o&&(_=[c,C,E,R,A]),{batchSize:c,dataFormat:o,inDepth:l,inHeight:u,inWidth:h,inChannels:d,outDepth:C,outHeight:E,outWidth:R,outChannels:A,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:N,effectiveFilterWidth:I,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:_,filterShape:t}}function Ll(e,t,n){const a=Bl(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+a)/2)}function zl(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Pl(e){return"number"===typeof e?[e,e,e]:e}function Bl(e,t){return t<=1?e:e+(e-1)*(t-1)}function Wl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode ".concat(t))}}function Vl(e){const[t,n,a]=zl(e);return 1===t&&1===n&&1===a}function Ul(e,t){return Vl(e)||Vl(t)}function Gl(e){return zl(e).every((e=>e>0))}function Hl(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(e))}function jl(e,t,n){if(null!=n){if("string"===typeof t)throw Error("Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));if("number"===typeof t)ut(mt(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")));else{if("object"!==typeof t)throw Error("Error in ".concat(e,": Unknown padding parameter: ").concat(t));t.forEach((t=>{t.forEach((t=>{ut(mt(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")))}))}))}}}const ql=Oo({reshape_:function(e,t){const n={x:_o(e,"x","reshape","string_or_numeric")},a={shape:t};return ko.runKernel(ir,n,a)}});const Kl=Oo({avgPool_:function(e,t,n,a,r){const s=_o(e,"x","avgPool","float32");ut(Ul(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let o=s,i=!1;3===s.rank&&(i=!0,o=ql(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ut(4===o.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(o.rank,"."))),jl("avgPool",a,r);const c={x:o},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r};let u=ko.runKernel(un,c,l);return u=Qi(u,s.dtype),i?ql(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const Xl=Oo({avgPool3d_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=_o(e,"x","avgPool3d","float32");let i=o,c=!1;4===o.rank&&(c=!0,i=ql(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ut(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),ut("NDHWC"===s,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),ut("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),jl("avgPool3d",a,r);const l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s};let h=ko.runKernel(dn,l,u);return h=Qi(h,i.dtype),c?ql(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const Yl=Oo({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;ut(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Fo(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(e.dtype,". "))})),1===n.length)return Zi(n[0]);const a=n,r={axis:t};return ko.runKernel(Nn,a,r)}});const Ql=Oo({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=_o(e,"a","matMul"),s=_o(t,"b","matMul");[r,s]=fo(r,s);const o={a:r,b:s},i={transposeA:n,transposeB:a};return ko.runKernel(fn,o,i)}});const Zl=Oo({sigmoid_:function(e){const t={x:_o(e,"x","sigmoid","float32")};return ko.runKernel(Ir,t)}});const Jl=Oo({slice_:function(e,t,n){const a=_o(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const r={x:a},s={begin:t,size:n};return ko.runKernel(wr,r,s)}});const $l=Oo({tanh_:function(e){const t={x:_o(e,"x","tanh","float32")};return ko.runKernel(qr,t)}});const eu=Oo({basicLSTMCell_:function(e,t,n,a,r,s){const o=_o(e,"forgetBias","basicLSTMCell"),i=_o(t,"lstmKernel","basicLSTMCell"),c=_o(n,"lstmBias","basicLSTMCell"),l=_o(a,"data","basicLSTMCell"),u=_o(r,"c","basicLSTMCell"),h=_o(s,"h","basicLSTMCell"),d=Yl([l,h],1),p=Ql(d,i),f=$i(p,c),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Jl(f,[0,0],y),x=Jl(f,[0,g],y),v=Jl(f,[0,2*g],y),w=Jl(f,[0,3*g],y),k=$i(nc(Zl(b),$l(x)),nc(u,Zl($i(o,v))));return[k,nc($l(k),Zl(w))]}});const tu=Oo({batchToSpaceND_:function(e,t,n){const a=_o(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));ut(a.rank>=1+t.length,(()=>"input rank is ".concat(a.rank," but should be > than blockShape.length ").concat(t.length))),ut(n.length===t.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(t.length))),ut(a.shape[0]%r===0,(()=>"input tensor batch is ".concat(a.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(t.join(" * ")," === ").concat(r)));const s={x:a},o={blockShape:t,crops:n};return ko.runKernel(mn,s,o)}});const nu=Oo({batchNorm_:function(e,t,n,a,r,s){null==s&&(s=.001);const o=_o(e,"x","batchNorm"),i=_o(t,"mean","batchNorm"),c=_o(n,"variance","batchNorm");let l,u;null!=r&&(l=_o(r,"scale","batchNorm")),null!=a&&(u=_o(a,"offset","batchNorm")),ut(i.rank===c.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ut(null==u||i.rank===u.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ut(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?ql(e,[1,1,1,e.size]):2===e.rank?ql(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?ql(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),scale:l,offset:u,mean:i,variance:c},d={varianceEpsilon:s},p=ko.runKernel(oa,h,d);return ql(p,o.shape)}});const au=Oo({batchNorm2d_:function(e,t,n,a,r,s){const o=_o(e,"x","batchNorm"),i=_o(t,"mean","batchNorm"),c=_o(n,"variance","batchNorm");let l,u;return null!=r&&(l=_o(r,"scale","batchNorm")),null!=a&&(u=_o(a,"offset","batchNorm")),ut(2===o.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(o.rank,"."))),ut(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),ut(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&ut(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&ut(2===u.rank||1===u.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,"."))),nu(o,i,c,u,l,s)}});const ru=Oo({batchNorm3d_:function(e,t,n,a,r,s){const o=_o(e,"x","batchNorm"),i=_o(t,"mean","batchNorm"),c=_o(n,"variance","batchNorm");let l,u;return null!=r&&(l=_o(r,"scale","batchNorm")),null!=a&&(u=_o(a,"offset","batchNorm")),ut(3===o.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(o.rank,"."))),ut(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),ut(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&ut(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&ut(3===u.rank||1===u.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,"."))),nu(o,i,c,u,l,s)}});const su=Oo({batchNorm4d_:function(e,t,n,a,r,s){const o=_o(e,"x","batchNorm"),i=_o(t,"mean","batchNorm"),c=_o(n,"variance","batchNorm");let l,u;return null!=r&&(l=_o(r,"scale","batchNorm")),null!=a&&(u=_o(a,"offset","batchNorm")),ut(4===o.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(o.rank,"."))),ut(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),ut(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&ut(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&ut(4===u.rank||1===u.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,"."))),nu(o,i,c,u,l,s)}});const ou=Oo({bincount_:function(e,t,n){const a=_o(e,"x","bincount"),r=_o(t,"weights","bincount");ut("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),ut(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),ut(r.size===a.size||0===r.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(r.shape,".")));const s={x:a,weights:r},o={size:n};return ko.runKernel(gn,s,o)}});const iu=Oo({bitwiseAnd_:function(e,t){const n=_o(e,"x","bitwiseAnd"),a=_o(t,"y","bitwiseAnd");if(!ft(n.shape,a.shape))throw new Error("BitwiseAnd: Tensors must have the same shape. x: ".concat(n.shape,", y: ").concat(a.shape));if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error("BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ".concat(n.dtype," and type of y: ").concat(a.dtype));const r={a:n,b:a};return ko.runKernel(yn,r)}});const cu=Oo({broadcastArgs_:function(e,t){const n=_o(e,"s0","broadcastArgs","int32"),a=_o(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). "+"Has rank ".concat(n.rank));if(1!==a.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). "+"Has rank ".concat(a.rank));const r={s0:n,s1:a};return ko.runKernel(bn,r)}});const lu=Oo({broadcastTo_:function(e,t){let n=_o(e,"broadcastTo","x");const a=n.shape;if(zt(t),t.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(t.length," < input.rank=").concat(n.rank,"."));if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=ql(n,e)}const r=n.shape,s=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])s[c]=1;else if(1!==n.shape[c])throw new Error("broadcastTo(): [".concat(a,"] cannot be broadcast to [").concat(t,"]."));if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Zi(n);const o={x:n},i={reps:s};return ko.runKernel(Kr,o,i)}});const uu=Oo({ceil_:function(e){const t={x:_o(e,"x","ceil","float32")};return ko.runKernel(vn,t)}});const hu=Oo({clipByValue_:function(e,t,n){const a=_o(e,"x","clipByValue");if(ut(t<=n,(()=>"Error in clip: min (".concat(t,") must be ")+"less than or equal to max (".concat(n,")."))),t===n)return mc(a.shape,t,a.dtype);const r={x:a},s={clipValueMin:t,clipValueMax:n};return ko.runKernel(wn,r,s)}});const du=Oo({concat1d_:function(e){return Yl(e,0)}});const pu=Oo({concat2d_:function(e,t){return Yl(e,t)}});const fu=Oo({concat3d_:function(e,t){return Yl(e,t)}});const mu=Oo({concat4d_:function(e,t){return Yl(e,t)}});const gu=Oo({conv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=_o(e,"x","conv2d","float32"),c=_o(t,"filter","conv2d","float32");let l=i,u=!1;3===i.rank&&(u=!0,l=ql(i,[1,i.shape[0],i.shape[1],i.shape[2]])),ut(4===l.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(l.rank,"."))),ut(4===c.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(c.rank,"."))),jl("conv2d",a,o);const h="NHWC"===r?l.shape[3]:l.shape[1];ut(h===c.shape[2],(()=>"Error in conv2d: depth of input (".concat(h,") must match ")+"input depth for filter ".concat(c.shape[2],"."))),ut(Ul(n,s),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),ut(Gl(s),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),ut(Gl(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:l,filter:c},p={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o},f=ko.runKernel(In,d,p);return u?ql(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const yu=Oo({conv1d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,o=arguments.length>6?arguments[6]:void 0;const i=_o(e,"x","conv1d"),c=_o(t,"filter","conv1d");let l=i,u=!1;2===i.rank&&(u=!0,l=ql(i,[1,i.shape[0],i.shape[1]])),ut(3===l.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(l.rank,"."))),ut(3===c.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(c.rank,"."))),jl("conv1d",a,o),ut(l.shape[2]===c.shape[1],(()=>"Error in conv1d: depth of input (".concat(l.shape[2],") must match ")+"input depth for filter ".concat(c.shape[1],"."))),ut(Ul(n,s),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(s,"'"))),ut(Gl(s),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),ut(Gl(n),(()=>"Error in conv1D: Stride should be larger than 0.")),ut("NWC"===r,(()=>"Error in conv1d: got dataFormat of ".concat(r," but only NWC is currently supported.")));const h=ql(c,[1,c.shape[0],c.shape[1],c.shape[2]]),d=ql(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=gu(d,h,[1,n],a,"NHWC",[1,s],o);return ql(p,u?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});const bu=Oo({conv2DBackpropInput_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0;ut(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let i=e,c=t,l=!1;3===t.rank&&(l=!0,c=ql(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),ut(4===i.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(i.length,"."))),ut(4===c.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(c.rank))),ut(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const u="NHWC"===s?i[3]:i[1],h="NHWC"===s?c.shape[3]:c.shape[1];ut(u===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(u,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),ut(h===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(h,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),jl("conv2dDerInput",r,o);const d={dy:c,filter:n},p={strides:a,pad:r,dataFormat:s,dimRoundingMode:o,inputShape:i},f=ko.runKernel(Cn,d,p);return l?ql(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const xu=Oo({conv2dTranspose_:function(e,t,n,a,r,s){const o=_o(e,"x","conv2dTranspose"),i=_o(t,"filter","conv2dTranspose");return bu(n,o,i,a,r,"NHWC",s)}});const vu=Oo({conv3d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=_o(e,"x","conv3d"),i=_o(t,"filter","conv3d");let c=o,l=!1;4===o.rank&&(l=!0,c=ql(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ut(5===c.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(c.rank,"."))),ut(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),ut(c.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(c.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),ut(Ul(n,s),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),ut("NDHWC"===r,(()=>"Error in conv3d: got dataFormat of ".concat(r," but only NDHWC is currently supported."))),ut(Gl(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),ut(Gl(n),(()=>"Error in conv3D: Strides should be larger than 0."));const u={x:c,filter:i},h={strides:n,pad:a,dataFormat:r,dilations:s},d=ko.runKernel(En,u,h);return l?ql(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const wu=Oo({conv3DBackpropInput_:function(e,t,n,a,r){ut(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let s=e,o=t,i=!1;4===t.rank&&(i=!0,o=ql(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const c=s[4],l=o.shape[4];ut(5===s.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(s.length,"."))),ut(5===o.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(o.rank))),ut(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),ut(c===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(c,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),ut(l===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(l,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const u={dy:o,filter:n},h={pad:r,strides:a,inputShape:s},d=ko.runKernel(An,u,h);return i?ql(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const ku=Oo({conv3dTranspose_:function(e,t,n,a,r){const s=_o(e,"x","conv3dTranspose"),o=_o(t,"filter","conv3dTranspose");return wu(n,s,o,a,r)}});const Su=Oo({cos_:function(e){const t={x:_o(e,"x","cos","float32")};return ko.runKernel(_n,t)}});const Nu=Oo({cosh_:function(e){const t={x:_o(e,"x","cosh","float32")};return ko.runKernel(Fn,t)}});const Iu=Oo({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:_o(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:a};return ko.runKernel(Dn,r,s)}});const Tu=Oo({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:_o(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:a};return ko.runKernel(On,r,s)}});const Cu=Oo({denseBincount_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=_o(e,"x","denseBincount"),s=_o(t,"weights","denseBincount");ut("int32"===r.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(r.dtype))),ut(r.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(r.rank,"."))),ut(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),ut(s.size===r.size||0===s.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(r.shape,", weights shape: ")+"".concat(s.shape,".")));const o={x:r,weights:s},i={size:n,binaryOutput:a};return ko.runKernel(Ln,o,i)}});const Eu=Oo({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const a=_o(e,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],s="NHWC"===n?a.shape[2]:a.shape[3],o="NHWC"===n?a.shape[3]:a.shape[1];ut(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(t))),ut(r*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(r," and ").concat(t,"  for depthToSpace with input shape\n    ").concat(a.shape))),ut(s*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(s," and ").concat(t," for depthToSpace with input shape\n        ").concat(a.shape))),ut(o%(t*t)===0,(()=>"Dimension size must be evenly divisible by ".concat(t*t," but is ").concat(o," for depthToSpace with input shape ").concat(a.shape)));const i={x:a},c={blockSize:t,dataFormat:n};return ko.runKernel(zn,i,c)}});const Ru=Oo({depthwiseConv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=_o(e,"x","depthwiseConv2d","float32"),c=_o(t,"filter","depthwiseConv2d","float32");let l=i,u=!1;3===i.rank&&(u=!0,l=ql(i,[1,i.shape[0],i.shape[1],i.shape[2]])),ut(4===l.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(l.rank,"."))),ut(4===c.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(c.rank,".")));const h="NHWC"===r?l.shape[3]:l.shape[1];ut(h===c.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(h,") must match the inChannels dimension in ")+"filter ".concat(c.shape[2],"."))),jl("depthwiseConv2d",a,o);const d={x:l,filter:c},p={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o},f=ko.runKernel(Pn,d,p);return u?ql(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Au=Oo({diag_:function(e){const t={x:_o(e,"x","diag")};return ko.runKernel(Vn,t)}});const _u=Oo({dilation2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const o=_o(e,"x","dilation2d"),i=_o(t,"filter","dilation2d");ut(3===o.rank||4===o.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(o.rank,"."))),ut(3===i.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(i.rank,"."))),ut("NHWC"===s,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(s)));let c=o,l=!1;3===o.rank&&(c=ql(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0),ut(c.shape[3]===i.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(c.shape[3]," vs ").concat(i.shape[2])));const u={x:c,filter:i},h={strides:n,pad:a,dilations:r},d=ko.runKernel(Un,u,h);return l?ql(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const Fu=Oo({equal_:function(e,t){let n=_o(e,"a","equal","string_or_numeric"),a=_o(t,"b","equal","string_or_numeric");[n,a]=fo(n,a),Sc(n.shape,a.shape);const r={a:n,b:a};return ko.runKernel(Zn,r)}});const Du=Oo({where_:function(e,t,n){const a=_o(t,"a","where"),r=_o(n,"b","where"),s=_o(e,"condition","where","bool"),o=Sc(Sc(s.shape,a.shape),r.shape),i={condition:lu(s,o),t:lu(a,o),e:lu(r,o)};return ko.runKernel(xr,i)}});const Ou=Oo({divNoNan_:function(e,t){let n=_o(e,"a","div"),a=_o(t,"b","div");[n,a]=fo(n,a);const r=tc(n,a),s=sc(r),o=Fu(a,s);return Du(o,s,r)}});const Mu=Oo({dot_:function(e,t){const n=_o(e,"t1","dot"),a=_o(t,"t2","dot");ut((1===n.rank||2===n.rank)&&(1===a.rank||2===a.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=1===n.rank?n.size:n.shape[1],s=1===a.rank?a.size:a.shape[0];if(ut(r===s,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(r," and ").concat(s,"."))),1===n.rank&&1===a.rank){const e=ql(n,[1,-1]),t=ql(a,[-1,1]),r=Ql(e,t);return ql(r,[])}if(1===n.rank&&2===a.rank){const e=ql(n,[1,-1]),t=ql(a,[a.shape[0],a.shape[1]]),r=Ql(e,t);return ql(r,[r.size])}if(2===n.rank&&1===a.rank){const e=ql(a,[-1,1]),t=Ql(n,e);return ql(t,[t.size])}{const e=ql(a,[a.shape[0],a.shape[1]]);return Ql(n,e)}}});const Lu=Oo({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];const r=n.map(((e,t)=>_o(e,"tensors".concat(t),"einsum"))),s={equation:e};return ko.runKernel(Kn,r,s)}});const zu=Oo({elu_:function(e){const t={x:_o(e,"x","elu","float32")};return ko.runKernel(Xn,t)}});const Pu=Oo({ensureShape_:function(e,t){const n=_o(e,"x","ensureShape","string_or_numeric");if(!function(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}(n.shape,t))throw new Error("EnsureShape: Shape of tensor ".concat(n.shape," is not compatible with expected shape ").concat(t));return e}});const Bu=Oo({erf_:function(e){let t=_o(e,"x","erf");ut("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Qi(t,"float32"));const n={x:t};return ko.runKernel(Qn,n)}});function Wu(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Vu(e,t,n){const a=e.length+t.length,r=[];let s=0,o=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?r.push(e[s++]):r.push(t[o++]);return r}function Uu(e,t){const n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function Gu(e,t){return Vu(e,t.map((e=>1)),t)}function Hu(e,t,n){ut(Wu(t,n),(()=>"".concat(e," supports only inner-most axes for now. ")+"Got axes ".concat(t," and rank-").concat(n," input.")))}function ju(e,t){if(Wu(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function qu(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Ku(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}const Xu=Oo({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:_o(e,"x","max")},r={reductionIndices:t,keepDims:n};return ko.runKernel(Ea,a,r)}});const Yu=Oo({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:_o(e,"x","min")},r={axis:t,keepDims:n};return ko.runKernel(La,a,r)}});const Qu=Oo({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=_o(e,"x","sum");"bool"===a.dtype&&(a=Qi(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return ko.runKernel(Er,r,s)}});function Zu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return vc(e);if(1!==e.rank&&null===n)return Zu(ql(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Qu(vc(e),n);if(t===1/0)return Xu(vc(e),n);if(t===-1/0)return Yu(vc(e),n);if("euclidean"===t||2===t)return ac(Qu(yc(vc(e),ic(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}if(Array.isArray(n)&&2===n.length){if(1===t)return Xu(Qu(vc(e),n[0]),n[1]-1);if(t===1/0)return Xu(Qu(vc(e),n[1]),n[0]);if(t===-1/0)return Yu(Qu(vc(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return ac(Qu(rc(e),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}throw new Error("Error in norm: invalid axis: ".concat(n))}const Ju=Oo({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=Zu(e=_o(e,"x","norm"),t,n);let s=r.shape;if(a){const t=vt(n,e.shape);s=Gu(r.shape,t)}return ql(r,s)}});const $u=Oo({euclideanNorm_:function(e){return Ju(e,"euclidean",arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}});const eh=Oo({exp_:function(e){const t={x:_o(e,"x","exp")};return ko.runKernel(Jn,t)}});const th=Oo({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=_o(e,"x","expandDims","string_or_numeric");ut(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},r={dim:t};return ko.runKernel($n,a,r)}});const nh=Oo({expm1_:function(e){const t={x:_o(e,"x","expm1")};return ko.runKernel(ea,t)}});const ah=Oo({tile_:function(e,t){const n=_o(e,"x","tile","string_or_numeric");ut(n.rank===t.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(t,".")));const a={x:n},r={reps:t};return ko.runKernel(Kr,a,r)}});const rh=Oo({eye_:function(e,t,n){null==t&&(t=e);const a=Yi([e,t],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),r=e<=t?e:t;for(let o=0;o<r;++o)a.set(1,o,o);const s=ql(a.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return ah(th(s,0),[n[0],1,1]);if(2===n.length)return ah(th(th(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return ah(th(th(th(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});const sh=Oo({floor_:function(e){const t={x:_o(e,"x","floor","float32")};return ko.runKernel(ra,t)}});const oh=Oo({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const r={x:_o(e,"x","gather"),indices:_o(t,"indices","gather","int32")},s={axis:n,batchDims:a};return ko.runKernel(ia,r,s)}});const ih=Oo({greater_:function(e,t){let n=_o(e,"a","greater","string_or_numeric"),a=_o(t,"b","greater","string_or_numeric");[n,a]=fo(n,a),Sc(n.shape,a.shape);const r={a:n,b:a};return ko.runKernel(la,r)}});const ch=Oo({greaterEqual_:function(e,t){let n=_o(e,"a","greaterEqual","string_or_numeric"),a=_o(t,"b","greaterEqual","string_or_numeric");[n,a]=fo(n,a),Sc(n.shape,a.shape);const r={a:n,b:a};return ko.runKernel(ua,r)}});const lh=Oo({imag_:function(e){const t={input:_o(e,"input","imag")};return ko.runKernel(pa,t)}});const uh=Oo({isFinite_:function(e){const t={x:_o(e,"x","isFinite")};return ko.runKernel(fa,t)}});const hh=Oo({isInf_:function(e){const t={x:_o(e,"x","isInf")};return ko.runKernel(ma,t)}});const dh=Oo({isNaN_:function(e){const t={x:_o(e,"x","isNaN")};return ko.runKernel(ga,t)}});const ph=Oo({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:_o(e,"x","leakyRelu")},a={alpha:t};return ko.runKernel(ya,n,a)}});const fh=Oo({less_:function(e,t){let n=_o(e,"a","less","string_or_numeric"),a=_o(t,"b","less","string_or_numeric");[n,a]=fo(n,a),Sc(n.shape,a.shape);const r={a:n,b:a};return ko.runKernel(ba,r)}});const mh=Oo({lessEqual_:function(e,t){let n=_o(e,"a","lessEqual","string_or_numeric"),a=_o(t,"b","lessEqual","string_or_numeric");[n,a]=fo(n,a),Sc(n.shape,a.shape);const r={a:n,b:a};return ko.runKernel(xa,r)}});function gh(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return ko.runKernel(va,{},a)}const yh=Oo({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const s=_o(e,"x","localResponseNormalization");ut(4===s.rank||3===s.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(s.rank,"."))),ut(mt(t),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(t,".")));let o=s,i=!1;3===s.rank&&(i=!0,o=ql(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const c={x:o},l={depthRadius:t,bias:n,alpha:a,beta:r},u=ko.runKernel(Ta,c,l);return i?ql(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const bh=Oo({log_:function(e){const t={x:_o(e,"x","log","float32")};return ko.runKernel(wa,t)}});const xh=Oo({log1p_:function(e){const t={x:_o(e,"x","log1p")};return ko.runKernel(ka,t)}});const vh=Oo({neg_:function(e){const t={x:_o(e,"x","neg")};return ko.runKernel(Ua,t)}});const wh=Oo({softplus_:function(e){const t={x:_o(e,"x","softplus")};return ko.runKernel(Tr,t)}});const kh=Oo({logSigmoid_:function(e){const t=_o(e,"x","logSigmoid");return oc((e=>({value:vh(wh(vh(e))),gradFunc:t=>nc(t,Zl(vh(e)))})))(t)}});const Sh=Oo({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=_o(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(t));const a=oc(((e,n)=>{const a=Xu(e,t,!0),r=bc(e,a),s=bc(Qi(r,"float32"),bh(Qu(eh(r),t,!0)));n([s]);return{value:s,gradFunc:(e,n)=>{const[a]=n,r=eh(a);return bc(e,nc(Qu(e,t,!0),r))}}}));return a(n)}});const Nh=Oo({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a=_o(e,"x","logSumExp"),r=vt(t,a.shape),s=Xu(a,r,!0),o=bc(a,s),i=eh(o),c=Qu(i,r),l=bh(c),u=$i(ql(s,l.shape),l);if(n){const e=Gu(u.shape,r);return ql(u,e)}return u}});const Ih=Oo({logicalAnd_:function(e,t){const n=_o(e,"a","logicalAnd","bool"),a=_o(t,"b","logicalAnd","bool");Sc(n.shape,a.shape);const r={a:n,b:a};return ko.runKernel(Sa,r)}});const Th=Oo({logicalNot_:function(e){const t={x:_o(e,"x","logicalNot","bool")};return ko.runKernel(Na,t)}});const Ch=Oo({logicalOr_:function(e,t){const n=_o(e,"a","logicalOr","bool"),a=_o(t,"b","logicalOr","bool");Sc(n.shape,a.shape);const r={a:n,b:a};return ko.runKernel(Ia,r)}});const Eh=Oo({logicalXor_:function(e,t){const n=_o(e,"a","logicalXor","bool"),a=_o(t,"b","logicalXor","bool");return Sc(n.shape,a.shape),Ih(Ch(e,t),Th(Ih(e,t)))}}),Rh=2147483648;const Ah=Oo({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const a=_o(e,"sortedSequence","searchSorted"),r=_o(t,"values","searchSorted"),s=a.shape[a.shape.length-1],o=r.shape[r.shape.length-1],i=ql(a,[-1,s]),c=ql(r,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==c.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(pt(c.shape)>=Rh)throw new Error("values tensor size must less than ".concat(Rh));if(i.shape[1]>=Rh)throw new Error("trailing dim_size must less than ".concat(Rh," for int32 output type, was ").concat(i.shape[1]));const l={sortedSequence:i,values:c},u={side:n};return ko.runKernel(br,l,u)}});function _h(e,t){return Ah(e,t,"left")}const Fh=Oo({maxPool_:function(e,t,n,a,r){const s=_o(e,"x","maxPool");let o=s,i=!1;3===s.rank&&(i=!0,o=ql(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ut(4===o.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(o.rank,"."))),ut(Ul(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),jl("maxPool",a,r);const c={x:o},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r},u=ko.runKernel(Aa,c,l);return i?ql(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const Dh=Oo({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=_o(e,"x","maxPool3d");let i=o,c=!1;4===o.rank&&(c=!0,i=ql(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ut(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),ut("NDHWC"===s,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),jl("maxPool3d",a,r);const l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},h=ko.runKernel(Fa,l,u);return c?ql(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const Oh=Oo({maxPoolWithArgmax_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s={x:_o(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},i=ko.runKernel(Oa,s,o);return{result:i[0],indexes:i[1]}}});const Mh=Oo({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:_o(e,"x","mean")},r={axis:t,keepDims:n};return ko.runKernel(Ma,a,r)}});function Lh(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(zt(e),"complex64"===t){const t=Lh(e,"float32"),n=Lh(e,"float32");return Mo(t,n)}const n=Mt(pt(e),t);return ko.makeTensor(n,e,t)}function zh(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(zt(e),"complex64"===t){const t=zh(e,"float32"),n=Lh(e,"float32");return Mo(t,n)}const n=Ot(pt(e),t);return ko.makeTensor(n,e,t)}function Ph(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError("".concat(n," is not a valid third argument to meshgrid"));if(void 0===e)return[];let a=_o(e,"x","meshgrid",e instanceof eo?e.dtype:"float32");if(void 0===t)return[a];let r=_o(t,"y","meshgrid",t instanceof eo?t.dtype:"float32");const s=pt(a.shape),o=pt(r.shape);return"xy"===n?(a=ql(a,[1,-1]),r=ql(r,[-1,1]),[Ql(zh([o,1],a.dtype),a),Ql(r,zh([1,s],r.dtype))]):(a=ql(a,[-1,1]),r=ql(r,[1,-1]),[Ql(a,zh([1,o],a.dtype)),Ql(zh([s,1],r.dtype),r)])}const Bh=Oo({minimum_:function(e,t){let n=_o(e,"a","minimum"),a=_o(t,"b","minimum");[n,a]=fo(n,a),"bool"===n.dtype&&(n=Qi(n,"int32"),a=Qi(a,"int32")),Sc(n.shape,a.shape);const r={a:n,b:a};return ko.runKernel(za,r)}});const Wh=Oo({mirrorPad_:function(e,t,n){ut("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const a=_o(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");ut(t.length===a.rank,(()=>"Padding doesn't match input. Must be ".concat(a.rank,". ")+"Got ".concat(t.length,".")));const r="reflect"===n?1:0;for(let i=0;i<a.rank;i++)ut(2===t[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ut(t[i][0]>=0&&t[i][0]<=a.shape[i]-r&&t[i][1]>=0&&t[i][1]<=a.shape[i]-r,(()=>"Padding in dimension ".concat(i," cannot be greater than or equal ")+"to ".concat(a.shape[i]-r," or less than 0 for input of ")+"shape ".concat(a.shape)));const s={paddings:t,mode:n},o={x:a};return ko.runKernel(Pa,o,s)}});const Vh=Oo({mod_:function(e,t){let n=_o(e,"a","mod"),a=_o(t,"b","mod");[n,a]=fo(n,a);const r={a:n,b:a};return ko.runKernel(Ba,r)}});const Uh=Oo({moments_:function(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=vt(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,(e=_o(e,"x","moments")).shape),a=Mh(e,n,t);let r=a.shape;t||(r=Gu(a.shape,n));const s=rc(bc(Qi(e,"float32"),ql(a,r)));return{mean:a,variance:Mh(s,n,t)}}});const Gh=Oo({multiRNNCell_:function(e,t,n,a){const r=_o(t,"data","multiRNNCell"),s=Fo(n,"c","multiRNNCell"),o=Fo(a,"h","multiRNNCell");let i=r;const c=[];for(let h=0;h<e.length;h++){const t=e[h](i,s[h],o[h]);c.push(t[0]),c.push(t[1]),i=t[1]}const l=[],u=[];for(let h=0;h<c.length;h+=2)l.push(c[h]),u.push(c[h+1]);return[l,u]}});const Hh=Oo({multinomial_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=_o(e,"logits","multinomial"),s=r.size,o=r.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(s,"."));if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(o));n=n||Math.random();const i={logits:1===o?ql(r,[1,-1]):r},c={numSamples:t,seed:n,normalized:a},l=ko.runKernel(Wa,i,c);return 1===o?ql(l,[l.size]):l}});const jh=Oo({notEqual_:function(e,t){let n=_o(e,"a","notEqual","string_or_numeric"),a=_o(t,"b","notEqual","string_or_numeric");[n,a]=fo(n,a),Sc(n.shape,a.shape);const r={a:n,b:a};return ko.runKernel(Ga,r)}});const qh=Oo({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(t));const s={indices:_o(e,"indices","oneHot","int32")},o={dtype:r,depth:t,onValue:n,offValue:a};return ko.runKernel(Xa,s,o)}});const Kh=Oo({onesLike_:function(e){const t={x:_o(e,"x","onesLike")};return ko.runKernel(Ka,t)}});const Xh=Oo({outerProduct_:function(e,t){const n=_o(e,"v1","outerProduct"),a=_o(t,"v2","outerProduct");ut(1===n.rank&&1===a.rank,(()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=ql(n,[-1,1]),s=ql(a,[1,-1]);return Ql(r,s)}});const Yh=Oo({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a=_o(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},s={x:a};return ko.runKernel(Qa,s,r)}});const Qh=Oo({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return ut(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Yh(e,[t],n)}});const Zh=Oo({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return ut(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Yh(e,t,n)}});const Jh=Oo({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return ut(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Yh(e,t,n)}});const $h=Oo({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return ut(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Yh(e,t,n)}});const ed=Oo({spaceToBatchND_:function(e,t,n){const a=_o(e,"x","spaceToBatchND");ut(a.rank>=1+t.length,(()=>"input rank ".concat(a.rank," should be > than [blockShape] ").concat(t.length))),ut(n.length===t.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(t.length))),ut(a.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>"input spatial dimensions ".concat(a.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(t.toString())));const r={x:a},s={blockShape:t,paddings:n};return ko.runKernel(Rr,r,s)}});const td=Oo({pool_:function(e,t,n,a,r,s,o){null==r&&(r=[1,1]),null==s&&(s=1),0===a&&(a="valid");const i=_o(e,"x","maxPool");let c=i,l=!1;3===i.rank&&(l=!0,c=ql(i,[1,i.shape[0],i.shape[1],i.shape[2]])),ut(Ul(s,r),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(r,"'")));const u=Fl(c.shape,t,s,r,a),h=[u.dilationHeight,u.dilationWidth];let d;d="same"===a?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),a=n.map((e=>e-1)),r=a.map((e=>Math.floor(e/2))),s=a.map(((e,t)=>e-r[t]));return a.map(((e,t)=>[r[t],s[t]]))}([u.filterHeight,u.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const a=n.map((e=>e[0])),r=n.map((e=>e[1])),s=e.concat(a,r),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=r.map(((e,t)=>e+o[t])),c=t.map(((e,t)=>[a[t],i[t]])),l=t.map(((e,t)=>[0,o[t]]));return[c,l]}([u.inHeight,u.inWidth],h,d),g=p?a:"valid",y=p?c:ed(c,h,f),b=("avg"===n?()=>Kl(y,t,s,g,o):()=>Fh(y,t,s,g,o))(),x=p?b:tu(b,h,m);return l?ql(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});const nd=Oo({prelu_:function(e,t){const n={x:_o(e,"x","prelu"),alpha:_o(t,"alpha","prelu")};return ko.runKernel(Ja,n)}});const ad=Oo({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=_o(e,"x","prod");"bool"===a.dtype&&(a=Qi(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return ko.runKernel($a,r,s)}});const rd=Oo({raggedGather_:function(e,t,n,a){const r={paramsNestedSplits:e.map(((e,t)=>_o(e,"tensors".concat(t),"raggedGather","int32"))),paramsDenseValues:_o(t,"paramsDenseValues","raggedGather"),indices:_o(n,"indices","raggedGather","int32")},s={outputRaggedRank:a},o=ko.runKernel(er,r,s);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}});const sd=Oo({raggedRange_:function(e,t,n){const a=_o(e,"starts","raggedRange"),r={starts:a,limits:_o(t,"limits","raggedRange",a.dtype),deltas:_o(n,"deltas","raggedRange",a.dtype)},s=ko.runKernel(tr,r);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}});const od=Oo({raggedTensorToTensor_:function(e,t,n,a,r){const s=_o(e,"shape","raggedTensorToTensor","int32"),o=_o(t,"values","raggedTensorToTensor"),i={shape:s,values:o,defaultValue:_o(n,"defaultValue","raggedTensorToTensor",o.dtype),rowPartitionTensors:a.map(((e,t)=>_o(e,"tensors".concat(t),"raggedTensorToTensor","int32")))},c={rowPartitionTypes:r};return ko.runKernel(nr,i,c)}});const id=Oo({rand_:function(e,t,n){zt(e);const a=pt(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));r=new Uint8Array(a)}for(let s=0;s<a;s++)r[s]=t();return ko.makeTensor(r,e,n)}});var cd=n(334);class ld{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=cd.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*o,t=this.mean+this.stdDev*r*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class ud{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;const r=a||Math.random();this.randu=cd.alea(r.toString()),this.randn=new ld(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,s;for(;;){do{a=this.randn.nextValue(),s=1+this.c*a}while(s<=0);if(s*=s*s,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class hd{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(e," - ").concat(t," <= 1 and dtype is not float"));this.random=cd.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const dd=Oo({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;if(zt(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error("Unsupported data type ".concat(a));const s=new ud(t,n,a,r),o=Yi(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const pd=Oo({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(zt(e),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const s=new ld(t,n,a,!1,r),o=Yi(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const fd=Oo({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error("Unsupported data type ".concat(t));return pd(e,0,1,t,n)}});const md=Oo({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;zt(e);const s=Yi(e,a),o=new hd(t,n,null,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const gd=Oo({randomUniformInt_:function(e,t,n,a){return md(e,t,n,"int32",a)}});function yd(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:a};return ko.runKernel(ar,{},r)}const bd=Oo({real_:function(e){const t={input:_o(e,"input","real")};return ko.runKernel(rr,t)}});const xd=Oo({reciprocal_:function(e){const t={x:_o(e,"x","reciprocal")};return ko.runKernel(sr,t)}});const vd=Oo({relu_:function(e){const t={x:_o(e,"x","relu")};return ko.runKernel(or,t)}});const wd=Oo({relu6_:function(e){const t={x:_o(e,"x","relu6")};return ko.runKernel(dr,t)}});const kd=Oo({reverse_:function(e,t){const n={x:_o(e,"x","reverse")},a={dims:t};return ko.runKernel(pr,n,a)}});const Sd=Oo({reverse1d_:function(e){const t=_o(e,"x","reverse");return ut(1===t.rank,(()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(t.rank,"."))),kd(t,0)}});const Nd=Oo({reverse2d_:function(e,t){const n=_o(e,"x","reverse");return ut(2===n.rank,(()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,"."))),kd(n,t)}});const Id=Oo({reverse3d_:function(e,t){const n=_o(e,"x","reverse");return ut(3===n.rank,(()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,"."))),kd(n,t)}});const Td=Oo({reverse4d_:function(e,t){const n=_o(e,"x","reverse");return ut(4===n.rank,(()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,"."))),kd(n,t)}});const Cd=Oo({round_:function(e){const t={x:_o(e,"x","round")};return ko.runKernel(fr,t)}});const Ed=Oo({rsqrt_:function(e){const t={x:_o(e,"x","rsqrt","float32")};return ko.runKernel(mr,t)}});const Rd=Oo({selu_:function(e){const t={x:_o(e,"x","selu")};return ko.runKernel(vr,t)}});const Ad=Oo({separableConv2d_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const i=_o(e,"x","separableConv2d"),c=_o(t,"depthwiseFilter","separableConv2d"),l=_o(n,"pointwiseFilter","separableConv2d");let u=i,h=!1;if(3===i.rank&&(h=!0,u=ql(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");ut(4===u.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(u.rank,"."))),ut(4===c.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),ut(4===l.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),ut(1===l.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(l.shape[0],"."))),ut(1===l.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(l.shape[1],".")));const d=c.shape[2],p=c.shape[3];ut(l.shape[2]===d*p,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(d*p,", ")+"but got ".concat(l.shape[2],".")));const f=Ru(u,c,a,r,o,s),m=gu(f,l,1,"valid",o);return h?ql(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const _d=async function(e,t){const n=_o(e,"x","setdiff1d"),a=_o(t,"y","setdiff1d");ut(n.dtype===a.dtype,(()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(a.dtype,")."))),ut(1===n.rank,(()=>"x should be 1D tensor, but got x (".concat(n.shape,")."))),ut(1===a.rank,(()=>"y should be 1D tensor, but got y (".concat(a.shape,").")));const r=await n.data(),s=await a.data(),o=new Set(s);let i=0;for(let u=0;u<r.length;u++)o.has(r[u])||i++;const c=new Qs([i],n.dtype),l=new Qs([i],"int32");for(let u=0,h=0;u<r.length;u++)o.has(r[u])||(c.values[h]=r[u],l.values[h]=u,h++);return[c.toTensor(),l.toTensor()]};const Fd=Oo({sign_:function(e){const t={x:_o(e,"x","sign")};return ko.runKernel(Nr,t)}});const Dd=Oo({sin_:function(e){const t={x:_o(e,"x","sin","float32")};return ko.runKernel(kr,t)}});const Od=Oo({sinh_:function(e){const t={x:_o(e,"x","sinh")};return ko.runKernel(Sr,t)}});const Md=Oo({slice1d_:function(e,t,n){const a=_o(e,"x","slice1d");return ut(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),Jl(a,[t],[n])}});const Ld=Oo({slice2d_:function(e,t,n){const a=_o(e,"x","slice2d");return ut(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),Jl(a,t,n)}});const zd=Oo({slice3d_:function(e,t,n){const a=_o(e,"x","slice3d");return ut(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),Jl(a,t,n)}});const Pd=Oo({slice4d_:function(e,t,n){const a=_o(e,"x","slice4d");return ut(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),Jl(a,t,n)}});const Bd=Oo({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=_o(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(t));const a={logits:n},r={dim:t};return ko.runKernel(_r,a,r)}});const Wd=Oo({fft_:function(e){ut("complex64"===e.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return ko.runKernel(ta,t)}});const Vd=Oo({ifft_:function(e){ut("complex64"===e.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return ko.runKernel(da,t)}});const Ud=Oo({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let a;if(t<=2){const r=ql(e,[n,t]);a=Vd(r)}else{const r=[n,2*(t-1)],s=ql(bd(e),[n,t]),o=ql(lh(e),[n,t]),i=kd(Jl(s,[0,1],[n,t-2]),1),c=nc(kd(Jl(o,[0,1],[n,t-2]),1),ic(-1)),l=Yl([s,i],1),u=Yl([o,c],1),h=ql(Mo(l,u),[r[0],r[1]]);a=Vd(h)}if(a=bd(a),3===e.rank&&0!==e.shape[0]){const t=a,n=e.shape[0];a=ql(a,[n,a.shape[0]/n,a.shape[1]]),t.dispose()}return a}});const Gd=Oo({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a={x:_o(e,"x","split")},r={numOrSizeSplits:t,axis:n};return ko.runKernel(Ar,a,r)}});const Hd=Oo({rfft_:function(e,t){ut("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(e.dtype)));let n=e.shape[e.shape.length-1];const a=e.size/n;let r;if(null!=t&&t<n){const a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,r=Jl(e,a,s),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,r=Yl([e,Lh(a)],e.shape.length-1),n=t}else r=e;const s=sc(r),o=ql(Mo(r,s),[a,n]),i=Wd(o),c=Math.floor(n/2)+1,l=bd(i),u=lh(i),h=Gd(l,[c,n-c],l.shape.length-1),d=Gd(u,[c,n-c],u.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=c,ql(Mo(h[0],d[0]),p)}});const jd=Oo({squaredDifference_:function(e,t){let n=_o(e,"a","squaredDifference"),a=_o(t,"b","squaredDifference");[n,a]=fo(n,a),Sc(n.shape,a.shape);const r={a:n,b:a};return ko.runKernel(zr,r,{})}});const qd=Oo({squeeze_:function(e,t){const n=_o(e,"x","squeeze","string_or_numeric");return ql(n,wt(n.shape,t).newShape)}});const Kd=Oo({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Fo(e,"tensors","stack","string_or_numeric");ut(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&ut(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,r={axis:t};return ko.runKernel(Ya,a,r)}});const Xd=Oo({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:_o(e,"x","step")},a={alpha:t};return ko.runKernel(ts,n,a)}});const Yd=Oo({stridedSlice_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const l={x:_o(e,"x","stridedSlice","string_or_numeric")},u={begin:t,end:n,strides:a,beginMask:r,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:c};return ko.runKernel(Wr,l,u)}});const Qd=Oo({tan_:function(e){const t={x:_o(e,"x","tan","float32")};return ko.runKernel(jr,t)}});function Zd(e,t){dt(e);const n=Eo(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Lo(e,null,n,t)}function Jd(e,t,n){if(dt(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=Eo(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Lo(e,t,a,n)}function $d(e,t,n){if(dt(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=Eo(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Lo(e,t,a,n)}function ep(e,t,n){if(dt(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=Eo(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Lo(e,t,a,n)}function tp(e,t,n){if(dt(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=Eo(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Lo(e,t=t||a,a,n)}function np(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(t.shape,", shape: ").concat(e)+", sliceDim: ".concat(a,", and batchDim: ").concat(r,".");if(n.rank<r)throw new Error(s+" update.rank < ".concat(r,". "));if(e.length<a+(n.rank-r))throw new Error(s+" Output shape length < ".concat(a+(n.rank-r)));if(n.rank!==r+e.length-a)throw new Error(s+" update.rank != ".concat(r+e.length-a));for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(s+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(t.shape[o],")."));for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+a])throw new Error(s+" updates.shape[".concat(o+r,"] (").concat(n.shape[o+r],") != shape[").concat(o+r,"] (").concat(e[o+r],")"))}function ap(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(t.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: ".concat(t.shape));if(0===e.size)throw new Error("Updates specified for empty output. updates shape: ".concat(e.shape))}np(n,t,e)}function rp(e,t,n){const a=t.shape.length,r=a>1?t.shape[a-1]:1,s=n.length;let o=1;for(let c=r;c<s;++c)o*=n[c];const i=r<1?1:r;return{sliceRank:r,numUpdates:pt(t.shape)/i,sliceSize:o,strides:[..._t(n.slice(0,r)),1],outputSize:pt(n)}}const sp=Oo({tensorScatterUpdate_:function(e,t,n){const a=_o(e,"tensor","tensorScatterupdate"),r=_o(t,"indices","tensorScatterupdate","int32"),s=_o(n,"updates","tensorScatterupdate");if(ap(s,r,a.shape),a.dtype!==s.dtype)throw new Error("tensor and updates must have the same dtype, instead they are ".concat(a.dtype," and ").concat(s.dtype,"."));const o={tensor:a,indices:r,updates:s};return ko.runKernel(yr,o,{})}});const op=Oo({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=_o(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=a.shape[a.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(t));if(t>r)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(r,") ")+"but got ".concat(t));const s={x:a},o={k:t,sorted:n},[i,c]=ko.runKernel(Xr,s,o);return{values:i,indices:c}}});const ip=Oo({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(zt(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const s=new ld(t,n,a,!0,r),o=Yi(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const cp=Oo({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=_o(e,"x","unique","string_or_numeric");ut(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},r={axis:t},[s,o]=ko.runKernel(Zr,a,r);return{values:s,indices:o}}});const lp=Oo({unsortedSegmentSum_:function(e,t,n){const a=_o(e,"x","unsortedSegmentSum"),r=_o(t,"segmentIds","unsortedSegmentSum","int32");ut(mt(n),(()=>"numSegments must be of dtype int"));const s={x:a,segmentIds:r},o={numSegments:n};return ko.runKernel($r,s,o)}});const up=Oo({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=_o(e,"x","unstack","string_or_numeric");ut(t>=-n.shape.length&&t<n.shape.length,(()=>"Axis = ".concat(t," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const a={value:n},r={axis:t};return ko.runKernel(Jr,a,r)}});function hp(e,t){return Ah(e,t,"right")}function dp(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return ko.makeVariable(e,t,n,a)}function pp(e,t){const n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);const a=Yi(e,"int32"),r=Yi([n.length,e.length],"int32");for(let s=0;s<n.length;s++){const t=a.indexToLoc(n[s]),o=s*e.length;r.values.set(t,o)}return r.toTensor()}const fp=async function(e){const t=_o(e,"condition","whereAsync","bool"),n=await t.data(),a=pp(t.shape,n);return e!==t&&t.dispose(),a};const mp=async function(e,t,n){const a=_o(e,"tensor","boolMask"),r=_o(t,"mask","boolMask","bool"),s=null==n?0:n,o=r.rank,i=a.shape;ut(o>0,(()=>"mask cannot be scalar")),ht(i.slice(s,s+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let m=s;m<s+o;m++)c*=i[m];const l=i.slice(0,s).concat([c],i.slice(s+o)),u=ql(a,l),h=ql(r,[-1]),d=await fp(h),p=qd(d,[1]),f=oh(u,p,s);return e!==a&&a.dispose(),t!==r&&r.dispose(),p.dispose(),u.dispose(),h.dispose(),d.dispose(),f};const gp=Oo({transpose_:function(e,t,n){const a=_o(e,"x","transpose");if(null==t&&(t=a.shape.map(((e,t)=>t)).reverse()),ut(a.rank===t.length,(()=>"Error in transpose: rank of input ".concat(a.rank," ")+"must match length of perm ".concat(t,"."))),t.forEach((e=>{ut(e>=0&&e<a.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(a.rank-1)+" but got ".concat(t)))})),a.rank<=1)return a.clone();const r={x:a},s={perm:t};return"complex64"===a.dtype?Uo((()=>{let e=bd(a),t=lh(a);return e=ko.runKernel(Qr,{x:e},s),t=ko.runKernel(Qr,{x:t},s),n&&(t=vh(t)),Mo(e,t)})):ko.runKernel(Qr,r,s)}});const yp=Oo({movingAverage_:function(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const s=_o(e,"v","movingAverage"),o=_o(t,"x","movingAverage"),i=_o(n,"decay","movingAverage");var c,l;l=o,ut((c=s).dtype===l.dtype,(()=>"The dtypes of the first(".concat(c.dtype,") and")+" second(".concat(l.dtype,") input must match"))),ut(ft(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const u=ic(1),h=bc(u,i);let d=nc(bc(o,s),h);if(r){ut(null!=a,(()=>"When using zeroDebias: true, step is required."));const e=_o(a,"step","movingAverage");d=tc(d,bc(u,yc(i,e)))}return $i(s,d)}});const bp=Oo({scatterND_:function(e,t,n){zt(n);const a=_o(e,"indices","scatterND","int32"),r=_o(t,"updates","scatterND");ap(r,a,n);const s={indices:a,updates:r},o={shape:n};return ko.runKernel(gr,s,o)}});const xp=Oo({sparseToDense_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;zt(n);const r=_o(e,"sparseIndices","sparseToDense","int32"),s=_o(t,"sparseValues","sparseToDense","string_or_numeric"),o=_o(a,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(e.shape,"."));const r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(s,"."));const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==r))throw new Error("sparseValues has incorrect shape "+"".concat(t.shape,", should be [] or [").concat(r,"]"));if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,s,n,o);const i={sparseIndices:r,sparseValues:s,defaultValue:o},c={outputShape:n};return ko.runKernel(Lr,i,c)}});const vp=Oo({gatherND_:function(e,t){const n=_o(t,"indices","gatherND","int32"),a={params:_o(e,"x","gatherND","string_or_numeric"),indices:n};return ko.runKernel(ca,a)}});const wp=Oo({dropout_:function(e,t,n,a){const r=_o(e,"x","dropout");if(ut("float32"===r.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(r.dtype," tensor instead."))),ut(t>=0&&t<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(t,"."))),0===t)return e instanceof eo?r.clone():r;const s=function(e,t){if(null==t)return e.shape.slice();if(ft(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),o=1-t,i=tc(sh($i(md(s,0,1,"float32",a),o)),o);return nc(r,i)}});function kp(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Sp(e,t,n){const a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(o)}return Zd(r,"float32")}const Np=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const a=_o(e,"predictions","inTopK"),r=_o(t,"targets","inTopK");ut(a.rank>1,(()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(a.rank))),ut(a.rank-1===r.rank,(()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(a.rank," and targets rank ").concat(r.rank))),ht(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=a.shape[a.shape.length-1];ut(n>0&&n<=s,(()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(s,"), but got ").concat(n)));const o=await a.data(),i=await r.data(),[c,l]=[o.length/s,s],u=kt("bool",c);for(let h=0;h<c;h++){const e=h*l,t=o.subarray(e,e+l),a=[];for(let n=0;n<t.length;n++)a.push({value:t[n],index:n});a.sort(((e,t)=>t.value-e.value)),u[h]=0;for(let r=0;r<n;r++)if(a[r].index===i[h]){u[h]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),zo(u,r.shape,"bool")};const Ip=Oo({conv2DBackpropFilter_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0,i=e;3===e.rank&&(i=ql(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=ql(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ut(4===i.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(i.shape,"."))),ut(4===c.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(c.shape,"."))),ut(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const l="NHWC"===s?i.shape[3]:i.shape[1],u="NHWC"===s?c.shape[3]:c.shape[1];ut(l===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(l,") must ")+"match input depth in filter (".concat(n[2],"."))),ut(u===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(u,") must ")+"match output depth for filter (".concat(n[3],")."))),jl("conv2dDerFilter",r,o);const h={x:i,dy:c},d={strides:a,pad:r,dataFormat:s,dimRoundingMode:o,filterShape:n};return ko.runKernel(Tn,h,d)}});function Tp(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return nc(e,Xd(t));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function Cp(e,t){let n=t;const a=kc(e.shape,t.shape);return a.length>0&&(n=Qu(n,a)),ql(n,e.shape)}function Ep(e,t,n,a){if("linear"===t)return e;if("relu"===t)return vd(e);if("elu"===t)return zu(e);if("relu6"===t)return wd(e);if("prelu"===t)return nd(e,n);if("leakyrelu"===t)return ph(e,a);if("sigmoid"===t)return Zl(e);throw new Error("Unknown fused activation ".concat(t,"."))}const Rp=(e,t)=>!(e>0)||"linear"===t;const Ap=Oo({fusedConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}=e;if(l=l||"linear",!1===Rp(ko.state.gradientDepth,l)){ut("NHWC"===s,(()=>"Error in fused conv2d: got dataFormat of ".concat(s," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let e=gu(t,n,a,r,s,o,i);return null!=c&&(e=$i(e,c)),Ep(e,l,u,h)}const d=_o(t,"x","conv2d","float32"),p=_o(n,"filter","conv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=ql(d,[1,d.shape[0],d.shape[1],d.shape[2]])),ut(4===f.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(f.rank,"."))),ut(4===p.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(p.rank,"."))),jl("fused conv2d",r,i);const g="NHWC"===s?f.shape[3]:f.shape[1];ut(p.shape[2]===g,(()=>"Error in conv2d: depth of input (".concat(g,") must match ")+"input depth for filter ".concat(p.shape[2],"."))),ut(Ul(a,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(o,"'")));const y=Ol(f.shape,p.shape,a,o,r,i);let b,x;if(null!=c&&(b=_o(c,"bias","fused conv2d"),[b]=fo(b,d),"NHWC"===s?Sc(y.outShape,b.shape):(ut(b.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(b.shape.length,"."))),ut(0===b.shape.length||b.shape[0]===y.outChannels||1===b.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(b.shape,") is not ")+"compatible with the number of output channels "+"(".concat(y.outChannels,")"))))),null!=u){const e=u.shape;if(ut(e.length<=1||3===e.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(e.length,"."))),1===e.length)ut(1===e[0]||e[0]===y.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(e,") is not compatible with the number of output ")+"channels (".concat(y.outChannels,").")));else if(3===e.length)try{Sc(e,y.outShape)}catch(S){const t="Error in fused conv2d: PReLU activation weights (".concat(e,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(y.outShape,").");throw Error(t)}x=_o(u,"prelu weights","fused conv2d")}const v=(e,t)=>{ut("NHWC"===s,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(s," but only NHWC is currently supported.")));const[n,i,c,u]=t,h=Tp(e,c,l);ut(Vl(o),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")));const d=[bu(i.shape,h,n,a,r),Ip(i,h,n.shape,a,r)];if(null!=u){const e=Cp(u,h);d.push(e)}return d},w={x:f,filter:p,bias:b,preluActivationWeights:x},k={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:h};if(null==c){const e=oc(((e,t,n)=>{let a=ko.runKernel(ss,w,k);return n([t,e,a]),m&&(a=ql(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}}));return e(f,p)}{const e=oc(((e,t,n,a)=>{let r=ko.runKernel(ss,w,k);return a([t,e,r,n]),m&&(r=ql(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(f,p,b)}}});const _p=Oo({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=e;3===e.rank&&(i=ql(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=ql(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:i,dy:c},u={strides:a,pad:r,dimRoundingMode:o,dilations:s,filterShape:n};return ko.runKernel(Bn,l,u)}});const Fp=Oo({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=t,c=!1;3===t.rank&&(c=!0,i=ql(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:i,filter:n},u={strides:a,pad:r,dimRoundingMode:o,dilations:s,inputShape:e},h=ko.runKernel(Wn,l,u);return c?ql(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Dp=Oo({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}=e;if(!1===Rp(ko.state.gradientDepth,l)){let e=Ru(t,n,a,r,s,o,i);return null!=c&&(e=$i(e,c)),Ep(e,l,u,h)}const d=_o(t,"x","depthwiseConv2d","float32"),p=_o(n,"filter","depthwiseConv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=ql(d,[1,d.shape[0],d.shape[1],d.shape[2]])),ut(4===f.rank,(()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(f.rank,"."))),ut(4===p.rank,(()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(p.rank,"."))),ut(f.shape[3]===p.shape[2],(()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(f.shape[3],") must match the inChannels dimension in ")+"filter ".concat(p.shape[2],"."))),null==o&&(o=[1,1]),ut(Ul(a,o),(()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(o,"'"))),jl("fused depthwiseConv2d",r,i);const g=Ol(f.shape,p.shape,a,o,r,i,!0);let y,b;null!=c&&(y=_o(c,"bias","fused conv2d"),[y]=fo(y,d),Sc(g.outShape,y.shape)),null!=u&&(b=_o(u,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{ut(Vl(o),(()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(o,"'")));const[n,s,c,u]=t,h=Tp(e,c,l),d=Fp(s.shape,h,n,a,r,o,i),p=_p(s,h,n.shape,a,r,o,i);if(null!=u){return[d,p,Cp(y,h)]}return[d,p]},v={x:f,filter:p,bias:y,preluActivationWeights:b},w={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:h};if(null==c){const e=oc(((e,t,n)=>{let a=ko.runKernel(os,v,w);return n([t,e,a]),m&&(a=ql(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(f,p)}{const e=oc(((e,t,n,a)=>{let r=ko.runKernel(os,v,w);return a([t,e,r,n]),m&&(r=ql(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(f,p,y)}}});const Op=Oo({fusedMatMul_:function(e){let{a:t,b:n,transposeA:a=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:c=.2}=e;if(!1===Rp(ko.state.gradientDepth,o)){let e=Ql(t,n,a,r);return null!=s&&(e=$i(e,s)),Ep(e,o,i,c)}let l=_o(t,"a","fused matMul"),u=_o(n,"b","fused matMul");[l,u]=fo(l,u);const h=a?l.shape[l.rank-2]:l.shape[l.rank-1],d=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=a?l.shape[l.rank-1]:l.shape[l.rank-2],f=r?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),g=u.shape.slice(0,-2),y=pt(m),b=pt(g);ut(h===d,(()=>"Error in fused matMul: inner shapes (".concat(h,") and (")+"".concat(d,") of Tensors with shapes ").concat(l.shape," and ")+"".concat(u.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const x=Sc(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,f]),v=ql(l,a?[y,h,p]:[y,p,h]),w=ql(u,r?[b,f,d]:[b,d,f]);let k,S;null!=s&&(k=_o(s,"bias","fused matMul"),[k]=fo(k,l),Sc(x,k.shape)),null!=i&&(S=_o(i,"prelu weights","fused matMul"));const N=(e,t)=>{const[n,i,c,l]=t,u=Tp(ql(e,c.shape),c,o);let h,d;if(a||r?!a&&r?(h=Ql(u,i,!1,!1),d=Ql(u,n,!0,!1)):a&&!r?(h=Ql(i,u,!1,!0),d=Ql(n,u,!1,!1)):(h=Ql(i,u,!0,!0),d=Ql(u,n,!0,!0)):(h=Ql(u,i,!1,!0),d=Ql(n,u,!0,!1)),null!=s){return[h,d,Cp(l,u)]}return[h,d]},I={a:v,b:w,bias:k,preluActivationWeights:S},T={transposeA:a,transposeB:r,activation:o,leakyreluAlpha:c};if(null==s){const e=oc(((e,t,n)=>{const a=ko.runKernel(rs,I,T);return n([e,t,a]),{value:ql(a,x),gradFunc:N}}));return e(v,w)}{const e=oc(((e,t,n,a)=>{const r=ko.runKernel(rs,I,T);return a([e,t,r,n]),{value:ql(r,x),gradFunc:N}}));return e(v,w,k)}}});const Mp=Oo({hammingWindow_:function(e){return Sp(e,.54,.46)}});const Lp=Oo({hannWindow_:function(e){return Sp(e,.5,.5)}});const zp=Oo({frame_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const o=[];for(;s+t<=e.size;)o.push(Jl(e,s,t)),s+=n;if(a)for(;s<e.size;){const a=s+t-e.size,i=Yl([Jl(e,s,t-a),mc([a],r)]);o.push(i),s+=n}return 0===o.length?Jd([],[0,t]):ql(Yl(o),[o.length,t])}});const Pp=Oo({stft_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Lp;null==a&&(a=kp(t));const s=zp(e,t,n),o=nc(s,r(t));return Hd(o,a)}});const Bp=Oo({cropAndResize_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=_o(e,"image","cropAndResize"),i=_o(t,"boxes","cropAndResize","float32"),c=_o(n,"boxInd","cropAndResize","int32"),l=i.shape[0];ut(4===o.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),ut(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(l,",4] ")+"but had shape ".concat(i.shape,"."))),ut(1===c.rank&&c.shape[0]===l,(()=>"Error in cropAndResize: boxInd must be have size [".concat(l,"] ")+"but had shape ".concat(i.shape,"."))),ut(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),ut(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),ut("bilinear"===r||"nearest"===r,(()=>"method must be bilinear or nearest, but was ".concat(r)));const u={image:o,boxes:i,boxInd:c},h={method:r,extrapolationValue:s,cropSize:a};return ko.runKernel(Mn,u,h)}});const Wp=Oo({flipLeftRight_:function(e){const t=_o(e,"image","flipLeftRight","float32");ut(4===t.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(t.rank,".")));const n={image:t};return ko.runKernel(aa,n,{})}});const Vp=Oo({grayscaleToRGB_:function(e){const t=_o(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];ut(t.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),ut(1===a,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,".")));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,ah(t,r)}});const Up=Oo({rgbToGrayscale_:function(e){const t=_o(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];ut(t.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),ut(3===a,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,".")));const r=t.dtype,s=Qi(t,"float32"),o=Zd([.2989,.587,.114]);let i;switch(t.rank){case 2:i=Lu("ij,j->i",s,o);break;case 3:i=Lu("ijk,k->ij",s,o);break;case 4:i=Lu("ijkl,l->ijk",s,o);break;case 5:i=Lu("ijklm,m->ijkl",s,o);break;case 6:i=Lu("ijklmn,n->ijklm",s,o);break;default:throw new Error("Not a valid tensor rank.")}return i=th(i,-1),Qi(i,r)}});const Gp=Oo({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=_o(e,"image","rotateWithOffset","float32");ut(4===r.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(r.rank,".")));const s={image:r},o={radians:t,fillValue:n,center:a};return ko.runKernel(as,s,o)}});function Hp(e,t,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),ut(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),ut(2===e.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(e.rank,"'"))),ut(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(e.shape[1]))),ut(1===t.rank,(()=>"scores must be a 1D tensor")),ut(t.shape[0]===o,(()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(t.shape[0]))),ut(0<=s&&s<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(s,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}const jp=Oo({nonMaxSuppression_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=_o(e,"boxes","nonMaxSuppression","float32"),o=_o(t,"scores","nonMaxSuppression","float32"),i=Hp(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return ko.runKernel(Ha,{boxes:s,scores:o},c)}});function qp(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,s=0,o=!1;for(;a<r;){s=a+(r-a>>>1);const i=n(t,e[s]);i>0?a=s+1:(r=s,o=!i)}return o?a:-a-1}(e,t,n||Kp)}(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function Kp(e,t){return e>t?1:e<t?-1:0}function Xp(e,t,n,a,r){return Zp(e,t,n,a,r,0)}function Yp(e,t,n,a,r,s){return Zp(e,t,n,a,r,0,!1,s,!0)}function Qp(e,t,n,a,r,s){return Zp(e,t,n,a,r,s,!0)}function Zp(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const l=[];for(let g=0;g<t.length;g++)t[g]>r&&l.push({score:t[g],boxIndex:g,suppressBeginIndex:0});l.sort(ef);const u=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=t;if(n<r)break;let i=!1;for(let c=h.length-1;c>=o;--c){const n=Jp(e,s,h[c]);if(n>=a){i=!0;break}if(t.score=t.score*$p(a,u,n),t.score<=r)break}t.suppressBeginIndex=h.length,i||(t.score===n?(h.push(s),d.push(t.score)):t.score>r&&qp(l,t,ef))}const p=h.length,f=n-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return o&&(m.selectedScores=d),c&&(m.validOutputs=p),m}function Jp(e,t,n){const a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),o=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),l=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(i-s)*(c-o),f=(h-l)*(d-u);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(o,u),y=Math.min(i,h),b=Math.min(c,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function $p(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function ef(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const tf=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=_o(e,"boxes","nonMaxSuppressionAsync"),o=_o(t,"scores","nonMaxSuppressionAsync"),i=Hp(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([s.data(),o.data()]),l=c[0],u=c[1],{selectedIndices:h}=Xp(l,u,n,a,r);return s!==e&&s.dispose(),o!==t&&o.dispose(),Zd(h,"int32")};const nf=Oo({nonMaxSuppressionWithScore_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=_o(e,"boxes","nonMaxSuppression"),i=_o(t,"scores","nonMaxSuppression"),c=Hp(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const l={boxes:o,scores:i},u={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s},h=ko.runKernel(qa,l,u);return{selectedIndices:h[0],selectedScores:h[1]}}});const af=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=_o(e,"boxes","nonMaxSuppressionAsync"),i=_o(t,"scores","nonMaxSuppressionAsync"),c=Hp(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Qp(u,h,n,a,r,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Zd(d,"int32"),selectedScores:Zd(p)}};const rf=Oo({nonMaxSuppressionPadded_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=_o(e,"boxes","nonMaxSuppression"),i=_o(t,"scores","nonMaxSuppression"),c=Hp(o,i,n,a,r,null),l={boxes:o,scores:i},u={maxOutputSize:c.maxOutputSize,iouThreshold:c.iouThreshold,scoreThreshold:c.scoreThreshold,padToMaxOutputSize:s},h=ko.runKernel(ja,l,u);return{selectedIndices:h[0],validOutputs:h[1]}}});const sf=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=_o(e,"boxes","nonMaxSuppressionAsync"),i=_o(t,"scores","nonMaxSuppressionAsync"),c=Hp(o,i,n,a,r,null),l=c.maxOutputSize,u=c.iouThreshold,h=c.scoreThreshold,[d,p]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Yp(d,p,l,u,h,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Zd(f,"int32"),validOutputs:ic(m,"int32")}};const of=Oo({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=_o(e,"images","resizeBilinear");ut(3===r.rank||4===r.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),ut(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(t,"."))),ut(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=r,o=!1;3===r.rank&&(o=!0,s=ql(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,i={images:s},c={alignCorners:n,halfPixelCenters:a,size:t},l=ko.runKernel(ur,i,c);return o?ql(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const cf=Oo({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=_o(e,"images","resizeNearestNeighbor");ut(3===r.rank||4===r.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),ut(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(t,"."))),ut("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),ut(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=r,o=!1;3===r.rank&&(o=!0,s=ql(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,i={images:s},c={alignCorners:n,halfPixelCenters:a,size:t},l=ko.runKernel(cr,i,c);return o?ql(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const lf=Oo({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=_o(e,"image","threshold"),s=r.shape[0]*r.shape[1];let o,i,c,l,u=nc(Zd([a]),255);if(ut(3===r.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(r.rank,"."))),ut(3===r.shape[2]||1===r.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(r.shape[2],"."))),ut("int32"===r.dtype||"float32"===r.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(r.dtype,"."))),ut("otsu"===t||"binary"===t,(()=>"Method must be binary or otsu, but was ".concat(t))),3===r.shape[2]){[o,i,c]=Gd(r,[1,1,1],-1);const e=nc(o,.2989),t=nc(i,.587),n=nc(c,.114);l=$i($i(e,t),n)}else l=e;if("otsu"===t){u=function(e,t){let n,a,r,s,o,i,c=Zd([-1]),l=Zd([0]),u=Zd([0]);for(let h=0;h<e.size-1;h++){n=Jl(e,0,h+1),a=Jl(e,h+1),o=tc(Qu(n),t),i=tc(Qu(a),t);const d=Qu(nc(n,yd(0,n.size)));r=tc(d,Qu(n));const p=mc(a.shape,n.size),f=$i(yd(0,a.size),p),m=nc(a,f);s=tc(Qu(m),Qu(a));const g=bc(r,s),y=bc(r,s),b=nc(o,i);u=nc(nc(b,g),y);const x=ih(u,l);l=Du(x,u,l),c=Du(x,Zd([h]),c)}return c}(ou(Qi(Cd(l),"int32"),zo([]),256),s)}const h=n?mh(l,u):ih(l,u);return Qi(nc(h,255),"int32")}});const uf=Oo({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const o=_o(e,"image","transform","float32"),i=_o(t,"transforms","transform","float32");ut(4===o.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),ut(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),ut(null==s||2===s.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(s,".")));const c={image:o,transforms:i},l={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return ko.runKernel(Yr,c,l)}});const hf=Oo({bandPart_:function(e,t,n){const a=_o(e,"a","bandPart");ut(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const r=a.shape,[s,o]=a.shape.slice(-2);let i,c;"number"===typeof t?(ut(t%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(t,"."))),ut(t<=s,(()=>"bandPart(): numLower (".concat(t,")")+" must not be greater than the number of rows (".concat(s,")."))),i=_o(t<0?s:t,"numLower","bandPart")):(ut("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=Du(fh(t,0),s,Bh(t,s))),"number"===typeof n?(ut(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),ut(n<=o,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,")."))),c=_o(n<0?o:n,"numUpper","bandPart")):(ut("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),c=Du(fh(n,0),o,Bh(n,o)));const l=ql(yd(0,s,1,"int32"),[-1,1]),u=yd(0,o,1,"int32"),h=bc(l,u),d=Ih(mh(h,i),ch(h,vh(c))),p=Lh([s,o],a.dtype);return ql(Kd(up(ql(a,[-1,s,o])).map((e=>Du(d,e,p)))),r)}});const df=Oo({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,ut(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)ut(e[t].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(e[t].shape[0]," vs. ").concat(n,")")))}else t=!0,e=Gd(e,e.shape[0],0).map((e=>qd(e,[0])));ut(e.length<=e[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(e.length,") exceeds ")+"number of dimensions (".concat(e[0].shape[0],").")));const n=[],a=e;for(let r=0;r<e.length;++r)n.push(ko.tidy((()=>{let e=a[r];if(r>0)for(let t=0;t<r;++t){const a=nc(Qu(nc(n[t],e)),n[t]);e=bc(e,a)}return tc(e,Ju(e,"euclidean"))})));return t?Kd(n,0):n}});function pf(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return ko.tidy((()=>{ut(2===e.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(e.shape.length,"D Tensor.")));const n=e.shape[0],a=e.shape[1];let r=rh(n),s=Zi(e);const o=Jd([[1]],[1,1]);let i=Zi(o);const c=n>=a?a:n;for(let e=0;e<c;++e){const t=s,c=i,l=r;[i,s,r]=ko.tidy((()=>{const t=Jl(s,[e,e],[n-e,1]),c=Ju(t),l=Jl(s,[e,e],[1,1]),u=Du(ih(l,0),Jd([[-1]]),Jd([[1]])),h=bc(l,nc(u,c)),d=tc(t,h);i=1===d.shape[0]?Zi(o):Yl([o,Jl(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=vh(tc(Ql(u,h),c)),f=Jl(s,[e,0],[n-e,a]),m=nc(p,i),g=gp(i);if(0===e)s=bc(f,Ql(m,Ql(g,f)));else{const t=bc(f,Ql(m,Ql(g,f)));s=Yl([Jl(s,[0,0],[e,a]),t],0)}const y=gp(m),b=Jl(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=bc(b,Ql(Ql(b,i),y));else{const t=bc(b,Ql(Ql(b,i),y));r=Yl([Jl(r,[0,0],[n,e]),t],1)}return[i,s,r]})),Go([t,c,l])}return!t&&n>a&&(r=Jl(r,[0,0],[n,a]),s=Jl(s,[0,0],[a,a])),[r,s]}))}const ff=Oo({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(ut(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(e.rank))),2===e.rank)return pf(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=up(ql(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];a.forEach((e=>{const[n,a]=pf(e,t);r.push(n),s.push(a)}));return[ql(Kd(r,0),e.shape),ql(Kd(s,0),e.shape)]}}});var mf;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(mf||(mf={}));const gf=Oo({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:mf.SUM_BY_NONZERO_WEIGHTS;const a=_o(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=_o(t,"weights","computeWeightedLoss"));const s=null==r?a:nc(a,r);if(n===mf.NONE)return s;if(n===mf.SUM)return Qu(s);if(n===mf.MEAN){if(null==r)return Mh(s);{const e=a.size/r.size,t=tc(Qu(s),Qu(r));return e>1?tc(t,ic(e)):t}}if(n===mf.SUM_BY_NONZERO_WEIGHTS){if(null==r)return tc(Qu(s),ic(a.size));{const e=nc(r,zh(a.shape)),t=Qi(Qu(jh(e,ic(0))),"float32");return tc(Qu(s),t)}}throw Error("Unknown reduction: ".concat(n))}});const yf=Oo({absoluteDifference_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:mf.SUM_BY_NONZERO_WEIGHTS;const r=_o(e,"labels","absoluteDifference"),s=_o(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=_o(n,"weights","absoluteDifference")),ht(r.shape,s.shape,"Error in absoluteDifference: ");const i=vc(bc(r,s));return gf(i,o,a)}});const bf=Oo({cosineDistance_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:mf.SUM_BY_NONZERO_WEIGHTS;const s=_o(e,"labels","cosineDistance"),o=_o(t,"predictions","cosineDistance");let i=null;null!=a&&(i=_o(a,"weights","cosineDistance")),ht(s.shape,o.shape,"Error in cosineDistance: ");const c=ic(1),l=bc(c,Qu(nc(s,o),n,!0));return gf(l,i,r)}});const xf=Oo({hingeLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:mf.SUM_BY_NONZERO_WEIGHTS,r=_o(e,"labels","hingeLoss");const s=_o(t,"predictions","hingeLoss");let o=null;null!=n&&(o=_o(n,"weights","hingeLoss")),ht(r.shape,s.shape,"Error in hingeLoss: ");const i=ic(1);r=bc(nc(ic(2),r),i);const c=vd(bc(i,nc(r,s)));return gf(c,o,a)}});const vf=Oo({huberLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:mf.SUM_BY_NONZERO_WEIGHTS;const s=_o(e,"labels","huberLoss"),o=_o(t,"predictions","huberLoss");let i=null;null!=n&&(i=_o(n,"weights","huberLoss")),ht(s.shape,o.shape,"Error in huberLoss: ");const c=ic(a),l=vc(bc(o,s)),u=Bh(l,c),h=bc(l,u),d=$i(nc(ic(.5),rc(u)),nc(c,h));return gf(d,i,r)}});const wf=Oo({logLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:mf.SUM_BY_NONZERO_WEIGHTS;const s=_o(e,"labels","logLoss"),o=_o(t,"predictions","logLoss");let i=null;null!=n&&(i=_o(n,"weights","logLoss")),ht(s.shape,o.shape,"Error in logLoss: ");const c=ic(1),l=ic(a),u=vh(nc(s,bh($i(o,l)))),h=nc(bc(c,s),bh($i(bc(c,o),l))),d=bc(u,h);return gf(d,i,r)}});const kf=Oo({meanSquaredError_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:mf.SUM_BY_NONZERO_WEIGHTS;const r=_o(e,"labels","meanSquaredError"),s=_o(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=_o(n,"weights","meanSquaredError")),ht(r.shape,s.shape,"Error in meanSquaredError: ");const i=jd(r,s);return gf(i,o,a)}});const Sf=Oo({sigmoidCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:mf.SUM_BY_NONZERO_WEIGHTS,s=_o(e,"multiClassLabels","sigmoidCrossEntropy");const o=_o(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=_o(n,"weights","sigmoidCrossEntropy")),ht(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=ic(a),t=ic(1),n=ic(.5);s=$i(nc(s,bc(t,e)),nc(n,e))}const c=function(e,t){const n=_o(e,"labels","sigmoidCrossEntropyWithLogits"),a=_o(t,"logits","sigmoidCrossEntropyWithLogits");ht(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=vd(a),s=nc(a,n),o=xh(eh(vh(vc(a))));return $i(bc(r,s),o)}(s,o);return gf(c,i,r)}});const Nf=Oo({softmaxCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:mf.SUM_BY_NONZERO_WEIGHTS,s=_o(e,"onehotLabels","softmaxCrossEntropy");const o=_o(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=_o(n,"weights","softmaxCrossEntropy")),ht(s.shape,o.shape,"Error in softmaxCrossEntropy: "),a>0){const e=ic(a),t=ic(1),n=ic(s.shape[1]);s=$i(nc(s,bc(t,e)),tc(e,n))}const c=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(t.rank," ")+"and dim was ".concat(n));const a=oc(((e,t,a)=>{const r=Nh(t,[n],!0),s=bc(Qi(t,"float32"),r);a([e,s]);const o=vh(nc(s,e));return{value:Qu(o,[n]),gradFunc:(e,t)=>{const[a,r]=t,s=Gu(e.shape,[n]);return[nc(ql(e,s),bc(Qi(a,"float32"),eh(r))),nc(ql(e,s),bc(eh(r),Qi(a,"float32")))]}}}));return a(e,t)}(s,o);return gf(c,i,r)}});const If=Oo({sparseFillEmptyRows_:function(e,t,n,a){const r=_o(e,"indices","sparseFillEmptyRows","int32"),s=_o(t,"values","sparseFillEmptyRows"),o=_o(n,"denseShape","sparseFillEmptyRows","int32"),i=_o(a,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==r.rank)throw new Error("Indices should be Tensor2D but received shape\n        ".concat(r.shape));if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape ".concat(s.shape));if(1!==o.rank)throw new Error("Dense shape should be Tensor1D but received shape ".concat(o.shape));if(0!==i.rank)throw new Error("Default value should be a scalar but received shape ".concat(i.shape));const c={indices:r,values:s,denseShape:o,defaultValue:i},l=ko.runKernel(Fr,c);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}});const Tf=Oo({sparseReshape_:function(e,t,n){const a=_o(e,"inputIndices","sparseReshape","int32"),r=_o(t,"inputShape","sparseReshape","int32"),s=_o(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==r.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(r.shape));if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(s.shape));const o={inputIndices:a,inputShape:r,newShape:s},i=ko.runKernel(Dr,o);return{outputIndices:i[0],outputShape:i[1]}}});const Cf=Oo({sparseSegmentMean_:function(e,t,n){const a=_o(e,"data","sparseSegmentMean"),r=_o(t,"indices","sparseSegmentMean","int32"),s=_o(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n          ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return ko.runKernel(Or,o)}});const Ef=Oo({sparseSegmentSum_:function(e,t,n){const a=_o(e,"data","sparseSegmentSum"),r=_o(t,"indices","sparseSegmentSum","int32"),s=_o(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n         ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return ko.runKernel(Mr,o)}});const Rf=Oo({stringNGrams_:function(e,t,n,a,r,s,o,i){const c=_o(e,"data","stringNGrams","string");if("string"!==c.dtype)throw new Error("Data must be of datatype string");if(1!==c.shape.length)throw new Error("Data must be a vector, saw: ".concat(c.shape));const l=_o(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const u={separator:n,nGramWidths:a,leftPad:r,rightPad:s,padWidth:o,preserveShortSequences:i},h={data:c,dataSplits:l},d=ko.runKernel(Vr,h,u);return{nGrams:d[0],nGramsSplits:d[1]}}});const Af=Oo({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=_o(e,"input","stringSplit","string"),r=_o(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error("Input should be Tensor1D but received shape ".concat(a.shape));if(0!==r.rank)throw new Error("Delimiter should be a scalar but received shape ".concat(r.shape));const s={skipEmpty:n},o={input:a,delimiter:r},i=ko.runKernel(Ur,o,s);return{indices:i[0],values:i[1],shape:i[2]}}});const _f=Oo({stringToHashBucketFast_:function(e,t){const n=_o(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return ko.runKernel(Gr,r,a)}});const Ff=Oo({staticRegexReplace_:function(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=_o(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:a};return ko.runKernel(Br,{x:r},s)}}),Df={fft:Wd,ifft:Vd,rfft:Hd,irfft:Ud},Of={hammingWindow:Mp,hannWindow:Lp,frame:zp,stft:Pp},Mf={flipLeftRight:Wp,grayscaleToRGB:Vp,resizeNearestNeighbor:cf,resizeBilinear:of,rgbToGrayscale:Up,rotateWithOffset:Gp,cropAndResize:Bp,nonMaxSuppression:jp,nonMaxSuppressionAsync:tf,nonMaxSuppressionWithScore:nf,nonMaxSuppressionWithScoreAsync:af,nonMaxSuppressionPadded:rf,nonMaxSuppressionPaddedAsync:sf,threshold:lf,transform:uf},Lf={bandPart:hf,gramSchmidt:df,qr:ff},zf={absoluteDifference:yf,computeWeightedLoss:gf,cosineDistance:bf,hingeLoss:xf,huberLoss:vf,logLoss:wf,meanSquaredError:kf,sigmoidCrossEntropy:Sf,softmaxCrossEntropy:Nf},Pf={sparseFillEmptyRows:If,sparseReshape:Tf,sparseSegmentMean:Cf,sparseSegmentSum:Ef},Bf={stringNGrams:Rf,stringSplit:Af,stringToHashBucketFast:_f,staticRegexReplace:Ff};const Wf=class{static sgd(e){return new Tc(e)}static momentum(e,t){return new Cc(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new Ec(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new xc(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new fc(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Ic(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new gc(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},Vf="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function Uf(){return new Promise((e=>Vf((()=>e()))))}function Gf(e,t){const n=e[0].length;e.forEach(((e,t)=>{ut(e.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(t,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),ut(t>=0&&t<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=e[0];e.forEach(((e,r)=>{for(let s=0;s<n;s++)ut(s===t||e[s]===a[s],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(r,"] (").concat(e,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(r,".")))}))}function Hf(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var jf;function qf(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.rank = ").concat(e+n.length,", but shape.rank = ").concat(a.length));for(let r=1;r<n.length;++r){const s=n[r],o=a[a.length-n.length+r],i=a[o];if(s>=0)if(i>=0){if(i!==s)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.shape[").concat(r+e,"] = ").concat(s," but shape[").concat(r+e,"] = ").concat(i))}else a[o]=s}return a}function Kf(e){const t={FIRST_DIM_SIZE:jf.FIRST_DIM_SIZE,VALUE_ROWIDS:jf.VALUE_ROWIDS,ROW_LENGTHS:jf.ROW_LENGTHS,ROW_SPLITS:jf.ROW_SPLITS,ROW_LIMITS:jf.ROW_LIMITS,ROW_STARTS:jf.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function Xf(e){return 0===e.length?0:e[0]===jf.FIRST_DIM_SIZE?e.length-1:e.length}function Yf(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error("defaultValue.shape=".concat(e," and ragged tensor flatValues.shape=").concat(t,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let r=0;r<Math.min(n,a-1);++r){const n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(e,", and ragged tensor input flatValues.shape=").concat(t," are incompatible: defaultValue.shape[").concat(r-e.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(r-e.length,"] = ").concat(a))}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(jf||(jf={}));const Qf=30;function Zf(e){return e<=Qf?e:At(e,Math.floor(Math.sqrt(e)))}function Jf(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function $f(e,t,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function em(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{const a=[],r=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?r.push(n):a.push(n);n.push(...a),n.push(0),n.push(...r)}return n}function tm(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?a?r.push(t[s-1]*e[s]):r.push(e[s]/t[s-1]):r.push(e[s]);return r}function nm(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function am(e,t,n){const a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}function rm(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(t.shape[a-1]," vs. ").concat(n));if(0===pt(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(e.shape,"."));const r=t.shape,s=r[r.length-1];let o=1;for(let h=0;h<r.length-1;++h)o*=r[h];const i=e.shape,c=r.slice();c.pop();let l=1;for(let h=s;h<n;++h)l*=i[h],c.push(i[h]);const u=[..._t(e.shape).map((e=>e/l)),1].slice(0,s);return[c,o,l,u]}const sm=1.7580993408473768,om=1.0507009873554805,im=.3275911,cm=.254829592,lm=-.284496736,um=1.421413741,hm=-1.453152027,dm=1.061405429;function pm(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(e.length,", imag: ").concat(t.length,"."));const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function fm(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function mm(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function gm(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function ym(e,t){return{real:e[2*t],imag:e[2*t+1]}}function bm(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function xm(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function vm(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const wm="->",km=/->/g,Sm=",",Nm="...";function Im(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(km,"").length)/wm.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(wm,'").'));const[a,r]=e.split(wm);ut(-1===a.indexOf(Nm),(()=>'The ellipsis notation ("'.concat(Nm,'") is not supported yet.')));const s=a.split(Sm),o=s.length;if(t!==o)throw new Error("Expected ".concat(o," input tensors, received ").concat(t));if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<r.length;++h){const e=r[h];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error("Output subscripts contain the label ".concat(e," ")+"not present in the input subscripts.");-1===i.indexOf(e)&&i.push(e)}for(let h=0;h<a.length;++h){const e=a[h];-1===i.indexOf(e)&&e!==Sm&&i.push(e)}const c=new Array(s.length);for(let h=0;h<o;++h){if(new Set(s[h].split("")).size!==s[h].length)throw new Error("Found duplicate axes in input component ".concat(s[h],". ")+"Support for duplicate axes in input is not implemented yet.");c[h]=[];for(let e=0;e<s[h].length;++e)c[h].push(i.indexOf(s[h][e]))}const l=i.length,u=[];for(let h=r.length;h<l;++h)u.push(h);return{allDims:i,summedDims:u,idDims:c}}function Tm(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const a=[];for(let r=0;r<e;++r)-1===n[r]&&a.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function Cm(e,t,n){const a=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===a[t[r][n]]?a[t[r][n]]=e[n]:ut(a[t[r][n]]===e[n],(()=>"Expected dimension ".concat(a[t[r][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(e),", ")+"but got dimension ".concat(e[n])))}}function Em(e,t){const n=e,a=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)a.push([]);const s=[];for(let o=0;o<n.length;++o){const e=Am(t,n[o]);for(const t of e)-1===s.indexOf(t)&&(a[o].push(t),s.push(t))}return{path:n,steps:a}}function Rm(e){return e.every(((e,t)=>e===t))}function Am(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function _m(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof t)ut(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);ut(r<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const a=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-a}ut(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function Fm(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(e)}function Dm(e,t){return"indices(".concat(e,", 0) is invalid: ").concat(t," < 0")}function Om(e,t,n){return"indices(".concat(e,", 0) is invalid: ").concat(t," >= ").concat(n)}function Mm(e,t){return"only one output dimension may be -1, not both ".concat(e," and ").concat(t)}function Lm(e,t){return"size ".concat(e," must be non-negative, not ").concat(t)}function zm(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Pm(e,t){const n=pt(e),a=pt(t);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(e," outputShape= ").concat(t)}function Bm(e,t){const n=pt(e),a=pt(t);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(e," outputShape=").concat(t)}function Wm(){return"segment ids must be >= 0"}function Vm(){return"segment ids are not increasing"}function Um(e,t){return"Segment id ".concat(e," out of range [0, ").concat(t,"), possibly because segmentIds input is not sorted.")}function Gm(e,t,n){return"Bad: indices[".concat(e,"] == ").concat(t," out of range [0, ").concat(n,")")}function Hm(e,t){let n,a=!1;for(e<=Qf?(n=e,a=!0):n=At(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=At(e,n+1);return n}function jm(e,t,n){const a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function qm(e,t,n,a){const r=t.shape.length,s=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error("Expect batchDims in the range of [-".concat(r,", ").concat(r,"], but got ").concat(a));if(a<0&&(a+=r),a>s)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(s,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let h=0;h<a;++h)if(e.shape[h]!==t.shape[h])throw new Error("x.shape[".concat(h,"]: ").concat(e.shape[h]," should be equal to indices.shape[").concat(h,"]: ").concat(t.shape[h],"."));const o=e.shape[n],i=[];let c=1,l=1,u=1;for(let h=0;h<a;++h)i.push(e.shape[h]),c*=e.shape[h];for(let h=a;h<n;h++)i.push(e.shape[h]),l*=e.shape[h];for(let h=a;h<r;h++)i.push(t.shape[h]);for(let h=n+1;h<s;h++)i.push(e.shape[h]),u*=e.shape[h];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:o,outputShape:i}}function Km(e){try{return e.map((e=>Ls(e)))}catch(PV){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(PV))}}function Xm(e){return e.map((e=>Ms(e)))}!function(){for(const e of Rc)dc(e)}();const Ym={kernelName:Yt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(e,Xd(Qi(n,"float32"),-1))}}},Qm={kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=rc(Qi(n,"float32")),a=ac(bc(ic(1),t));return vh(tc(e,a))}}}},Zm={kernelName:Zt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ac(bc(rc(Qi(n,"float32")),1));return tc(e,t)}}}},Jm={kernelName:Jt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Sc(n.shape,a.shape);return{a:()=>{let t=e;const a=kc(n.shape,r);return a.length>0&&(t=Qu(t,a)),ql(t,n.shape)},b:()=>{let t=e;const n=kc(a.shape,r);return n.length>0&&(t=Qu(t,n)),ql(t,a.shape)}}}},$m={kernelName:$t,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}},eg={kernelName:nn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>sc(n)}}},tg={kernelName:an,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>sc(n)}}},ng={kernelName:rn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tc(e,ac(bc(ic(1),rc(Qi(n,"float32")))))}}},ag={kernelName:sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ac($i(ic(1),rc(Qi(n,"float32"))));return tc(e,t)}}}},rg={kernelName:ln,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Sc(n.shape,a.shape);return{a:()=>{const t=$i(rc(n),rc(a));let s=nc(e,tc(a,t));const o=kc(n.shape,r);return o.length>0&&(s=Qu(s,o)),ql(s,n.shape)},b:()=>{const t=$i(rc(n),rc(a));let s=vh(nc(e,tc(n,t)));const o=kc(a.shape,r);return o.length>0&&(s=Qu(s,o)),ql(s,a.shape)}}}},sg={kernelName:on,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tc(e,$i(rc(Qi(n,"float32")),1))}}},og={kernelName:cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tc(e,bc(ic(1),rc(Qi(n,"float32"))))}}};const ig=Oo({avgPool3dGrad_:function(e,t,n,a,r,s){const o=_o(e,"dy","avgPool3dGrad"),i=_o(t,"input","avgPool3dGrad");let c=o,l=i,u=!1;4===i.rank&&(u=!0,c=ql(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=ql(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ut(5===c.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(c.rank,"."))),ut(5===l.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(l.rank,"."))),jl("avgPool3dGrad",r,s);const h={dy:c,input:l},d={filterSize:n,strides:a,pad:r,dimRoundingMode:s},p=ko.runKernel(pn,h,d);return u?ql(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),cg={kernelName:dn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o,dimRoundingMode:i}=n;return{x:()=>ig(e,a,r,s,o,i)}}};const lg=Oo({avgPoolGrad_:function(e,t,n,a,r){const s=_o(e,"dy","avgPoolGrad"),o=_o(t,"input","avgPoolGrad");ut(o.rank===s.rank,(()=>"Rank of input (".concat(o.rank,") does not match rank of dy (").concat(s.rank,")")));let i=o,c=s,l=!1;3===o.rank&&(l=!0,i=ql(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=ql(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ut(4===c.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,"."))),ut(4===i.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,".")));const u={dy:c,input:i},h={filterSize:n,strides:a,pad:r},d=ko.runKernel(hn,u,h);return l?ql(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),ug={kernelName:un,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o}=n;return{x:()=>lg(e,a,r,s,o)}}},hg={kernelName:fn,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,r]=t,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>Ql(e,r,!1,!1),b:()=>Ql(e,a,!0,!1)}:s&&!o?{a:()=>Ql(r,e,!1,!0),b:()=>Ql(a,e,!1,!1)}:{a:()=>Ql(r,e,!0,!0),b:()=>Ql(e,a,!0,!0)}:{a:()=>Ql(e,r,!1,!0),b:()=>Ql(a,e,!0,!1)}}},dg={kernelName:mn,gradFunc:(e,t,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>ed(e,a,r)}}},pg={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const a=n,r=a.inputShape,s=a.shape,o=Array.from(s);for(let c=r.length-1;c>=0;c--)if(r[c]===s[c])o[c]=1;else if(1!==r[c])throw new Error("broadcastTo(): [".concat(r,"] cannot be broadcast to [").concat(s,"]."));const i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>Qu(e,i,!0)}}},fg={kernelName:xn,gradFunc:e=>({x:()=>e.clone()})},mg={kernelName:vn,gradFunc:e=>({x:()=>sc(e)})},gg={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>Du(Ih(ch(a,r),mh(a,s)),e,sc(e))}}},yg={kernelName:Sn,inputsToSave:["x"],gradFunc:Ym.gradFunc},bg={kernelName:Nn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map((e=>e.shape)),{axis:r}=n,s=vt(r,t[0].shape)[0],o=a.map((e=>e[s]));return Gd(e,o,s).map((e=>()=>e))}},xg={kernelName:In,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{dilations:s,strides:o,pad:i,dataFormat:c}=n;return ut(Vl(s),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'"))),{x:()=>bu(a.shape,e,r,o,i,c),filter:()=>Ip(a,e,r.shape,o,i,c)}}},vg={kernelName:Cn,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{strides:s,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>gu(e,r,s,o,i,1,c),filter:()=>Ip(e,a,r.shape,s,o,i,c)}}};const wg=Oo({conv3DBackpropFilter_:function(e,t,n,a,r){let s=e;4===e.rank&&(s=ql(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=ql(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),ut(5===s.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(s.shape,"."))),ut(5===o.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(o.shape,"."))),ut(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),ut(s.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(s.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),ut(o.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(o.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const i={x:s,dy:o},c={strides:a,pad:r,filterShape:n};return ko.runKernel(Rn,i,c)}}),kg={kernelName:En,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s}=n;ut(Vl(a),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'")));const[o,i]=t;return{x:()=>wu(o.shape,e,i,r,s),filter:()=>wg(o,e,i.shape,r,s)}}},Sg={kernelName:_n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(vh(Dd(Qi(n,"float32"))),e)}}},Ng={kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(Od(Qi(n,"float32")),e)}}},Ig={kernelName:On,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r,exclusive:s,reverse:o}=n;return{x:()=>{const t=ju([r],a.rank);let n=Tu(e,r,s,!o);return null!=t&&(n=gp(n,t)),n}}}},Tg={kernelName:Pn,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:o}=n,i=null==a?[1,1]:a;ut(Vl(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[c,l]=t;return ut(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,"."))),ut(4===l.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(l.rank,"."))),ut(c.shape[3]===l.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(l.shape[2],"."))),ut(Ul(r,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(r," and dilations ")+"'".concat(i,"'."))),jl("depthwiseConv2d",s,o),{x:()=>Fp(c.shape,e,l,r,s,i,o),filter:()=>_p(c,e,l.shape,r,s,i,o)}}},Cg={kernelName:Un,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,s={x:a,filter:r,dy:e},o={x:a,filter:r,dy:e};return{x:()=>ko.runKernel(Gn,s,n),filter:()=>ko.runKernel(Hn,o,n)}}},Eg={kernelName:Xn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>ko.runKernel(Yn,a)}}},Rg={kernelName:Qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=nc(eh(vh(rc(n))),2/Math.sqrt(Math.PI));return{x:()=>nc(e,a)}}},Ag={kernelName:Jn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(e,n)}}},_g={kernelName:$n,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>ql(e,n.shape)}}},Fg={kernelName:ea,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(e,eh(n))}}},Dg={kernelName:ra,gradFunc:e=>({x:()=>sc(e)})},Og={kernelName:sa,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Sc(n.shape,a.shape);return{a:()=>{const t=tc(e,Qi(a,"float32")),s=kc(n.shape,r);return s.length>0?ql(Qu(t,s),n.shape):t},b:()=>{let t=nc(e,Qi(n,"float32"));const s=kc(a.shape,r);s.length>0&&(t=ql(Qu(t,s),a.shape));const o=rc(a);return vh(tc(t,Qi(o,"float32")))}}}},Mg={kernelName:oa,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[r,s,o,i]=t,c=null==i?ic(1):i,l=kc(s.shape,r.shape),u=[];if(1===s.rank){for(let e=0;e<r.shape.length-1;++e)u.push(r.shape[e]);u.push(1)}const h=bc(r,s),d=nc(e,c),p=Ed($i(o,ic(a))),f=nc(nc(nc(p,p),p),ic(-.5));return{x:()=>1===s.rank?ql(nc(nc(e,ah(ql(p,[1,1,1,s.shape[0]]),u)),c),r.shape):ql(nc(nc(e,p),c),r.shape),mean:()=>{let e=nc(nc(p,ic(-1)),d);return 1===s.rank&&(e=Qu(e,l)),ql(e,s.shape)},variance:()=>{let e=nc(nc(f,h),d);return 1===s.rank&&(e=Qu(e,l)),ql(e,s.shape)},scale:()=>{const t=nc(h,p);let n=nc(e,t);return 1===s.rank&&(n=Qu(n,l)),ql(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Qu(t,l)),ql(t,s.shape)}}}},Lg={kernelName:ia,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,r]=t,{axis:s,batchDims:o}=n,i=vt(s,a.shape)[0],c=(e,t,n)=>()=>{const a=e.shape,r=t.size,o=a.slice(0,i),c=o.length,l=a.slice(s,a.length).slice(1),u=l.length,h=zg(0,c),d=zg(c+1,c+1+u),p=Pg([o,[r],l]),f=ql(n,p),m=ql(t,[r]),g=Pg([[c],h,d]),y=gp(f,g);let b=lp(y,m,e.shape[i]);const x=qu(g);return b=gp(b,x),b};if(1===o){const t=a.shape[0],n=a.split(t,0);return{x:()=>{const t=Kd(n.map(((t,n)=>c(t,r.slice(n,1),e.slice(n,1))())));return t.reshape(a.shape)},indices:()=>r}}return{x:c(a,r,e),indices:()=>r}}};function zg(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function Pg(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const Bg={kernelName:ua,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>sc(n),b:()=>sc(a)}}},Wg={kernelName:ha,gradFunc:e=>({x:()=>Qi(e,"float32")})},Vg={kernelName:fa,gradFunc:e=>({x:()=>sc(e)})},Ug={kernelName:ma,gradFunc:e=>({x:()=>sc(e)})},Gg={kernelName:ga,gradFunc:e=>({x:()=>sc(e)})},Hg={kernelName:ya,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:r}=n,s=ih(a,0);return{x:()=>Du(s,e,nc(e,r))}}},jg={kernelName:ka,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tc(e,$i(n,1))}}},qg={kernelName:wa,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tc(e,Qi(n,"float32"))}}},Kg={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;return{logits:()=>{const t=eh(a);return bc(e,nc(Qu(e,r,!0),t))}}}};const Xg=Oo({localResponseNormalizationBackprop_:function(e,t,n){const a={x:e,y:t,dy:n},r={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return ko.runKernel(Ca,a,r)}}),Yg={kernelName:Ta,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{depthRadius:s,bias:o,alpha:i,beta:c}=n;return{x:()=>Xg(a,r,e,s,o,i,c)}}};function Qg(e,t,n,a){return t.rank<n.rank&&(t=ql(t,Gu(t.shape,a))),e.rank<n.rank&&(e=ql(e,Gu(e.shape,a))),{x:()=>nc(e,Qi(Fu(n,t),e.dtype))}}const Zg={kernelName:Ea,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:r}=a,s=t[0],o=Qg(e,t[1],s,vt(r,s.shape));return{x:()=>o.x()}}},Jg={kernelName:Ra,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>nc(e,Qi(ch(n,a),"float32")),b:()=>nc(e,Qi(fh(n,a),"float32"))}}};const $g=Oo({maxPool3dGrad_:function(e,t,n,a,r,s,o){const i=_o(e,"dy","maxPool3dGrad"),c=_o(t,"input","maxPool3dGrad"),l=_o(n,"output","maxPool3dGrad");let u=i,h=c,d=l,p=!1;4===c.rank&&(p=!0,u=ql(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=ql(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),d=ql(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),ut(5===u.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(u.rank,"."))),ut(5===h.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(h.rank,"."))),ut(5===d.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(d.rank,"."))),jl("maxPool3dGrad",s,o);const f={dy:u,input:h,output:d},m={filterSize:a,strides:r,pad:s,dimRoundingMode:o},g=ko.runKernel(Da,f,m);return p?ql(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),ey={kernelName:Fa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=n;return{x:()=>$g(e,a,r,s,o,i,c)}}};const ty=Oo({maxPoolGrad_:function(e,t,n,a,r,s,o){const i=_o(e,"dy","maxPoolGrad"),c=_o(t,"input","maxPoolGrad"),l=_o(n,"output","maxPoolGrad");ut(c.rank===i.rank,(()=>"Rank of input (".concat(c.rank,") does not match rank of dy ")+"(".concat(i.rank,")"))),ut(4===i.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,"."))),ut(4===c.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,"."))),jl("maxPoolGrad",s,o);const u={dy:i,input:c,output:l},h={filterSize:a,strides:r,pad:s,dimRoundingMode:o};return ko.runKernel(_a,u,h)}}),ny={kernelName:Aa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i}=n;return{x:()=>ty(e,a,r,s,o,i)}}},ay={kernelName:Pa,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>Jl(e,s,a.shape)}}},ry={kernelName:Qa,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>Jl(e,s,a.shape)}}},sy={kernelName:Za,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,r]=t,s=n,o=a,i=Sc(s.shape,o.shape);return{a:()=>{const t=Qi(o,"float32");let n=nc(e,nc(t,yc(s,bc(t,ic(1)))));const a=kc(s.shape,i);return a.length>0&&(n=Qu(n,a)),ql(n,s.shape)},b:()=>{const t=ih(s,0),n=Du(t,bh(s),sc(s));let a=nc(e,nc(r,n));const c=kc(o.shape,i);return c.length>0&&(a=Qu(a,c)),ql(a,o.shape)}}}};function oy(e,t,n){const a=e.shape.length,r=a-n.length,s=ju(n,a);let o=e;null!=s&&(o=gp(e,s));const i=o.shape.slice(),c=i.splice(a-n.length,n.length).reduce(((e,t)=>e*t),1);i.push(c);let l=function(e,t,n){const a=e.shape.slice();a[n]=1;const r=ql(t,a),s=Iu(e,n,!0,!1),o=Iu(e,n,!0,!0),i=nc(s,o);return nc(r,i)}(o.reshape(i),t,r);if(l=l.reshape(o.shape),null!=s){const e=qu(s);l=gp(l,e)}return l}const iy={kernelName:vr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ih(n,ic(0)),a=ic(sm),r=ic(om),s=nc(e,r),o=nc(nc(e,a),eh(Qi(n,"float32")));return Du(t,s,o)}}}},cy={kernelName:Rr,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>tu(e,a,r)}}},ly={kernelName:Ar,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>Yl(e,a)}}};const uy=[Ym,Qm,Zm,Jm,$m,eg,tg,ng,ag,rg,sg,og,cg,ug,hg,dg,pg,fg,mg,gg,yg,bg,vg,xg,kg,Sg,Ng,Ig,Tg,Cg,{kernelName:qn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Sc(n.shape,a.shape);return{a:()=>{const t=tc(e,Qi(a,"float32")),s=kc(n.shape,r);return s.length>0?ql(Qu(t,s),n.shape):t},b:()=>{let t=nc(e,Qi(n,"float32"));const s=kc(a.shape,r);s.length>0&&(t=ql(Qu(t,s),a.shape));const o=rc(a);return vh(tc(t,Qi(o,"float32")))}}}},Eg,Rg,Ag,_g,Fg,Og,Dg,Mg,Lg,Bg,Wg,Vg,Ug,Gg,Hg,jg,qg,Kg,Yg,Zg,Zg,Jg,ey,ny,{kernelName:Ma,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n,s=vt(r,a.shape),o=pt(Uu(a.shape,s)[1]);return{x:()=>{const t=a.shape.slice();s.forEach((e=>{t[e]=1}));const n=ql(e,t);return tc(nc(n,zh(a.shape,"float32")),o)}}}},{kernelName:La,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:r}=a,[s,o]=t,i=Qg(e,o,s,vt(r,s.shape));return{x:()=>i.x()}}},{kernelName:za,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>nc(e,Qi(mh(n,a),"float32")),b:()=>nc(e,Qi(ih(n,a),"float32"))}}},ay,{kernelName:Ba,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Sc(n.shape,a.shape);return{a:()=>{const t=kc(n.shape,r);return t.length>0?ql(Qu(e,t),n.shape):e},b:()=>{const t=nc(e,vh(sh(tc(n,a)))),s=kc(a.shape,r);return s.length>0?ql(Qu(t,s),a.shape):t}}}},{kernelName:Va,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Sc(n.shape,a.shape);return{a:()=>{const t=nc(e,Qi(a,"float32")),s=kc(n.shape,r);return s.length>0?ql(Qu(t,s),n.shape):t},b:()=>{const t=nc(e,Qi(n,"float32")),s=kc(a.shape,r);return s.length>0?ql(Qu(t,s),a.shape):t}}}},{kernelName:Ua,gradFunc:e=>({x:()=>vh(e)})},{kernelName:Xa,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Lh(n.shape,"float32")}}},{kernelName:Ka,gradFunc:e=>({x:()=>sc(e)})},{kernelName:Ya,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return up(e,a).map((e=>()=>e))}},ry,ry,sy,{kernelName:Ja,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,r=ih(n,0);return{x:()=>Du(r,e,nc(e,a)),alpha:()=>{let t=Du(r,sc(e),nc(e,n));const s=kc(a.shape,e.shape);return s.length>0&&(t=Qu(t,s)),ql(t,a.shape)}}}},{kernelName:$a,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;let s=[];return s=void 0===r||null===r?a.shape.map(((e,t)=>t)):"number"===typeof r?[r]:r,{x:()=>oy(a,e,s)}}},{kernelName:sr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tc(e,vh(rc(n)))}}},{kernelName:dr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=nc(mh(n,6),Xd(n));return{x:()=>nc(e,Qi(a,"float32"))}}},{kernelName:or,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(e,Qi(Xd(n),"float32"))}}},{kernelName:ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ql(e,n.shape)}}},{kernelName:ur,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>ko.runKernel(hr,r,n)}}},{kernelName:cr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>ko.runKernel(lr,r,n)}}},{kernelName:pr,gradFunc:(e,t,n)=>{const{dims:a}=n,r=vt(a,e.shape);return{x:()=>kd(e,r)}}},{kernelName:fr,gradFunc:e=>({x:()=>sc(e)})},{kernelName:mr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vh(tc(e,nc(yc(n,1.5),2)))}}},{kernelName:xr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Qi(sc(n),"float32"),t:()=>nc(e,Qi(n,e.dtype)),e:()=>nc(e,Qi(Th(n),e.dtype))}}},iy,{kernelName:Ir,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(e,nc(n,bc(ic(1),n)))}}},{kernelName:Nr,gradFunc:e=>({x:()=>sc(e)})},{kernelName:kr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(Su(Qi(n,"float32")),e)}}},{kernelName:Sr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(Nu(Qi(n,"float32")),e)}}},{kernelName:wr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:r,size:s}=n,o=a.shape,[i,c]=gl(a,r,s),l=[];for(let u=0;u<e.rank;u++)l.push([i[u],o[u]-i[u]-c[u]]);return{x:()=>Yh(e,l)}}},{kernelName:_r,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:r}=n,s=nc(e,a);return{logits:()=>bc(s,nc(Qu(s,[r],true),a))}}},{kernelName:Tr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(e,Zl(n))}}},cy,cy,ly,ly,{kernelName:Cr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tc(e,nc(ac(Qi(n,"float32")),2))}}},{kernelName:zr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=ic(2);return{a:()=>nc(e,nc(r,bc(n,a))),b:()=>nc(e,nc(r,bc(a,n)))}}},{kernelName:Pr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(e,nc(Qi(n,"float32"),2))}}},{kernelName:ts,gradFunc:e=>({x:()=>sc(e)})},{kernelName:Hr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Sc(n.shape,a.shape);return{a:()=>{let t=e;const a=kc(n.shape,r);return a.length>0&&(t=Qu(t,a)),ql(t,n.shape)},b:()=>{let t=e;const n=kc(a.shape,r);return n.length>0&&(t=Qu(t,n)),ql(vh(t),a.shape)}}}},{kernelName:Er,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,r=a.shape.slice(),{axis:s}=n;vt(s,a.shape).forEach((e=>{r[e]=1}));const o=ql(e,r),i=nc(o,zh(a.shape,"float32"));return{x:()=>i}}},{kernelName:jr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tc(e,rc(Su(n)))}}},{kernelName:qr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(bc(ic(1),rc(n)),e)}}},{kernelName:Kr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:r}=n;return{x:()=>{let t=sc(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=$i(t,Jl(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)t=$i(t,Jl(e,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)t=$i(t,Jl(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)for(let i=0;i<r[3];++i)t=$i(t,Jl(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},{kernelName:Qr,gradFunc:(e,t,n)=>{const a=n,{perm:r}=a,s=qu(r);return{x:()=>gp(e,s)}}},{kernelName:Jr,gradFunc:(e,t,n)=>{const a=n,{axis:r}=a;return{value:()=>Kd(e,r)}}},{kernelName:$r,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Nc(t,sc(t)),a=oh(e,n);let r=ch(t,ic(0,"int32"));const s=a.rank-r.rank;for(let i=0;i<s;++i)r=th(r,i+1);r=Ih(r,zh(a.shape,"bool"));const o=sc(a);return Du(r,a,o)}(e,n)}}},{kernelName:es,gradFunc:e=>({x:()=>sc(e)})}];for(const n of uy)ms(n);to().prototype.abs=function(){return this.throwIfDisposed(),vc(this)},to().prototype.acos=function(){return this.throwIfDisposed(),xl(this)},to().prototype.acosh=function(){return this.throwIfDisposed(),vl(this)},to().prototype.add=function(e){return this.throwIfDisposed(),$i(this,e)},to().prototype.all=function(e,t){return this.throwIfDisposed(),kl(this,e,t)},to().prototype.any=function(e,t){return this.throwIfDisposed(),Sl(this,e,t)},to().prototype.argMax=function(e){return this.throwIfDisposed(),Nl(this,e)},to().prototype.argMin=function(e){return this.throwIfDisposed(),Il(this,e)},to().prototype.asScalar=function(){return this.throwIfDisposed(),ut(1===this.size,(()=>"The array must have only 1 element.")),ql(this,[])},to().prototype.asType=function(e){return this.throwIfDisposed(),Qi(this,e)},to().prototype.as1D=function(){return this.throwIfDisposed(),ql(this,[this.size])},to().prototype.as2D=function(e,t){return this.throwIfDisposed(),ql(this,[e,t])},to().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),ql(this,[e,t,n])},to().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),ql(this,[e,t,n,a])},to().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),ql(this,[e,t,n,a,r])},to().prototype.asin=function(){return this.throwIfDisposed(),Tl(this)},to().prototype.asinh=function(){return this.throwIfDisposed(),Cl(this)},to().prototype.atan=function(){return this.throwIfDisposed(),El(this)},to().prototype.atan2=function(e){return this.throwIfDisposed(),Rl(this,e)},to().prototype.atanh=function(){return this.throwIfDisposed(),Al(this)},to().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),Kl(this,e,t,n,a)},to().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),tu(this,e,t)},to().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),nu(this,e,t,n,a,r)},to().prototype.broadcastTo=function(e){return this.throwIfDisposed(),lu(this,e)},to().prototype.cast=function(e){return this.throwIfDisposed(),Qi(this,e)},to().prototype.ceil=function(){return this.throwIfDisposed(),uu(this)},to().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),hu(this,e,t)},to().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof eo&&(e=[e]),Yl([this,...e],t)},to().prototype.conv1d=function(e,t,n,a,r,s){return this.throwIfDisposed(),yu(this,e,t,n,a,r,s)},to().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),xu(this,e,t,n,a,r)},to().prototype.conv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),gu(this,e,t,n,a,r,s)},to().prototype.cos=function(){return this.throwIfDisposed(),Su(this)},to().prototype.cosh=function(){return this.throwIfDisposed(),Nu(this)},to().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Iu(this,e,t,n)},to().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Tu(this,e,t,n)},to().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Eu(this,e,t)},to().prototype.depthwiseConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Ru(this,e,t,n,a,r,s)},to().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),_u(this,e,t,n,a,r)},to().prototype.divNoNan=function(e){return this.throwIfDisposed(),Ou(this,e)},to().prototype.div=function(e){return this.throwIfDisposed(),tc(this,e)},to().prototype.dot=function(e){return this.throwIfDisposed(),Mu(this,e)},to().prototype.elu=function(){return this.throwIfDisposed(),zu(this)},to().prototype.equal=function(e){return this.throwIfDisposed(),Fu(this,e)},to().prototype.erf=function(){return this.throwIfDisposed(),Bu(this)},to().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),$u(this,e,t)},to().prototype.exp=function(){return this.throwIfDisposed(),eh(this)},to().prototype.expandDims=function(e){return this.throwIfDisposed(),th(this,e)},to().prototype.expm1=function(){return this.throwIfDisposed(),nh(this)},to().prototype.fft=function(){return this.throwIfDisposed(),Wd(this)},to().prototype.flatten=function(){return this.throwIfDisposed(),ql(this,[this.size])},to().prototype.floor=function(){return this.throwIfDisposed(),sh(this)},to().prototype.floorDiv=function(e){return this.throwIfDisposed(),ec(this,e)},to().prototype.gather=function(e,t,n){return this.throwIfDisposed(),oh(this,e,t,n)},to().prototype.greaterEqual=function(e){return this.throwIfDisposed(),ch(this,e)},to().prototype.greater=function(e){return this.throwIfDisposed(),ih(this,e)},to().prototype.ifft=function(){return this.throwIfDisposed(),Vd(this)},to().prototype.irfft=function(){return this.throwIfDisposed(),Ud(this)},to().prototype.isFinite=function(){return this.throwIfDisposed(),uh(this)},to().prototype.isInf=function(){return this.throwIfDisposed(),hh(this)},to().prototype.isNaN=function(){return this.throwIfDisposed(),dh(this)},to().prototype.leakyRelu=function(e){return this.throwIfDisposed(),ph(this,e)},to().prototype.lessEqual=function(e){return this.throwIfDisposed(),mh(this,e)},to().prototype.less=function(e){return this.throwIfDisposed(),fh(this,e)},to().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),yh(this,e,t,n,a)},to().prototype.logSigmoid=function(){return this.throwIfDisposed(),kh(this)},to().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Sh(this,e)},to().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Nh(this,e,t)},to().prototype.log=function(){return this.throwIfDisposed(),bh(this)},to().prototype.log1p=function(){return this.throwIfDisposed(),xh(this)},to().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Ih(this,e)},to().prototype.logicalNot=function(){return this.throwIfDisposed(),Th(this)},to().prototype.logicalOr=function(e){return this.throwIfDisposed(),Ch(this,e)},to().prototype.logicalXor=function(e){return this.throwIfDisposed(),Eh(this,e)},to().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Ql(this,e,t,n)},to().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),Fh(this,e,t,n,a)},to().prototype.max=function(e,t){return this.throwIfDisposed(),Xu(this,e,t)},to().prototype.maximum=function(e){return this.throwIfDisposed(),Nc(this,e)},to().prototype.mean=function(e,t){return this.throwIfDisposed(),Mh(this,e,t)},to().prototype.min=function(e,t){return this.throwIfDisposed(),Yu(this,e,t)},to().prototype.minimum=function(e){return this.throwIfDisposed(),Bh(this,e)},to().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Wh(this,e,t)},to().prototype.mod=function(e){return this.throwIfDisposed(),Vh(this,e)},to().prototype.mul=function(e){return this.throwIfDisposed(),nc(this,e)},to().prototype.neg=function(){return this.throwIfDisposed(),vh(this)},to().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Ju(this,e,t,n)},to().prototype.notEqual=function(e){return this.throwIfDisposed(),jh(this,e)},to().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),qh(this,e,t,n)},to().prototype.onesLike=function(){return this.throwIfDisposed(),Kh(this)},to().prototype.pad=function(e,t){return this.throwIfDisposed(),Yh(this,e,t)},to().prototype.pool=function(e,t,n,a,r,s){return this.throwIfDisposed(),td(this,e,t,n,a,r,s)},to().prototype.pow=function(e){return this.throwIfDisposed(),yc(this,e)},to().prototype.prelu=function(e){return this.throwIfDisposed(),nd(this,e)},to().prototype.prod=function(e,t){return this.throwIfDisposed(),ad(this,e,t)},to().prototype.reciprocal=function(){return this.throwIfDisposed(),xd(this)},to().prototype.relu=function(){return this.throwIfDisposed(),vd(this)},to().prototype.relu6=function(){return this.throwIfDisposed(),wd(this)},to().prototype.reshapeAs=function(e){return this.throwIfDisposed(),ql(this,e.shape)},to().prototype.reshape=function(e){return this.throwIfDisposed(),ql(this,e)},to().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),of(this,e,t,n)},to().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),cf(this,e,t,n)},to().prototype.reverse=function(e){return this.throwIfDisposed(),kd(this,e)},to().prototype.rfft=function(){return this.throwIfDisposed(),Hd(this)},to().prototype.round=function(){return this.throwIfDisposed(),Cd(this)},to().prototype.rsqrt=function(){return this.throwIfDisposed(),Ed(this)},to().prototype.selu=function(){return this.throwIfDisposed(),Rd(this)},to().prototype.separableConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Ad(this,e,t,n,a,r,s)},to().prototype.sigmoid=function(){return this.throwIfDisposed(),Zl(this)},to().prototype.sign=function(){return this.throwIfDisposed(),Fd(this)},to().prototype.sin=function(){return this.throwIfDisposed(),Dd(this)},to().prototype.sinh=function(){return this.throwIfDisposed(),Od(this)},to().prototype.slice=function(e,t){return this.throwIfDisposed(),Jl(this,e,t)},to().prototype.softmax=function(e){return this.throwIfDisposed(),Bd(this,e)},to().prototype.softplus=function(){return this.throwIfDisposed(),wh(this)},to().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),ed(this,e,t)},to().prototype.split=function(e,t){return this.throwIfDisposed(),Gd(this,e,t)},to().prototype.sqrt=function(){return this.throwIfDisposed(),ac(this)},to().prototype.square=function(){return this.throwIfDisposed(),rc(this)},to().prototype.squaredDifference=function(e){return this.throwIfDisposed(),jd(this,e)},to().prototype.squeeze=function(e){return this.throwIfDisposed(),qd(this,e)},to().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof eo?[this,e]:[this,...e];return Kd(n,t)},to().prototype.step=function(e){return this.throwIfDisposed(),Xd(this,e)},to().prototype.stridedSlice=function(e,t,n,a,r,s,o,i){return this.throwIfDisposed(),Yd(this,e,t,n,a,r,s,o,i)},to().prototype.sub=function(e){return this.throwIfDisposed(),bc(this,e)},to().prototype.sum=function(e,t){return this.throwIfDisposed(),Qu(this,e,t)},to().prototype.tan=function(){return this.throwIfDisposed(),Qd(this)},to().prototype.tanh=function(){return this.throwIfDisposed(),$l(this)},to().prototype.tile=function(e){return this.throwIfDisposed(),ah(this,e)},to().prototype.toBool=function(){return this.throwIfDisposed(),Qi(this,"bool")},to().prototype.toFloat=function(){return this.throwIfDisposed(),Qi(this,"float32")},to().prototype.toInt=function(){return this.throwIfDisposed(),Qi(this,"int32")},to().prototype.topk=function(e,t){return this.throwIfDisposed(),op(this,e,t)},to().prototype.transpose=function(e){return this.throwIfDisposed(),gp(this,e)},to().prototype.unique=function(e){return this.throwIfDisposed(),cp(this,e)},to().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),lp(this,e,t)},to().prototype.unstack=function(e){return this.throwIfDisposed(),up(this,e)},to().prototype.where=function(e,t){return this.throwIfDisposed(),Du(e,this,t)},to().prototype.zerosLike=function(){return this.throwIfDisposed(),sc(this)};class hy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,hy.prototype)}}class dy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,dy.prototype)}}class py extends Error{constructor(e){super(e),Object.setPrototypeOf(this,py.prototype)}}class fy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,fy.prototype)}}class my extends Error{constructor(e){super(e),Object.setPrototypeOf(this,my.prototype)}}Error;class gy{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(e,"."));if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function yy(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function by(e,t){if(!e)throw new my(t)}function xy(e,t){let n=0;for(const a of e)a===t&&n++;return n}function vy(e){return 1===e.length?e[0]:e}function wy(e){return Array.isArray(e)?e:[e]}function ky(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Sy(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Ny={};function Iy(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Ty(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>Ty(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?Ty(t):e[n]=t.value)}}}function Cy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const r=e;let s;if(r in n)s=n[r];else if(r in Ny)s=Ny[r];else if(s=t[r],null==s)throw new py("Unknown ".concat(a,": ").concat(e,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return s}{const s=e;if(null==s.className||null==s.config)throw new py("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(s),".\n")+"'className' and 'config' must set.");const o=s.className;let i,c;if(o in n?[i,c]=n[o]:o in Ny?[i,c]=Ny.className:o in t&&([i,c]=t[o]),null==i)throw new py("Unknown ".concat(a,": ").concat(o,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const e={};for(const n of Object.keys(Ny))e[n]=Ny[n];for(const r of Object.keys(n))e[r]=n[r];s.config.customObjects=e;const t=Object.assign({},Ny);for(const r of Object.keys(n))Ny[r]=n[r];Ty(s.config);const a=c(i,s.config,n,r);return Ny=Object.assign({},t),a}{const e=Object.assign({},Ny);for(const a of Object.keys(n))Ny[a]=n[a];const t=new i(s.config);return Ny=Object.assign({},e),t}}}function Ey(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Ry(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Ay(e){if(null==e)throw new py("Invalid value in obj: ".concat(JSON.stringify(e)));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function _y(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new py("".concat(n," is not a valid ").concat(t,".  Valid values are ").concat(e," or null/undefined."))}function Fy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return by(n>=0),by(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function Dy(e,t){Array.isArray(e)?(ut(e.length>0,(()=>"".concat(t," is unexpectedly an empty array."))),e.forEach(((e,n)=>Dy(e,"element ".concat(n+1," of ").concat(t))))):ut(Number.isInteger(e)&&e>0,(()=>"Expected ".concat(t," to be a positive integer, but got ")+"".concat(Oy(e),".")))}function Oy(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Oy(e))).join(",")+"]":"string"===typeof e?'"'.concat(e,'"'):"".concat(e)}function My(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Ly=0;function zy(){return Ly++}const Py={};function By(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in Py||(Py[e]=0),Py[e]+=1,e+Py[e].toString()}const Wy=["channelsFirst","channelsLast"],Vy=["nearest","bilinear"],Uy=["valid","same","causal"],Gy=["max","avg"],Hy=["sum","mul","concat","ave"],jy=new Map;function qy(e){_y(Wy,"DataFormat",e)}function Ky(e){_y(Uy,"PaddingMode",e)}function Xy(e){_y(Gy,"PoolMode",e)}const Yy=[],Qy="/";function Zy(e,t){Yy.push(e);try{const e=t();return Yy.pop(),e}catch(n){throw Yy.pop(),n}}function Jy(e){if(!tb(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Yy.length?"":Yy.join(Qy)+Qy)+e}function $y(e){if(!tb(e))throw new Error("Not a valid tensor name: '"+e+"'");jy.has(e)||jy.set(e,0);const t=jy.get(e);if(jy.set(e,jy.get(e)+1),t>0){const n="".concat(e,"_").concat(t);return jy.set(n,1),n}return e}const eb=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function tb(e){return!!e.match(eb)}function nb(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function ab(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function rb(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function sb(e,t){if(t<e)throw new py("end (".concat(t,") < begin (").concat(e,") is forbidden."));const n=[];for(let a=e;a<t;++a)n.push(a);return n}let ob;function ib(){return null==ob&&(ob=qo().epsilon()),ob}function cb(e,t){return Qi(e,t)}function lb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),ql(e,n)}function ub(e,t,n){return Uo((()=>{switch(e.rank){case 1:return Md(e,t,n);case 2:return Ld(e,[t,0],[n,e.shape[1]]);case 3:return zd(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Pd(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Jl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Jl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new py("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function hb(e,t,n){return Uo((()=>{switch(e.rank){case 1:return Md(e,t,n);case 2:return Ld(e,[0,t],[e.shape[0],n]);case 3:return zd(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Pd(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new py("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function db(e,t,n,a){return Uo((()=>{switch(e.rank){case 1:return Md(e,t,n);case 2:switch(a){case 1:return ub(e,t,n);case 2:return hb(e,t,n);default:throw new py("The axis is not within the rank of the tensor "+"".concat(a))}case 3:switch(a){case 1:return ub(e,t,n);case 2:return zd(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return hb(e,t,n);default:throw new py("The axis is not within the rank of the tensor "+"".concat(a))}case 4:switch(a){case 1:return ub(e,t,n);case 2:return Pd(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Pd(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return hb(e,t,n);default:throw new py("The axis is not within the rank of the tensor "+"".concat(a))}default:throw new py("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function pb(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),Yl(e,n)}function fb(e,t){switch(e.rank){case 1:return du([e,t]);case 2:return pu([e,t],0);case 3:return fu([e,t],0);case 4:return mu([e,t],0);default:throw new py("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(e.rank))}}function mb(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new py("The length of input n (".concat(t.length,") does not match ")+"the number of dimensions in input x (".concat(e.rank,")"));return ah(e,t)}function gb(e){return pd(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0)}function yb(e,t,n,a){if(e.rank<2||t.rank<2)throw new fy("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(e.shape," and y shape = ").concat(t.shape));if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new fy("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(e.shape," and ")+" y shape = ".concat(t.shape))}if(2===e.rank&&2===t.rank){return Op({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?vb(e.rank,a,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),s=r.pop();e=ql(e,[-1,s]);const o=t.shape.slice(),i=o.pop(),c=o.pop(),l=[...o,i],u=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=ql(gp(t,u),[c,-1]);const h=[...r,...l];return ql(Op({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?vb(e.rank,a,"channelsLast"):null,activation:n}),h)}}function bb(e,t,n){return Uo((()=>(t=Array.isArray(t)?Zd(t,"int32"):Qi(t,"int32"),oh(e,t,n))))}function xb(e){return nc(e,e)}function vb(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new py("Unexpected bias dimensions: ".concat(t.rank)+"; expected it to be 1 or ".concat(e));if(5===e){if("channelsFirst"===n)return 1===a.length?ql(t,[1,a[0],1,1,1]):ql(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?ql(t,[1,1,1,1,a[0]]):ql(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?ql(t,[1,a[0],1,1]):ql(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?ql(t,[1,1,1,a[0]]):ql(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?ql(t,[1,a[0],1]):ql(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?ql(t,[1,1,a[0]]):ql(t,[1].concat(a))}else if(e<3)return t;throw new py("Unsupported input rank by biasAdd: ".concat(t.rank))}function wb(e,t,n){return Uo((()=>(null==n&&(n="channelsLast"),qy(n),$i(e,vb(e.rank,t,n)))))}function kb(e,t,n,a){return Uo((()=>wp(e,t,n,a)))}function Sb(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const Nb=["fanIn","fanOut","fanAvg"],Ib=["normal","uniform","truncatedNormal"];class Tb extends uc{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Cb extends Tb{apply(e,t){return Lh(e,t)}}Cb.className="Zeros",dc(Cb);class Eb extends Tb{apply(e,t){return zh(e,t)}}Eb.className="Ones",dc(Eb);class Rb extends Tb{constructor(e){if(super(),"object"!==typeof e)throw new py("Expected argument of type ConstantConfig but got ".concat(e));if(void 0===e.value)throw new py("config must have value set but got ".concat(e));this.value=e.value}apply(e,t){return Uo((()=>nc(ic(this.value),zh(e,t))))}getConfig(){return{value:this.value}}}Rb.className="Constant",dc(Rb);class Ab extends Tb{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return md(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Ab.className="RandomUniform",dc(Ab);class _b extends Tb{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new fy("randomNormal does not support dType ".concat(t,"."));return gb(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}_b.className="RandomNormal",dc(_b);class Fb extends Tb{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new fy("truncatedNormal does not support dType ".concat(t,"."));return ip(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Fb.className="TruncatedNormal",dc(Fb);class Db extends Tb{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Uo((()=>{if(2!==e.length||e[0]!==e[1])throw new py("Identity matrix initializer can only be used for 2D square matrices.");return nc(this.gain,rh(e[0]))}))}getConfig(){return{gain:this.gain}}}Db.className="Identity",dc(Db);class Ob extends Tb{constructor(e){if(super(),e.scale<0)throw new py("scale must be a positive float. Got: ".concat(e.scale));var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,_y(Nb,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){_y(Ib,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(qy(a),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===a){const a=nb(e,2);t=e[1]*a,n=e[0]*a}else if("channelsLast"===a){const a=nb(e,0,e.length-2);t=e[e.length-2]*a,n=e[e.length-1]*a}}else{const a=nb(e);t=Math.sqrt(a),n=Math.sqrt(a)}return[t,n]}(e),a=n[0],r=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,a):"fanOut"===this.mode?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new fy("".concat(this.getClassName()," does not support dType ").concat(t,"."));return ip(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return md(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ob.className="VarianceScaling",dc(Ob);class Mb extends Ob{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ob.className}}Mb.className="GlorotUniform",dc(Mb);class Lb extends Ob{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ob.className}}Lb.className="GlorotNormal",dc(Lb);class zb extends Ob{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ob.className}}zb.className="HeNormal",dc(zb);class Pb extends Ob{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ob.className}}Pb.className="HeUniform",dc(Pb);class Bb extends Ob{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ob.className}}Bb.className="LeCunNormal",dc(Bb);class Wb extends Ob{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ob.className}}Wb.className="LeCunUniform",dc(Wb);class Vb extends Tb{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Uo((()=>{if(e.length<2)throw new fy("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError("Unsupported data type ".concat(t,"."));const n=pt(e.slice(0,-1)),a=e[e.length-1],r=n*a;r>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(r,") elements: ")+"Slowness may result.");const s=gb([Math.max(a,n),Math.min(a,n)],0,1,t,this.seed),o=Lf.qr(s,!1);let i=o[0];const c=o[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return i=nc(i,c.sign()),n<a&&(i=i.transpose()),nc(ic(this.gain),i.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Vb.className="Orthogonal",dc(Vb);const Ub={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Gb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Cy(e,hc.getMap().classNameMap,t,"initializer")}function Hb(e){return Iy(e)}function jb(e){if("string"===typeof e){const t=e in Ub?Ub[e]:e;if("GlorotNormal"===t)return new Lb;if("GlorotUniform"===t)return new Mb;if("HeNormal"===t)return new zb;if("HeUniform"===t)return new Pb;if("LeCunNormal"===t)return new Bb;if("LeCunUniform"===t)return new Wb;{const e={};return e.className=t,e.config={},Gb(e)}}return e instanceof Tb?e:Gb(e)}function qb(e){return Array.isArray(e)&&Array.isArray(e[0])}function Kb(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Xb(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new py("Expected Tensor length to be 1; got ".concat(e.length));t=e[0]}else t=e;return t}function Yb(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new py("Expected exactly 1 Shape; got ".concat(e.length))}return e}function Qb(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Zb="Variable";class Jb{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Zb,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=zy(),n=null==n?Zb:n,this.originalName=Jy(n),this.name=$y(this.originalName),this.trainable_=a,this.constraint=r,this.val=dp(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function $b(e){return e.map((e=>e.read()))}function ex(e){e.forEach((e=>{e[0].write(e[1])}))}class tx{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class nx{constructor(e,t,n,a,r,s,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=o,this.id=zy(),null!=s&&(this.originalName=Jy(s),this.name=$y(this.originalName)),this.rank=t.length}}let ax=0;class rx{constructor(e,t){this.callArgs=t,this.id=ax++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let sx=0;class ox extends uc{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=sx++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=ky(e)+"_"+By(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new dy("The layer has never been called "+"and thus has no defined ".concat(t,"."));if(this.inboundNodes.length<=e)throw new py("Asked to get ".concat(t," at node ").concat(e,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[e]}getInputAt(e){return vy(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return vy(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new hy("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new hy("Layer ".concat(this.name)+" is not connected, no input to return.");return vy(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new hy("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new hy("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return vy(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=wy(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=wy(this.inputSpec);if(t.length!==n.length)throw new py("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(e));for(let a=0;a<t.length;a++){const e=t[a],r=n[a];if(null==r)continue;const s=e.rank;if(null!=r.ndim&&s!==r.ndim)throw new py("Input ".concat(a," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(r.ndim,", found ndim=").concat(s));if(null!=r.maxNDim&&s>r.maxNDim)throw new py("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(r.maxNDim,", found ndim=").concat(s));if(null!=r.minNDim&&s<r.minNDim)throw new py("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(r.minNDim,", found ndim=").concat(s,"."));if(null!=r.dtype&&e.dtype!==r.dtype)throw new py("Input ".concat(a," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(r.dtype,", found dtype=").concat(e.dtype,"."));if(r.axes){const t=e.shape;for(const e in r.axes){const n=Number(e),s=r.axes[e],o=n>=0?t[n]:t[t.length+n];if(null!=s&&-1===[s,null].indexOf(o))throw new py("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(s," but got shape ").concat(t,"."))}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const n=r.shape[t],s=e.shape[t];if(null!=n&&null!=s&&n!==s)throw new py("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(r.shape,", ")+"found shape=".concat(e.shape,"."))}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=wy(e),a=function(e){let t=!0;for(const n of wy(e))if(!(n instanceof nx)){t=!1;break}return t}(e),r=function(e){let t=!0;for(const n of wy(e))if(n instanceof nx){t=!1;break}return t}(e);if(a===r)throw new py("Arguments to apply() must be all SymbolicTensors or all Tensors");return Zy(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of wy(e))t.push(n.shape);this.build(vy(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const r=wy(a),s=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(a=vy(s),null!=this.activityRegularizer)throw new fy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=wy(e);const t=[];for(const n of e)t.push(n.shape);return vy(t)}(e),a=this.computeOutputShape(n);let r;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new nx(s,n,this,wy(e),t,this.name,a))):new nx(s,a,this,wy(e),t,this.name),this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new fy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(e),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(e),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new hy("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new hy("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new dy("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return Qb(this.weights)}build(e){this.built=!0}getWeights(){return $b(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){Uo((()=>{const t=this.weights;if(t.length!==e.length)throw new py('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(e.length,", ")+"but the layer was expecting ".concat(t.length," weights. ")+"Provided weights: ".concat(e,"..."));if(0===t.length)return;const n=[],a=$b(t);for(let r=0;r<a.length;++r){const s=a[r],o=t[r],i=e[r];if(!ft(s.shape,i.shape))throw new py("Layer weight shape ".concat(s.shape," ")+"not compatible with provided weight shape ".concat(i.shape));n.push([o,i])}ex(n)}))}addWeight(e,t,n,a,r,s,o,i){if(-1!==this._addedWeightNames.indexOf(e))throw new py("Duplicate weight name ".concat(e," for layer ").concat(this.name));this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=i?i():jb("zeros"));const c=a.apply(t,n),l=new Jb(c,n,e,s,o);return c.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=wy(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");t.forEach((e=>{if(null!=e)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const a=this.computeMask(e,n),r=wy(t),s=wy(a);if(r.length!==s.length)throw new Error("".concat(this.name," outputs ").concat(r.length," tensors ")+"but ".concat(r.length," masks for those tensors"));for(let o=0;o<r.length;o++)r[o].kerasMask=s[o]}addInboundNode(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=wy(e);t=wy(t),n=wy(n),a=wy(a),r=Kb(r),s=Kb(s);const c=[],l=[],u=[];for(const h of i)c.push(h.sourceLayer),l.push(h.nodeIndex),u.push(h.tensorIndex);new rx({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},o);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function ix(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=ix(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class cx extends ox{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:By("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new py("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new py("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new py("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new nx(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new rx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new py("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}cx.className="InputLayer",dc(cx);class lx{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof lx)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new py("Duplicate key: name=".concat(e.name,", id=").concat(e.id));return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Qi(t,e.dtype)}catch(PV){throw new py("The dtype of the feed (".concat(t.dtype,") can not be cast to the dtype ")+"of the key '".concat(e.name,"' (").concat(e.dtype,")."))}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof nx){if(null==this.id2Value[e.id])throw new py("Nonexistent key: ".concat(e.name));return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new py("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Value[t]}}getMask(e){if(e instanceof nx){if(null==this.id2Value[e.id])throw new py("Nonexistent key: ".concat(e.name));return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new py("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Go(this.id2Mask)}}const ux=new gy,hx=new gy;function dx(e,t,n,a){const r=null!=n&&n.training,s=Array.isArray(e),o=s?e:[e],i=o.map((e=>e.name)),c=[],l=t.names();for(const f of i)-1!==l.indexOf(f)?c.push(t.getValue(f)):c.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const u=i.join(",")+"|"+t.names().sort().join(",");let h,d=ux.get(u);if(null==d){const e=function(e,t){ut(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){const r=fx(e[0],t);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of e){const{sorted:e,recipientMap:o}=fx(s,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in o)null==a[t]&&(a[t]=new Set),o[t].forEach((e=>a[t].add(e)))}}return{sorted:n,recipientCounts:px(a)}}(o,t);d=e.sorted,h=e.recipientCounts,ux.put(u,d),hx.put(u,h)}h={},r||Object.assign(h,hx.get(u));const p=new lx(t);for(let f=0;f<d.length;++f){if(null!=a){const e=Vo().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const e=d[f],s=e.sourceLayer;if(s instanceof cx)continue;const o=[],l=[],u=[];let m=!1;for(const n of e.inputs){const e=p.getValue(n),a=p.getMask(n);o.push(e),l.push(a),null!=a&&(m=!0),r||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==i.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||u.push(e))}m&&((n=n||{}).mask=l[0]);const g=wy(s.apply(o,n));let y=null;s.supportsMasking&&(y=s.computeMask(o,l));const b=mx(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){p.hasKey(x[t])||p.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=i.indexOf(x[t].name);-1!==e&&(c[e]=g[t])}r||Go(u)}return p.disposeMasks(),s?c:c[0]}function px(e){const t={};for(const n in e)t[n]=e[n].size;return t}function fx(e,t){const n=new Set,a=[],r={};for(const i of t.names())n.add(i);const s=[],o=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=o[o.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),a.push(e),n.add(e.name),t&&o.pop();else{o.push(s.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:a,recipientMap:r}}function mx(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function gx(e,t){return Uo((()=>ac(Qu(nc(e,e),t,!0))))}Ht().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=ux&&ux.setMaxEntries(e),null!=hx&&hx.setMaxEntries(e)}));class yx extends uc{getConfig(){return{}}}class bx extends yx{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Uo((()=>{const t=gx(e,this.axis),n=hu(t,0,this.maxValue);return nc(e,tc(n,$i(ib(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}bx.className="MaxNorm",dc(bx);class xx extends yx{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Uo((()=>tc(e,$i(ib(),gx(e,this.axis)))))}getConfig(){return{axis:this.axis}}}xx.className="UnitNorm",dc(xx);class vx extends yx{apply(e){return vd(e)}}vx.className="NonNeg",dc(vx);class wx extends yx{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Uo((()=>{const t=gx(e,this.axis),n=$i(nc(this.rate,hu(t,this.minValue,this.maxValue)),nc(1-this.rate,t));return nc(e,tc(n,$i(ib(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}wx.className="MinMaxNorm",dc(wx);const kx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Sx(e){return Iy(e)}function Nx(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Cy(e,hc.getMap().classNameMap,t,"constraint")}function Ix(e){if(null==e)return null;if("string"===typeof e){return Nx({className:e in kx?kx[e]:e,config:{}})}return e instanceof yx?e:Nx(e)}async function Tx(e){if(null==e)return;const t=[],n=[],a=[];for(const r in e){const s=e[r];if("number"!==typeof s){const e=s;t.push(e.data()),n.push(r),a.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];Go(a)}}function Cx(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var Ex;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Ex||(Ex={}));class Rx{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Ax{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class _x extends Rx{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const a in t){const e=t[a];if("number"===typeof e)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+e*n;else{let t;a in this.totals?t=this.totals[a]:this.totals[a]=0;const r=Uo((()=>$i(this.totals[a],nc(e,n))));this.totals[a]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Uo((()=>{const e=nc(tc(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),Ho(t[n])})))}}class Fx extends Rx{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!==typeof a[s]){const o=a[s];e.push(o.data()),t.push(r),n.push(s)}}const a=await Promise.all(e);for(let r=0;r<a.length;++r){this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=a[r][0]}}}class Dx extends Rx{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Uf,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ct(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,r=null!=n?n():Os();return function(){const s=null!=n?n():Os();return s-r<t||(r=s,a=e(...arguments)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await Tx(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Tx(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Tx(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Tx(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Tx(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Ct(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Tx(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Tx(e),await this.trainEnd(e))}}function Ox(e,t){if(null==e&&(e={}),e instanceof Rx)return[e];if(Array.isArray(e)&&e[0]instanceof Rx)return e;return wy(e).map((e=>new Dx(e,t)))}class Mx{constructor(){}static registerCallbackConstructor(e,t){ut(e>=0&&Number.isInteger(e),(()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(e))),Mx.checkForDuplicate(t),null==Mx.constructors[e]&&(Mx.constructors[e]=[]),Mx.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Mx.constructors){Mx.constructors[+t].forEach((t=>{if(t===e)throw new py("Duplicate callback constructor.")}))}}static clear(){Mx.constructors={}}static createCallbacks(e){const t=[];for(const n in Mx.constructors){const a=+n;e>=a&&t.push(...Mx.constructors[a])}return t.map((e=>new e))}}function Lx(e,t,n,a,r,s,o,i,c){const l=new Fx,u=[new _x,...Mx.createCallbacks(t)];null!=e&&u.push(...e),u.push(l);const h=new Ax(u);return h.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:o,verbose:t,doValidation:i,metrics:c}),{callbackList:h,history:l}}function zx(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Cy(e,hc.getMap().classNameMap,t,"layer",n)}function Px(e,t){return Uo((()=>{"float32"!==e.dtype&&(e=Qi(e,"float32"));const n=Qu(xb(e),t,!0),a=mc(n.shape,ib()),r=ac(Nc(n,a));return tc(e,r)}))}function Bx(e,t){return Uo((()=>Mh(xb(bc(t,e)),-1)))}function Wx(e,t){return Uo((()=>Mh(vc(bc(t,e)),-1)))}function Vx(e,t){return Uo((()=>{const n=bc(e,t),a=hu(vc(e),ib(),Number.MAX_VALUE),r=vc(tc(n,a));return nc(100,Mh(r,-1))}))}function Ux(e,t){return Uo((()=>{const n=hu(t,ib(),Number.MAX_VALUE),a=bh($i(1,n)),r=hu(e,ib(),Number.MAX_VALUE),s=bh($i(1,r));return Mh(xb(bc(a,s)),-1)}))}function Gx(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Uo((()=>{if(n)t=Bd(t);else{const e=Qu(t,t.shape.length-1,!0);t=tc(t,e)}return t=hu(t,ib(),1-ib()),vh(Qu(nc(Qi(e,"float32"),bh(t)),t.shape.length-1))}))}function Hx(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Uo((()=>{const a=Qi(sh(function(e){const t=[nb(e.shape)];return ql(e,t)}(e)),"int32"),r=(t=hu(t,ib(),1-ib())).shape;return Gx(ql(qh(a,r[r.length-1]),r),t,n)}))}function jx(e,t){return Uo((()=>{let n;return n=hu(t,ib(),1-ib()),n=bh(tc(n,bc(1,n))),Mh(function(e,t){if(!ft(e.shape,t.shape))throw new py("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(e.shape)," and ").concat(JSON.stringify(t.shape)));return Uo((()=>{const n=vd(t),a=vh(vc(t));return $i(bc(n,nc(t,e)),xh(eh(a)))}))}(e,n),-1)}))}function qx(e,t){return Uo((()=>{const n=hu(e,ib(),1),a=hu(t,ib(),1);return Qu(nc(e,bh(tc(n,a))),-1)}))}function Kx(e,t){return Uo((()=>{const n=Px(e,-1),a=Px(t,-1),r=nc(n,a);return vh(Qu(r,-1))}))}Mx.constructors={};const Xx={meanSquaredError:Bx,meanAbsoluteError:Wx,meanAbsolutePercentageError:Vx,meanSquaredLogarithmicError:Ux,squaredHinge:function(e,t){return Uo((()=>{const n=Nc(0,bc(1,nc(e,t)));return Mh(xb(n),-1)}))},hinge:function(e,t){return Uo((()=>{const n=Nc(0,bc(1,nc(e,t)));return Mh(n,-1)}))},categoricalHinge:function(e,t){return Uo((()=>{const n=Qu(nc(e,t),-1),a=Xu(nc(bc(1,e),t),-1);return Nc(0,$i(1,bc(a,n)))}))},logcosh:function(e,t){return Uo((()=>{const n=Math.log(2),a=bc(t,e),r=bc($i(a,wh(nc(-2,a))),n);return Mh(r,-1)}))},categoricalCrossentropy:Gx,sparseCategoricalCrossentropy:Hx,binaryCrossentropy:jx,kullbackLeiblerDivergence:qx,poisson:function(e,t){return Uo((()=>{const n=bh($i(ib(),t));return Mh(bc(t,nc(e,n)),-1)}))},cosineProximity:Kx};function Yx(e){if("string"===typeof e){if(e in Xx)return Xx[e];let t="Unknown loss ".concat(e);throw e.toLowerCase().includes("softmaxcrossentropy")&&(t="Unknown loss ".concat(e,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new py(t)}return e}function Qx(e,t){return Uo((()=>{const n=nc(.5,Kh(t)),a=cb(ih(t,n),e.dtype);return Mh(Fu(e,a),-1)}))}function Zx(e,t){return Uo((()=>cb(Fu(Nl(e,-1),Nl(t,-1)),"float32")))}function Jx(e,t){return Uo((()=>Qi(Qu(Ih(Fu(e,1),Fu(t,1))),"float32")))}function $x(e,t){return jx(e,t)}function ev(e,t){return e.rank===t.rank&&(e=qd(e,[e.rank-1])),(t=Nl(t,-1)).dtype!==e.dtype&&(t=Qi(t,e.dtype)),Qi(Fu(e,t),"float32")}const tv=Gx,nv=Hx,av={binaryAccuracy:Qx,categoricalAccuracy:Zx,precision:function(e,t){return Uo((()=>{const n=Jx(e,t),a=function(e,t){return Uo((()=>Qi(Qu(Ih(Fu(e,0),Fu(t,1))),"float32")))}(e,t),r=$i(n,a);return Qi(Du(ih(r,0),tc(n,r),0),"float32")}))},categoricalCrossentropy:tv,sparseCategoricalCrossentropy:nv,mse:Bx,MSE:Bx,mae:Wx,MAE:Wx,mape:Vx,MAPE:Vx,cosine:Kx};function rv(e){if("string"===typeof e&&e in av)return av[e];if("string"!==typeof e&&null!=e)return e;throw new py("Unknown metric ".concat(e))}function sv(e){if(by(null!==e,"Unknown LossOrMetricFn ".concat(e)),"string"===typeof e)return e;{let t;for(const n of Object.keys(Xx))if(Xx[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(av))if(av[n]===e){t=n;break}return void 0!==t?t:e.name}}const ov=1048576;function iv(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!cv(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>ov&&console.warn('User-defined metadata of model "'.concat(t,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(ov,"."))}}function cv(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!cv(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!cv(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function lv(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const r=function(e){let t=!0;const n=[],a=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}a.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==a.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){s.push("Receives inputs"),o=[];for(const t in e.nodesByDepth)o.push(...e.nodesByDepth[t])}a("_".repeat(t)),uv(s,n,a),a("=".repeat(t));const i=e.layers;for(let u=0;u<i.length;++u)r?hv(i[u],n,a):dv(i[u],n,o,a),a((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const c=function(e){let t;t=null!=e.collectedTrainableWeights?Qb(e.collectedTrainableWeights):Qb(e.trainableWeights);return t}(e),l=Qb(e.nonTrainableWeights);a("Total params: ".concat(c+l)),a("Trainable params: ".concat(c)),a("Non-trainable params: ".concat(l)),a("_".repeat(t))}function uv(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a="";for(let r=0;r<e.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=e[r],a=a.slice(0,t[r]),a+=" ".repeat(t[r]-a.length);n(a)}function hv(e,t,n){let a,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(PV){r="multiple"}try{a=JSON.stringify(e.outputShape)}catch(PV){a="multiple"}const s=e.name,o=e.getClassName();uv(["".concat(s," (").concat(o,")"),r,a,e.countParams().toString()],t,n)}function dv(e,t,n,a){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(PV){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(PV){r="multiple"}const o=[];for(const u of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(u)))for(let e=0;e<u.inboundLayers.length;++e){const t=u.inboundLayers[e].name,n=u.nodeIndices[e],a=u.tensorIndices[e];o.push("".concat(t,"[").concat(n,"][").concat(a,"]"))}const i=e.name,c=e.getClassName(),l=0===o.length?"":o[0];uv(["".concat(i," (").concat(c,")"),s,r,e.countParams().toString(),l],t,a);for(let u=1;u<o.length;++u)uv(["","","","",o[u]],t,a)}function pv(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function fv(e,t){if(null===e)return null;if("string"===typeof e)return Sy(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];pv(t,r,a)?n.push(a):n.push(fv(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"===typeof a)t[n]=a;else{const e=Sy(n);t[e]=fv(a,e)}}return t}}function mv(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return ky(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];pv(t,r,a)?n.push(a):n.push(mv(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n],r=ky(n);t[r]="name"!==n&&"className"!==n||"string"!==typeof a?mv(a,n):a}return t}}const gv="4.20.0";class yv extends ox{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=By(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ry(this.inputs).length!==this.inputs.length)throw new py("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map((e=>e.name))));Ry(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map((e=>e.name)))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;by(0===t,"input layer has >1 nodes"),by(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof cx))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(e.inputs,". ")+"Input ".concat(y," (0-based) originates ")+"from layer type ".concat(t.getClassName(),"."));this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},a={},r={},s={},o=[],i=(e,t,n,a,r,c)=>{null!=a&&null!=r&&null!=c||(a=e.sourceLayer,r=e.nodeIndex,c=e.tensorIndex);const l=a.inboundNodes[r];if(-1!==n.indexOf(l))throw new dy("The tensor ".concat(e.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==t.indexOf(l))return;this.containerNodes.add(yv.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const u=l.inboundLayers.length;for(let s=0;s<u;s++){const e=l.inputTensors[s],a=l.inboundLayers[s],r=l.nodeIndices[s],o=l.tensorIndices[s];i(e,t,n,a,r,o)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);o.push(l)},c=[],l=[];for(const y of this.outputs)i(y,c,l);const u=o.slice().reverse();for(const y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const s=null==a[y.outboundLayer.id]?0:a[y.outboundLayer.id];e=Math.max(e,s),a[y.outboundLayer.id]=e,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let a=0;a<y.inboundLayers.length;a++){const r=y.inboundLayers[a],s=y.nodeIndices[a],o=r.inboundNodes[s],i=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(e+1,i),n[o.id]=o}}const h={};for(const y in t){const e=t[y];e in h||(h[e]=[]),h[e].push(n[y])}const d={};for(const y in a){const e=a[y];e in d||(d[e]=[]),d[e].push(r[y])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Ey);this.layers=[];for(const y of p){const e=d[y];e.sort(((e,t)=>{const n=s[e.id],a=s[t.id];return n<a?-1:n>a?1:0}));for(const t of e)t instanceof yv&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Ey);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of h[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new dy("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(t.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(m));for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new dy('The name "'.concat(y,'" is used ').concat(e," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new rx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new py("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let a=0;const r=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);r&&this.parseWeights(e);for(const o of this.layers)for(const[e,t]of o.weights.entries()){const s=r?"".concat(t.name.split("/").slice(0,-1).join("/")+"/").concat(e):t.originalName;if(null!=n[s])throw new py("Duplicate weight name: ".concat(s));n[s]=t,a++}const s=[];for(const o in e){let a=o;if(null==n[o]){const e=o.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[o]]);else if(t)throw new py("Provided weight data has no target variable: ".concat(o));delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new py("".concat(e.length," of ").concat(a," weights are not set: ")+"".concat(e))}ex(s)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),a=["vars","layer_checkpoint_dependencies"],r=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!a.includes(e))).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers ".concat(gv),t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=mv(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Uo((()=>{e=wy(e);const n=new lx;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return dx(this.outputs,n,t)}))}computeMask(e,t){return Uo((()=>{let n;return e=wy(e),n=null==t?yy(null,e.length):wy(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Kb(e);if(t.length!==this.inputLayers.length)throw new py("Invalid inputShape argument ".concat(e,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let o=0;o<t.length;o++){const e=this.inputLayers[o],a=t[o];n[e.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ey);if(a.length>1)for(const o of a){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const a=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],r=t.nodeIndices[o],s=t.tensorIndices[o],i=n["".concat(e.name,"_").concat(r,"_").concat(s)];a.push(i)}const r=Kb(e.computeOutputShape(vy(a))),s=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){n["".concat(e.name,"_").concat(s,"_").concat(t)]=r[t]}}}const r=[],s=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],t=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],a="".concat(e.name,"_").concat(t,"_").concat(n);s.push(a)}for(let o=0;o<s.length;o++){const e=s[o];by(e in n),r.push(n[e])}return vy(r)}runInternalGraph(e,t){null==t&&(t=yy(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],r=e[i],s=t[i];n[a.id]=[r,s]}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ey);for(const i of a){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer,a=t.inputTensors,r=t.outputTensors,s=new Array;for(const t of a)t.id in n&&s.push(n[t.id]);if(s.length===a.length){let a,o,i,c,l={};if(null!=t.callArgs&&(l=t.callArgs),1===s.length){const[t,n]=s[0];null==l.mask&&(l.mask=n),i=wy(e.call(t,l)),c=wy(e.computeMask(t,n)),a=[t],o=[n]}else a=s.map((e=>e[0])),o=s.map((e=>e[1])),null==l.mask&&(l.mask=o),i=wy(e.call(a,l)),c=wy(e.computeMask(a,o));if(e.activityRegularizer)throw new fy("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],a=i[e],s=c[e];n[t.id]=[a,s]}}}}const r=[],s=[],o=[];for(const i of this.outputs){by(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[e,t]=n[i.id];o.push(e.shape),r.push(e),s.push(t)}return[r,s,o]}buildNodeConversionMap(e){const t={};let n;for(const a of this.layers){n=a instanceof yv?1:0;for(let e=0;e<a.inboundNodes.length;e++){const r=yv.nodeKey(a,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new py("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new py("No such layer: ".concat(e))}findLayer(e){if(this.layers.length<=e)throw new py("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}calculateLosses(){return Uo((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=yv.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const s of this.layers){const e=s.getClassName(),a=s.getConfig(),r=[];for(let n=0;n<s.inboundNodes.length;n++){const e=s.inboundNodes[n],a=yv.nodeKey(s,n);let o={};if(this.containerNodes.has(a)){if(e.callArgs)try{JSON.stringify(e.callArgs),o=e.callArgs}catch(PV){console.warn("Layer ".concat(s.name," was passed ")+"non-serializable keyword arguments: "+"".concat(e.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),o={}}if(e.inboundLayers.length>0){const n=[];for(let a=0;a<e.inboundLayers.length;a++){const r=e.inboundLayers[a],s=e.nodeIndices[a],i=e.tensorIndices[a];let c=t[yv.nodeKey(r,s)];null==c&&(c=0),n.push([r.name,c,i,o])}r.push(n)}}}const o={};o.name=s.name,o.className=e,o.config=a,o.inboundNodes=r,n.push(o)}e.layers=n;const a=[];for(let s=0;s<this.inputLayers.length;s++){const e=this.inputLayers[s],n=this.inputLayersNodeIndices[s],r=yv.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let o=t[r];null!==o&&void 0!==o||(o=0);const i=this.inputLayersTensorIndices[s];a.push([e.name,o,i])}e.inputLayers=a;const r=[];for(let s=0;s<this.outputLayers.length;s++){const e=this.outputLayers[s],n=this.outputLayersNodeIndices[s],a=yv.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let o=t[a];null!==o&&void 0!==o||(o=0);const i=this.outputLayersTensorIndices[s];r.push([e.name,o,i])}return e.outputLayers=r,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={},r={};function s(e,t){e.name in r?r[e.name].push(t):r[e.name]=[t]}function o(e,t){const n=[];let r;for(const o of t){const i=o[0],c=o[1],l=o[2];if(r=null==o[3]?{}:o[3],!(i in a))return void s(e,t);const u=a[i];if(u.inboundNodes.length<=c)return void s(e,t);const h=u.inboundNodes[c];n.push(h.outputTensors[l])}n.length>0&&e.apply(vy(n),r)}function i(e){const r=e.name,o=zx(e,null!=t.customObjects?t.customObjects:{});o.setFastWeightInitDuringBuild(n),a[r]=o;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new py("Corrupted configuration, expected array for nodeData: ".concat(e));s(o,e)}))}const c=t.name,l=t.layers;for(const f of l)i(f);for(;!Ay(r);)for(const e of l){const t=a[e.name];if(t.name in r){const e=r[t.name];delete r[t.name];for(const n of e)o(t,n)}}const u=[],h=[],d=t.inputLayers;for(const f of d){const e=f[0],t=f[1],n=f[2];by(e in a);const r=a[e].inboundNodes[t].outputTensors;u.push(r[n])}const p=t.outputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];by(e in a);const r=a[e].inboundNodes[t].outputTensors;h.push(r[n])}return new e({inputs:u,outputs:h,name:c})}get stateful(){if(this._stateful)throw new py("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Uo((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function bv(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(e.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(t," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(e)))}function xv(e,t){return bv(e,t,"classWeight")}async function vv(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Uo((()=>{if(1===e.shape.length)return Zi(e);if(2===e.shape.length){if(e.shape[1]>1){return Nl(e,1)}if(1===e.shape[1])return ql(e,[e.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(e.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(e.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")})),a=Array.from(await t.data());Go(t);const r=[];return a.forEach((e=>{if(null==n[e])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(e," exists in the data but not in ")+"classWeight");r.push(n[e])})),Zd(r,"float32")}return null}function wv(e,t){return nc(e,t)}function kv(e,t){let n,a;const r=t;n=r.xs,a=r.ys,ut(null!=n&&null!=a,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(t)));const s=Sv("input",e.inputNames,n),o=Sv("output",e.outputNames,a),i=s[0].shape[0];ut(s.length===e.inputs.length,(()=>"LayersModel has ".concat(e.inputs.length," inputs, but the dataset ")+"provides ".concat(s.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(e.inputNames),")"))),ut(o.length===e.outputs.length,(()=>"LayersModel has ".concat(e.outputs.length," outputs, but the dataset ")+"provides ".concat(o.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(e.outputNames),")")));for(let c=0;c<s.length;c++)ut(s[c].shape[0]===i,(()=>"Batch size mismatch: input "+"".concat(e.inputNames[c]," has ").concat(s[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));for(let c=0;c<o.length;c++)ut(o[c].shape[0]===i,(()=>"Batch size mismatch: output "+"".concat(e.outputNames[c]," has ").concat(o[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));return{xs:s,ys:o}}function Sv(e,t,n){if(n instanceof eo)return[n];if(Array.isArray(n))return ut(n.length===t.length,(()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(t.length," to match the ").concat(e," keys ").concat(t,"."))),n;{const a=[];for(const r of t){if(null==n[r])throw new py("The feature data generated by the dataset lacks the required "+"".concat(e," key '").concat(r,"'."));a.push(n[r])}return a}}async function Nv(e,t,n){const a=null!=n.batchesPerEpoch;if(ut(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),ut(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),ut(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs))),ut(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch))),ut(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let s,o;if(r)if(Iv(n.validationData))ut(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches)));else{const e=function(e){if(3===e.length)throw new fy("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,o=e.ys}const i=e.makeTrainFunction(),c=e.getDedupedMetricsNames();let l;l=r?c.slice().concat(c.map((e=>"val_"+e))):c.slice();const u=Ox(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Lx(u,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,r,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await d.onEpochBegin(f);let u=0,h=0;for(a||(m=await t.iterator());!a||u<n.batchesPerEpoch;){const t=await m.next();if(a&&t.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(u," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:r}=kv(e,t.value),s={};s.batch=h,s.size=a[0].shape[0],await d.onBatchBegin(h,s);const o=[];if(null!=n.classWeight){const t=xv(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await vv(r[e],null,t[e]))}const l=a.concat(r).concat(o),p=i(l);Go(l);for(let e=0;e<c.length;++e){const t=c[e],n=p[e];s[t]=n,Ho(n)}await d.onBatchEnd(h,s),Cx(s),h++,u++}if(a?u>=n.batchesPerEpoch:t.done){if(r){let t;t=Iv(n.validationData)?wy(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):wy(e.evaluate(s,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l["val_".concat(e.metricsNames[n])]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Iv(e){return"function"===typeof e.iterator}function Tv(e){ut(e>0&&Number.isInteger(e),(()=>"batchSize is required to be a positive integer, but got ".concat(e)))}function Cv(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>ub(e,t,n-t))):ub(e,t,n-t)}function Ev(e,t){return Uo((()=>null==e?null:Array.isArray(e)?e.map((e=>Ev(e,t))):bb(e,"int32"===t.dtype?t:Qi(t,"int32"))))}function Rv(e,t){const n=[];let a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}function Av(e){const t=[];e instanceof eo&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(lb(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function _v(e,t){if(null==e)return;const n=[];if(t instanceof eo)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const a=[];if(e instanceof eo)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&a.push(t)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function Fv(e){return Array.isArray(e)}function Dv(e){return!function(e){return e instanceof eo}(e)&&!Fv(e)}function Ov(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(Fv(e)&&e.length>0)t=!0;else if(Dv(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new py("Error when checking model ".concat(s," expected no data, ")+"but got ".concat(e))}return[]}if(null==e)return t.map((e=>null));if(Dv(e)){a=[];for(const n of t){if(null==e[n])throw new py('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(t));a.push(e[n])}}else if(Fv(e)){if(e.length!==t.length)throw new py("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(t.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(e));a=e}else{if(t.length>1)throw new py("The model ".concat(s," expects ").concat(t.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(e.shape));a=[e]}if(a=Av(a),null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new py("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s). but got array with ")+"shape ".concat(e.shape));for(let t=0;t<n[o].length;++t){if(0===t&&!r)continue;const a=e.shape[t],i=n[o][t];if(null!=i&&i>=0&&a!==i)throw new py("".concat(s," expected a batch of elements where each ")+"example has shape [".concat(n[o].slice(1,n[o].length),"] ")+"(i.e.,tensor shape [*,".concat(n[o].slice(1,n[o].length),"])")+" but the ".concat(s," received an input with ").concat(e.shape[0])+" examples, each with shape [".concat(e.shape.slice(1,e.shape.length),"]")+" (tensor shape [".concat(e.shape,"])"))}}return a}function Mv(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new py("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(t.length," Tensor(s),")+" but instead got ".concat(e.length," Tensors(s)."));a=e}else{if(t.length>1)throw new py("The model expects ".concat(t.length," ").concat(s," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(e.shape),"."));a=[e]}if(null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new py("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(e.shape)));for(let a=0;a<n[o].length;++a){if(0===a&&!r)continue;const i=e.shape[a],c=n[o][a];if(null!=c&&c!==i)throw new py("Error when checking ".concat(s,": expected ")+"".concat(t[o]," to have shape ").concat(JSON.stringify(n[o])," but ")+"got array with shape ".concat(JSON.stringify(e.shape),"."))}}}class Lv extends yv{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new py("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");lv(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Wf.adagrad(.01),Adadelta:()=>Wf.adadelta(1,.95,ib()),Adam:()=>Wf.adam(.001,.9,.999,ib()),Adamax:()=>Wf.adamax(.002,.9,.999,ib(),0),RMSProp:()=>Wf.rmsprop(.001,.9,0,ib()),SGD:()=>Wf.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new py("Unknown Optimizer ".concat(e))}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof pc))throw new py("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new py("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(e.loss,"."));const n=e.loss;t=n.map((e=>Yx(e)))}else{const n=Yx(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new py('Unknown entry in loss dictionary: "'.concat(t,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==e.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),t.push(Yx(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const e=this.internalOutputShapes[s],t=this.outputNames[s];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Zy("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(e));n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Zy("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,a,s;for(const o of t){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===jx?-1!==["accuracy","acc"].indexOf(o)?a=Qx:-1!==["crossentropy","ce"].indexOf(o)&&(a=$x):this.lossFunctions[e]===Hx?-1!==["accuracy","acc"].indexOf(o)?a=ev:-1!==["crossentropy","ce"].indexOf(o)&&(a=nv):-1!==["accuracy","acc"].indexOf(o)?a=Zx:-1!==["crossentropy","ce"].indexOf(o)&&(a=tv),-1!==["accuracy","acc"].indexOf(o)?r="acc":-1!==["crossentropy","ce"].indexOf(o)&&(r="ce"),s=a,n=""+r}else{const e=rv(o);s=e,n=""+sv(o)}let t;Zy(n,(()=>{t=s})),r(e,n,t)}})(a[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=null==n.batchSize?32:n.batchSize;Tv(a);const r=this.standardizeUserDataXY(e,t,!0,a);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return vy(this.testLoop(t,e,a,n.verbose,n.steps))}finally{_v(r[0],e),_v(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,r=e.testFunction;let s=[];if(n.verbose>0)throw new fy("Verbose mode is not implemented yet.");ut(!a||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches))));const o="function"===typeof t.next?t:await t.iterator();let i=0,c=0;for(;!a||c<n.batches;){const t=await o.next();if(s=Uo((()=>{if(t.value){const{xs:n,ys:a}=kv(e,t.value),o=n.concat(a),l=Uo((()=>r(o)));if(Go(o),0===c)for(let e=0;e<l.length;++e)s.push(ic(0));const u=o[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=Uo((()=>$i(s[e],nc(u,t)))),c>0&&Go(n)}Go(l),i+=u,++c}return s})),t.done){a&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let l=0;l<s.length;++l){const e=s[l];s[l]=tc(s[l],i),Go(e)}return vy(s)}(this,e,t)}checkNumSamples(e,t,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(a=null,null!=t)throw new py("If ".concat(r," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(t))}else{if(null==e)throw new py("Either the input data should have a defined shape, or "+"".concat(r," shoud be specified."));a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new py("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),s=new lx;if(e instanceof eo&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new py("The number of inputs provided (".concat(e.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new py("No value is provided for the model's input ".concat(i.name));s.add(i,t)}const o=dx(r,s);return n?o:o[0]}retrieveSymbolicTensors(e){const t=yy(null,e.length);let n=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],s=r.map((e=>e.name));for(let a=0;a<e.length;++a){const o=s.indexOf(e[a]);if(-1!==o&&(t[a]=r[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new py("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Uo((()=>{const a=this.checkNumSamples(e);if(n)throw new fy("Verbose predictLoop() is not implemented yet.");const r=Rv(a,t),s=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){Uo((()=>{const n=r[t][0],a=r[t][1],s=Cv(e,n,a),o=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)o.push({key:this.inputs[e],value:s[e]});else o.push({key:this.inputs[0],value:s});const i=new lx(o);return dx(this.outputs,i)})).forEach(((e,t)=>s[t].push(e)))}return vy(s.map((e=>Yl(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=Av(e);Mv(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Tv(e),this.predictLoop(n,e)}finally{_v(n,e)}}predictOnBatch(e){Mv(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new dy("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];this.feedLossFns[r]===Hx?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(function(e,t,n){const a=Ry(e.map((e=>e.shape[0])));a.sort();const r=Ry(t.map((e=>e.shape[0])));if(r.sort(),a.length>1)throw new py("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map((e=>e.shape)))));if(r.length>1)throw new py("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map((e=>e.shape)))));if(a.length>0&&r.length>0&&!ft(a,r))throw new py("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(a[0]," input sample(s) and ").concat(r[0]," target ")+"sample(s).")}(e=Ov(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Ov(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const a=[Bx,jx,Gx];for(let r=0;r<e.length;++r){const s=e[r],o=t[r],i=n[r];if(null!=o){if(o===Gx&&1===s.shape[s.shape.length-1])throw new py("You are passing a target array of shape ".concat(s.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(o)){const e=s.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const a=e[n],r=t[n];if(null!=r&&a!==r)throw new py("A target Tensor with shape ".concat(s.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new py("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(e[0].shape[0]," sample(s)."));return[e,t]}async standardizeUserData(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0;const[o,i]=this.standardizeUserDataXY(e,t,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=a){const e=xv(a,this.outputNames);c=[];for(let t=0;t<e.length;++t)c.push(await vv(i[t],null,e[t]))}return[o,i,c]}testLoop(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4?arguments[4]:void 0;return Uo((()=>{const s=this.checkNumSamples(t,n,r,"steps"),o=[];if(a>0)throw new fy("Verbose mode is not implemented yet.");if(null!=r)throw new fy("steps mode in testLoop() is not implemented yet");{const a=Rv(s,n),r=Zd(sb(0,s));for(let n=0;n<a.length;++n){const s=a[n][0],i=a[n][1],c=ub(r,s,i-s),l=Ev(t,c),u=e(l);if(0===n)for(let e=0;e<u.length;++e)o.push(ic(0));for(let e=0;e<u.length;++e){const t=u[e];o[e]=$i(o[e],nc(i-s,t))}}for(let e=0;e<o.length;++e)o[e]=tc(o[e],s)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let r=a;if(xy(e,a)>1){const t=xy(e.slice(0,n),a);r+="_".concat(t)}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new lx(e),i=dx(this.outputs,o,{training:!0});let c;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(a[n],i[n]);null!=r[n]&&(e=wv(e,r[n]));const s=Mh(e);t.push(s),c=0===n?e:$i(c,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],r=this.metricsTensors[n][1];e=Mh(t(a[r],i[r]))}Ho(e),s.push(e)}return c=Mh(c),this.calculateLosses().forEach((e=>{c=$i(c,e)})),c}),!0,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>Uo((()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:a[e]});const o=new lx(s),i=dx(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],s=Mh(a(r[e],i[e]));n=0===e?s:$i(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],s=Mh(n(r[a],i[a]));t.push(s)}return t}))}async fit(e,t){let n,a,r,s,o,i,c,l,u,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const d=null==h.batchSize?32:h.batchSize;Tv(d);const p=!1,f=await this.standardizeUserData(e,t,h.sampleWeight,h.classWeight,p,d);n=f[0],a=f[1],u=f[2];let m,g=!1;if(null!=h.validationData&&h.validationData.length>0){if(g=!0,2!==h.validationData.length)throw 3===h.validationData.length?new fy("validationData including sample weights is not supported yet."):new py("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(h.validationData," is invalid."));o=h.validationData[0],i=h.validationData[1];const e=!0,t=await this.standardizeUserData(o,i,null,null,e,d);c=t[0],l=t[1],m=c.concat(l)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){g=!0;const e=Math.floor(n[0].shape[0]*(1-h.validationSplit)),t=n[0].shape[0];c=Cv(n,e,t),r=n,n=Cv(n,0,e),l=Cv(a,e,t),s=a,a=Cv(a,0,e),m=c.concat(l)}else null!=h.validationSteps&&(g=!0);const y=n.concat(a).concat(u);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let v,w;g?(this.makeTestFunction(),v=this.testFunction,w=x.slice().concat(x.map((e=>"val_"+e)))):(v=null,m=[],w=x.slice());const k=Ox(h.callbacks,h.yieldEvery);return await this.fitLoop(b,y,x,d,h.epochs,h.verbose,k,v,m,h.shuffle,w,h.initialEpoch,null,null)}finally{this.isTraining=!1,_v(n,e),_v(a,t),_v(r,e),_v(s,t),_v(c,o),_v(l,i),null!=u&&Go(u)}}async fitLoop(e,t,n,a,r,s,o,i,c,l,u,h,d,p){null==a&&(a=32),null==r&&(r=1),null==l&&(l=!0),null==h&&(h=0);let f=!1;if(null!=i&&null!=c&&(f=!0),null!=p&&(f=!0,null==d))throw new py("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,a,d,"steps_per_epoch");let g;null!=m&&(g=sb(0,m)),null==s&&(s=1);const{callbackList:y,history:b}=Lx(o,s,r,h,m,d,a,f,u);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<r;++x){await y.onEpochBegin(x);const r={};if(null!=d)throw new fy("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new fy("batch shuffling is not implemneted yet");l&&ot(g);const s=Zd(g),o=Rv(m,a);for(let l=0;l<o.length;++l){const u={};if(await y.onBatchBegin(l,u),Uo((()=>{const h=o[l][0],d=o[l][1],p=ub(s,h,d-h);u.batch=l,u.size=d-h;const m=Ev(t,p),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],a=g[e];u[t]=a,Ho(a)}if(l===o.length-1&&f){const e=this.testLoop(i,c,a);for(let t=0;t<n.length;++t){const a=n[t],s=e[t];Ho(s),r["val_"+a]=s}}})),await y.onBatchEnd(l,u),Cx(u),this.stopTraining_)break}s.dispose()}if(await y.onEpochEnd(x,r),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return Nv(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),o=[];for(const i of s){const e=await i.data();o.push(e[0])}return Go(s),_v(n[0],e),_v(n[1],t),vy(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||t.push({name:a[s].originalName,tensor:r[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Vo().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Vo().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=ky(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>ky(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=ky(n[a])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[ky(sv(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>ky(sv(e))));{const e={};for(const t in this.metrics)e[t]=ky(sv(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=zx(fv(e.optimizer_config));let n,a;if("string"===typeof e.loss)n=Sy(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Sy(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Sy(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>Sy(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=Sy(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"===typeof e){const t=fi(e);if(0===t.length)throw new py("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new py("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new py("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Xo(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat(gv),convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await Xo(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=ri([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;iv(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){iv(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Lv.className="Model",dc(Lv);class zv extends Lv{}zv.className="Functional",dc(zv);class Pv extends Lv{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:By("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new py("Negative dimension size caused by adding layer "+"".concat(e.name," with input shape [")+"".concat(e.inboundNodes[0].inputTensors[0].shape,"]"))}add(e){const t=e instanceof Pv||e instanceof Lv;let n;if(t){if(n=e,1!==n.outputs.length)throw new py("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new py("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new py("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new py("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new cx({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new py("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(e.name," ")+"which has ".concat(e.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==e.inboundNodes[0].outputTensors.length)throw new py("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ix(this.outputs[0])}this.inboundNodes=[],new rx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:yy(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Yb(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Lv({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new dy("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new dy("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new dy("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new dy("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new py("Legacy serialization format not supported yet.");n=t}else ut(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,r=t;const s=new e(r);if(!(s instanceof Pv))throw new fy("Sequential.fromConfig called on non-Sequential input: ".concat(s));for(const o of n){const e=zx(o,void 0,a);a&&e.setFastWeightInitDuringBuild(!0),s.add(e)}return s}set stopTraining(e){if(null==this.model)throw new py("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new py("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Pv.className="Sequential",dc(Pv);class Bv extends uc{getConfig(){return{}}}class Wv extends Bv{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new fy("Support for alpha values other than 1 (".concat(t,") is not implemented ")+"yet.");return zu(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}Wv.className="elu",dc(Wv);class Vv extends Bv{apply(e){return Rd(e)}}Vv.className="selu",dc(Vv);class Uv extends Bv{apply(e){return vd(e)}}Uv.className="relu",dc(Uv);class Gv extends Bv{apply(e){return Uo((()=>Bh(6,vd(e))))}}Gv.className="relu6",dc(Gv);class Hv extends Bv{apply(e){return e}}Hv.className="linear",dc(Hv);class jv extends Bv{apply(e){return Zl(e)}}jv.className="sigmoid",dc(jv);class qv extends Bv{apply(e){return function(e){return Uo((()=>{const t=$i(.5,nc(.2,e));return hu(t,0,1)}))}(e)}}qv.className="hardSigmoid",dc(qv);class Kv extends Bv{apply(e){return wh(e)}}Kv.className="softplus",dc(Kv);class Xv extends Bv{apply(e){return function(e){return Uo((()=>tc(e,$i(vc(e),1))))}(e)}}Xv.className="softsign",dc(Xv);class Yv extends Bv{apply(e){return $l(e)}}Yv.className="tanh",dc(Yv);class Qv extends Bv{apply(e){return Bd(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Qv.className="softmax",dc(Qv);class Zv extends Bv{apply(e){return Sh(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Zv.className="logSoftmax",dc(Zv);class Jv extends Bv{apply(e){return Uo((()=>Uo((()=>{const t=Math.sqrt(2),n=nc(.5,$i(1,Bu(tc(e,t))));return nc(e,n)}))))}}Jv.className="gelu",dc(Jv);class $v extends Bv{apply(e){return Uo((()=>nc(.5,nc(e,$i(1,$l(nc(ac(tc(2,Math.PI)),$i(e,nc(.044715,yc(e,3))))))))))}}$v.className="gelu_new",dc($v);class ew extends Bv{apply(e){return Uo((()=>nc(e,$l(wh(e)))))}}ew.className="mish",dc(ew);class tw extends Bv{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return Uo((()=>nc(Zl(nc(e,t)),e)))}}function nw(e){return e.getClassName()}function aw(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Cy(e,hc.getMap().classNameMap,t,"activation")}function rw(e){if(null==e){const e={className:"linear",config:{}};return aw(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},aw(t)}return e instanceof Bv?e:aw(e)}function sw(e){if(null!=e&&"object"!==typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(e))}tw.className="swish",dc(tw);class ow extends uc{}class iw extends ow{constructor(e){super(),sw(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Uo((()=>{let t=Lh([1]);return this.hasL1&&(t=$i(t,Qu(nc(this.l1,vc(e))))),this.hasL2&&(t=$i(t,Qu(nc(this.l2,xb(e))))),ql(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}iw.className="L1L2",dc(iw);const cw={l1l2:"L1L2"};function lw(e){return Iy(e)}function uw(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Cy(e,hc.getMap().classNameMap,t,"regularizer")}function hw(e){if(null==e)return null;if("string"===typeof e){return uw({className:e in cw?cw[e]:e,config:{}})}return e instanceof ow?e:uw(e)}class dw extends ox{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Xb(e);let n=vd(e);return null!=this.maxValue&&(n=hu(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}dw.className="ReLU",dc(dw);class pw extends ox{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Xb(e);return ph(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}pw.className="LeakyReLU",dc(pw);class fw extends ox{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=jb(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=hw(e.alphaRegularizer),this.alphaConstraint=Ix(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new py("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(e.sharedAxes));this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Yb(e)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<e.length;++a)n[a]=e[a];this.inputSpec=[new tx({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Xb(e),nd(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Hb(this.alphaInitializer),alphaRegularizer:lw(this.alphaRegularizer),alphaConstraint:Sx(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}fw.className="PReLU",dc(fw);class mw extends ox{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new fy("Non-default alpha value (".concat(e.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Xb(e);return zu(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}mw.className="ELU",dc(mw);class gw extends ox{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Xb(e);return nc(n,Qi(ih(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}gw.className="ThresholdedReLU",dc(gw);class yw extends ox{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Qv).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return Uo((()=>{let n=Xb(e);const a=t.mask;if(null!=a){const e=nc(bc(zh(n.shape),Qi(a,n.dtype)),ic(-1e9));n=$i(n,e)}return this.axis instanceof Array?this.axis.length>1?eh(bc(n,Nh(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function bw(e,t,n){if("number"===typeof e)return yy(e,t);if(e.length!==t)throw new py("The ".concat(n," argument must be an integer or tuple of ").concat(t," integers.")+" Received: ".concat(e.length," elements."));for(let r=0;r<t;++r){const s=e[r];if((a=s)!==parseInt(a.toString(),10))throw new py("The ".concat(n," argument must be an integer or tuple of ").concat(t)+" integers. Received: ".concat(JSON.stringify(e)," including a")+" non-integer number ".concat(s))}return e;var a}function xw(e,t,n,a){if(null==e)return e;let r;return r="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((r+a-1)/a)}function vw(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+rb([n-t,0]);else{if("same"!==a)throw new py("Unsupport padding mode: ".concat(a,"."));e*=t}return e}function ww(e,t){return Uo((()=>(qy(t),"channelsFirst"===t?gp(e,[0,2,3,1]):e)))}function kw(e,t){return Uo((()=>(qy(t),"channelsFirst"===t?gp(e,[0,2,3,4,1]):e)))}function Sw(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return Uo((()=>{if(null==s&&(s="channelsLast"),qy(s),3!==e.shape.length)throw new py("The input of a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead."));if(3!==t.shape.length)throw new py("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new py("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(n.shape.length," instead"));if("channelsFirst"===s&&(e=gp(e,[0,2,1])),"causal"===r)throw new fy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=yu(e,t,a,"same"===r?"same":"valid","NWC",o);return null!=n&&(i=wb(i,n)),i}))}function Nw(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return Uo((()=>{if(null==s&&(s="channelsLast"),qy(s),3!==e.rank&&4!==e.rank)throw new py("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));if(3!==t.rank&&4!==t.rank)throw new py("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));let c=ww(e,s);if("causal"===r)throw new fy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=Ap({x:c,filter:t,strides:a,pad:"same"===r?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===s&&(c=gp(c,[0,3,1,2])),c}))}function Iw(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0;return Uo((()=>{if(null==s&&(s="channelsLast"),qy(s),4!==e.rank&&5!==e.rank)throw new py("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(e.rank,"."));if(4!==t.rank&&5!==t.rank)throw new py("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(e.rank,"."));let i=kw(e,s);if("causal"===r)throw new fy("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=vu(i,t,a,"same"===r?"same":"valid","NDHWC",o),null!=n&&(i=wb(i,n)),"channelsFirst"===s&&(i=gp(i,[0,4,1,2,3])),i}))}yw.className="Softmax",dc(yw);class Tw extends ox{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Tw.verifyArgs(t),this.rank=e,Dy(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new fy("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=bw(t.kernelSize,e,"kernelSize"),this.strides=bw(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Ky(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,qy(this.dataFormat),this.activation=rw(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=jb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ix(t.biasConstraint),this.biasRegularizer=hw(t.biasRegularizer),this.activityRegularizer=hw(t.activityRegularizer),this.dilationRate=bw(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new py("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new py("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new py("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(e){if(by("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!Fy(e.kernelSize,"number",1,3))throw new py("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(e.kernelSize),"."))}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:nw(this.activation),useBias:this.useBias,biasInitializer:Hb(this.biasInitializer),biasRegularizer:lw(this.biasRegularizer),activityRegularizer:lw(this.activityRegularizer),biasConstraint:Sx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Cw extends Tw{constructor(e,t){super(e,t),this.kernel=null,Cw.verifyArgs(t),this.filters=t.filters,Dy(this.filters,"filters"),this.kernelInitializer=jb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ix(t.kernelConstraint),this.kernelRegularizer=hw(t.kernelRegularizer)}build(e){e=Yb(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new py("The channel dimension of the input should be defined. "+"Found ".concat(e[t]));const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Uo((()=>{let t;e=Xb(e);const n=null==this.bias?null:this.bias.read(),a=My(this.activation.getClassName());if(null!=a&&2===this.rank)t=Nw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=Sw(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Nw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new fy("convolutions greater than 3D are not implemented yet.");t=Iw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Yb(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=xw(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:Hb(this.kernelInitializer),kernelRegularizer:lw(this.kernelRegularizer),kernelConstraint:Sx(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new py("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(e.filters)))}}class Ew extends Cw{constructor(e){super(2,e),Ew.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!Fy(e.kernelSize,"number",1,2))throw new py("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(e.kernelSize),"."))}}Ew.className="Conv2D",dc(Ew);class Rw extends Cw{constructor(e){super(3,e),Rw.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new py("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(e.kernelSize),"."))}}Rw.className="Conv3D",dc(Rw);class Aw extends Ew{constructor(e){if(super(e),this.inputSpec=[new tx({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new py("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(4!==(e=Yb(e)).length)throw new py("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new py("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new tx({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Uo((()=>{let t=Xb(e);if(4!==t.shape.length)throw new py("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const o=n[r],i=n[s],c=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],h=this.strides[1],d=[a,vw(o,u,c,this.padding),vw(i,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=gp(t,[0,2,3,1]));let p=xu(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=gp(p,[0,3,1,2])),null!=this.bias&&(p=wb(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Yb(e)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const s=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return t[n]=this.filters,t[a]=vw(t[a],i,s,this.padding),t[r]=vw(t[r],c,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Aw.className="Conv2DTranspose",dc(Aw);class _w extends Rw{constructor(e){if(super(e),this.inputSpec=[new tx({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new py("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(5!==(e=Yb(e)).length)throw new py("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new py("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new tx({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Uo((()=>{let t=Xb(e);if(5!==t.shape.length)throw new py("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,s,o;"channelsFirst"===this.dataFormat?(o=2,r=3,s=4):(o=1,r=2,s=3);const i=n[o],c=n[r],l=n[s],u=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[a,vw(i,p,u,this.padding),vw(c,f,h,this.padding),vw(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=gp(t,[0,2,3,4,1]));let y=ku(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=gp(y,[0,4,1,2,3])),null!==this.bias&&(y=wb(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=Yb(e)).slice();let n,a,r,s;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,s=4):(n=4,a=1,r=2,s=3);const o=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],u=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[a]=vw(t[a],l,o,this.padding),t[r]=vw(t[r],u,i,this.padding),t[s]=vw(t[s],h,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}_w.className="Conv3DTranspose",dc(_w);class Fw extends Cw{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new py("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new py("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new py("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(t.padding)));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=jb(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=hw(t.depthwiseRegularizer),this.depthwiseConstraint=Ix(t.depthwiseConstraint),this.pointwiseInitializer=jb(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=hw(t.pointwiseRegularizer),this.pointwiseConstraint=Ix(t.pointwiseConstraint)}build(e){if((e=Yb(e)).length<this.rank+2)throw new py("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(e)));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new py("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(e[t])));const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new tx({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Uo((()=>{let t;if(e=Xb(e),1===this.rank)throw new fy("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=gp(e,[0,2,3,1])),t=Ad(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=wb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=gp(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Hb(this.depthwiseInitializer),e.pointwiseInitializer=Hb(this.pointwiseInitializer),e.depthwiseRegularizer=lw(this.depthwiseRegularizer),e.pointwiseRegularizer=lw(this.pointwiseRegularizer),e.depthwiseConstraint=Sx(this.depthwiseConstraint),e.pointwiseConstraint=Sx(this.pointwiseConstraint),e}}Fw.className="SeparableConv";class Dw extends Fw{constructor(e){super(2,e)}}Dw.className="SeparableConv2D",dc(Dw);class Ow extends Cw{constructor(e){super(1,e),Ow.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!Fy(e.kernelSize,"number",1,1))throw new py("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(e.kernelSize),"."))}}Ow.className="Conv1D",dc(Ow);class Mw extends ox{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Uo((()=>{if(e=Xb(e),"channelsLast"===this.dataFormat){const t=db(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return db(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=db(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return db(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Mw.className="Cropping2D",dc(Mw);class Lw extends ox{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qy(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,_y(Vy,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Uo((()=>{let t=Xb(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=gp(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?Mf.resizeNearestNeighbor(t,[e,a]):Mf.resizeBilinear(t,[e,a]);return gp(r,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?Mf.resizeNearestNeighbor(t,[e,a]):Mf.resizeBilinear(t,[e,a])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Lw.className="UpSampling2D",dc(Lw);class zw extends Tw{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=jb(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ix(e.depthwiseConstraint),this.depthwiseRegularizer=hw(e.depthwiseRegularizer)}build(e){if((e=Yb(e)).length<4)throw new py("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(e),"."));const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new py("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(e[t],")."));const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Uo((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return Uo((()=>{null==r&&(r="channelsLast"),qy(r);let o=ww(e,r);if(4!==e.rank)throw new py("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));if(4!==t.rank)throw new py("depthwiseKernel is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));return o=Ru(o,t,n,"same"===a?"same":"valid","NHWC",s),"channelsFirst"===r&&(o=gp(o,[0,3,1,2])),o}))}(e=Xb(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=wb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Yb(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=xw(t,this.kernelSize[0],this.padding,this.strides[0]),s=xw(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Hb(this.depthwiseInitializer),e.depthwiseRegularizer=lw(this.depthwiseRegularizer),e.depthwiseConstraint=Sx(this.depthwiseRegularizer),e}}function Pw(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new py("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function Bw(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return Uo((()=>{const c=t.shape.length;if(c<3)throw new py("Input should be at least 3D, but is ".concat(c,"D."));const l=[1,0].concat(sb(2,c));if(t=gp(t,l),null!=s)throw new fy("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=Qi(Qi(r,"bool"),"float32"),r.rank===c-1&&(r=th(r,-1)),r=gp(r,l)),a&&(t=kd(t,0),null!=r&&(r=kd(r,0)));const u=[];let h,d=n;const p=t.shape[0],f=up(t);let m,g;null!=r&&(m=up(r));for(let t=0;t<p;++t){const n=f[t],a=Uo((()=>e(n,d)));if(null==r)h=a[0],d=a[1];else{const e=Uo((()=>{const e=m[t],n=bc(Kh(e),e);return{output:$i(nc(a[0],e),nc(d[0],n)),newStates:d.map(((t,r)=>$i(nc(a[1][r],e),nc(t,n))))}}));h=e.output,d=e.newStates}i&&u.push(h)}if(i){g=Kd(u,1)}return[h,g,d]}))}zw.className="DepthwiseConv2D",dc(zw);class Ww extends ox{constructor(e){let t;if(super(e),null==e.cell)throw new py("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Xw({cells:e.cell}):e.cell,null==t.stateSize)throw new py("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new tx({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return sb(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){qb(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return Uo((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new fy("Constants support is not implemented in RNN yet.");qb(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new tx({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ft(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new py("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=r.map((e=>new tx({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Uo((()=>{if(!this.stateful)throw new hy("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new py("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Lh([n,e]))):this.states_=[Lh([n,this.cell.stateSize])];else if(null==e)Go(this.states_),null!=this.keptStates&&(Go(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Lh([n,e]))):this.states_[0]=Lh([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new py("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));!0===t?this.keptStates.push(this.states_.slice()):Go(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,r];if(!ft(a.shape,s))throw new py("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(s,", received shape=").concat(a.shape));this.states_[t]=a}}this.states_=this.states_.map((e=>Ho(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=Pw(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],o=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new tx({shape:e.shape}));o=o.concat(this.stateSpec)}null!=a&&(t.constants=a,s=s.concat(a),this.numConstants=a.length);if(s[0]instanceof nx){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return Uo((()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let r=null==t?null:t.initialState;e=Xb(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new py("RNN Layer has ".concat(s," state(s) but was passed ")+"".concat(r.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},i=Bw(((e,t)=>{const n=this.cell.call([e].concat(t),o);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],u=i[2];this.stateful&&this.resetStates(u,a);const h=this.returnSequences?l:c;return this.returnState?[h].concat(u):h}))}getInitialState(e){return Uo((()=>{let t=Lh(e.shape);return t=Qu(t,[1,2]),t=lb(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?mb(t,[1,e]):t)):this.cell.stateSize>1?[mb(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Ww.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=zx(t.cell,n);return new e(Object.assign(t,{cell:a}))}}Ww.className="RNN",dc(Ww);class Vw extends ox{}class Uw extends Vw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Dy(this.units,"units"),this.activation=rw(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=hw(e.kernelRegularizer),this.recurrentRegularizer=hw(e.recurrentRegularizer),this.biasRegularizer=hw(e.biasRegularizer),this.kernelConstraint=Ix(e.kernelConstraint),this.recurrentConstraint=Ix(e.recurrentConstraint),this.biasConstraint=Ix(e.biasConstraint),this.dropout=ab([1,rb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ab([1,rb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Yb(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Uo((()=>{if(2!==e.length)throw new py("SimpleRNNCell expects 2 input Tensors, got ".concat(e.length,"."));let n=e[1];e=e[0];const a=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Yw({ones:()=>Kh(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Yw({ones:()=>Kh(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;r=yb(null!=s?nc(e,s):e,this.kernel.read()),null!=this.bias&&(r=wb(r,this.bias.read())),null!=o&&(n=nc(n,o));let i=$i(r,yb(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:nw(this.activation),useBias:this.useBias,kernelInitializer:Hb(this.kernelInitializer),recurrentInitializer:Hb(this.recurrentInitializer),biasInitializer:Hb(this.biasInitializer),kernelRegularizer:lw(this.kernelRegularizer),recurrentRegularizer:lw(this.recurrentRegularizer),biasRegularizer:lw(this.biasRegularizer),activityRegularizer:lw(this.activityRegularizer),kernelConstraint:Sx(this.kernelConstraint),recurrentConstraint:Sx(this.recurrentConstraint),biasConstraint:Sx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Uw.className="SimpleRNNCell",dc(Uw);class Gw extends Ww{constructor(e){e.cell=new Uw(e),super(e)}call(e,t){return Uo((()=>{null!=this.cell.dropoutMask&&(Go(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Go(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Gw.className="SimpleRNN",dc(Gw);class Hw extends Vw{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new py("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Dy(this.units,"units"),this.activation=rw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=rw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=hw(e.kernelRegularizer),this.recurrentRegularizer=hw(e.recurrentRegularizer),this.biasRegularizer=hw(e.biasRegularizer),this.kernelConstraint=Ix(e.kernelConstraint),this.recurrentConstraint=Ix(e.recurrentConstraint),this.biasConstraint=Ix(e.biasConstraint),this.dropout=ab([1,rb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ab([1,rb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Yb(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Uo((()=>{if(2!==e.length)throw new py("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Yw({ones:()=>Kh(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Yw({ones:()=>Kh(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,s=this.recurrentDropoutMask;let o,i,c;0<this.dropout&&this.dropout<1&&(e=nc(e,r[0]));let l=yb(e,this.kernel.read());this.useBias&&(l=wb(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=nc(a,s[0]));const u=this.recurrentKernel.read(),[h,d]=Gd(u,[2*this.units,this.units],u.rank-1),p=yb(a,h),[f,m,g]=Gd(l,3,l.rank-1),[y,b]=Gd(p,2,p.rank-1);o=this.recurrentActivation.apply($i(f,y)),i=this.recurrentActivation.apply($i(m,b));const x=yb(nc(i,a),d);c=this.activation.apply($i(g,x));const v=$i(nc(o,a),nc($i(1,vh(o)),c));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:nw(this.activation),recurrentActivation:nw(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Hb(this.kernelInitializer),recurrentInitializer:Hb(this.recurrentInitializer),biasInitializer:Hb(this.biasInitializer),kernelRegularizer:lw(this.kernelRegularizer),recurrentRegularizer:lw(this.recurrentRegularizer),biasRegularizer:lw(this.biasRegularizer),activityRegularizer:lw(this.activityRegularizer),kernelConstraint:Sx(this.kernelConstraint),recurrentConstraint:Sx(this.recurrentConstraint),biasConstraint:Sx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Hw.className="GRUCell",dc(Hw);class jw extends Ww{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Hw(e),super(e)}call(e,t){return Uo((()=>{null!=this.cell.dropoutMask&&(Go(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Go(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}jw.className="GRU",dc(jw);class qw extends Vw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Dy(this.units,"units"),this.activation=rw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=rw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=hw(e.kernelRegularizer),this.recurrentRegularizer=hw(e.recurrentRegularizer),this.biasRegularizer=hw(e.biasRegularizer),this.kernelConstraint=Ix(e.kernelConstraint),this.recurrentConstraint=Ix(e.recurrentConstraint),this.biasConstraint=Ix(e.biasConstraint),this.dropout=ab([1,rb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ab([1,rb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Yb(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends Tb{apply(t,a){const r=e.apply([n]),s=(new Eb).apply([n]),o=e.apply([2*n]);return fb(fb(r,s),o)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Uo((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new py("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Yw({ones:()=>Kh(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Yw({ones:()=>Kh(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;let i,c,l,u;0<this.dropout&&this.dropout<1&&(e=nc(e,s[0]));let h=yb(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=nc(a,o[0])),h=$i(h,yb(a,this.recurrentKernel.read())),this.useBias&&(h=wb(h,this.bias.read()));const[d,p,f,m]=Gd(h,4,h.rank-1);i=this.recurrentActivation.apply(d),c=this.recurrentActivation.apply(p),l=$i(nc(c,r),nc(i,this.activation.apply(f))),u=this.recurrentActivation.apply(m);const g=nc(u,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:nw(this.activation),recurrentActivation:nw(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Hb(this.kernelInitializer),recurrentInitializer:Hb(this.recurrentInitializer),biasInitializer:Hb(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:lw(this.kernelRegularizer),recurrentRegularizer:lw(this.recurrentRegularizer),biasRegularizer:lw(this.biasRegularizer),activityRegularizer:lw(this.activityRegularizer),kernelConstraint:Sx(this.kernelConstraint),recurrentConstraint:Sx(this.recurrentConstraint),biasConstraint:Sx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}qw.className="LSTMCell",dc(qw);class Kw extends Ww{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new qw(e),super(e)}call(e,t){return Uo((()=>{null!=this.cell.dropoutMask&&(Go(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Go(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Kw.className="LSTM",dc(Kw);class Xw extends Vw{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Uo((()=>{let n=e.slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let s;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=a[o],s=0===o?[e[0]].concat(n):[s[0]].concat(n),s=i.call(s,t),r.push(s.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;qb(e)&&(e=e[0]),this.cells.forEach(((n,a)=>{Zy("RNNCell_".concat(a),(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[];for(const r of t.cells)a.push(zx(r,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return $b(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}ex(t)}}function Yw(e){const{ones:t,rate:n,training:a=!1,count:r=1,dropoutFunc:s}=e,o=()=>null!=s?s(t(),n):kb(t(),n),i=()=>Sb(o,t,a);if(!r||r<=1)return Ho(i().clone());return Array(r).fill(void 0).map(i).map((e=>Ho(e.clone())))}Xw.className="StackedRNNCells",dc(Xw);var Qw=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n};class Zw extends Ww{constructor(e){if(e.unroll)throw new fy("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new fy("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new tx({ndim:5})]}call(e,t){return Uo((()=>{if(null!=this.cell.dropoutMask&&(Go(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Go(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new py("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Uo((()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=Lh([a[0],...a.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Uo((()=>{if(!this.stateful)throw new hy("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new py("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Lh(r))):this.states_=[Lh(r)];else if(null==e)Go(this.states_),null!=this.keptStates&&(Go(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Lh(r))):this.states_[0]=Lh(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new py("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));t?this.keptStates.push(this.states_.slice()):Go(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=r;if(!ft(n.shape,a))throw new py("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(a,", received shape=").concat(n.shape));this.states_[t]=n}}this.states_=this.states_.map((e=>Ho(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:o}=this.cell,i="channelsFirst"===t,c=e[i?3:2],l=e[i?4:3],u=xw(c,a[0],r,s[0],o[0]),h=xw(l,a[1],r,s[1],o[1]);return[...e.slice(0,2),...i?[n,u,h]:[u,h,n]]}}Zw.className="ConvRNN2D";class Jw extends qw{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Dy(this.filters,"filters"),this.kernelSize=bw(n,2,"kernelSize"),this.kernelSize.forEach((e=>Dy(e,"kernelSize"))),this.strides=bw(a||1,2,"strides"),this.strides.forEach((e=>Dy(e,"strides"))),this.padding=r||"valid",Ky(this.padding),this.dataFormat=s||"channelsLast",qy(this.dataFormat),this.dilationRate=bw(o||1,2,"dilationRate"),this.dilationRate.forEach((e=>Dy(e,"dilationRate")))}build(e){var t;e=Yb(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new py("The channel dimension of the input should be defined. "+"Found ".concat(e[n]));const a=e[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends Tb{apply(e,t){return pb([n.apply([a]),zh([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Uo((()=>{if(3!==e.length)throw new py("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=t.training||!1,a=e[0],r=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Yw({ones:()=>Kh(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=(e,t,n)=>t&&t[n]?nc(t[n],e):e;let c=i(a,o,0),l=i(a,o,1),u=i(a,o,2),h=i(a,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Yw({ones:()=>Kh(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=i(r,d,0),f=i(r,d,1),m=i(r,d,2),g=i(r,d,3);const[y,b,x,v]=Gd(this.kernel.read(),4,3),[w,k,S,N]=this.useBias?Gd(this.bias.read(),4):[null,null,null,null];c=this.inputConv(c,y,w,this.padding),l=this.inputConv(l,b,k,this.padding),u=this.inputConv(u,x,S,this.padding),h=this.inputConv(h,v,N,this.padding);const[I,T,C,E]=Gd(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,I),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E);const R=this.recurrentActivation.apply($i(c,p)),A=this.recurrentActivation.apply($i(l,f)),_=$i(nc(A,s),nc(R,this.activation.apply($i(u,m)))),F=nc(this.recurrentActivation.apply($i(h,g)),this.activation.apply(_));return[F,F,_]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=Qw(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(e,t,n,a){const r=gu(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?wb(r,n,this.dataFormat):r}recurrentConv(e,t){return gu(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Jw.className="ConvLSTM2DCell",dc(Jw);class $w extends Zw{constructor(e){const t=new Jw(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}$w.className="ConvLSTM2D",dc($w);class ek extends ox{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?t[a]:this.noiseShape[a]);return n}call(e,t){return Uo((()=>{this.invokeCallHook(e,t);const n=Xb(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return Sb((()=>kb(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}ek.className="Dropout",dc(ek);class tk extends ek{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}tk.className="SpatialDropout1D",dc(tk);class nk extends ox{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Dy(this.units,"units"),this.activation=rw(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=jb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=jb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ix(e.kernelConstraint),this.biasConstraint=Ix(e.biasConstraint),this.kernelRegularizer=hw(e.kernelRegularizer),this.biasRegularizer=hw(e.biasRegularizer),this.activityRegularizer=hw(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Yb(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Yb(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Uo((()=>{this.invokeCallHook(e,t);const n=Xb(e),a=My(this.activation.getClassName());let r;return null!=a?r=yb(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=yb(n,this.kernel.read()),null!=this.bias&&(r=wb(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:nw(this.activation),useBias:this.useBias,kernelInitializer:Hb(this.kernelInitializer),biasInitializer:Hb(this.biasInitializer),kernelRegularizer:lw(this.kernelRegularizer),biasRegularizer:lw(this.biasRegularizer),activityRegularizer:lw(this.activityRegularizer),kernelConstraint:Sx(this.kernelConstraint),biasConstraint:Sx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}nk.className="Dense",dc(nk);class ak extends ox{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Yb(e);for(const t of e.slice(1))if(null==t)throw new py('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(e.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[e[0],nb(e,1)]}call(e,t){return Uo((()=>{this.invokeCallHook(e,t);let n=Xb(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=gp(n,e)}return function(e){if(e.rank<=1)throw new py("batchFlatten requires a minimum rank of 2. Got rank: ".concat(e.rank,"."));const t=[e.shape[0],nb(e.shape,1)];return ql(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}ak.className="Flatten",dc(ak);class rk extends ox{constructor(e){super(e),this.supportsMasking=!0,this.activation=rw(e.activation)}call(e,t){return Uo((()=>{this.invokeCallHook(e,t);const n=Xb(e);return this.activation.apply(n)}))}getConfig(){const e={activation:nw(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}rk.className="Activation",dc(rk);class sk extends ox{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Uo((()=>{return e=Xb(e),t=e,n=this.n,Uo((()=>{if(2!==t.shape.length)throw new py("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(t.shape.length," tensor."));return mb(lb(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}sk.className="RepeatVector",dc(sk);class ok extends ox{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let r=1,s=null;for(let i=0;i<a.length;++i){const e=a[i];if(this.isUnknown(e)){if(null!==s)throw new py("Can only specifiy one unknown dimension.");s=i}else r*=e}const o=nb(e);if(null!==s){if(0===r||o%r!==0)throw new py(n);a[s]=o/r}else if(o!==r)throw new py(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Uo((()=>{this.invokeCallHook(e,t);const n=Xb(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return ql(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}ok.className="Reshape",dc(ok);class ik extends ox{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(e.dims," instead."));const t=sb(1,e.dims.length+1);if(!ft(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new tx({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Yb(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return gp(Xb(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}ik.className="Permute",dc(ik);class ck extends ox{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Xb(e);return Sl(jh(n,this.maskValue),-1)}call(e,t){return Uo((()=>{this.invokeCallHook(e,t);const n=Xb(e),a=Sl(jh(n,this.maskValue),-1,!0);return nc(n,Qi(a,n.dtype))}))}}ck.className="Masking",dc(ck);class lk extends ox{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(wy(e.inputLength))}this.inputDim=e.inputDim,Dy(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Dy(this.outputDim,"outputDim"),this.embeddingsInitializer=jb(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=hw(e.embeddingsRegularizer),this.activityRegularizer=hw(e.activityRegularizer),this.embeddingsConstraint=Ix(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Uo((()=>this.maskZero?(e=Xb(e),jh(e,sc(e))):null))}computeOutputShape(e){if(e=Yb(e),null==this.inputLength)return[...e,this.outputDim];const t=wy(this.inputLength);if(t.length!==e.length-1)throw new py('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));{let n=0;for(let a=0;a<t.length;++a){const r=t[a],s=e[a+1];if(null!=r&&null!=s&&r!==s)throw new py('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));null==r&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Uo((()=>{this.invokeCallHook(e,t);let n=Xb(e);"int32"!==n.dtype&&(n=cb(n,"int32"));const a=bb(this.embeddings.read(),ql(n,[n.size]));return ql(a,Yb(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Hb(this.embeddingsInitializer),embeddingsRegularizer:lw(this.embeddingsRegularizer),activityRegularizer:lw(this.activityRegularizer),embeddingsConstraint:Sx(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}lk.className="Embedding",dc(lk);class uk extends ox{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new fy}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const r=e[e.length-t.length+a],s=t[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new py("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Yb(e)]),e.length<2)throw new py("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(e.length," input(s)."));let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=Ry(t),t.length>1)throw new py("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(e),"."));let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const a=e.map((e=>e.length));-1===e.indexOf(null)&&1===Ry(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Uo((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const a=rb(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=lb(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,a=e[0],r=e.slice(1).concat([a]);let o=ql(s,[a].concat(nb(e.slice(1))));o=gp(o,[1,0]),o=ql(o,r),t.push(o),n=!0}else if(e>1){const a=sb(1,e).concat([0]);t.push(gp(s,a)),n=!0}else t.push(s)}let a=this.mergeFunction(t);const r=a.rank;if(n)if(null==r){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=ql(gp(ql(a,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(sb(0,r-1));a=gp(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const n=null==e[a]?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const a of e)null!=a&&null!==a[0]&&n.push(a[0]);return n=Ry(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Uo((()=>{if(null==t)return null;if(!Array.isArray(t))throw new py("`mask` should be an Array");if(!Array.isArray(e))throw new py("`inputs` should be an Array");if(t.length!==e.length)throw new py("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(e.length," vs ").concat(t.length,")"));if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:th(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Ih(n,t[e]);return n}))}}class hk extends uk{constructor(e){super(e)}mergeFunction(e){return Uo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=$i(t,e[n]);return t}))}}hk.className="Add",dc(hk);class dk extends uk{constructor(e){super(e)}mergeFunction(e){return Uo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=nc(t,e[n]);return t}))}}dk.className="Multiply",dc(dk);class pk extends uk{constructor(e){super(e)}mergeFunction(e){return Uo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=$i(t,e[n]);return nc(1/e.length,t)}))}}pk.className="Average",dc(pk);class fk extends uk{constructor(e){super(e)}mergeFunction(e){return Uo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Nc(t,e[n]);return t}))}}fk.className="Maximum",dc(fk);class mk extends uk{constructor(e){super(e)}mergeFunction(e){return Uo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Bh(t,e[n]);return t}))}}mk.className="Minimum",dc(mk);class gk extends uk{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new py("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const a of e)if(null!=a){t=!1;break}if(t)return;const n=[];for(let a=0;a<e.length;++a){const t=e[a].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(ft(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new py("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Uo((()=>pb(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new py("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[a]||null==r[a]){n[a]=null;break}n[a]+=r[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new py("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new py("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new py("Mismatch in the length of mask (".concat(t.length,") ")+"and the legnth of inputs (".concat(e.length,")"));return Uo((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const a=[];for(let s=0;s<e.length;++s)null==t[s]?a.push(Qi(Kh(e[s]),"bool")):t[s].rank<e[s].rank?a.push(th(t[s],-1)):a.push(t[s]);const r=Yl(a,this.axis);return kl(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function yk(e,t){for(;e<0;)e+=t;return e}gk.className="Concatenate",dc(gk);class bk extends uk{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ut(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new fy("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new py("Dimension incompatibility: "+"".concat(t[a[0]]," !== ").concat(n[a[1]]))}mergeFunction(e){if(2!==e.length)throw new py("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(e.length," input(s)."));let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>yk(t,e[n].shape.length))):[yk(this.axes,n.shape.length),yk(this.axes,a.shape.length)],this.normalize&&(n=Px(n,t[0]),a=Px(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new fy("batchDot is not implemented for tensors of 4D or higher rank yet");if(ut(e.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(e.shape.length))),ut(e.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(t.shape.length))),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new fy("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,r=t.shape.length;null==n&&(n=[a-1,r-2]);const s=n;return Uo((()=>{let n,o;if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=ql(t,t.shape.concat(e))}else if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=ql(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=s[0]===s[1]?Qu(nc(e,t),s[0]):Qu(nc(gp(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,a=s[1]===t.shape.length-1;o=Ql(e,t,n,a)}if(n>0){let e;e=a>r?a+r-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);o=qd(o,t)}return 1===o.shape.length&&(o=th(o,1)),o}))}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[yk(this.axes,e.length),yk(this.axes,t.length)],n}computeOutputShape(e){ut(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new fy("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}bk.className="Dot",dc(bk);class xk extends ox{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Uo((()=>{this.invokeCallHook(e,t);const n=Xb(e);return Sb((()=>$i(gb(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}xk.className="GaussianNoise",dc(xk);class vk extends ox{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Uo((()=>{this.invokeCallHook(e,t);const n=Xb(e);if(this.rate>0&&this.rate<1){return Sb((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return nc(n,gb(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}vk.className="GaussianDropout",dc(vk);class wk extends ox{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Xb(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Uo((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),a=()=>{const t=Xb(e),a=-1.7580993408473766;let r=ch(md(n),this.rate);r=cb(r,"float32");const s=((1-this.rate)*(1+this.rate*a**2))**-.5,o=-s*a*this.rate,i=$i(nc(t,r),nc($i(r,-1),a));return $i(nc(i,s),o)};return Sb(a,(()=>Xb(e)),t.training||!1)}return e}))}}function kk(e,t,n,a,r){let s,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)s=au(e,t,n,a,r,o);else if(3===e.rank)s=ru(e,t,n,a,r,o);else{if(4!==e.rank)throw new fy("batchNormalization is not implemented for array of rank ".concat(e.rank," ")+"yet");s=su(e,t,n,a,r,o)}return s}function Sk(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return ft(a.slice().sort(),sb(0,e.rank-1))?function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Uo((()=>{const s=Uh(e,a),o=s.mean,i=s.variance;return[kk(e,o,i,n,t,r),o,i]}))}(e,t,n,a,r):function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Uo((()=>{const s=Uh(e,a),o=s.mean,i=s.variance,c=[];for(const t of sb(0,e.rank))-1!==a.indexOf(t)?c.push(1):c.push(e.shape[t]);const l=ql(o,c),u=ql(i,c),h=null==t?null:ql(t,c),d=null==n?null:ql(n,c);return[kk(e,l,u,d,h,r),o,i]}))}(e,t,n,a,r)}wk.className="AlphaDropout",dc(wk);class Nk extends ox{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=jb(e.betaInitializer||"zeros"),this.gammaInitializer=jb(e.gammaInitializer||"ones"),this.movingMeanInitializer=jb(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=jb(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ix(e.betaConstraint),this.gammaConstraint=Ix(e.gammaConstraint),this.betaRegularizer=hw(e.betaRegularizer),this.gammaRegularizer=hw(e.gammaRegularizer)}build(e){e=Yb(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new py("Axis ".concat(t," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(e),"."));this.inputSpec=[new tx({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Uo((()=>{const n=null!=t.training&&t.training,a=Xb(e),r=a.shape,s=r.length,o=sb(0,s),i=this.axis>=0?this.axis:this.axis+s;o.splice(i,1);const c=yy(1,s);c[i]=r[i];const l=o.slice();l.sort();const u=!ft(l,sb(0,s).slice(0,s-1));if(!n)return(()=>{if(u){const e=ql(this.movingMean.read(),c),t=ql(this.movingVariance.read(),c),n=this.center?ql(this.beta.read(),c):null,r=this.scale?ql(this.gamma.read(),c):null;return kk(a,e,t,n,r,this.epsilon)}return kk(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=Sk(a,this.gamma.read(),this.beta.read(),o,this.epsilon),f=(e,t,n)=>{Uo((()=>{const a=1-n,r=e.read(),s=nc(bc(r,t),a);e.write(bc(r,s))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Hb(this.betaInitializer),gammaInitializer:Hb(this.gammaInitializer),movingMeanInitializer:Hb(this.movingMeanInitializer),movingVarianceInitializer:Hb(this.movingVarianceInitializer),betaRegularizer:lw(this.betaRegularizer),gammaRegularizer:lw(this.gammaRegularizer),betaConstraint:Sx(this.betaConstraint),gammaConstraint:Sx(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Nk.className="BatchNormalization",dc(Nk);class Ik extends ox{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=jb(e.betaInitializer||"zeros"),this.gammaInitializer=jb(e.gammaInitializer||"ones"),this.betaRegularizer=hw(e.betaRegularizer),this.gammaRegularizer=hw(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Yb(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error("Invalid axis: ".concat(r));if(this.axis.length!==Ry(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map((t=>e[t])),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,t){const n=Xb(e),a=n.shape,r=a.length;return Uo((()=>{let{mean:e,variance:t}=Uh(n,this.axis,!0);const s=yy(1,r);for(const n of this.axis)s[n]=a[n];const o=e=>null!=e&&e.shape.length!==r?ql(e,s):e;let i=this.scale?o(this.gamma.read()):null,c=this.center?o(this.beta.read()):null;const l=[],u=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(l.push(a[n]),u.push(1)):(l.push(1),u.push(a[n]));return e=ah(e,l),t=ah(t,l),null!=i&&(i=ah(i,u)),null!=c&&(c=ah(c,u)),kk(n,e,t,c,i,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Hb(this.betaInitializer),gammaInitializer:Hb(this.gammaInitializer),betaRegularizer:lw(this.betaRegularizer),gammaRegularizer:lw(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Ik.className="LayerNormalization",dc(Ik);class Tk extends ox{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new py("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(e.padding.length," array."));let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new py("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(e.padding[0].length," array."));if(t=e.padding[0],2!==e.padding[1].length)throw new py("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(e.padding[1].length," array."));n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new tx({ndim:4})]}computeOutputShape(e){let t,n;return e=Yb(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Uo((()=>{return t=Xb(e),n=this.padding,a=this.dataFormat,Uo((()=>{if(4!==t.rank)throw new py("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(t.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new py("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new py("Unknown data format: ".concat(a,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Yh(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Ck(e,t,n,a,r,s){return Uo((()=>{let o;qy(r),Xy(s),Ky(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=ww(e,r);const i="same"===a?"same":"valid";return o="max"===s?Fh(e,t,n,i):Kl(e,t,n,i),"channelsFirst"===r&&(o=gp(o,[0,3,1,2])),o}))}function Ek(e,t,n,a,r,s){return Uo((()=>{let o;qy(r),Xy(s),Ky(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=kw(e,r);const i="same"===a?"same":"valid";return o="max"===s?Dh(e,t,n,i):Xl(e,t,n,i),"channelsFirst"===r&&(o=gp(o,[0,4,1,2,3])),o}))}Tk.className="ZeroPadding2D",dc(Tk);class Rk extends ox{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new py("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.poolSize)));this.poolSize=e.poolSize}if(Dy(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new py("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.strides)));this.strides=e.strides}Dy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Ky(this.padding),this.inputSpec=[new tx({ndim:3})]}computeOutputShape(e){const t=xw((e=Yb(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Uo((()=>{this.invokeCallHook(e,t),e=lb(Xb(e),2);const n=this.poolingFunction(Xb(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return qd(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Ak extends Rk{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return qy(r),Ky(a),Ck(e,t,n,a,r,"max")}}Ak.className="MaxPooling1D",dc(Ak);class _k extends Rk{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return qy(r),Ky(a),Ck(e,t,n,a,r,"avg")}}_k.className="AveragePooling1D",dc(_k);class Fk extends ox{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new py("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides];Dy(this.poolSize,"poolSize"),Dy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qy(this.dataFormat),Ky(this.padding),this.inputSpec=[new tx({ndim:4})]}computeOutputShape(e){e=Yb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=xw(t,this.poolSize[0],this.padding,this.strides[0]),n=xw(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Uo((()=>(this.invokeCallHook(e,t),this.poolingFunction(Xb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Dk extends Fk{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return qy(r),Ky(a),Ck(e,t,n,a,r,"max")}}Dk.className="MaxPooling2D",dc(Dk);class Ok extends Fk{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return qy(r),Ky(a),Ck(e,t,n,a,r,"avg")}}Ok.className="AveragePooling2D",dc(Ok);class Mk extends ox{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new py("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Dy(this.poolSize,"poolSize"),Dy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qy(this.dataFormat),Ky(this.padding),this.inputSpec=[new tx({ndim:5})]}computeOutputShape(e){e=Yb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=xw(t,this.poolSize[0],this.padding,this.strides[0]),n=xw(n,this.poolSize[1],this.padding,this.strides[1]),a=xw(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return Uo((()=>(this.invokeCallHook(e,t),this.poolingFunction(Xb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Lk extends Mk{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return qy(r),Ky(a),Ek(e,t,n,a,r,"max")}}Lk.className="MaxPooling3D",dc(Lk);class zk extends Mk{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return qy(r),Ky(a),Ek(e,t,n,a,r,"avg")}}zk.className="AveragePooling3D",dc(zk);class Pk extends ox{constructor(e){super(e),this.inputSpec=[new tx({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new fy}}class Bk extends Pk{constructor(e){super(e||{})}call(e,t){return Uo((()=>{const t=Xb(e);return Mh(t,1)}))}}Bk.className="GlobalAveragePooling1D",dc(Bk);class Wk extends Pk{constructor(e){super(e||{})}call(e,t){return Uo((()=>{const t=Xb(e);return Xu(t,1)}))}}Wk.className="GlobalMaxPooling1D",dc(Wk);class Vk extends ox{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qy(this.dataFormat),this.inputSpec=[new tx({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new fy}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Uk extends Vk{call(e,t){return Uo((()=>{const t=Xb(e);return"channelsLast"===this.dataFormat?Mh(t,[1,2]):Mh(t,[2,3])}))}}Uk.className="GlobalAveragePooling2D",dc(Uk);class Gk extends Vk{call(e,t){return Uo((()=>{const t=Xb(e);return"channelsLast"===this.dataFormat?Xu(t,[1,2]):Xu(t,[2,3])}))}}Gk.className="GlobalMaxPooling2D",dc(Gk);class Hk extends ox{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=zx(t.layer,n);delete t.layer;const r={layer:a};return Object.assign(r,t),new e(r)}}class jk extends Hk{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Yb(e)).length<3)throw new py("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(e)));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Yb(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return Uo((()=>Bw(((e,n)=>[Xb(this.layer.call(e,t)),[]]),e=Xb(e),[],!1,null,null,!1,!0)[1]))}}jk.className="TimeDistributed",dc(jk);class qk extends Hk{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=zx(n),t.goBackwards=!0!==t.goBackwards;const a={};var r;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=zx(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,_y(Hy,"BidirectionalMergeMode",r),e.weights)throw new fy("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(a=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):vy(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=Pw(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const s=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new py("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const a=n.map((e=>new tx({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),o.push(...a)}if(null!=a)throw new fy("Support for constants in Bidirectional layers is not implemented yet.");const i=s[0]instanceof nx;for(const c of s)if(c instanceof nx!==i)throw new py("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return Uo((()=>{const n=t.initialState;let a,r,s,o;if(null==n)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),o=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(a)&&(s=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=kd(r,1)),"concat"===this.mergeMode?o=pb([a,r]):"sum"===this.mergeMode?o=$i(a,r):"ave"===this.mergeMode?o=nc(.5,$i(a,r)):"mul"===this.mergeMode?o=nc(a,r):null==this.mergeMode&&(o=[a,r]),this.returnState?null==this.mergeMode?o.concat(s):[o].concat(s):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Zy(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Zy(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=zx(t.layer);if(delete t.layer,null!=t.numConstants)throw new fy("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}qk.className="Bidirectional",dc(qk);class Kk extends ox{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Uo((()=>("float32"!==(e=Xb(e)).dtype&&(e=cb(e,"float32")),$i(nc(e,this.scale),this.offset))))}}Kk.className="Rescaling",dc(Kk);const{resizeBilinear:Xk,cropAndResize:Yk}=Mf;class Qk extends ox{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,r,s,o,i){return Uo((()=>{let c,l=!1;const u=[t/s,n/o,(a+t)/s,(r+n)/o],h=[];3===e.rank?(l=!0,c=Kd([e])):c=e;for(let e=0;e<c.shape[0];e++)h.push(u);const d=zo(h,[h.length,4]),p=yd(0,h.length,1,"int32"),f=Yk(c,d,p,[a,r],"nearest");return cb(l?Xb(up(f)):f,i)}))}upsize(e,t,n,a){return Uo((()=>cb(Xk(e,[t,n]),a)))}call(e,t){return Uo((()=>{const t=Xb(e),n=t.dtype,a=t.shape,r=a[a.length-3],s=a[a.length-2];let o=0;r!==this.height&&(o=Math.floor((r-this.height)/2));let i=0;return s!==this.width&&(i=Math.floor((s-this.width)/2),0===i&&(i=1)),o>=0&&i>=0?this.centerCrop(t,o,i,this.height,this.width,r,s,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Yb(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Qk.className="CenterCrop",dc(Qk);class Zk extends ox{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Yb(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Uo((()=>{let n;if("int32"!==(e=Xb(e)).dtype&&(e=cb(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new py("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(t.countWeights));n=Xb(t.countWeights)}const a=Xu(e),r=Yu(e),s=ih(this.numTokens,a).bufferSync().get(0),o=ch(r,0).bufferSync().get(0);if(!s||!o)throw new py("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));return function(e,t,n,a){let r=Xb(e);if("int32"!==r.dtype&&(r=cb(r,"int32")),"int"===t)return r;const s=r.shape;if(0===r.rank&&(r=th(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=th(r,-1)),r.rank>2)throw new py("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(t," and input shape ").concat(s)+" which would result in output rank ".concat(r.rank,"."));const o=["multiHot","oneHot"].includes(t),i=r;let c;if(c=Cu(i,"undefined"!==typeof a&&"count"===t?a:[],n,o),"tfIdf"!==t)return c;if(a)return nc(c,a);throw new py("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Zk.className="CategoryEncoding",dc(Zk);const Jk=new Set(["bilinear","nearest"]);class $k extends ox{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Jk.has(e.interpolation))throw new py("Invalid interpolation parameter: ".concat(e.interpolation," is not implemented"));this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Yb(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Uo((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return Mf.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Mf.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...Jk]," are supported"))}))}}$k.className="Resizing",dc($k);class eS{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}eS.className="RandomSeed";class tS extends ox{constructor(e){super(e),this.randomGenerator=new eS(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}tS.className="BaseRandomLayer";const nS=new Set(["bilinear","nearest"]);class aS extends tS{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new py("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new py("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new py("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!nS.has(n))throw new py("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Yb(e))[2];return[this.imgHeight,-1,t]}call(e,t){return Uo((()=>{const t=Xb(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=md([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const r=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return Mf.resizeBilinear(e,r);case"nearest":return Mf.resizeNearestNeighbor(e,r);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([...nS]," are supported"))}}))}}aS.className="RandomWidth",dc(aS);var rS,sS;Ht().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(rS||(rS={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(sS||(sS={}));const oS={};function iS(e){return oS[e]}function cS(e,t,n,a,r){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return lS(t.inputNames[i],n,a,r);if("tensors"===s.type){const s=t.inputs.slice(e,o);return t.inputNames.slice(e,o).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>lS(e,n,a,r)))}const c=lS(t.inputNames[i],n,a,r),l=c.dataSync();return"number"===s.type?l[0]:Dt(c.shape,l)}const o=t.attrParams[e];return o&&o.value}function lS(e,t,n,a){const[r,s]=pS(e,n);if(null!=a){const e=a.getHashTableHandleByName(r);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[dS(r,e)]));return void 0!==o?t[dS(r,o)][s]:void 0}function uS(e,t,n){return t[dS(e,n.currentContextId)]}function hS(e,t){const[n,a,r]=pS(e,t);return[dS(n,t&&t.currentContextId),a,r]}function dS(e,t){return t?"".concat(e,"-").concat(t):e}function pS(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const a=e.split(":");let r;if(1===a.length)r=[e,0,void 0];else{const e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function fS(e,t,n){let a=cS("pad",e,t,n);if("explicit"===a){a=cS("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function mS(e){return e.kept?e:Zi(e)}const gS=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],yS=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],bS=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],xS=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],vS=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],wS=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],kS=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],SS=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],NS=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],IS=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],TS=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],CS=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],ES=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],RS=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],AS=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],_S=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],FS=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],DS=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],OS=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class MS{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[i,c,l,u,h,d,p,f,m,g,y,b,x,v,w,k,S,N,I].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,a=[],r=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const c=[];let l={},u={};null!=t&&(l=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));const h=Object.keys(o);h.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[a,,r]=hS(e),s=o[a];if(null!=s.outputs){const e=s.outputs.indexOf(r);if(-1!==e){const r="".concat(a,":").concat(e);t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(u).length?h.forEach((e=>{const t=o[e];0===t.children.length&&c.push(t)})):Object.keys(u).forEach((e=>{const[t]=hS(e),n=o[t];null!=n&&(n.signatureKey=u[e],c.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=hS(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=a;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:o,inputs:i,outputs:c,weights:r,placeholders:a,signature:t,functions:d};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=iS(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const a=n.type;let r;switch(n.type){case"string":r=zS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=zS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=KS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=KS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=BS(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=BS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=qS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=qS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=PS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=PS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=YS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=YS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=jS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=jS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=XS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=XS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=US(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=US(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=GS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=GS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=VS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=VS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(e.op))}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=hS(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:WS(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n}));Object.keys(a).forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=hS(e),o=a[r];if(null!=o.outputs){const e=o.outputs.indexOf(s);if(-1!==e){const a="".concat(r,":").concat(e);t.inputNames[n]=a}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=hS(o[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,s.push(r))}));const i=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function LS(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Ht().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function zS(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return null!=r?LS(r.s,a):n}function PS(e,t,n){const a=e[t];return a?a.b:n}function BS(e,t,n){const a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function WS(e){switch("string"===typeof e&&(e=rS[e]),e){case rS.DT_FLOAT:case rS.DT_HALF:return"float32";case rS.DT_INT32:case rS.DT_INT64:case rS.DT_INT8:case rS.DT_UINT8:return"int32";case rS.DT_BOOL:return"bool";case rS.DT_DOUBLE:return"float32";case rS.DT_STRING:return"string";case rS.DT_COMPLEX64:case rS.DT_COMPLEX128:return"complex64";default:return null}}function VS(e,t,n){const a=e[t];return a&&a.func?a.func.name:n}function US(e,t,n){const a=e[t];return a&&a.type?WS(a.type):n}function GS(e,t,n){const a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>WS(e))):n}function HS(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function jS(e,t,n){const a=e[t];return a&&a.shape?HS(a.shape):n}function qS(e,t,n){const a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function KS(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>LS(e,a))):n}function XS(e,t,n){const a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>HS(e))):n}function YS(e,t,n){const a=e[t];return a&&a.list&&a.list.b?a.list.b:n}class QS{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return lS(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return lS(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return BS(this.node.rawAttrs,e,t);if(null!=n.s)return zS(this.node.rawAttrs,e,t);if(null!=n.b)return PS(this.node.rawAttrs,e,t);if(null!=n.shape)return jS(this.node.rawAttrs,e,t);if(null!=n.type)return US(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return qS(this.node.rawAttrs,e,t);if(null!=n.list.s)return KS(this.node.rawAttrs,e,t);if(null!=n.list.shape)return XS(this.node.rawAttrs,e,t);if(null!=n.list.b)return YS(this.node.rawAttrs,e,t);if(null!=n.list.type)return GS(this.node.rawAttrs,e,t)}return t}}function ZS(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){ut(e.length===t.length,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")));for(let a=0;a<e.length;a++){const r=e[a],s=t[a];ut(r<0||s<0||r===s,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}}}function JS(e){return"number"!==typeof e&&!e.some((e=>e<0))}function $S(e,t,n){let a=eN(e,n);const r=!JS(a);if(r&&0===t.length)throw new Error("Tried to calculate elements of an empty list"+" with non-fully-defined elementShape: ".concat(a));if(r&&t.forEach((e=>{a=eN(e.shape,a)})),!JS(a))throw new Error("Non-fully-defined elementShape: ".concat(a));return a}function eN(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error("Incompatible ranks during merge: ".concat(e," vs. ").concat(t));const n=[];for(let a=0;a<e.length;++a){const r=e[a],s=t[a];if(r>=0&&s>=0&&r!==s)throw new Error("Incompatible shape during merge: ".concat(e," vs. ").concat(t));n[a]=r>=0?r:s}return n}class tN{constructor(e,t,n,a,r,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=ic(0),Ho(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||e>=this.size())throw new Error("Tried to read from index ".concat(e,", but array size is: ").concat(this.size()));const t=this.tensors[e];if(t.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(e," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index ".concat(e,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,",\n          because the value dtype is ").concat(t.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),ZS(this.elementShape,t.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been written."));n.tensor=t,Ho(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(e.length," is not the same as tensors size: ").concat(t.length,"."));e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(t));if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return zo([],[0].concat(this.elementShape));const n=this.readMany(e);return ZS(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Kd(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(e));if(0===this.size())return zo([],[0].concat(this.elementShape));const t=[];for(let a=0;a<this.size();a++)t.push(a);const n=this.readMany(t);return ZS(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),Yl(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(e,up(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));let n=0;const a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(t.shape));if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(e.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const r=0===n?0:t.size/n,s=[];Uo((()=>{t=ql(t,[1,n,r]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:a[n-1],0],i=[1,e[n],r];s[n]=ql(Jl(t,o,i),this.elementShape)}return s}));const o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,s)}}class nN{get id(){return this.idTensor.id}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(e.dtype));ZS(t,e.shape,"TensorList shape mismatch: "),Ho(e)})),this.idTensor=ic(0),this.maxNumElements=a,Ho(this.idTensor)}copy(){return new nN([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));ZS(e,this.elementShape,"TensorList shape mismatch: ");const a=$S(this.elementShape,this.tensors,e);return Uo((()=>{const e=this.tensors.map((e=>ql(e,a)));return Kd(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=$S(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,ZS(a.shape,e,"TensorList shape mismatch: "),ql(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(ZS(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ho(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(e));if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error("TensorListResize input size ".concat(e," is greater maxNumElement ").concat(this.maxNumElements,"."));const t=new nN([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(e<0||e>this.tensors.length)throw new Error("Trying to access element ".concat(e," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[e])throw new Error("element at index ".concat(e," is null."));ZS(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=$S(this.elementShape,this.tensors,t);return ql(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error("Trying to set element ".concat(e," in a list with max ").concat(this.maxNumElements," elements."));ZS(this.elementShape,t.shape,"TensorList shape mismatch: "),Ho(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));ZS(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=$S(this.elementShape,this.tensors,n);return 0===e.length?zo([],[0].concat(a)):Uo((()=>{const t=e.map((e=>ql(this.tensors[e],a)));return Kd(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(e));ZS(this.elementShape,t,"TensorList shape mismatch: ");const n=$S(this.elementShape,this.tensors,t);return 0===this.size()?zo([],[0].concat(n)):Uo((()=>{const e=this.tensors.map((e=>ql(e,n)));return Yl(e,0)}))}}const aN=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const a=cS("thenBranch",e,t,n),r=cS("elseBranch",e,t,n),s=cS("cond",e,t,n),o=cS("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=cS("body",e,t,n),r=cS("cond",e,t,n),s=cS("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let c=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=s;for(;c[0];){const e=l;l=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[mS(cS("pred",e,t,n))];case"Switch":{const a=cS("pred",e,t,n);let r=cS("data",e,t,n);return r.kept||(r=mS(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=e.inputNames.find((e=>void 0!==lS(e,t,n)));if(a){return[mS(lS(a,t,n))]}return}case"Enter":{const a=cS("frameName",e,t,n),r=cS("tensor",e,t,n);return n.enterFrame(a),[mS(r)]}case"Exit":{const a=cS("tensor",e,t,n);return n.exitFrame(),[mS(a)]}case"NextIteration":{const a=cS("tensor",e,t,n);return n.nextIteration(),[mS(a)]}case"TensorArrayV3":{const a=cS("size",e,t,n),r=cS("dtype",e,t,n),s=cS("elementShape",e,t,n),o=cS("dynamicSize",e,t,n),i=cS("clearAfterRead",e,t,n),c=cS("identicalElementShapes",e,t,n),l=cS("name",e,t,n),u=new tN(l,r,a,s,c,o,i);return n.addTensorArray(u),[u.idTensor,ic(1)]}case"TensorArrayWriteV3":{const a=cS("tensorArrayId",e,t,n),r=cS("index",e,t,n),s=cS("tensor",e,t,n),o=n.getTensorArray(a.id);return o.write(r,s),[o.idTensor]}case"TensorArrayReadV3":{const a=cS("tensorArrayId",e,t,n),r=cS("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=cS("tensorArrayId",e,t,n),r=cS("indices",e,t,n),s=cS("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{const a=cS("tensorArrayId",e,t,n),r=cS("indices",e,t,n),s=cS("tensor",e,t,n),o=n.getTensorArray(a.id);return o.scatter(r,s),[o.idTensor]}case"TensorArrayConcatV3":{const a=cS("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=cS("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{const a=cS("tensorArrayId",e,t,n),r=cS("tensor",e,t,n),s=cS("lengths",e,t,n),o=n.getTensorArray(a.id);return o.split(s,r),[o.idTensor]}case"TensorArraySizeV3":{const a=cS("tensorArrayId",e,t,n);return[ic(n.getTensorArray(a.id).size(),"int32")]}case"TensorArrayCloseV3":{const a=cS("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=cS("tensorListId",e,t,n),r=cS("index",e,t,n),s=cS("tensor",e,t,n),o=n.getTensorList(a.id);return o.setItem(r,s),[o.idTensor]}case"TensorListGetItem":{const a=cS("tensorListId",e,t,n),r=cS("index",e,t,n),s=cS("elementShape",e,t,n),o=cS("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const a=cS("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error("Max index must be < array size (".concat(r,"  vs. ").concat(a,")"));const s=new nN([],n,e.dtype,a),o=up(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}(cS("tensor",e,t,n),a,cS("elementShape",e,t,n),cS("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=cS("elementShape",e,t,n),r=cS("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=cS(s,e,t,n),i=function(e,t,n,a){return new nN([],e,t,a)}(a,r,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const a=cS("tensorListId",e,t,n),r=cS("indices",e,t,n),s=cS("elementShape",e,t,n),o=cS("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,o,s)]}case"TensorListStack":{const a=cS("tensorListId",e,t,n),r=cS("elementShape",e,t,n),s=cS("elementDType",e,t,n),o=cS("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,o)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(e.shape));if(e.dtype!==n)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(n));ZS(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=up(e);return new nN(r,t,a)}(cS("tensor",e,t,n),cS("elementShape",e,t,n),cS("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const a=cS("tensorListId",e,t,n),r=n.getTensorList(a.id),s=cS("dtype",e,t,n),o=cS("elementShape",e,t,n);return[r.concat(s,o)]}case"TensorListPushBack":{const a=cS("tensorListId",e,t,n),r=cS("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{const a=cS("tensorListId",e,t,n),r=cS("elementShape",e,t,n),s=cS("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{const a=cS("tensor",e,t,n),r=cS("elementShape",e,t,n),s=function(e,t,n){let a=0;const r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(e.shape));const s=eN(e.shape.slice(1),n),o=0===a?0:e.size/a,i=Uo((()=>{const n=[];e=ql(e,[1,a,o]);for(let a=0;a<t.length;++a){const i=[0,0===a?0:r[a-1],0],c=[1,t[a],o];n[a]=ql(Jl(e,i,c),s)}return e.dispose(),n})),c=new nN([],n,e.dtype,t.length);for(let l=0;l<i.length;l++)c.setItem(l,i[l]);return c}(a,cS("lengths",e,t,n),r);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const a=cS("tensorListId",e,t,n);return[ic(n.getTensorList(a.id).size(),"int32")]}case"TensorListResize":{const a=cS("tensorListId",e,t,n),r=cS("size",e,t,n),s=n.getTensorList(a.id).resize(r);return n.addTensorList(s),[s.idTensor]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function rN(e,t,n){const[a,r]=cS("fusedOps",e,t,n),s="biasadd"===a,o=!s,i="prelu"===r,c="fusedbatchnorm"===a,l=cS("numArgs",e,t,n);if(s){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=cS("strides",e,t,n),h=fS(e,t,n),d=cS("dataFormat",e,t,n).toUpperCase(),p=cS("dilations",e,t,n);let[f,m]=cS("args",e,t,n);o&&(m=f,f=void 0);return{stride:u,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:cS("leakyreluAlpha",e,t,n)}}function sN(e,t,n){return{boxes:cS("boxes",e,t,n),scores:cS("scores",e,t,n),maxOutputSize:cS("maxOutputSize",e,t,n),iouThreshold:cS("iouThreshold",e,t,n),scoreThreshold:cS("scoreThreshold",e,t,n),softNmsSigma:cS("softNmsSigma",e,t,n)}}class oN{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ic(0),this.tensorMap=new Map,Ho(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ic(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Uo((()=>{const e=up(t),a=n.length,r=e.length;ut(a===r,(()=>"The number of elements doesn't match, keys has "+"".concat(a," elements, the values has ").concat(r," ")+"elements."));for(let t=0;t<a;t++){const a=n[t],r=e[t];Ho(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Uo((()=>{const e=[];for(let a=0;a<n.length;a++){const r=n[a],s=this.findWithDefault(r,t);e.push(s)}return Kd(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(e.dtype));if(t.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(t.dtype))}}function iN(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Uo;const s=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:T;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(cS("a",e,t,n),cS("b",e,t,n))];case"AddN":return[a.addN(cS("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(cS("a",e,t,n),cS("b",e,t,n))];case"Mul":return[a.mul(cS("a",e,t,n),cS("b",e,t,n))];case"RealDiv":case"Div":return[a.div(cS("a",e,t,n),cS("b",e,t,n))];case"DivNoNan":return[a.divNoNan(cS("a",e,t,n),cS("b",e,t,n))];case"FloorDiv":return[a.floorDiv(cS("a",e,t,n),cS("b",e,t,n))];case"Sub":return[a.sub(cS("a",e,t,n),cS("b",e,t,n))];case"Minimum":return[a.minimum(cS("a",e,t,n),cS("b",e,t,n))];case"Maximum":return[a.maximum(cS("a",e,t,n),cS("b",e,t,n))];case"Pow":return[a.pow(cS("a",e,t,n),cS("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(cS("a",e,t,n),cS("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"basic_math":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:T;switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(cS("x",e,t,n))];case"Acos":return[a.acos(cS("x",e,t,n))];case"Acosh":return[a.acosh(cS("x",e,t,n))];case"Asin":return[a.asin(cS("x",e,t,n))];case"Asinh":return[a.asinh(cS("x",e,t,n))];case"Atan":return[a.atan(cS("x",e,t,n))];case"Atan2":return[a.atan2(cS("x",e,t,n),cS("y",e,t,n))];case"Atanh":return[a.atanh(cS("x",e,t,n))];case"Ceil":return[a.ceil(cS("x",e,t,n))];case"Complex":return[a.complex(cS("real",e,t,n),cS("imag",e,t,n))];case"Cos":return[a.cos(cS("x",e,t,n))];case"Cosh":return[a.cosh(cS("x",e,t,n))];case"Elu":return[a.elu(cS("x",e,t,n))];case"Erf":return[a.erf(cS("x",e,t,n))];case"Exp":return[a.exp(cS("x",e,t,n))];case"Expm1":return[a.expm1(cS("x",e,t,n))];case"Floor":return[a.floor(cS("x",e,t,n))];case"Log":return[a.log(cS("x",e,t,n))];case"Log1p":return[a.log1p(cS("x",e,t,n))];case"Imag":return[a.imag(cS("x",e,t,n))];case"Neg":return[a.neg(cS("x",e,t,n))];case"Reciprocal":return[a.reciprocal(cS("x",e,t,n))];case"Real":return[a.real(cS("x",e,t,n))];case"Relu":return[a.relu(cS("x",e,t,n))];case"Round":return[a.round(cS("x",e,t,n))];case"Selu":return[a.selu(cS("x",e,t,n))];case"Sigmoid":return[a.sigmoid(cS("x",e,t,n))];case"Sin":return[a.sin(cS("x",e,t,n))];case"Sign":return[a.sign(cS("x",e,t,n))];case"Sinh":return[a.sinh(cS("x",e,t,n))];case"Softplus":return[a.softplus(cS("x",e,t,n))];case"Sqrt":return[a.sqrt(cS("x",e,t,n))];case"Square":return[a.square(cS("x",e,t,n))];case"Tanh":return[a.tanh(cS("x",e,t,n))];case"Tan":return[a.tan(cS("x",e,t,n))];case"ClipByValue":return[a.clipByValue(cS("x",e,t,n),cS("clipValueMin",e,t,n),cS("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(cS("x",e,t,n))];case"Rsqrt":return[a.rsqrt(lS(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu(cS("x",e,t,n),cS("alpha",e,t,n))];case"Prelu":return[a.prelu(cS("x",e,t,n),cS("alpha",e,t,n))];case"IsNan":return[a.isNaN(lS(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(lS(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(lS(e.inputNames[0],t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"control":return aN(e,t,n);case"convolution":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:T;switch(e.op){case"Conv1D":{const r=cS("stride",e,t,n),s=cS("pad",e,t,n),o=cS("dataFormat",e,t,n).toUpperCase(),i=cS("dilation",e,t,n);return[a.conv1d(cS("x",e,t,n),cS("filter",e,t,n),r,s,o,i)]}case"Conv2D":{const r=cS("strides",e,t,n),s=fS(e,t,n),o=cS("dataFormat",e,t,n).toUpperCase(),i=cS("dilations",e,t,n);return[a.conv2d(cS("x",e,t,n),cS("filter",e,t,n),[r[1],r[2]],s,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:h}=rN(e,t,n);return[a.fused.conv2d({x:cS("x",e,t,n),filter:cS("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:h}=rN(e,t,n);return[a.fused.depthwiseConv2d({x:cS("x",e,t,n),filter:cS("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=cS("outputShape",e,t,n),s=cS("strides",e,t,n),o=fS(e,t,n);return[a.conv2dTranspose(cS("x",e,t,n),cS("filter",e,t,n),r,[s[1],s[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=cS("strides",e,t,n),s=fS(e,t,n),o=cS("dilations",e,t,n),i=cS("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(cS("input",e,t,n),cS("filter",e,t,n),[r[1],r[2]],s,i,[o[1],o[2]])]}case"Conv3D":{const r=cS("strides",e,t,n),s=cS("pad",e,t,n),o=cS("dataFormat",e,t,n).toUpperCase(),i=cS("dilations",e,t,n);return[a.conv3d(cS("x",e,t,n),cS("filter",e,t,n),[r[1],r[2],r[3]],s,o,[i[1],i[2],i[3]])]}case"AvgPool":{const r=cS("strides",e,t,n),s=cS("pad",e,t,n),o=cS("kernelSize",e,t,n);return[a.avgPool(cS("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=cS("strides",e,t,n),s=cS("pad",e,t,n),o=cS("kernelSize",e,t,n);return[a.maxPool(cS("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=cS("strides",e,t,n),s=cS("pad",e,t,n),o=cS("kernelSize",e,t,n),i=cS("includeBatchInIndex",e,t,n),{result:c,indexes:l}=a.maxPoolWithArgmax(cS("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s,i);return[c,l]}case"AvgPool3D":{const r=cS("strides",e,t,n),s=cS("pad",e,t,n),o=cS("kernelSize",e,t,n);return[a.avgPool3d(cS("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=cS("strides",e,t,n),s=cS("pad",e,t,n),o=cS("kernelSize",e,t,n);return[a.maxPool3d(cS("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=cS("strides",e,t,n),s=cS("pad",e,t,n),o=cS("dilations",e,t,n),i=r[1],c=r[2],l=o[1],u=o[2];return[a.dilation2d(cS("x",e,t,n),cS("filter",e,t,n),[i,c],s,[l,u],"NHWC")]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"creation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:T;switch(e.op){case"Fill":{const r=cS("shape",e,t,n),s=cS("dtype",e,t,n),o=cS("value",e,t,n);return[a.fill(r,o,s)]}case"LinSpace":{const r=cS("start",e,t,n),s=cS("stop",e,t,n),o=cS("num",e,t,n);return[a.linspace(r,s,o)]}case"Multinomial":{const r=cS("logits",e,t,n),s=cS("numSamples",e,t,n),o=cS("seed",e,t,n);return[a.multinomial(r,s,o)]}case"OneHot":{const r=cS("indices",e,t,n),s=cS("depth",e,t,n),o=cS("onValue",e,t,n),i=cS("offValue",e,t,n),c=cS("dtype",e,t,n);return[a.oneHot(r,s,o,i,c)]}case"Ones":return[a.ones(cS("shape",e,t,n),cS("dtype",e,t,n))];case"OnesLike":return[a.onesLike(cS("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(cS("shape",e,t,n),cS("dtype",e,t,n),cS("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(cS("shape",e,t,n),cS("minval",e,t,n),cS("maxval",e,t,n),cS("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt(cS("shape",e,t,n),cS("minval",e,t,n),cS("maxval",e,t,n),cS("seed",e,t,n))];case"Range":{const r=cS("start",e,t,n),s=cS("stop",e,t,n),o=cS("step",e,t,n);return[a.range(r,s,o,cS("dtype",e,t,n))]}case"TruncatedNormal":{const r=cS("shape",e,t,n),s=cS("mean",e,t,n),o=cS("stdDev",e,t,n),i=cS("seed",e,t,n);return[a.truncatedNormal(r,s,o,cS("dtype",e,t,n),i)]}case"Zeros":return[a.zeros(cS("shape",e,t,n),cS("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(cS("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"dynamic":return async function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:T;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=sN(e,t,n),u=await r.image.nonMaxSuppressionWithScoreAsync(a,s,o,i,c,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=sN(e,t,n),l=cS("padToMaxOutputSize",e,t,n),u=await r.image.nonMaxSuppressionPaddedAsync(a,s,o,i,c,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=sN(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,s,o,i,c)]}case"Where":{const a=r.cast(cS("condition",e,t,n),"bool"),s=[await r.whereAsync(a)];return a.dispose(),s}case"ListDiff":return r.setdiff1dAsync(cS("x",e,t,n),cS("y",e,t,n));default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n);case"evaluation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:T;switch(e.op){case"LowerBound":{const r=cS("sortedSequence",e,t,n),s=cS("values",e,t,n);return[a.lowerBound(r,s)]}case"TopKV2":{const r=cS("x",e,t,n),s=cS("k",e,t,n),o=cS("sorted",e,t,n),i=a.topk(r,s,o);return[i.values,i.indices]}case"UpperBound":{const r=cS("sortedSequence",e,t,n),s=cS("values",e,t,n);return[a.upperBound(r,s)]}case"Unique":{const r=cS("x",e,t,n),s=a.unique(r);return[s.values,s.indices]}case"UniqueV2":{const r=cS("x",e,t,n),s=cS("axis",e,t,n),o=a.unique(r,s);return[o.values,o.indices]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"image":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:T;switch(e.op){case"ResizeBilinear":{const r=cS("images",e,t,n),s=cS("size",e,t,n),o=cS("alignCorners",e,t,n),i=cS("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[s[0],s[1]],o,i)]}case"ResizeNearestNeighbor":{const r=cS("images",e,t,n),s=cS("size",e,t,n),o=cS("alignCorners",e,t,n),i=cS("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[s[0],s[1]],o,i)]}case"CropAndResize":{const r=cS("image",e,t,n),s=cS("boxes",e,t,n),o=cS("boxInd",e,t,n),i=cS("cropSize",e,t,n),c=cS("method",e,t,n),l=cS("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,s,o,i,c,l)]}case"ImageProjectiveTransformV3":{const r=cS("images",e,t,n),s=cS("transforms",e,t,n),o=cS("outputShape",e,t,n),i=cS("fillValue",e,t,n),c=cS("interpolation",e,t,n),l=cS("fillMode",e,t,n);return[a.image.transform(r,s,c.toLowerCase(),l.toLowerCase(),i,o)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"graph":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:T;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=cS("default",e,t,n);return[lS(e.name,t,n)||r];case"Placeholder":return[lS(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[mS(cS("x",e,t,n))];case"IdentityN":return cS("x",e,t,n).map((e=>mS(e)));case"Shape":return[a.tensor1d(cS("x",e,t,n).shape,"int32")];case"ShapeN":return cS("x",e,t,n).map((e=>a.tensor1d(e.shape)));case"Size":return[a.scalar(cS("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(cS("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const s=cS("x",e,t,n),o=cS("data",e,t,n),i=cS("message",e,t,n),c=cS("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,c));return[s];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"logical":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:T;switch(e.op){case"Equal":return[a.equal(cS("a",e,t,n),cS("b",e,t,n))];case"NotEqual":return[a.notEqual(cS("a",e,t,n),cS("b",e,t,n))];case"Greater":return[a.greater(cS("a",e,t,n),cS("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(cS("a",e,t,n),cS("b",e,t,n))];case"Less":return[a.less(cS("a",e,t,n),cS("b",e,t,n))];case"LessEqual":return[a.lessEqual(cS("a",e,t,n),cS("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(cS("a",e,t,n),cS("b",e,t,n))];case"LogicalNot":return[a.logicalNot(cS("a",e,t,n))];case"LogicalOr":return[a.logicalOr(cS("a",e,t,n),cS("b",e,t,n))];case"Select":case"SelectV2":return[a.where(cS("condition",e,t,n),cS("a",e,t,n),cS("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd(cS("a",e,t,n),cS("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"matrices":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:T;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(cS("a",e,t,n),cS("b",e,t,n),cS("transposeA",e,t,n),cS("transposeB",e,t,n))];case"Einsum":return[a.einsum(cS("equation",e,t,n),...cS("tensors",e,t,n))];case"Transpose":return[a.transpose(cS("x",e,t,n),cS("perm",e,t,n))];case"_FusedMatMul":const[r,s]=cS("fusedOps",e,t,n),o="biasadd"===r,i="prelu"===s,c=cS("numArgs",e,t,n),l=cS("leakyreluAlpha",e,t,n);if(o){if(i&&2!==c)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==c)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,h]=cS("args",e,t,n);return[a.fused.matMul({a:cS("a",e,t,n),b:cS("b",e,t,n),transposeA:cS("transposeA",e,t,n),transposeB:cS("transposeB",e,t,n),bias:u,activation:s,preluActivationWeights:h,leakyreluAlpha:l})];case"MatrixBandPart":return[a.linalg.bandPart(cS("a",e,t,n),cS("numLower",e,t,n),cS("numUpper",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"normalization":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:T;switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(cS("x",e,t,n),cS("axis",e,t,n),cS("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(cS("x",e,t,n),cS("mean",e,t,n),cS("variance",e,t,n),cS("offset",e,t,n),cS("scale",e,t,n),cS("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(cS("x",e,t,n),cS("radius",e,t,n),cS("bias",e,t,n),cS("alpha",e,t,n),cS("beta",e,t,n))];case"Softmax":return[a.softmax(cS("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(cS("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"ragged":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:T;switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:s}=a.raggedGather(cS("paramsNestedSplits",e,t,n),cS("paramsDenseValues",e,t,n),cS("indices",e,t,n),cS("outputRaggedRank",e,t,n));return r.concat(s)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:s}=a.raggedRange(cS("starts",e,t,n),cS("limits",e,t,n),cS("splits",e,t,n));return[r,s]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(cS("shape",e,t,n),cS("values",e,t,n),cS("defaultValue",e,t,n),cS("rowPartitionTensors",e,t,n),cS("rowPartitionTypes",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"reduction":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:T;switch(e.op){case"Max":{const r=cS("axis",e,t,n),s=cS("keepDims",e,t,n);return[a.max(cS("x",e,t,n),r,s)]}case"Mean":{const r=cS("axis",e,t,n),s=cS("keepDims",e,t,n);return[a.mean(cS("x",e,t,n),r,s)]}case"Min":{const r=cS("axis",e,t,n),s=cS("keepDims",e,t,n);return[a.min(cS("x",e,t,n),r,s)]}case"Sum":{const r=cS("axis",e,t,n),s=cS("keepDims",e,t,n);return[a.sum(cS("x",e,t,n),r,s)]}case"All":{const r=cS("axis",e,t,n),s=cS("keepDims",e,t,n);return[a.all(cS("x",e,t,n),r,s)]}case"Any":{const r=cS("axis",e,t,n),s=cS("keepDims",e,t,n);return[a.any(cS("x",e,t,n),r,s)]}case"ArgMax":{const r=cS("axis",e,t,n);return[a.argMax(cS("x",e,t,n),r)]}case"ArgMin":{const r=cS("axis",e,t,n);return[a.argMin(cS("x",e,t,n),r)]}case"Prod":{const r=cS("axis",e,t,n),s=cS("keepDims",e,t,n);return[a.prod(cS("x",e,t,n),r,s)]}case"Cumprod":{const r=cS("axis",e,t,n),s=cS("exclusive",e,t,n),o=cS("reverse",e,t,n);return[a.cumprod(cS("x",e,t,n),r,s,o)]}case"Cumsum":{const r=cS("axis",e,t,n),s=cS("exclusive",e,t,n),o=cS("reverse",e,t,n);return[a.cumsum(cS("x",e,t,n),r,s,o)]}case"Bincount":const r=cS("x",e,t,n),s=cS("weights",e,t,n),o=cS("size",e,t,n);return[a.bincount(r,s,o)];case"DenseBincount":{const r=cS("x",e,t,n),s=cS("weights",e,t,n),o=cS("size",e,t,n),i=cS("binaryOutput",e,t,n);return[a.denseBincount(r,s,o,i)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"slice_join":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:T;switch(e.op){case"ConcatV2":case"Concat":{const r=cS("n",e,t,n),s=cS("axis",e,t,n);let o=cS("tensors",e,t,n);return o=o.slice(0,r),[a.concat(o,s)]}case"Gather":{const r=cS("x",e,t,n),s=cS("indices",e,t,n);return[a.gather(r,a.cast(s,"int32"),0)]}case"GatherV2":{const r=cS("axis",e,t,n),s=cS("batchDims",e,t,n),o=cS("x",e,t,n),i=cS("indices",e,t,n);return[a.gather(o,a.cast(i,"int32"),r,s)]}case"Reverse":{const r=cS("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);const o=cS("x",e,t,n);return[a.reverse(o,s)]}case"ReverseV2":{const r=cS("axis",e,t,n),s=cS("x",e,t,n);return[a.reverse(s,r)]}case"Slice":{const r=cS("begin",e,t,n),s=cS("size",e,t,n);return[a.slice(cS("x",e,t,n),r,s)]}case"StridedSlice":{const r=cS("begin",e,t,n),s=cS("end",e,t,n),o=cS("strides",e,t,n),i=cS("beginMask",e,t,n),c=cS("endMask",e,t,n),l=cS("ellipsisMask",e,t,n),u=cS("newAxisMask",e,t,n),h=cS("shrinkAxisMask",e,t,n),d=cS("x",e,t,n);return[a.stridedSlice(d,r,s,o,i,c,l,u,h)]}case"Pack":return Uo((()=>{const r=cS("axis",e,t,n),s=cS("tensors",e,t,n),o=s[0].shape,i=a.squeeze(s[0]).shape,c=s.map((e=>{const t=ft(e.shape,o);if(!t&&!ft(a.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,o)}));return[a.stack(c,r)]}));case"Unpack":{const r=cS("axis",e,t,n),s=cS("tensor",e,t,n);return a.unstack(s,r)}case"Tile":{const r=cS("reps",e,t,n);return[a.tile(cS("x",e,t,n),r)]}case"Split":case"SplitV":{const r=cS("axis",e,t,n),s=cS("numOrSizeSplits",e,t,n),o=cS("x",e,t,n);return a.split(o,s,r)}case"ScatterNd":{const r=cS("indices",e,t,n),s=cS("values",e,t,n),o=cS("shape",e,t,n);return[a.scatterND(r,s,o)]}case"GatherNd":{const r=cS("x",e,t,n),s=cS("indices",e,t,n);return[a.gatherND(r,s)]}case"SparseToDense":{const r=cS("sparseIndices",e,t,n),s=cS("outputShape",e,t,n),o=cS("sparseValues",e,t,n),i=cS("defaultValue",e,t,n);return[a.sparseToDense(r,o,s,o.dtype===i.dtype?i:a.cast(i,o.dtype))]}case"TensorScatterUpdate":{const r=cS("indices",e,t,n),s=cS("values",e,t,n),o=cS("tensor",e,t,n);return[a.tensorScatterUpdate(o,r,s)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"sparse":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:T;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:s,emptyRowIndicator:o,reverseIndexMap:i}=a.sparse.sparseFillEmptyRows(cS("indices",e,t,n),cS("values",e,t,n),cS("denseShape",e,t,n),cS("defaultValue",e,t,n));return[r,s,o,i]}case"SparseReshape":{const{outputIndices:r,outputShape:s}=a.sparse.sparseReshape(cS("inputIndices",e,t,n),cS("inputShape",e,t,n),cS("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(cS("data",e,t,n),cS("indices",e,t,n),cS("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(cS("data",e,t,n),cS("indices",e,t,n),cS("segmentIds",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"spectral":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:T;switch(e.op){case"FFT":return[a.fft(cS("x",e,t,n))];case"IFFT":return[a.ifft(cS("x",e,t,n))];case"RFFT":return[a.rfft(cS("x",e,t,n))];case"IRFFT":return[a.irfft(cS("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"string":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:T;switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(cS("input",e,t,n),cS("pattern",e,t,n),cS("rewrite",e,t,n),cS("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:s}=a.string.stringNGrams(cS("data",e,t,n),cS("dataSplits",e,t,n),cS("separator",e,t,n),cS("nGramWidths",e,t,n),cS("leftPad",e,t,n),cS("rightPad",e,t,n),cS("padWidth",e,t,n),cS("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{const{indices:r,values:s,shape:o}=a.string.stringSplit(cS("input",e,t,n),cS("delimiter",e,t,n),cS("skipEmpty",e,t,n));return[r,s,o]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(cS("input",e,t,n),cS("numBuckets",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"transformation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:T;switch(e.op){case"Cast":return[a.cast(cS("x",e,t,n),cS("dtype",e,t,n))];case"ExpandDims":{const r=cS("axis",e,t,n);return[a.expandDims(cS("x",e,t,n),r)]}case"Squeeze":{const r=cS("axis",e,t,n);return[a.squeeze(cS("x",e,t,n),r)]}case"Reshape":return[a.reshape(cS("x",e,t,n),cS("shape",e,t,n))];case"EnsureShape":return[a.ensureShape(cS("x",e,t,n),cS("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(cS("x",e,t,n),cS("padding",e,t,n),cS("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(cS("x",e,t,n),cS("padding",e,t,n),cS("constantValue",e,t,n))];case"SpaceToBatchND":{const r=cS("blockShape",e,t,n),s=cS("paddings",e,t,n);return[a.spaceToBatchND(cS("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=cS("blockShape",e,t,n),s=cS("crops",e,t,n);return[a.batchToSpaceND(cS("x",e,t,n),r,s)]}case"DepthToSpace":{const r=cS("blockSize",e,t,n),s=cS("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(cS("x",e,t,n),r,s)]}case"BroadcastTo":return[a.broadcastTo(cS("x",e,t,n),cS("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(cS("s0",e,t,n),cS("s1",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"hash_table":return(async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{const r=cS("keyDType",e,t,n),s=cS("valueDType",e,t,n),o=new oN(r,s);return a.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=cS("tableHandle",e,t,n,a),s=cS("keys",e,t,n),o=cS("values",e,t,n),i=a.getHashTableById(r.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const r=cS("tableHandle",e,t,n,a),s=cS("keys",e,t,n),o=cS("defaultValue",e,t,n),i=a.getHashTableById(r.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=cS("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}})(e,t,n,a);case"custom":const s=iS(e.op);if(s&&s.customExecutor)return s.customExecutor(new QS(e,t,n));throw TypeError("Custom op ".concat(e.op," is not registered."));default:throw TypeError("Unknown op '".concat(e.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(e,t,n);return Wt(s)?s.then((e=>[].concat(e))):[].concat(s)}class cN{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":"".concat(e.frameName,"-").concat(e.iterationId))).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function lN(e,t,n,a){const r=new Set,s=[];let o=null,i=null;const c=new Set,l=new Set(Object.keys(e).map((e=>pS(e)[0])));a=a||[];const u=new Set(a.map((e=>pS(e.name)[0]))),h=[...t];for(;h.length>0;){const e=h.pop();(mN(e)||gN(e)||yN(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&(l.has(e.name)||u.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{c.has(e.name)||(c.add(e.name),h.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:o,syncInputs:i}}function uN(e,t){const{usedNodes:n,inputs:a}=t,r=Object.keys(a).map((e=>pS(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],o=e=>n.has("string"===typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const c=i([...r,...e.weights,...s]).filter(o),l=i([...c,...Object.values(e.nodes)]).filter(o),u=new Map(l.map((e=>[e.name,e]))),h={};for(const m of l){h[m.name]=h[m.name]||0;for(const e of m.children)o(e)||(h[e.name]=Number.POSITIVE_INFINITY),h[e.name]=(h[e.name]||0)+1}const d=Object.entries(h).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),p=[...d];for(;d.length>0;){const e=d.pop(),t=u.get(e);for(const n of t.children.filter(o))0===--h[n.name]&&(p.push(n.name),d.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),a=t.map((e=>e.name)),r=new Set(a);for(;a.length>0;){const e=a.pop(),t=n.get(e);for(const s of t.children)n.has(s.name)&&!r.has(s.name)&&(r.add(s.name),a.push(s.name))}const s=e.filter((e=>r.has(e.name)));return s}(p.map((e=>u.get(e))),c);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),a=new Set(t.map((e=>e.name))),r=e=>a.has("string"===typeof e?e:e.name),s=new Set(e.map((e=>e.name))),o=e=>s.has("string"===typeof e?e:e.name);for(const i of e){for(const e of i.children.filter(o)){if(!n.has(e.name))throw new hN("Child ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(i.name)>n.get(e.name))throw new hN("Node ".concat(i.name," is scheduled to run after its child ").concat(e.name,"."))}if(!r(i))for(const e of i.inputs){if(!n.has(e.name))throw new hN("Input ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(e.name)>n.get(i.name))throw new hN("Node ".concat(i.name," is scheduled to run before its input ").concat(e.name,"."))}}}(f,c),f}class hN extends Error{constructor(e){super("NodesExecutionOrderError: ".concat(e))}}const dN=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),pN=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),fN=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function mN(e){return dN.has(e.op)}function gN(e){return pN.has(e.op)}function yN(e){return fN.has(e.op)}class bN{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?"".concat(t,":").concat(e.defaultOutput):t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new bN(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){const n=lN(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error("This execution contains the node '".concat(r.name,"', which has ")+"the dynamic op '".concat(r.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(s,"]"));if(a.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(r,"]. Missing the following inputs: [").concat(a,"]"))}const o=uN(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,a=e.map(((e,t)=>mN(e)?n:t)),r=e=>{const n=a[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(r).reduce(((e,t)=>Math.max(e,t)),a[t]))),o=new Map;for(let i=0;i<e.length;++i){const t=s[i];if(t===n)continue;const a=e[i],r=e[t];o.has(r.name)||o.set(r.name,[]),o.get(r.name).push(a)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return Ho(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map((e=>this.graph.nodes[pS(e)[0]])),r=t.map((e=>pS(e)[0])),s=new Set(r);let o=r.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const i=this.getCompilationKey(a,o);let c=this.compiledMap.get(i);null==c&&(c=this.compile(e,o),this.compiledMap.set(i,c));try{this.keepIntermediateTensors=Ht().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const l={},u={};return Uo((()=>{const n=new cN(this.weightMap,l,u,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[r,s]=pS(t,n),o=[];o[s]=e[t],a[r]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(o))}));const r=this.getFrozenTensorIds(a),{orderedNodes:o,nodeLiveUntilMap:i}=c;for(const e of o){if(a[e.name])continue;const t=iN(e,a,n,this._resourceManager);if(Wt(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,n,r,s,i.get(e.name))}return null==this.parent&&n.dispose(r),t.map((e=>lS(e,a,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,o){if(!mN(t)&&!s.has(e)){for(const a of n[e])null!=a&&(o[a.id]=(o[a.id]||0)+t.children.length);for(const e of t.inputs){if(mN(e))continue;const t=uS(e.name,n,a);if(null!=t)for(const e of t){if(!e||e.kept||r.has(e.id))continue;const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,a,r,s){function o(e){return mN(e)||r.has(e.name)}if(!mN(e)&&null!=s)for(const i of s){if(o(i))continue;const e=uS(i.name,t,n);for(const t of e)!t||t.kept||a.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Ht().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const s=new cN(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,s,t,n),i=t.map((e=>lS(e,o,s))),c=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),u=new Set([...c,...l,...this.weightIds]);return Object.values(o).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||u.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(u),i}async executeFunctionAsync(e,t,n){const a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){const r=Object.keys(e),s=r.map((e=>this.graph.nodes[pS(e)[0]])),o=n.map((e=>pS(e)[0])),i=new Set(o);let c=o.map((e=>this.graph.nodes[e]));0===c.length&&(c=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:h,syncInputs:d}=lN(e,c,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=pS(t),r=[];r[a]=e[t],f[n]=r}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(s,p,t,f,y,g,i,m,l);await Promise.all(e)}null!=h||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=c.filter((e=>!mN(e)&&!lS(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=h&&(e="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(d,"]")),new Error("Cannot compute the outputs [".concat(b,"] from the provided ")+"inputs [".concat(r,"]. Consider providing the following inputs: ")+"[".concat(u,"]. ").concat(e))}return f}processStack(e,t,n,a,r,s,o,i,c){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let u="";if("Enter"===e.node.op&&cS("isConstant",e.node,a,n)&&([u]=hS(e.node.name,n)),null==a[e.node.name]){const h=iN(e.node,a,n,this._resourceManager);u||([u]=hS(e.node.name,n));const d=n.currentContext;Wt(h)?l.push(h.then((l=>(a[u]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(l)),n.currentContext=d,this.checkTensorForDisposal(u,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,c),l)))):(a[u]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(h)),this.checkTensorForDisposal(u,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,c))}else this.processChildNodes(e.node,t,n,a,r,c)}return l}processChildNodes(e,t,n,a,r,s){e.children.forEach((e=>{const[o]=hS(e.name,n);!r[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!lS(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!lS(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[a]=pS(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value;ut(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>"The shape of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be [".concat(e,"], but was ")+"[".concat(n.shape,"]")))}r.attrParams.dtype&&r.attrParams.dtype.value&&ut(n.dtype===r.attrParams.dtype.value,(()=>"The dtype of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(r.attrParams.dtype.value,", but was ").concat(n.dtype)))}))}mapInputs(e){var t,n;const a={};for(const r in e){const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=s?a[s.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=pS(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(t,"] that are not part of graph"))}mapOutputs(e){return e.map((e=>{var t,n;const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=pS(e);if(!this.graph.nodes[t])throw new Error("The output '".concat(e,"' is not found in the graph"))}))}}class xN{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const vN="?tfjs-format=file",wN="model.json";class kN{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t;this.modelUrl=e,this.loadOptions=n,this.version="n/a",this.io=a,null==n&&(this.loadOptions={}),this.resourceManager=new xN}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one (".concat(t.length,") load handlers for ")+"URL '".concat([e],"'"));this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Wt(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await ei(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(a=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=a,this.version="".concat(n.versions.producer,".").concat(n.versions.minConsumer),this.executor=new bN(MS.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=MS.Instance.transformGraph(e.modelInitializer);this.initializer=new bN(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Error("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof eo?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof eo)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error("Input tensor count mismatch, the graph model has ".concat(this.inputNodes.length-n," non-resource placeholders, while there are ").concat(e.length," input tensors provided."));let a=0;return this.inputNodes.reduce(((t,n)=>{var r,s,o;const i=null===(o=null===(s=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===s?void 0:s[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[a++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){const r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Go(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function SN(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t;if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==n&&(n={}),n.fromTFHub&&"string"===typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return"".concat(e).concat(wN).concat(vN)}(e));const r=new kN(e,n,a);return await r.load(),r}function NN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(EN(e)){const r=Array.isArray(e)?[]:{};a.add(e);for(const s in e){const o=NN(e[s],t,n,a);r[s]=o}return a.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error("Can't recurse into non-iterable type: ".concat(e))}return n.set(e,r.value),r.value}function IN(e){return TN(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:CN)}function TN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(EN(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const s in a){const a=TN(e.map((e=>e[s])),t,n);r[s]=a}return n.delete(a),r}throw new Error("Can't recurse into non-iterable type: ".concat(a))}return r.value}function CN(e){return null===e?null:EN(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function EN(e){let t=!1;if(Ht().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:a}=n(551);t=e instanceof a}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof eo)&&!(e instanceof Promise)&&!t)}function RN(e){return function(e,t){return NN(e,t)}(e,AN)}function AN(e){return e instanceof eo?{value:e.clone(),recurse:!1}:EN(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class _N{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class FN extends _N{constructor(){super(FN.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let a=0;a<n;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function DN(e){return new zN(e)}function ON(e,t){return new XN(e,t)}FN.INITIAL_CAPACITY=32;class MN{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new HN(this,e)}filter(e){return new UN(this,e)}map(e){return new GN(this,e)}mapAsync(e){return new jN(this,e)}serialMapAsync(e){return new jN(this,e).serial()}flatmap(e){return new KN(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new VN(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:CN;return this.rowMajorBatch(e,t).map((e=>IN(e,n)))}concatenate(e,t){return new XN(new LN([this,e]),t)}take(e){return e<0||null==e?this:new WN(this,e)}skip(e){return e<0||null==e?this:new BN(this,e)}prefetch(e){return new QN(this,e)}shuffle(e,t){return new ZN(this,e,t)}serial(){return new PN(this)}}class LN extends MN{constructor(e){super(),this.items=e,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:RN(e),done:!1}}}class zN extends MN{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: ".concat(e.message),e}}}class PN extends MN{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class BN extends MN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Go(e.value)}return this.upstream.next()}}class WN extends MN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class VN extends MN{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class UN extends MN{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Go(e.value)}}}class GN extends MN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=go(e.value),n=this.transform(e.value),a=go(n);for(const r of t)mo(r,a)||r.dispose();return{value:n,done:!1}}}class HN extends MN{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class jN extends MN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=go(e.value),n=await this.transform(e.value),a=go(n);for(const r of t)mo(r,a)||r.dispose();return{value:n,done:!1}}}class qN extends MN{constructor(){super(),this.outputQueue=new FN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class KN extends qN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=go(e.value),n=this.transform(e.value),a=go(n);this.outputQueue.pushAll(n);for(const r of t)mo(r,a)||r.dispose();return!0}}class XN extends MN{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var YN;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(YN||(YN={}));class QN extends MN{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new _N(t)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class ZN extends QN{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=cd.alea(n||Os().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class JN{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let a;return ut(e>0,(()=>"batchSize needs to be positive, but it is\n      ".concat(e))),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),$N((async()=>(await n.iterator()).columnMajorBatch(e,t,eI)),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,$N((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,$N((async()=>(await t.iterator()).filter((t=>Uo((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return $N((async()=>(await t.iterator()).map((t=>Uo((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return $N((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return $N((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,$N((async()=>ON(DN((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,$N((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const a=this,r=cd.alea(t||Os().toString());return $N((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,$N((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function $N(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends JN{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function eI(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof eo||zs(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof eo?Kd(e):zo(e)}(e),recurse:!1}}return{value:null,recurse:!0}}JN.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function tI(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ut("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors in the CPU backend.")))}))}const nI=pp;class aI extends rt{nextDataId(){return aI.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new at(this,Wo())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ht().get("IS_NODE")&&is("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&Tt(n[0])){const r=n.map((e=>Ms(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return pm(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype ".concat(t))}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Ls(e)));return Yi(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Yi(e.shape,e.dtype,t)}makeOutput(e,t,n){return Wo().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Os();e();return{kernelMs:Os()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){tI([e],"where");const t=this.readSync(e.dataId);return nI(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}aI.nextDataId=0;function rI(e){return(t,n,a)=>{const r=St(n,t.length);for(let s=0;s<t.length;++s)r[s]=e(t[s],a);return r}}function sI(e,t,n){return oI(e,rI(t),n)}function oI(e,t,n){return a=>{let{inputs:r,attrs:s,backend:o}=a;const{x:i}=r;tI(i,e);const c=o,l=c.data.get(i.dataId).values;let u;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Km(l)}else u=l;const h=n||i.dtype,d=t(u,h,s);return c.makeTensorInfo(i.shape,h,d)}}jo("cpu",(()=>new aI),1);const iI=sI(Xn,(e=>e>=0?e:Math.exp(e)-1)),cI={kernelName:Xn,backendName:"cpu",kernelFunc:iI};function lI(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const uI={kernelName:ha,backendName:"cpu",kernelFunc:lI};function hI(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a;tI([r],"leakyRelu");const o=pt(r.shape),i=n.data.get(r.dataId).values,c=kt("float32",o);for(let l=0;l<i.length;l++)c[l]=i[l]<0?s*i[l]:i[l];return n.makeTensorInfo(r.shape,"float32",c)}const dI={kernelName:ya,backendName:"cpu",kernelFunc:hI};function pI(e){return(t,n,a,r,s)=>{const o=Sc(t,n),i=o.length,c=_t(o),l=kt(s,pt(o)),u=t.length,h=n.length,d=_t(t),p=_t(n),f=wc(t,o),m=wc(n,o);if(f.length+m.length===0)for(let g=0;g<l.length;++g)l[g]=e(a[g%a.length],r[g%r.length]);else for(let g=0;g<l.length;++g){const t=Bt(g,i,c),n=t.slice(-u);f.forEach((e=>n[e]=0));const s=Pt(n,u,d),o=t.slice(-h);m.forEach((e=>o[e]=0));const y=Pt(o,h,p);l[g]=e(a[s],r[y])}return[l,o]}}const fI=pI(((e,t)=>e<0?t*e:e));function mI(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t;tI([a,r],"prelu");const s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,[i,c]=fI(a.shape,r.shape,s,o,"float32");return n.makeTensorInfo(c,"float32",i)}const gI={kernelName:Ja,backendName:"cpu",kernelFunc:mI},yI=sI(or,(e=>Math.max(0,e))),bI={kernelName:or,backendName:"cpu",kernelFunc:yI},xI=sI(dr,(e=>Math.min(Math.max(0,e),6))),vI={kernelName:dr,backendName:"cpu",kernelFunc:xI},wI=rI((e=>1/(1+Math.exp(-e)))),kI=sI(Ir,(e=>1/(1+Math.exp(-e)))),SI={kernelName:Ir,backendName:"cpu",kernelFunc:kI};function NI(e,t,n,a,r){if("linear"===n)return lI({inputs:{x:t},backend:e});if("relu"===n)return yI({inputs:{x:t},backend:e});if("elu"===n)return iI({inputs:{x:t},backend:e});if("relu6"===n)return xI({inputs:{x:t},backend:e});if("prelu"===n)return mI({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return hI({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return kI({inputs:{x:t},backend:e});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function II(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",o)},i}const TI={kernelName:kn,backendName:"cpu",kernelFunc:II};function CI(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return II({inputs:{real:CI(e,t,"float32"),imag:CI(e,t,"float32")},backend:e})}const a=Mt(pt(t),n);return e.makeTensorInfo(t,n,a)}function EI(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const RI={kernelName:rr,backendName:"cpu",kernelFunc:EI};function AI(e,t,n,a){if("int32"===a){return[t,"int32",Int32Array.from(e)]}if("bool"===a){const a=Ds([0],n),[r,s]=pI(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[s,"bool",r]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(a))}function _I(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if("complex64"===s){if("complex64"===r.dtype)return lI({inputs:{x:r},backend:n});const e=CI(n,r.shape,r.dtype),t=_I({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=II({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){const e=EI({inputs:{input:r},backend:n}),t=_I({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!Nt(r.dtype,s)){const e=lI({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}const o=n.data.get(r.dataId).values,[i,c,l]=AI(o,r.shape,r.dtype,s);return n.makeTensorInfo(i,c,l)}const FI={kernelName:xn,backendName:"cpu",kernelFunc:_I};function DI(e,t,n,a){return null==n?n=>{let{inputs:r,backend:s}=n;const{a:o,b:i}=r,c=s;tI([o,i],e);const l=c.data.get(o.dataId).values,u=c.data.get(i.dataId).values,h="string"===o.dtype?Km(l):l,d="string"===o.dtype?Km(u):u,p=a||o.dtype,[f,m]=t(o.shape,i.shape,h,d,p);return c.makeTensorInfo(m,p,f)}:e=>{let{inputs:r,backend:s}=e;const{a:o,b:i}=r,c=s;if("complex64"===o.dtype||"complex64"===i.dtype){const e=_I({inputs:{x:o},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,s=c.data.get(a.dataId).values,l=c.data.get(r.dataId).values,u=_I({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),h=c.data.get(u.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=c.data.get(d.dataId).values,m=c.data.get(p.dataId).values,[g,y,b]=n(o.shape,i.shape,s,l,f,m),x=c.makeTensorInfo(b,"float32",g),v=c.makeTensorInfo(b,"float32",y),w=II({inputs:{real:x,imag:v},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(x),c.disposeIntermediateTensorInfo(v),w}{const e=c.data.get(o.dataId).values,n=c.data.get(i.dataId).values,r=a||o.dtype,[s,l]=t(o.shape,i.shape,e,n,r);return c.makeTensorInfo(l,r,s)}}}function OI(e){return(t,n,a,r,s,o)=>{const i=Sc(t,n),c=pt(i),l=i.length,u=_t(i),h=kt("float32",c),d=kt("float32",c),p=wc(t,i),f=wc(n,i),m=pm(a,r),g=pm(s,o),y=t.length,b=_t(t),x=n.length,v=_t(n);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const t=w%m.length,n=w%g.length,a=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);h[w]=a.real,d[w]=a.imag}else for(let w=0;w<h.length;w++){const t=Bt(w,l,u),n=t.slice(-y);p.forEach((e=>n[e]=0));const a=Pt(n,y,b),r=t.slice(-x);f.forEach((e=>r[e]=0));const s=Pt(r,x,v),o=e(m[2*a],m[2*a+1],g[2*s],g[2*s+1]);h[w]=o.real,d[w]=o.imag}return[h,d,i]}}const MI=pI(((e,t)=>e+t)),LI=OI(((e,t,n,a)=>({real:e+n,imag:t+a}))),zI=DI(Jt,MI,LI),PI={kernelName:Jt,backendName:"cpu",kernelFunc:zI};function BI(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,o=pt(r.shape),i=xt(s,o),c=pt(i);ut(o===c,(()=>"The new shape (".concat(i,") has ").concat(c," elements and the old ")+"shape (".concat(r.shape,") has ").concat(o," elements. The new shape and old ")+"shape must have the same number of elements.")),n.incRef(r.dataId);const l=n.data.get(r.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const WI={kernelName:ir,backendName:"cpu",kernelFunc:BI};function VI(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:i}=a;tI([r,s],"matMul");const c=r.shape.length,l=s.shape.length,u=o?r.shape[c-2]:r.shape[c-1],h=i?s.shape[l-1]:s.shape[l-2],d=o?r.shape[c-1]:r.shape[c-2],p=i?s.shape[l-2]:s.shape[l-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=pt(f),y=pt(m),b=Sc(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,p]);ut(u===h,(()=>"Error in matMul: inner shapes (".concat(u,") and (")+"".concat(h,") of Tensors with shapes ").concat(r.shape," and ")+"".concat(s.shape," and transposeA=").concat(o)+" and transposeB=".concat(i," must match.")));const x=i?[y,p,h]:[y,h,p],v=BI({inputs:{x:r},backend:n,attrs:{shape:o?[g,u,d]:[g,d,u]}}),w=BI({inputs:{x:s},backend:n,attrs:{shape:x}}),k=o?v.shape[1]:v.shape[2],S=o?v.shape[2]:v.shape[1],N=i?w.shape[1]:w.shape[2],I=Math.max(g,y),T=n.data.get(v.dataId).values,C=n.data.get(w.dataId).values,E=_t(v.shape),R=_t(w.shape),[A,_,F]=o?[E[0],1,E[1]]:[E[0],E[1],1],[D,O,M]=i?[1,R[1],R[0]]:[R[1],1,R[0]],L=S*N,z=Yi([I,S,N],v.dtype),P=z.values,B=n.blockSize;for(let W=0;W<I;W++){const e=W%g,t=W%y;for(let n=0;n<S;n+=B){const a=Math.min(n+B,S);for(let r=0;r<N;r+=B){const s=Math.min(r+B,N);for(let o=0;o<k;o+=B){const i=Math.min(o+B,k);for(let c=n;c<a;c++)for(let n=r;n<s;n++){let a=0;for(let r=o;r<i;r++){a+=T[e*A+c*_+r*F]*C[r*D+n*O+t*M]}P[W*L+(c*N+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,z.dtype,z.values)}const UI={kernelName:fn,backendName:"cpu",kernelFunc:VI};const GI={kernelName:rs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;let d,p,f;const m=[];d=VI({inputs:{a:r,b:s},attrs:{transposeA:c,transposeB:l},backend:n}),o&&(p=zI({inputs:{a:d,b:o},backend:n}),m.push(d),d=p),u&&(f=NI(n,d,u,i,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}};function HI(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const jI={kernelName:Yt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;tI(t,"abs");let a=new Float32Array(pt(t.shape));return a=HI(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},qI=sI(Qt,(e=>Math.acos(e))),KI={kernelName:Qt,backendName:"cpu",kernelFunc:qI},XI=sI(Zt,(e=>Math.acosh(e))),YI={kernelName:Zt,backendName:"cpu",kernelFunc:XI};const QI={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;tI(t,"addN");const r=a.map((e=>n.data.get(e.dataId).values)),s=Yi(a[0].shape,a[0].dtype),o=s.values;for(let i=0;i<a.length;i++){const e=r[i];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function ZI(e,t,n,a,r){const s=t.length,o=pt(t),i=_t(t),c=_t(r),l=kt(n,pt(r));for(let u=0;u<o;++u){const t=Bt(u,s,i),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];l[Pt(n,s,c)]=e[u]}return l}function JI(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;tI(r,"transpose");const o=r.shape.length,i=new Array(o);for(let l=0;l<i.length;l++)i[l]=r.shape[s[l]];const c=ZI(a.data.get(r.dataId).values,r.shape,r.dtype,s,i);return{dataId:a.write(c,i,r.dtype),shape:i,dtype:r.dtype}}const $I={kernelName:Qr,backendName:"cpu",kernelFunc:JI};const eT={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;tI(r,"all");const i=vt(s,r.shape);let c=i;const l=ju(c,r.shape.length);let u=r;null!=l&&(u=JI({inputs:{x:r},backend:n,attrs:{perm:l}}),c=Ku(c.length,r.shape.length)),Hu("all",c,u.shape.length);const[h,d]=Uu(u.shape,c),p=pt(d),f=Mt(pt(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];t=t&&a}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(o){const e=BI({inputs:{x:g},backend:n,attrs:{shape:Gu(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const tT={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;tI(r,"any");const i=vt(s,r.shape);let c=i;const l=ju(c,r.shape.length);let u=r;null!=l&&(u=JI({inputs:{x:r},backend:n,attrs:{perm:l}}),c=Ku(c.length,r.shape.length)),Hu("any",c,u.shape.length);const[h,d]=Uu(u.shape,c),p=pt(d),f=Mt(pt(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];t=t||a}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(o){const e=BI({inputs:{x:g},backend:n,attrs:{shape:Gu(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const nT={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;tI(r,"argMax");let o=vt(s,r.shape);const i=ju(o,r.shape.length);let c=r;const l=[];null!=i&&(c=JI({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=Ku(o.length,c.shape.length)),o=[o[0]],Hu("argMax",o,c.shape.length);const[u,h]=Uu(c.shape,o),d=Mt(pt(u),"int32"),p=pt(h),f=n.data.get(c.dataId).values;for(let m=0;m<d.length;++m){const e=m*p;let t=f[e],n=0;for(let a=0;a<p;++a){const r=f[e+a];r>t&&(t=r,n=a)}d[m]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u,"int32",d)}};const aT={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;tI(r,"argMin");let o=vt(s,r.shape);const i=ju(o,r.shape.length);let c=r;const l=[];null!=i&&(c=JI({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=Ku(o.length,c.shape.length)),o=[o[0]],Hu("argMin",o,c.shape.length);const[u,h]=Uu(c.shape,o),d=Mt(pt(u),"int32"),p=pt(h),f=n.data.get(c.dataId).values;for(let m=0;m<d.length;++m){const e=m*p;let t=f[e],n=0;for(let a=0;a<p;++a){const r=f[e+a];r<t&&(t=r,n=a)}d[m]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u,"int32",d)}},rT=sI(rn,(e=>Math.asin(e))),sT={kernelName:rn,backendName:"cpu",kernelFunc:rT},oT=sI(sn,(e=>Math.asinh(e))),iT={kernelName:sn,backendName:"cpu",kernelFunc:oT},cT=sI(on,(e=>Math.atan(e))),lT={kernelName:on,backendName:"cpu",kernelFunc:cT},uT=pI(((e,t)=>Math.atan2(e,t))),hT=DI(ln,uT),dT={kernelName:ln,backendName:"cpu",kernelFunc:hT},pT=sI(cn,(e=>Math.atanh(e))),fT={kernelName:cn,backendName:"cpu",kernelFunc:pT};function mT(e,t,n,a,r,s){const o=r.strideHeight,i=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,u=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Yi(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let v=0;v<r.batchSize;++v){const t=v*y,n=v*a[0];for(let m=0;m<r.inChannels;++m)for(let y=0;y<r.outHeight;++y){const v=y*o-d,w=Math.max(0,v),k=Math.min(r.inHeight,u+v),S=t+y*b;for(let t=0;t<r.outWidth;++t){const o=t*i-p,u=Math.max(0,o),d=Math.min(r.inWidth,h+o);let y=f,b=0,v=0;for(let t=w;t<k;t+=c){const r=n+t*a[1];for(let t=u;t<d;t+=l){const n=e[r+t*a[2]+m];"max"===s&&n>y?y=n:"avg"===s&&(b+=n,v++)}if(isNaN(y))break}g[S+t*x+m]="avg"===s?b/v:y}}}return m}function gT(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=Yi(a.outShape,"int32"),i=a.strideHeight,c=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,h=a.effectiveFilterHeight,d=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m=Yi(t,n,e);for(let g=0;g<a.batchSize;++g)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*i-p;let y=n;for(;y<0;)y+=l;const b=Math.min(a.inHeight,h+n);for(let i=0;i<a.outWidth;++i){const h=i*c-f;let p=h;for(;p<0;)p+=u;const x=Math.min(a.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=l){const o=t-n;for(let n=p;n<x;n+=u){const i=n-h,c=m.get(g,t,n,e);c>v&&(v=c,w=r?s?((g*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:o*d+i)}}o.set(w,g,t,i,e)}}return o}function yT(e,t,n,a,r,s){const o=r.strideDepth,i=r.strideHeight,c=r.strideWidth,l=r.dilationDepth,u=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Yi(r.outShape,n),v=x.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[3]*r.outShape[4],N=r.outShape[4];for(let I=0;I<r.batchSize;++I){const t=I*w,n=I*a[0];for(let x=0;x<r.inChannels;++x)for(let w=0;w<r.outDepth;++w){const I=w*o-m;let T=I;for(;T<0;)T+=l;const C=Math.min(r.inDepth,d+I),E=t+w*k;for(let t=0;t<r.outHeight;++t){const o=t*i-g;let d=o;for(;d<0;)d+=u;const m=Math.min(r.inHeight,p+o),w=E+t*S;for(let t=0;t<r.outWidth;++t){const o=t*c-y;let i=o;for(;i<0;)i+=h;const p=Math.min(r.inWidth,f+o),g=w+t*N;let k=b,S=0,I=0;for(let t=T;t<C;t+=l){const r=n+t*a[1];for(let t=d;t<m;t+=u){const n=r+t*a[2];for(let t=i;t<p;t+=h){const r=e[n+t*a[3]+x];if("max"===s&&r>k?k=r:"avg"===s&&(S+=r,I++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+x]="avg"===s?S/Math.max(I,1):k}}}}return x}const bT={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;tI(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;ut(Ul(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=Fl(r.shape,s,o,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&ft(l.inShape,l.outShape))u=lI({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=_t(r.shape),a=mT(e,r.shape,r.dtype,t,l,"avg");u=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return u}};const xT={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a;tI(r,"avgPool3d");const u=Dl(r.shape,s,o,1,i,c,l),h=yT(n.data.get(r.dataId).values,r.shape,r.dtype,_t(r.shape),u,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const vT={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;tI([r,s],"avgPool3DGrad");const u=Dl(s.shape,o,i,1,c,l),h=u.strideDepth,d=u.strideHeight,p=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,b=u.dilationHeight,x=u.dilationWidth,v=u.effectiveFilterDepth,w=u.effectiveFilterHeight,k=u.effectiveFilterWidth,S=v-1-u.padInfo.front,N=k-1-u.padInfo.left,I=w-1-u.padInfo.top,T=Yi(s.shape,"float32"),C=1/(f*m*g),E=n.bufferSync(r);for(let R=0;R<u.batchSize;++R)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inDepth;++t)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const r=t-S,s=n-I,o=a-N;let i=0;for(let t=0;t<v;t+=y){const n=(r+t)/h;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=b){const a=(s+t)/d;if(!(a<0||a>=u.outHeight||Math.floor(a)!==a))for(let t=0;t<k;t+=x){const r=(o+t)/p;if(r<0||r>=u.outWidth||Math.floor(r)!==r)continue;i+=E.get(R,n,a,r,e)}}}T.set(i*C,R,t,n,a,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const wT={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s;tI([r,s],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=Fl(o.shape,i,c,1,l),h=u.strideHeight,d=u.strideWidth,p=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,x=b-1-u.padInfo.left,v=y-1-u.padInfo.top,w=Yi(o.shape,"float32"),k=1/(p*f),S=n.data.get(r.dataId).values,N=Yi(r.shape,"float32",S);for(let I=0;I<u.batchSize;++I)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inHeight;++t)for(let n=0;n<u.inWidth;++n){const a=t-v,r=n-x;let s=0;for(let t=0;t<y;t+=m){const n=(a+t)/h;if(!(n<0||n>=u.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const a=(r+t)/d;if(a<0||a>=u.outWidth||Math.floor(a)!==a)continue;s+=N.get(I,n,a,e)}}w.set(s*k,I,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const kT={kernelName:oa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,scale:s,offset:o,mean:i,variance:c}=t;ut(i.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ut(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ut(null==s||i.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),tI([r,i,c,s,o],"batchNorm");let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=n.data.get(c.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,y=p.length,b=d.length,x=h.length;let v=0,w=0,k=0,S=0;for(let N=0;N<u.length;++N)m[N]=f[v++]+(u[N]-h[w++])*p[k++]/Math.sqrt(d[S++]+l),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),S>=b&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function ST(e,t,n,a,r){const s=fl(a,t,n),o=pt(n),i=_t(a);if(s){const n=ml(t,i);return"string"===r?e.slice(n,n+o):e.subarray(n,n+o)}const c=Yi(a,r,"string"===r?Km(e):e),l=Yi(n,r);for(let u=0;u<l.size;++u){const e=l.indexToLoc(u),n=e.map(((e,n)=>e+t[n]));l.set(c.get(...n),...e)}return"string"===r?Xm(l.values):l.values}function NT(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:o}=a;tI(r,"slice");const[i,c]=gl(r,s,o);nl(r,i,c);const l=ST(n.data.get(r.dataId).values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,l)}const IT={kernelName:wr,backendName:"cpu",kernelFunc:NT};const TT={kernelName:mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:o}=a;tI([r],"batchToSpaceND");const i=s.reduce(((e,t)=>e*t)),c=$f(r.shape,s,i),l=em(c.length,s.length),u=tm(r.shape,s,i),h=nm(o,s.length),d=am(u,o,s.length),p=BI({inputs:{x:r},backend:n,attrs:{shape:c}}),f=JI({inputs:{x:p},backend:n,attrs:{perm:l}}),m=BI({inputs:{x:f},backend:n,attrs:{shape:u}}),g=NT({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function CT(e,t,n,a,r){const s=pt(a),o=Mt(r,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(o[n]+=s>0?t[i]:1)}return o}function ET(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e.shape[0],s=e.shape[1],o=Yi([r,n],t.dtype);for(let i=0;i<r;i++)for(let r=0;r<s;r++){const s=e.get(i,r);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?o.set(1,i,s):t.size>0?o.set(o.get(i,s)+t.get(i,r),i,s):o.set(o.get(i,s)+1,i,s))}return o}const RT={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=CT(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,i)}},AT=pI(((e,t)=>e&t)),_T=DI(yn,AT),FT={kernelName:yn,backendName:"cpu",kernelFunc:_T};const DT={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=Sc(Array.from(s),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},OT=rI((e=>Math.ceil(e))),MT=oI(vn,OT),LT={kernelName:vn,backendName:"cpu",kernelFunc:MT},zT=sI(wn,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),PT={kernelName:wn,backendName:"cpu",kernelFunc:zT},BT={kernelName:Sn,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(pt(t.shape)),r=n.data.get(t.dataId),s=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values;for(let l=0;l<i.length;l++){const e=i[l],t=c[l];a[l]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")}};function WT(e,t,n,a){const r=St(n,pt(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=pt(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const s="string"===n?Km(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[i+t]=s[o++]}a+=e.shape[1]}))}return r}function VT(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const UT={kernelName:pa,backendName:"cpu",kernelFunc:VT};function GT(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=vt(r,t[0].shape)[0];Gf(t.map((e=>e.shape)),s);let o=Hf(t.map((e=>e.shape)),s);if(0===pt(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>pt(e.shape)>0));if(1===i.length)return lI({inputs:{x:i[0]},backend:n});if("complex64"===i[0].dtype){const e=i.map((e=>EI({inputs:{input:e},backend:n}))),t=i.map((e=>VT({inputs:{input:e},backend:n}))),a=GT({inputs:e,backend:n,attrs:{axis:s}}),r=GT({inputs:t,backend:n,attrs:{axis:s}}),o=II({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),o}const c=i.map((e=>{const t=pt(e.shape.slice(s));return BI({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=c.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=Hf(c.map((e=>e.shape)),1);const u=1===c[0].shape[0],h=WT(l,o,t[0].dtype,u),d=Hf(i.map((e=>e.shape)),s),p=n.makeTensorInfo(d,t[0].dtype,h);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const HT={kernelName:Nn,backendName:"cpu",kernelFunc:GT};function jT(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a;tI([r,s],"conv2d");const h=Hl(c),d=Ol(r.shape,s.shape,o,l,i,u,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new Qs(d.outShape,r.dtype),w=_t(r.shape),k=_t(s.shape),S=w[0],N=x?w[1]:w[2],I=x?w[2]:1,T=x?1:w[1],C=v.strides[0],E=x?v.strides[1]:v.strides[2],R=x?v.strides[2]:1,A=x?1:v.strides[1],_=n.data.get(r.dataId).values,F=n.data.get(s.dataId).values,D=v.values;for(let O=0;O<d.batchSize;++O){const e=O*S,t=O*C;for(let n=0;n<d.outHeight;++n){const a=t+n*E,r=n*d.strideHeight-b;for(let t=0;t<p;++t){const n=r+t*m;if(n<0||n>=d.inHeight)continue;const s=t*k[0],o=e+n*N;for(let e=0;e<d.outWidth;++e){const t=a+e*R,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const a=n+e*g;if(a<0||a>=d.inWidth)continue;const r=o+a*I;let i=s+e*k[1];for(let e=0;e<d.inChannels;++e){const n=_[r+e*T];for(let e=0;e<d.outChannels;++e)D[t+e*A]+=n*F[i+e];i+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,D)}const qT={kernelName:In,backendName:"cpu",kernelFunc:jT};const KT={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a;tI([r,s],"conv2dBackpropFilter");const h=Hl(c),d=Ol(r.shape,u,o,1,i,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new Qs(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,S=new Qs(r.shape,r.dtype,w),N=new Qs(s.shape,s.dtype,k);for(let I=0;I<m;++I){const e=Math.max(0,Math.ceil((v-I)/p)),t=Math.min(d.outHeight,(d.inHeight+v-I)/p);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((x-n)/f)),r=Math.min(d.outWidth,(d.inWidth+x-n)/f);for(let s=0;s<d.inChannels;++s)for(let o=0;o<d.outChannels;++o){let i=0;for(let c=0;c<d.batchSize;++c)for(let l=e;l<t;++l){const e=I+l*p-v;for(let t=a;t<r;++t){const a=n+t*f-x;i+=y?S.get(c,e,a,s)*N.get(c,l,t,o):S.get(c,s,e,a)*N.get(c,o,l,t)}}b.set(i,I,n,s,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const XT={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a;tI([r,s],"conv2dBackpropInput");const h=_t(s.shape),d=_t(r.shape);let p=Hl(l);const f=Ol(o,s.shape,i,1,c,u,!1,p),m=new Qs(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:S,filterWidth:N,inChannels:I,inHeight:T,inWidth:C,outChannels:E,outHeight:R,outWidth:A,strideHeight:_,strideWidth:F}=f;p=f.dataFormat;const D=S-1-f.padInfo.top,O=N-1-f.padInfo.left,M="channelsLast"===p,L=m.strides[0],z=M?m.strides[1]:m.strides[2],P=M?m.strides[2]:1,B=M?1:m.strides[1],W=d[0],V=M?d[1]:d[2],U=M?d[2]:1,G=M?1:d[1];for(let H=0;H<k;++H)for(let e=0;e<I;++e)for(let t=0;t<T;++t){const n=t-D,a=Math.max(0,Math.ceil(n/_)),r=Math.min(R,(S+n)/_);for(let s=0;s<C;++s){const o=s-O,i=Math.max(0,Math.ceil(o/F)),c=Math.min(A,(N+o)/F);let l=0;for(let t=a;t<r;++t){const a=t*_-n;for(let n=i;n<c;++n){const r=W*H+V*t+U*n,s=x*(S-1-a)+v*(N-1-(n*F-o))+w*e;for(let e=0;e<E;++e){l+=y[r+G*e]*b[s+e]}}}g[L*H+z*t+P*s+B*e]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const YT={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a;tI([r,s],"conv3d");const l=Ml(r.shape,s.shape,o,c,i),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,v=new Qs(l.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,S=v.values,N=_t(r.shape),I=_t(s.shape);for(let T=0;T<l.batchSize;++T){const e=T*N[0],t=T*v.strides[0];for(let n=0;n<l.outDepth;++n){const a=t+n*v.strides[1],r=n*l.strideDepth-y;for(let t=0;t<u;++t){const n=r+t*p;if(n<0||n>=l.inDepth)continue;const s=t*I[0],o=e+n*N[1];for(let e=0;e<l.outHeight;++e){const t=a+e*v.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const a=n+e*f;if(a<0||a>=l.inHeight)continue;const r=s+e*I[1],i=o+a*N[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,a=e*l.strideWidth-b;for(let e=0;e<d;++e){const t=a+e*m;if(t<0||t>=l.inWidth)continue;const s=r+e*I[2],o=i+t*l.inChannels;let c=s;for(let e=0;e<l.inChannels;++e){const t=w[o+e];for(let e=0;e<l.outChannels;++e)S[n+e]+=t*k[c+e];c+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const QT={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,filterShape:c}=a;tI([r,s],"conv3dBackpropFilterV2");const l=_t(r.shape),u=_t(s.shape),h=Ml(r.shape,c,o,1,i),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Qs(h.filterShape,"float32"),x=b.values,[v,w,k,S]=b.strides,N=n.data.get(s.dataId).values,[I,T,C,E]=u,R=n.data.get(r.dataId).values,[A,_,F,D]=l,O=h.padInfo.front,M=h.padInfo.left,L=h.padInfo.top;for(let z=0;z<m;++z){const e=Math.max(0,Math.ceil((O-z)/d)),t=Math.min(h.outDepth,(h.inDepth+O-z)/d),n=z*v;for(let a=0;a<g;++a){const r=Math.max(0,Math.ceil((L-a)/p)),s=Math.min(h.outHeight,(h.inHeight+L-a)/p),o=a*w+n;for(let n=0;n<y;++n){const i=Math.max(0,Math.ceil((M-n)/f)),c=Math.min(h.outWidth,(h.inWidth+M-n)/f),l=n*k+o;for(let o=0;o<h.inChannels;++o){const u=o*S+l;for(let l=0;l<h.outChannels;++l){let m=0;for(let u=0;u<h.batchSize;++u){const h=u*A,g=u*I;for(let u=e;u<t;++u){const e=(z+u*d-O)*_+h,t=u*T+g;for(let u=r;u<s;++u){const r=(a+u*p-L)*F+e,s=u*C+t;for(let e=i;e<c;++e){const t=e*E+s;m+=R[(n+e*f-M)*D+r+o]*N[t+l]}}}}x[u+l]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const ZT={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:o,strides:i,inputShape:c}=a;tI([r],"conv3dBackpropInputV2");const l=_t(r.shape),u=_t(s.shape),h=Ml(c,s.shape,i,1,o),d=new Qs(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(r.dataId).values,[x,v,w,k]=l,S=n.data.get(s.dataId).values,[N,I,T,C]=u,{batchSize:E,filterDepth:R,filterHeight:A,filterWidth:_,inChannels:F,inDepth:D,inHeight:O,inWidth:M,outChannels:L,outDepth:z,outHeight:P,outWidth:B,strideDepth:W,strideHeight:V,strideWidth:U}=h,G=R-1-h.padInfo.front,H=A-1-h.padInfo.top,j=_-1-h.padInfo.left;for(let q=0;q<E;++q)for(let e=0;e<F;++e)for(let t=0;t<D;++t){const n=t-G,a=Math.max(0,Math.ceil(n/W)),r=Math.min(z,(R+n)/W);for(let s=0;s<O;++s){const o=s-H,i=Math.max(0,Math.ceil(o/V)),c=Math.min(P,(A+o)/V);for(let l=0;l<M;++l){const u=l-j,h=Math.max(0,Math.ceil(u/U)),d=Math.min(B,(_+u)/U);let E=0;for(let t=a;t<r;++t){const a=t*W-n;for(let n=i;n<c;++n){const r=n*V-o;for(let s=h;s<d;++s){const o=x*q+v*t+w*n+k*s,i=N*(R-1-a)+I*(A-1-r)+T*(_-1-(s*U-u))+C*e;for(let e=0;e<L;++e){E+=b[o+e]*S[i+e]}}}}p[f*q+m*t+g*s+y*l+e]=E}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},JT=sI(_n,(e=>Math.cos(e))),$T={kernelName:_n,backendName:"cpu",kernelFunc:JT},eC=sI(Fn,(e=>Math.cosh(e))),tC={kernelName:Fn,backendName:"cpu",kernelFunc:eC};const nC={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:l}=a,[u,h,d,p]=r.shape,f=s.shape[0],[m,g]=i,y=Yi([f,m,g,p],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(o.dataId).values,v=n.data.get(r.dataId).values,w=_t(r.shape),k=_t(y.shape);for(let S=0;S<f;S++){const e=4*S,t=b[e],n=b[e+1],a=b[e+2],r=b[e+3],s=x[S];if(s>=u)continue;const o=m>1?(a-t)*(h-1)/(m-1):0,i=g>1?(r-n)*(d-1)/(g-1):0;for(let u=0;u<m;u++){const e=m>1?t*(h-1)+u*o:.5*(t+a)*(h-1);if(e<0||e>h-1)for(let t=0;t<g;t++)for(let e=0;e<p;e++){const n=e+t*k[2]+u*k[1]+S*k[0];y.values[n]=l}else if("bilinear"===c){const t=Math.floor(e),a=Math.ceil(e),o=e-t;for(let e=0;e<g;e++){const c=g>1?n*(d-1)+e*i:.5*(n+r)*(d-1);if(c<0||c>d-1){for(let t=0;t<p;t++){const n=t+e*k[2]+u*k[1]+S*k[0];y.values[n]=l}continue}const h=Math.floor(c),f=Math.ceil(c),m=c-h;for(let n=0;n<p;n++){let r=n+h*w[2]+t*w[1]+s*w[0];const i=v[r];r=n+f*w[2]+t*w[1]+s*w[0];const c=v[r];r=n+h*w[2]+a*w[1]+s*w[0];const l=v[r];r=n+f*w[2]+a*w[1]+s*w[0];const d=i+(c-i)*m,p=l+(v[r]-l)*m;r=n+e*k[2]+u*k[1]+S*k[0],y.values[r]=d+(p-d)*o}}}else for(let t=0;t<g;++t){const a=g>1?n*(d-1)+t*i:.5*(n+r)*(d-1);if(a<0||a>d-1){for(let e=0;e<p;e++){const n=e+t*k[2]+u*k[1]+S*k[0];y.values[n]=l}continue}const o=Math.round(a),c=Math.round(e);for(let e=0;e<p;e++){const n=e+o*w[2]+c*w[1]+s*w[0],a=e+t*k[2]+u*k[1]+S*k[0];y.values[a]=v[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const aC={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;tI(r,"cumprod");const c=ju([s],r.shape.length);let l=r;null!=c&&(l=JI({inputs:{x:r},backend:n,attrs:{perm:c}}));const u=Ku(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const h=lo(l.dtype,"int32"),d=Ot(pt(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=o?1:p[t];else{const n=m(y,e-1);d[t]=o?p[n]*d[n]:p[t]*d[n]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=c){const e=JI({inputs:{x:g},backend:n,attrs:{perm:qu(c)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};const rC={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;tI(r,"cumsum");const c=ju([s],r.shape.length);let l=r;null!=c&&(l=JI({inputs:{x:r},backend:n,attrs:{perm:c}}));const u=Ku(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const h=lo(l.dtype,"int32"),d=Mt(pt(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=o?0:p[t];else{const n=m(y,e-1);d[t]=o?p[n]+d[n]:p[t]+d[n]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=c){const e=JI({inputs:{x:g},backend:n,attrs:{perm:qu(c)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};const sC={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=CT(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,e)}if(2===r.shape.length){const e=ET(n.bufferSync(r),n.bufferSync(s),o,i);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};const oC={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a;ut("NHWC"===o,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(o)));const i=r.shape[0],c=r.shape[1],l=r.shape[2],u=r.shape[3],h=c*s,d=l*s,p=u/(s*s),f=n.data.get(r.dataId).values,m=new Float32Array(i*h*d*p);let g=0;for(let y=0;y<i;++y)for(let e=0;e<h;++e){const t=Math.floor(e/s),n=e%s;for(let e=0;e<d;++e){const a=Math.floor(e/s),r=(n*s+e%s)*p;for(let e=0;e<p;++e){const n=e+r+u*(a+l*(t+c*y));m[g++]=f[n]}}}return n.makeTensorInfo([i,h,d,p],r.dtype,m)}};function iC(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=a;tI([r,s],"depthwiseConv2DNative");const u=_t(r.shape),h=_t(s.shape);let d=c;null==d&&(d=[1,1]),ut(Ul(o,d),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(d,"'")));const p=Ol(r.shape,s.shape,o,d,i,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,v=b.top,w=p.outChannels/p.inChannels,k=new Qs(p.outShape,r.dtype),S=n.data.get(r.dataId).values,N=n.data.get(s.dataId).values,I=k.values;for(let T=0;T<p.batchSize;++T){const e=T*u[0],t=T*k.strides[0];for(let n=0;n<p.outHeight;++n){const a=t+n*k.strides[1],r=n*p.strideHeight-v;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=p.inHeight)continue;const s=t*h[0],o=e+n*u[1];for(let e=0;e<p.outWidth;++e){const t=a+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const a=n+e*y;if(a<0||a>=p.inWidth)continue;const r=s+e*h[1],i=o+a*p.inChannels;let c=t,l=r;for(let e=0;e<p.inChannels;++e){const t=S[i+e];for(let e=0;e<w;++e)I[c+e]+=t*N[l+e];c+=w,l+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const cC={kernelName:Pn,backendName:"cpu",kernelFunc:iC};const lC={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a;tI([r,s],"depthwiseConv2dNativeBackpropFilter");const h=Ol(r.shape,u,o,i,c,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Qs(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(r.dataId).values,w=new Qs(r.shape,r.dtype,v),k=n.data.get(s.dataId).values,S=new Qs(s.shape,s.dtype,k);for(let N=0;N<f;++N){const e=Math.max(0,Math.ceil((b-N)/d)),t=Math.min(h.outHeight,(h.inHeight+b-N)/d);for(let n=0;n<m;++n){const a=Math.max(0,Math.ceil((y-n)/p)),r=Math.min(h.outWidth,(h.inWidth+y-n)/p);for(let s=0;s<h.outChannels;++s){const o=Math.trunc(s/x),i=s%x;let c=0;for(let l=0;l<h.batchSize;++l)for(let i=e;i<t;++i){const e=N+i*d-b;for(let t=a;t<r;++t){const a=n+t*p-y;c+=w.get(l,e,a,o)*S.get(l,i,t,s)}}g.set(c,N,n,o,i)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const uC={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a;tI([r,s],"depthwiseConv2DNativeBackpropInput");const h=_t(r.shape),d=_t(s.shape),p=Ol(u,s.shape,o,i,c,l,!0),f=new Qs(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(r.dataId).values,[v,w,k]=h,S=n.data.get(s.dataId).values,[N,I,T]=d,{batchSize:C,filterHeight:E,filterWidth:R,inChannels:A,inHeight:_,inWidth:F,outChannels:D,outHeight:O,outWidth:M,strideHeight:L,strideWidth:z}=p,P=E-1-p.padInfo.top,B=R-1-p.padInfo.left,W=D/A;for(let V=0;V<C;++V)for(let e=0;e<A;++e)for(let t=0;t<_;++t){const n=t-P,a=Math.max(0,Math.ceil(n/L)),r=Math.min(O,(E+n)/L);for(let s=0;s<F;++s){const o=s-B,i=Math.max(0,Math.ceil(o/z)),c=Math.min(M,(R+o)/z);let l=0;for(let t=a;t<r;++t){const a=t*L-n;for(let n=i;n<c;++n){const r=v*V+w*t+k*n,s=N*(E-1-a)+I*(R-1-(n*z-o))+T*e;for(let t=0;t<W;++t){l+=x[r+(e*W+t)]*S[s+t]}}}m[g*V+y*t+b*s+e]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const hC={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=pt(a.shape),s=n.data.get(a.dataId).values,o=Yi([r,r],a.dtype),i=o.values;for(let l=0;l<s.length;l++)i[l*r+l]=s[l];const c=[...a.shape,...a.shape];return n.makeTensorInfo(c,o.dtype,o.values)}},dC={kernelName:Un,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a,l=n,u=l.data.get(r.dataId).values,h=r.shape.length,d=l.data.get(s.dataId).values,p=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:N,dilationHeight:I,dilationWidth:T,outShape:C}=_l(r.shape,s.shape,o,i,"NHWC",c),E=pt(C),R=C.length,A=St(r.dtype,E);for(let _=0;_<f;++_)for(let e=0;e<b;++e){const t=e*w-v.top;for(let n=0;n<x;++n){const a=n*k-v.left;for(let o=0;o<y;++o){let i=Number.MIN_SAFE_INTEGER;for(let e=0;e<S;++e){const n=t+e*I;if(n>=0&&n<m)for(let t=0;t<N;++t){const c=a+t*T;if(c>=0&&c<g){const a=Pt([_,n,c,o],h,_t(r.shape)),l=Pt([e,t,o],p,_t(s.shape)),f=u[a]+d[l];f>i&&(i=f)}}}A[Pt([_,e,n,o],R,_t(C))]=i}}}return{dataId:l.write(Ds(A,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},pC={kernelName:Hn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:o}=t,{strides:i,pad:c,dilations:l}=a,u=n,h=Dt(r.shape,u.data.get(r.dataId).values),d=Dt(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:N,dilationWidth:I,outShape:T}=_l(r.shape,s.shape,i,c,"NHWC",l);ut(o.rank===T.length,(()=>"Error in ".concat(Hn,", dy ")+"must have the same rank as output ".concat(T.length,", but got ")+"".concat(o.rank)));const C=Dt(T,u.data.get(o.dataId).values),E=Lt(s.shape,s.dtype);for(let R=0;R<p;++R)for(let e=0;e<y;++e){const t=e*v-x.top;for(let n=0;n<b;++n){const a=n*w-x.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,o=0,i=0;for(let e=0;e<k;++e){const n=t+e*N;if(n>=0&&n<f)for(let t=0;t<S;++t){const c=a+t*I;if(c>=0&&c<m){const a=h[R][n][c][r]+d[e][t][r];a>s&&(s=a,o=e,i=t)}}}E[o][i][r]+=C[R][e][n][r]}}}return{dataId:u.write(Ds(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},fC={kernelName:Gn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:o}=t,{strides:i,pad:c,dilations:l}=a,u=n,h=Dt(r.shape,u.data.get(r.dataId).values),d=Dt(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:N,dilationWidth:I,outShape:T}=_l(r.shape,s.shape,i,c,"NHWC",l);ut(o.rank===T.length,(()=>"Error in ".concat(Gn,", dy ")+"must have the same rank as output ".concat(T.length,", but got ")+"".concat(o.rank)));const C=Dt(T,u.data.get(o.dataId).values),E=Lt(r.shape,r.dtype);for(let R=0;R<p;++R)for(let e=0;e<y;++e){const t=e*v-x.top;for(let n=0;n<b;++n){const a=n*w-x.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,o=t<0?0:t,i=a<0?0:a;for(let e=0;e<k;++e){const n=t+e*N;if(n>=0&&n<f)for(let t=0;t<S;++t){const c=a+t*I;if(c>=0&&c<m){const a=h[R][n][c][r]+d[e][t][r];a>s&&(s=a,o=n,i=c)}}}E[R][o][i][r]+=C[R][e][n][r]}}}return{dataId:u.write(Ds(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const mC={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:s,options:o}=a,{contextOptions:i,imageOptions:c}=o||{},l=(null===c||void 0===c?void 0:c.alpha)||1,u=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==u)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const h=s.getContext(u,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==h)throw new Error("Could not get the context with ".concat(u," type."));const[d,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,y=new Uint8ClampedArray(p*d*4);for(let x=0;x<d*p;++x){const e=[0,0,0,255*l];for(let n=0;n<f;n++){const t=m[x*f+n];if("float32"===r.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===r.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*x;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}s.width=p,s.height=d;const b=new ImageData(y,p,d);return h.putImageData(b,0,0),r}},gC=pI(((e,t)=>e*t)),yC=OI(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),bC=DI(Va,gC,yC),xC={kernelName:Va,backendName:"cpu",kernelFunc:bC};function vC(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;let i;tI(r,"sum"),i="bool"===r.dtype?_I({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):lI({inputs:{x:r},backend:n});const c=i.shape.length,l=vt(s,i.shape),u=ju(l,c);let h=l,d=i;null!=u&&(d=JI({inputs:{x:i},backend:n,attrs:{perm:u}}),h=Ku(h.length,c)),Hu("sum",h,d.shape.length);const[p,f]=Uu(d.shape,h);let m=CI(n,p,lo(d.dtype,"int32"));const g=pt(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let x=0;x<y.length;++x){const e=x*g;let t=0;for(let n=0;n<g;++n)t+=b[e+n];y[x]=t}if(o){const e=m;m=BI({inputs:{x:m},backend:n,attrs:{shape:Gu(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(i),null!=u&&n.disposeIntermediateTensorInfo(d),m}const wC={kernelName:Er,backendName:"cpu",kernelFunc:vC};const kC={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:o,summedDims:i,idDims:c}=Im(r,s.length);Cm(o.length,c,s);const{path:l,steps:u}=Em(i,c),h=u.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const e of u[m]){const{permutationIndices:t,expandDims:a}=Tm(p,c[e]);let r;Rm(t)?r=s[e]:(r=JI({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(r));const o=r.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);ft(r.shape,o)||(r=BI({inputs:{x:r},backend:n,attrs:{shape:o}}),f.push(r)),null===d?d=r:(d=bC({inputs:{a:r,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=vC({inputs:{x:d},backend:n,attrs:{axis:l[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}};const SC={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:r}=t;tI([a,r],"eluGrad");const s=new Float32Array(pt(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values;for(let c=0;c<o.length;++c){const e=o[c];s[c]=e>=0?i[c]:i[c]*(e+1)}return n.makeTensorInfo(r.shape,"float32",s)}},NC=pI(((e,t)=>e===t?1:0)),IC=DI(Zn,NC,null,"bool"),TC={kernelName:Zn,backendName:"cpu",kernelFunc:IC},CC=im,EC=cm,RC=lm,AC=um,_C=hm,FC=dm,DC=sI(Qn,(e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+CC*n);return t*(1-((((FC*a+_C)*a+AC)*a+RC)*a+EC)*a*Math.exp(-n*n))})),OC={kernelName:Qn,backendName:"cpu",kernelFunc:DC},MC=rI((e=>Math.exp(e))),LC=oI(Jn,MC,"float32"),zC={kernelName:Jn,backendName:"cpu",kernelFunc:LC};function PC(e){const{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:s}=a,o=r.shape.length,i=r.shape.slice();let c=s;return s<0&&(ut(-(o+1)<=s,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),c=o+s+1),i.splice(c,0,1),BI({inputs:{x:r},backend:n,attrs:{shape:i}})}const BC={kernelName:$n,backendName:"cpu",kernelFunc:PC},WC=rI((e=>Math.expm1(e))),VC=oI(ea,WC),UC={kernelName:ea,backendName:"cpu",kernelFunc:VC},GC=pI(((e,t)=>e/t)),HC=DI(qn,GC),jC={kernelName:qn,backendName:"cpu",kernelFunc:HC},qC=pI(((e,t)=>e-t)),KC=OI(((e,t,n,a)=>({real:e-n,imag:t-a}))),XC=DI(Hr,qC,KC),YC={kernelName:Hr,backendName:"cpu",kernelFunc:XC};function QC(e,t,n){const a=e.shape,r=a[0],s=a[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,c=o.complexTensorInfos.imag,l=[r,s],u=pt(l),h=kt("float32",u),d=kt("float32",u);for(let g=0;g<r;g++){const e=NT({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=NT({inputs:{x:c},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=II({inputs:{real:e,imag:a},backend:n}),{real:o,imag:l}=ZC(r,t,n),u=pm(o,l);for(let t=0;t<s;t++){const e=ym(u,t);h[g*s+t]=e.real,d[g*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=II({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function ZC(e,t,n){const a=pt(e.shape),r=n.data.get(e.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((i=a)&i-1)){const r=JC(s,o,a,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",r.real),t=n.makeTensorInfo(i,"float32",r.imag),s=n.makeTensorInfo([],"float32",Fs(a,"float32")),o=lI({inputs:{x:s},backend:n}),c=jC.kernelFunc({inputs:{a:e,b:s},backend:n}),l=jC.kernelFunc({inputs:{a:t,b:o},backend:n}),u=n.data.get(c.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:u,imag:h}}return r}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let r=0;r<t;r++){let s=0,o=0;for(let a=0;a<t;a++){const i=vm(r*a,t,n),c=ym(e,a);s+=c.real*i.real-c.imag*i.imag,o+=c.real*i.imag+c.imag*i.real}n&&(s/=t,o/=t),bm(a,s,o,r)}return a}(pm(s,o),a,t);return fm(e)}var i}function JC(e,t,n,a,r){if(1===n)return{real:e,imag:t};const s=pm(e,t),o=n/2,i=mm(s),c=i.real,l=i.imag,u=[c.length],h=r.makeTensorInfo(u,"float32",c),d=r.makeTensorInfo(u,"float32",l),p=II({inputs:{real:h,imag:d},backend:r}),f=gm(s),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),v=II({inputs:{real:b,imag:x},backend:r}),w=JC(c,l,o,a,r),k=w.real,S=w.imag,N=[k.length],I=r.makeTensorInfo(N,"float32",k),T=r.makeTensorInfo(N,"float32",S),C=II({inputs:{real:I,imag:T},backend:r}),E=JC(m,g,o,a,r),R=E.real,A=E.imag,_=[R.length],F=r.makeTensorInfo(_,"float32",R),D=r.makeTensorInfo(_,"float32",A),O=II({inputs:{real:F,imag:D},backend:r}),M=xm(n,a),L=[M.real.length],z=r.makeTensorInfo(L,"float32",M.real),P=r.makeTensorInfo(L,"float32",M.imag),B=II({inputs:{real:z,imag:P},backend:r}),W=bC({inputs:{a:B,b:O},backend:r}),V=zI({inputs:{a:C,b:W},backend:r}),U=XC({inputs:{a:C,b:W},backend:r}),G=EI({inputs:{input:V},backend:r}),H=EI({inputs:{input:U},backend:r}),j=VT({inputs:{input:V},backend:r}),q=VT({inputs:{input:U},backend:r}),K=GT({inputs:[G,H],backend:r,attrs:{axis:0}}),X=GT({inputs:[j,q],backend:r,attrs:{axis:0}}),Y=r.data.get(K.dataId).values,Q=r.data.get(X.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(I),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(X),{real:Y,imag:Q}}const $C={kernelName:ta,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=pt(a.shape),s=a.shape[a.shape.length-1],o=BI({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=QC(o,!1,n),c=BI({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}};function eE(e){const{backend:t,attrs:n}=e,{shape:a,value:r,dtype:s}=n,o=s||Et(r),i=St(o,pt(a));return function(e,t,n){e.fill(t)}(i,r),t.makeTensorInfo(a,o,i)}const tE={kernelName:na,backendName:"cpu",kernelFunc:eE};const nE={kernelName:aa,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,s=a,o=kt(r.dtype,pt(r.shape)),[i,c,l,u]=r.shape,h=s.data.get(r.dataId).values;for(let d=0;d<i;d++){const e=d*l*c*u;for(let t=0;t<c;t++){const n=t*(l*u);for(let t=0;t<l;t++){const a=t*u;for(let r=0;r<u;r++){const s=Math.round(l-t-1),i=e+n+a+r;let c=h[i];if(s>=0&&s<l){c=h[e+n+s*u+r]}o[i]=c}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},aE=rI((e=>Math.floor(e))),rE=oI(ra,aE),sE={kernelName:ra,backendName:"cpu",kernelFunc:rE},oE=pI(((e,t)=>Math.floor(e/t))),iE=DI(sa,oE,null,"int32"),cE={kernelName:sa,backendName:"cpu",kernelFunc:iE};const lE={kernelName:ss,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=jT({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const e=m;if("NCHW"===u&&1===o.shape.length&&1!==o.shape[0]){const e=BI({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=zI({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=zI({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===u&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const e=BI({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=NI(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=NI(n,m,p,i,f);n.disposeIntermediateTensorInfo(e)}return m}};const uE={kernelName:os,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=iC({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const e=m;m=zI({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=NI(n,m,p,i,f),n.disposeIntermediateTensorInfo(e)}return m}};function hE(e,t,n,a,r,s,o,i,c){const l=Yi([a,s],n);for(let u=0;u<a;u++){const n=[];let a=0;for(let t=0;t<r;t++){const s=e[u*r+t];a+=s*o[t],n.push(s)}if(a<0||a>=c/s)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(i));for(let e=0;e<s;e++)l.values[u*s+e]=t.get(...t.indexToLoc(a*s+e))}return l}const dE={kernelName:ca,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=pt(a.shape),o=r.shape,i=o[o.length-1],[c,l,u,h]=rm(a,r);if(0===l)return n.makeTensorInfo(c,a.dtype,[]);const d=hE(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,l,i,u,h,a.shape,s);return n.makeTensorInfo(c,a.dtype,d.values)}};function pE(e,t,n){const a=Yi(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=n[0],o=n[2],i=t.locToIndex([s,o]);n[2]=t.values[i];const c=e.locToIndex(n);0<=c&&c<e.values.length&&(a.values[r]=e.values[c])}return a}const fE={kernelName:ia,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:o,batchDims:i}=a;tI([r,s],"gatherV2");const c=vt(o,r.shape)[0],l=n.data.get(s.dataId).values,u=r.shape[c];for(let x=0;x<l.length;++x){const e=l[x];ut(e<=u-1&&e>=0,(()=>"GatherV2: the index value ".concat(e," is not in [0, ").concat(u-1,"]")))}let h=i;null==i&&(h=0);const d=pt(s.shape),p=qm(r,s,c,h),f=BI({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=BI({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=pE(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},mE=pI(((e,t)=>e>t?1:0)),gE=DI(la,mE,null,"bool"),yE={kernelName:la,backendName:"cpu",kernelFunc:gE},bE=pI(((e,t)=>e>=t?1:0)),xE=DI(ua,bE,null,"bool"),vE={kernelName:ua,backendName:"cpu",kernelFunc:xE};const wE={kernelName:da,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=pt(a.shape),s=a.shape[a.shape.length-1],o=BI({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=QC(o,!0,n),c=BI({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}},kE=sI(fa,(e=>Number.isFinite(e)?1:0),"bool"),SE={kernelName:fa,backendName:"cpu",kernelFunc:kE},NE=sI(ma,(e=>Math.abs(e)===1/0?1:0),"bool"),IE={kernelName:ma,backendName:"cpu",kernelFunc:NE},TE=sI(ga,(e=>Number.isNaN(e)?1:0),"bool"),CE={kernelName:ga,backendName:"cpu",kernelFunc:TE},EE=pI(((e,t)=>e<t?1:0)),RE=DI(ba,EE,null,"bool"),AE={kernelName:ba,backendName:"cpu",kernelFunc:RE},_E=pI(((e,t)=>e<=t?1:0)),FE=DI(xa,_E,null,"bool"),DE={kernelName:xa,backendName:"cpu",kernelFunc:FE};function OE(e,t,n){const a=(t-e)/(n-1),r=Mt(n,"float32");r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+a;return r}const ME={kernelName:va,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=OE(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},LE=rI((e=>Math.log(e))),zE=oI(wa,LE),PE={kernelName:wa,backendName:"cpu",kernelFunc:zE},BE=sI(ka,(e=>Math.log1p(e))),WE={kernelName:ka,backendName:"cpu",kernelFunc:BE},VE=pI(((e,t)=>e&&t)),UE=DI(Sa,VE,null,"bool"),GE={kernelName:Sa,backendName:"cpu",kernelFunc:UE},HE=sI(Na,(e=>e?0:1),"bool"),jE={kernelName:Na,backendName:"cpu",kernelFunc:HE},qE=pI(((e,t)=>e||t)),KE=DI(Ia,qE,null,"bool"),XE={kernelName:Ia,backendName:"cpu",kernelFunc:KE};const YE={kernelName:Ta,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:o,alpha:i,beta:c}=a;tI(r,"LRN");const l=r.shape[3],u=l-1,h=n.data.get(r.dataId).values,d=pt(r.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-s);const a=e-t+Math.min(t+s,u);let r=0;for(;n<=a;n++){const e=h[n];r+=e*e}return r}for(let m=0;m<d;m++){const e=f(m),t=h[m]*Math.pow(o+i*e,-c);p[m]=t}return n.makeTensorInfo(r.shape,r.dtype,p)}};const QE={kernelName:Ca,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a;tI(o,"LRNGrad");const h=pt(o.shape),d=o.shape[3],p=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const e=b%d,t=b-e+Math.max(0,e-i),n=b-e+Math.min(d,e+i+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(f[r],2);a=l*a+c;for(let r=t;r<n;r++){let e=-2*l*u*f[r]*m[b]/a;b===r&&(e+=Math.pow(a,-u)),e*=p[b],g[r]+=e}}return n.makeTensorInfo(o.shape,r.dtype,g)}};function ZE(e,t,n,a){const r=kt(a,pt(n));for(let s=0;s<r.length;++s){const n=s*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}r[s]=a}return r}function JE(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:o}=a,i=n;let c=r.shape;const l=c.length,u=vt(s,c);let h=u;const d=ju(h,l);let p=i.data.get(r.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=c[d[t]];p=ZI(p,c,r.dtype,d,e),h=Ku(h.length,l),c=e}tI(r,"max"),Hu("max",h,l);const[f,m]=Uu(c,h),g=ZE(p,pt(m),f,r.dtype),y=i.write(g,f,r.dtype);let b=f;if(o){b=Gu(f,u)}return{dataId:y,shape:b,dtype:r.dtype}}const $E={kernelName:Ea,backendName:"cpu",kernelFunc:JE},eR=pI(((e,t)=>Math.max(e,t))),tR=DI(Ra,eR),nR={kernelName:Ra,backendName:"cpu",kernelFunc:tR};const aR={kernelName:Aa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;tI(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;ut(Ul(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=Fl(r.shape,s,o,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&ft(l.inShape,l.outShape))u=lI({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=_t(r.shape),a=mT(e,r.shape,r.dtype,t,l,"max");u=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return u}};const rR={kernelName:Fa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a;tI(r,"maxPool3d");const u=Dl(r.shape,s,o,1,i,c,l),h=yT(n.data.get(r.dataId).values,r.shape,r.dtype,_t(r.shape),u,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const sR={kernelName:Da,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;tI([r,s],"maxPool3DGrad");const u=Dl(s.shape,o,i,1,c,l),h=function(e,t){const n=Yi(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,s=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*a-d;let x=b;for(;x<0;)x+=o;const v=Math.min(t.inDepth,l+b);for(let a=0;a<t.outHeight;++a){const l=a*r-p;let d=l;for(;d<0;)d+=i;const w=Math.min(t.inHeight,u+l);for(let r=0;r<t.outWidth;++r){const p=r*s-f;let k=p;for(;k<0;)k+=c;const S=Math.min(t.inWidth,h+p);let N=Number.NEGATIVE_INFINITY,I=-1;for(let t=x;t<v;t+=o){const n=t-b;for(let a=d;a<w;a+=i){const r=a-l;for(let s=k;s<S;s+=c){const o=s-p,i=e.get(m,t,a,s,g);i>=N&&(N=i,I=n*u*h+r*u+o)}}}n.set(I,m,y,a,r,g)}}}return n}(n.bufferSync(s),u),d=u.strideDepth,p=u.strideHeight,f=u.strideWidth,m=u.dilationDepth,g=u.dilationHeight,y=u.dilationWidth,b=u.effectiveFilterDepth,x=u.effectiveFilterHeight,v=u.effectiveFilterWidth,w=b-1-u.padInfo.front,k=v-1-u.padInfo.left,S=x-1-u.padInfo.top,N=Yi(s.shape,"float32"),I=n.bufferSync(r);for(let T=0;T<u.batchSize;++T)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inDepth;++t)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const r=t-w,s=n-S,o=a-k;let i=0;for(let t=0;t<b;t+=m){const n=(r+t)/d;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let a=0;a<x;a+=g){const r=(s+a)/p;if(!(r<0||r>=u.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=y){const c=(o+s)/f;if(c<0||c>=u.outWidth||Math.floor(c)!==c)continue;const l=b*x*v-1-h.get(T,n,r,c,e)===t*x*v+a*v+s?1:0;if(0===l)continue;i+=I.get(T,n,r,c,e)*l}}}N.set(i,T,t,n,a,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const oR={kernelName:_a,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:o}=t,i=s;tI([s,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=Fl(i.shape,c,l,1,u,h),p=n.data.get(i.dataId).values,f=Yi(d.outShape,i.dtype,gT(p,i.shape,i.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,S=Yi(i.shape,"float32"),N=n.data.get(r.dataId).values,I=Yi(r.shape,"float32",N);for(let T=0;T<d.batchSize;++T)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const a=t-k,r=n-w;let s=0;for(let t=0;t<x;t+=y){const n=(a+t)/m;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let a=0;a<v;a+=b){const o=(r+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const i=x*v-1-f.get(T,n,o,e)===t*v+a?1:0;if(0===i)continue;s+=I.get(T,n,o,e)*i}}S.set(s,T,t,n,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const iR={kernelName:Oa,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:c}=n,l=a;tI(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,h=Fl(r.shape,s,o,[1,1],i),[d,p]=function(e,t,n,a,r){const s=mT(e,0,n,_t(t),r,"max"),o=gT(e,t,n,r,!0,a);return[s.values,o.values]}(u,r.shape,r.dtype,c,h),f=l.write(d,h.outShape,r.dtype),m=l.write(p,h.outShape,r.dtype);return[{dataId:f,shape:h.outShape,dtype:r.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}};const cR={kernelName:Ma,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=vt(s,r.shape),c=pt(Uu(r.shape,i)[1]),l=[],u=n.makeTensorInfo([],"float32",new Float32Array([c]));l.push(u);const h=_I({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});l.push(h);const d=HC({inputs:{a:h,b:u},backend:n});l.push(d);const p=vC({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:o}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const lR={kernelName:La,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;tI(r,"min");const i=vt(s,r.shape);let c=i;const l=ju(c,r.shape.length);let u=r;null!=l&&(u=JI({inputs:{x:r},backend:n,attrs:{perm:l}}),c=Ku(c.length,r.shape.length)),Hu("min",c,u.shape.length);const[h,d]=Uu(u.shape,c),p=pt(d),f=Mt(pt(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];(Number.isNaN(a)||a<t)&&(t=a)}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(o){const e=BI({inputs:{x:g},backend:n,attrs:{shape:Gu(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}},uR=pI(((e,t)=>Math.min(e,t))),hR=DI(za,uR),dR={kernelName:za,backendName:"cpu",kernelFunc:hR};const pR={kernelName:Pa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,mode:o}=a;tI(r,"mirrorPad");const i=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),c=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+r.shape[t])),u="reflect"===o?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=_t(r.shape),f=pt(i),m=i.length,g=_t(i),y=kt(r.dtype,f);for(let b=0;b<f;b++){let e=Bt(b,m,g);for(let n=0;n<m;n++)e[n]<c[n]?e[n]=2*c[n]-e[n]-u:e[n]>=l[n]&&(e[n]=2*(l[n]-1)-e[n]+u);e=e.map(((e,t)=>e-c[t]));const t=Pt(e,d,p);y[b]=h[t]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}},fR=pI(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),mR=DI(Ba,fR),gR={kernelName:Ba,backendName:"cpu",kernelFunc:mR};function yR(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,o=r.shape.length;let i=s;if(-1===i&&(i=o-1),i!==o-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(o," and dim was ").concat(i));const c=vt([i],r.shape),l=JE({inputs:{x:r},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),u=Gu(l.shape,c),h=BI({inputs:{x:l},backend:n,attrs:{shape:u}}),d=XC({inputs:{a:r,b:h},backend:n}),p=LC({inputs:{x:d},backend:n}),f=vC({inputs:{x:p},backend:n,attrs:{axis:c,keepDims:!1}}),m=BI({inputs:{x:f},backend:n,attrs:{shape:u}}),g=HC({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const bR={kernelName:_r,backendName:"cpu",kernelFunc:yR};const xR={kernelName:Wa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:i}=a;tI(r,"multinomial");const c=i?r:yR({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=c.shape[0],u=c.shape[1],h=n.data.get(c.dataId).values,d=[l,s],p=Mt(pt(d),"int32");for(let f=0;f<l;++f){const e=f*u,t=new Float32Array(u-1);t[0]=h[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+h[e+r];const n=cd.alea(o.toString()),a=f*s;for(let r=0;r<s;++r){const e=n();p[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){p[a+r]=n;break}}}return i||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(d,"int32",p)}};function vR(e,t,n){const a=Fs(-1,n);return gC([],t,a,e,n)}const wR={kernelName:Ua,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;tI(a,"neg");const r=n.data.get(a.dataId).values,[s,o]=vR(r,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,s)}},kR=Xp;const SR={kernelName:Ha,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a;tI(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,{selectedIndices:h}=kR(l,u,o,i,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},NR=Yp;const IR={kernelName:ja,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a;tI(r,"NonMaxSuppressionPadded");const u=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=NR(u,h,o,i,c,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},TR=Qp;const CR={kernelName:qa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a;tI(r,"NonMaxSuppressionWithScore");const u=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,d=o,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=TR(u,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},ER=pI(((e,t)=>e!==t?1:0)),RR=DI(Ga,ER,null,"bool"),AR={kernelName:Ga,backendName:"cpu",kernelFunc:RR};const _R={kernelName:Xa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:o,onValue:i,offValue:c}=a;tI(r,"oneHot");const l=pt(r.shape),u=new Float32Array(l*o);u.fill(c);const h=n.data.get(r.dataId).values;for(let d=0;d<l;++d)h[d]>=0&&h[d]<o&&(u[d*o+h[d]]=i);return n.makeTensorInfo([...r.shape,o],s,u)}};function FR(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=EI({inputs:{input:a},backend:n}),t=FR({inputs:{x:e},backend:n}),r=VT({inputs:{input:a},backend:n}),s=FR({inputs:{x:r},backend:n}),o=II({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return eE({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const DR={kernelName:es,backendName:"cpu",kernelFunc:FR};const OR={kernelName:Ka,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=EI({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=VT({inputs:{input:r},backend:a}),o=FR({inputs:{x:s},backend:a}),i=II({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return eE({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function MR(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return PC({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{ht(s,e.shape,"All tensors passed to stack must have matching shapes"),ut(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=GT({inputs:t.map((e=>{const t=PC({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const LR={kernelName:Ya,backendName:"cpu",kernelFunc:MR};const zR={kernelName:Qa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:o}=a;tI(r,"pad");const i=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),c=s.map((e=>e[0])),l=n.data.get(r.dataId).values,u=pt(r.shape),h=r.shape.length,d=_t(r.shape),p=pt(i),f=i.length,m=_t(i),g=kt(r.dtype,p);0!==o&&g.fill(o);for(let y=0;y<u;y++){g[Pt(Bt(y,h,d).map(((e,t)=>e+c[t])),f,m)]=l[y]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}},PR=pI(((e,t)=>Math.pow(e,t))),BR=DI(Za,PR),WR={kernelName:Za,backendName:"cpu",kernelFunc:BR};function VR(e,t,n,a){const[r,s]=Uu(e,a),o=lo(t,"int32"),i=Mt(pt(r),o),c=pt(s);for(let l=0;l<i.length;++l){const e=l*c;let t=1;for(let a=0;a<c;++a)t*=n[e+a];i[l]=t}return{outVals:i,outShape:r,outDtype:o}}const UR={kernelName:$a,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;tI(r,"prod");const i=r.shape.length,c=vt(s,r.shape),l=ju(c,i);let u=c,h=r;const d=[];null!=l&&(h=JI({inputs:{x:r},backend:n,attrs:{perm:l}}),d.push(h),u=Ku(u.length,i));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=VR(h.shape,h.dtype,p,u);let y=m;return o&&(y=Gu(m,c)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function GR(e,t,n,a){const r=[];let s=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let c=1;for(let l=0;l<t.length-1;++l){c*=t[l];const e=t[l+1];for(let t=1;t<c+1;++t)i[l].push(t*e)}for(let l=0;l<e.length;++l){let a=e[l],o=e[l]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=i[s],t=e[e.length-1]-r[a];for(let n=a;n<o;++n)i[s].push(r[n+1]+t)}a=r[a],o=r[o]}o!==a&&(r.push([a,o]),s+=o-a)}return{outSplits:i,valueSlices:r,numValues:s}}function HR(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function jR(e,t,n,a,r){const s=t.slice();s[0]=r;const o=St(n,pt(s)),i=e.length;return function(e,t,n,a,r,s){const o=HR(t,2)[1],i=HR(s,2)[1];let c=0;for(const l of n)for(let t=l[0];t<l[1];++t){for(let n=0;n<a;++n)r[c*i+n]=e[t*o+n];++c}}(e,t,a,0===i?0:i/t[0],o,s),[o,s]}function qR(e,t,n,a,r,s,o,i){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){const r=Bt(a,t.length,_t(t)).join(",");throw new Error("indices[".concat(r,"] = ").concat(e," is not in [0, ").concat(n,")"))}}))}(s,o,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const c=a[0],{outSplits:l,valueSlices:u,numValues:h}=GR(s,o,e,c),d=function(e){const t=[];for(let n=0;n<e.length;++n){const a=St("int32",e[n].length);t.push(a),e[n].forEach(((e,t)=>a[t]=e))}return t}(l),p=jR(n,a,r,u,h);return[d,p[0],p[1]]}const KR={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.data.get(e.dataId).values)),l=r.map((e=>e.shape)),u=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,[d,p,f]=qR(c,l,u,s.shape,s.dtype,h,o.shape),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}},XR=2147483647;function YR(e,t,n,a,r,s,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const i=0===t.length,c=0===r.length,l=0===o.length,u=[];i||u.push(t[0]),c||u.push(r[0]),l||u.push(o[0]);for(let m=1;m<u.length;++m)if(u[m]!==u[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===u.length?1:u[0],d=St("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const t=i?e[0]:e[m],n=c?a[0]:a[m],r=l?s[0]:s[m];if(0===r)throw new Error("Requires delta != 0");let o;if(r>0&&n<t||r<0&&n>t)o=0;else if(o=Math.ceil(Math.abs((n-t)/r)),o>XR)throw new Error("Requires ((limit - start) / delta) <= ".concat(XR));d[m+1]=d[m]+o}const p=St(n,d[h]);let f=0;for(let m=0;m<h;++m){const t=d[m+1]-d[m];let n=i?e[0]:e[m];const a=l?s[0]:s[m];for(let e=0;e<t;++e)p[f++]=n,n+=a}return[d,p]}const QR={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=YR(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};var ZR=jf;class JR{constructor(e,t,n,a,r,s,o,i,c,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=s,this.defaultValueShape=o,this.rowPartitionValues=i,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=Kf(l),this.raggedRank=Xf(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===ZR.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===ZR.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case ZR.VALUE_ROWIDS:return JR.getMaxWidthValueRowID(t);case ZR.ROW_SPLITS:return JR.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type ".concat(ZR[this.getRowPartitionTypeByDimension(e-1)]))}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let s=1;s<t;++s){const t=e[s];t!==a&&(a=t,r=Math.max(s-n,r),n=s)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return eA(e,n)}calculateOutputSize(e){const t=this.valuesShape;Yf(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=qf(this.raggedRank,n,t);a[0]<0&&(a[0]=e);for(let r=1;r<=this.raggedRank;++r)a[r]<0&&(a[r]=this.getMaxWidth(r));return a}calculateFirstParentOutputIndex(e,t,n){const a=Math.min(e,n),r=[];let s=0;for(let o=0;o<a;++o,s+=t)r.push(s);for(let o=a;o<e;++o)r.push(-1);return ut(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,a){const r=e.length,s=[];for(let o=0;o<r-1;++o){const r=e[o+1]-e[o];let i=Math.min(a,r),c=t[o];-1===c&&(i=0);for(let e=0;e<i;++e)s.push(c),c+=n;for(let e=0;e<r-i;++e)s.push(-1)}if(r>0&&s.length!==e[r-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,a){const r=e.length,s=[];if(0===r)return[];let o=0,i=e[0];if(i>=t.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(t.length));let c=t[i];s.push(c);for(let l=1;l<r;++l){const r=e[l];if(r===i)c>=0&&(++o,o<a?c+=n:c=-1);else{if(o=0,i=r,r>=t.length)throw new Error("Got nextValueRowId=".concat(r," which is not less than ").concat(t.length));c=t[r]}s.push(c)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,a){const r=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case ZR.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case ZR.ROW_SPLITS:if(r.length-1>t.length)throw new Error("Row partition size is greater than output size: ".concat(r.length-1," > ").concat(t.length));return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error("Unsupported partition type: ".concat(ZR[s]))}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case ZR.FIRST_DIM_SIZE:return e[0];case ZR.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case ZR.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(ZR[t]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];const a=eA(t,!1),r=St(this.valuesDType,pt(a));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){s=this.calculateOutputIndex(e-1,s,n[e],t[e])}this.setOutput(this.raggedRank,s,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;const r=this.values,s=n;let o=a.slice();o=o.slice(e+1);const i=pt(o),c=t.length;let l=this.defaultValue;if(l.length!==i&&1!==l.length){const e=this.defaultValueShape;Uo((()=>{const t=ql(l,e),n=lu(t,o);l=n.dataSync()}))}let u=0,h=0,d=0;for(let p=0;p<=c;++p){let e=p<c?t[p]:-1;if(e!==d){if(h<d){const e=r.subarray(u*i);$R(s.subarray(h*i),e,(d-h)*i)}if(p>=c){const t=n.length;e=Math.floor(t/i)}if(e>d)if(1===this.defaultValue.length)s.subarray(d*i,e*i).fill(this.defaultValue[0]),d=e;else for(;e>d;){$R(s.slice(d*i),l,i),++d}e<0?(u=p+1,h=d):(u=p,h=d,d=h+1)}else++d}}}function $R(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function eA(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function tA(e,t,n,a,r,s,o,i,c,l){return new JR(e,t,n,a,r,s,o,i,c,l).compute()}const nA={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=i.map((e=>n.data.get(e.dataId).values)),p=i.map((e=>e.shape)),[f,m]=tA(l,r.shape,u,s.shape,s.dtype,h,o.shape,d,p,c);return n.makeTensorInfo(f,s.dtype,m)}};function aA(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return Mt(0,a);const r=Mt(Math.abs(Math.ceil((t-e)/n)),a);t<e&&1===n&&(n=-1),r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+n;return r}const rA={kernelName:ar,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:o}=n,i=aA(a,r,o,s);return t.makeTensorInfo([i.length],s,i)}},sA=sI(sr,(e=>1/e)),oA={kernelName:sr,backendName:"cpu",kernelFunc:sA};const iA={kernelName:ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a;tI(r,"resizeBilinear");const c=_t(r.shape),[l,u]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(pt([h,l,u,f])),y=[s&&l>1?d-1:d,s&&u>1?p-1:p],b=[s&&l>1?l-1:l,s&&u>1?u-1:u];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let k=0;k<h;k++)for(let e=0;e<l;e++){let t;t=o?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),a=t-n,r=Math.min(d-1,Math.ceil(t)),s=k*c[0]+n*c[1],i=k*c[0]+r*c[1];for(let e=0;e<u;e++){let t;t=o?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,l=Math.min(p-1,Math.ceil(t)),u=s+n*c[2],h=i+n*c[2],d=s+l*c[2],y=i+l*c[2];for(let e=0;e<f;e++){const t=m[u+e],n=m[h+e],s=t+(m[d+e]-t)*r,o=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=o}}}return n.makeTensorInfo([h,l,u,f],"float32",g)}};const cA={kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a;tI([s,r],"resizeBilinearGrad");const i=_t(r.shape),[c,l,u,h]=r.shape,[,d,p]=s.shape,f=new Float32Array(c*l*u*h),m=[o&&d>1?l-1:l,o&&p>1?u-1:u],g=[o&&d>1?d-1:d,o&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values;let v=0;for(let w=0;w<c;w++){const e=w*i[0];for(let t=0;t<d;t++){const n=t*y,a=Math.floor(n),r=Math.min(Math.ceil(n),l-1),s=e+a*i[1],o=e+r*i[1],c=n-a,d=1-c;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),a=Math.min(Math.ceil(t),u-1),r=t-n,l=1-r,p=s+n*i[2],m=s+a*i[2],g=o+n*i[2],y=o+a*i[2],w=d*l,k=d*r,S=c*l,N=c*r;for(let e=0;e<h;e++){const t=x[v++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*S,f[y+e]+=t*N}}}}return n.makeTensorInfo([c,u,l,h],"float32",f)}};const lA={kernelName:cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a;tI(r,"resizeNearestNeighbor");const c=_t(r.shape),[l,u]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*l*u*f),y=[s&&l>1?d-1:d,s&&u>1?p-1:p],b=[s&&l>1?l-1:l,s&&u>1?u-1:u],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let k=0;k<h;k++){const e=k*c[0];for(let t=0;t<l;t++){const n=o?x*(t+.5):x*t;let a=Math.min(d-1,s?Math.round(n):Math.floor(n));o&&(a=Math.max(0,a));const r=e+a*c[1];for(let e=0;e<u;e++){const t=o?v*(e+.5):v*e;let n=Math.min(p-1,s?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const a=r+n*c[2];for(let e=0;e<f;e++){const t=m[a+e];g[w++]=t}}}}return n.makeTensorInfo([h,l,u,f],r.dtype,g)}};const uA={kernelName:lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a;tI([s,r],"resizeNearestNeighborGrad");const i=_t(r.shape),c=_t(s.shape),[l,u,h,d]=r.shape,[,p,f]=s.shape,m=new Float32Array(l*u*h*d),g=n.data.get(s.dataId).values,y=[o&&p>1?u-1:u,o&&f>1?h-1:h],b=[o&&p>1?p-1:p,o&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,S=2*Math.ceil(w)+2,N=2*Math.ceil(k)+2;for(let I=0;I<l;I++){const e=I*i[0];for(let t=0;t<u;t++){const n=e+t*i[1],a=Math.floor(t*w),r=Math.floor(a-S/2);for(let s=0;s<h;s++){const a=n+s*i[2],l=Math.floor(s*k),y=Math.floor(l-N/2);for(let n=0;n<d;n++){let i=0;for(let a=0;a<S;a++){const l=a+r;if(l<0||l>=p)continue;const d=e+l*c[1],m=l*x;if(t===Math.min(u-1,o?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){const t=e+y;if(t<0||t>=f)continue;const a=d+t*c[2],r=t*v;s===Math.min(h-1,o?Math.round(r):Math.floor(r))&&(i+=g[a+n])}}m[a+n]=i}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}};const hA={kernelName:pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a;tI(r,"reverse");const o=r.shape.length,i=vt(s,r.shape);if(0===o)return lI({inputs:{x:r},backend:n});const c=new Qs(r.shape,r.dtype),l=n.bufferSync(r);for(let u=0;u<c.size;u++){const e=c.indexToLoc(u),t=e.slice();i.forEach((e=>t[e]=r.shape[e]-1-t[e])),c.set(l.get(...t),...e)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},dA={kernelName:as,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:o,center:i}=n,c=a,l=kt(r.dtype,pt(r.shape)),[u,h,d,p]=r.shape,[f,m]=Jf(i,h,d),g=Math.sin(s),y=Math.cos(s),b=c.data.get(r.dataId).values;for(let x=0;x<u;x++){const e=x*d*h*p;for(let t=0;t<h;t++){const n=t*(d*p);for(let a=0;a<d;a++){const r=a*p;for(let s=0;s<p;s++){const i=[u,t,a,s],c=i[2],x=i[1];let v=(c-f)*y-(x-m)*g,w=(c-f)*g+(x-m)*y;v=Math.round(v+f),w=Math.round(w+m);let k=o;if("number"!==typeof o&&(k=3===s?255:o[s]),v>=0&&v<d&&w>=0&&w<h){k=b[e+w*(d*p)+v*p+s]}l[e+n+r+s]=k}}}}return{dataId:c.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},pA=sI(fr,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),fA={kernelName:fr,backendName:"cpu",kernelFunc:pA},mA=rI((e=>1/Math.sqrt(e))),gA=oI(mr,mA),yA={kernelName:mr,backendName:"cpu",kernelFunc:gA};function bA(e,t,n,a,r,s,o,i,c,l){const u=[a/r,r],h=e.values,d=t.values;if(0===a)return Yi(n,t.dtype);const p=c instanceof Qs?c:Yi(u,t.dtype);"string"===typeof c||"number"===typeof c?p.values.fill(c):"boolean"===typeof c&&p.values.fill(+c);for(let f=0;f<s;f++){const e=[];let s=0;for(let t=0;t<o;t++){const n=h[f*o+t];e.push(n),s+=n*i[t]}if(s<0||s>=a/r)throw new Error("Invalid indices: ".concat(e," does not index into ").concat(n));for(let n=0;n<r;n++)l?p.values[s*r+n]+=d[f*r+n]:p.values[s*r+n]=0===t.rank?d[0]:d[f*r+n]}return p}const xA={kernelName:gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:o}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=rp(0,r,o),d=bA(n.bufferSync(r),n.bufferSync(s),o,h,l,c,i,u,0,!0);return n.makeTensorInfo(o,d.dtype,d.values)}};function vA(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function wA(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}const kA={kernelName:br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,i=function(e,t,n,a,r,s){const o=St("int32",n*r);for(let i=0;i<n;++i){const n=e.slice(i*a,(i+1)*a),c=i*r;for(let e=0;e<r;++e)o[c+e]="left"===s?vA(n,t[e+c]):wA(n,t[e+c])}return o}(n.data.get(r.dataId).values,n.data.get(s.dataId).values,r.shape[0],r.shape[1],s.shape[1],o);return n.makeTensorInfo(s.shape,"int32",i)}};const SA={kernelName:xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t;tI([a,r,s],"select");const o=a.shape.length,i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=lo(r.dtype,s.dtype),h=Mt(pt(r.shape),u);let d=0;const p=0===o||o>1||1===r.shape.length?1:pt(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let e=0;e<p;e++)1===i[f]?h[d++]=c[f]:h[d++]=l[f];return n.makeTensorInfo(r.shape,u,h)}},NA=sm,IA=om,TA=sI(vr,(e=>e>=0?IA*e:NA*(Math.exp(e)-1))),CA={kernelName:vr,backendName:"cpu",kernelFunc:TA},EA=sI(Nr,(e=>e<0?-1:e>0?1:0)),RA={kernelName:Nr,backendName:"cpu",kernelFunc:EA},AA=sI(kr,(e=>Math.sin(e))),_A={kernelName:kr,backendName:"cpu",kernelFunc:AA},FA=sI(Sr,(e=>Math.sinh(e))),DA={kernelName:Sr,backendName:"cpu",kernelFunc:FA},OA=Math.log(1.1920928955078125e-7)+2,MA=sI(Tr,(e=>{const t=e>-OA,n=e<OA,a=Math.exp(e);let r;return r=n?a:t?e:Math.log(1+a),r})),LA={kernelName:Tr,backendName:"cpu",kernelFunc:MA};const zA={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:o}=a;tI([r],"spaceToBatchND");const i=pt(s),c=[[0,0]];c.push(...o);for(let g=1+s.length;g<r.shape.length;++g)c.push([0,0]);const l=zR.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),u=$f(l.shape,s,i,!1),h=em(u.length,s.length,!1),d=tm(l.shape,s,i,!1),p=BI({inputs:{x:l},backend:n,attrs:{shape:u}}),f=JI({inputs:{x:p},backend:n,attrs:{perm:h}}),m=BI({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function PA(e,t,n,a,r,s,o){const i=t[0],c=s[0],l=new Array(c),u=new Array(i),h=t[1];if(0===c){if(0!==i)throw new Error(Fm(i));return[St(n,0),[0,h],St(r,0),l,u]}let d=!0,p=0;const f=new Array(c).fill(0);for(let g=0;g<i;++g){const t=e[g*h];if(t<0)throw new Error(Dm(g,t));if(t>=c)throw new Error(Om(g,t,c));++f[t],d=d&&t>=p,p=t}let m=!0;for(let g=0;g<c;++g){const e=0===f[g];l[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const t=e,n=a;for(let e=0;e<i;++e)u[e]=e;return[t,[i,h],n,l,u]}{const t=f[c-1],s=St(n,t*h),d=St(r,t),p=new Array(c).fill(0);for(let n=0;n<i;++n){const t=e[n*h],r=p[t],o=(0===t?0:f[t-1])+r;p[t]++;for(let a=0;a<h;++a)s[o*h+a]=e[n*h+a];d[o]=a[n],u[n]=o}for(let e=0;e<c;++e){if(0===p[e]){const t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;d[t]=o}}return[s,[t,h],d,l,u]}}const BA={kernelName:Fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values[0],[h,d,p,f,m]=PA(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};function WA(e,t,n,a,r){const s=pt(a),o=t[0],i=r.length,c=[];let l=1,u=-1;for(let m=0;m<i;++m){const e=r[m];if(-1===e){if(-1!==u)throw new Error(Mm(u,m));u=m,c.push(1)}else{if(e<0)throw new Error(Lm(m,e));l*=e,c.push(e)}}if(-1!==u){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/l);if(l*e!==s)throw new Error(Pm(a,c));c[u]=e}if(pt(c)!==s)throw new Error(Bm(a,c));const h=a.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*a[e+1]}const p=[];if(i>0){p[i-1]=1;for(let e=i-2;e>=0;--e)p[e]=p[e+1]*c[e+1]}const f=St(n,o*i);for(let m=0;m<o;++m){let t=0;for(let n=0;n<h;++n)t+=e[m*h+n]*d[n];for(let e=0;e<i;++e)f[m*i+e]=Math.trunc(t/p[e]),t%=p[e]}return[f,[o,i],c]}const VA={kernelName:Dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.data.get(r.dataId).values),i=n.data.get(a.dataId).values,c=Array.from(n.data.get(s.dataId).values),[l,u,h]=WA(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};function UA(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const i=a.length,c=[t[0],e.length/t[0]],l=c[1],u=i>0?r[i-1]+1:0;if(u<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=u;const d=St(n,h.reduce(((e,t)=>e*t),1));if(0===i)return u>0&&d.fill(o),[d,h];if(u<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=r[p];for(;;){let t=0;if(f<i){if(t=r[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=u)throw new Error(Um(g,u));g>m&&d.fill(o,m*l,g*l);for(let n=p;n<f;++n){const t=a[n];if(t<0||t>=c[0])throw new Error(Gm(n,a[n],c[0]));for(let n=0;n<l;n++)d[g*l+n]+=e[t*l+n]}if(s)for(let e=0;e<l;e++)d[g*l+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>i)break}return m<u&&d.fill(o,m*l,u*l),[d,h]}const GA={kernelName:Or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=UA(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const HA={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=UA(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const jA={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:o}=t,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=rp(0,r,i),p=!1,f=n.bufferSync(r);let m;switch(s.dtype){case"bool":m=bA(f,n.bufferSync(s),i,d,u,l,c,h,Boolean(n.data.get(o.dataId).values[0]),p);break;case"float32":m=bA(f,n.bufferSync(s),i,d,u,l,c,h,n.data.get(o.dataId).values[0],p);break;case"int32":m=bA(f,n.bufferSync(s),i,d,u,l,c,h,n.data.get(o.dataId).values[0],p);break;case"string":m=bA(f,n.bufferSync(s),i,d,u,l,c,h,Ls(n.data.get(o.dataId).values[0]),p);break;default:throw new Error("Unsupported type ".concat(s.dtype))}return n.makeTensorInfo(i,m.dtype,m.values)}};const qA={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:o}=a,i=vt(o,r.shape)[0],c=_m(r,s,i),l=new Array(r.shape.length).fill(0),u=r.shape.slice();return c.map((e=>{const t=[...u];t[i]=e;const a=NT({inputs:{x:r},backend:n,attrs:{begin:l,size:t}});return l[i]+=e,a}))}},KA=rI((e=>Math.sqrt(e))),XA=sI(Cr,(e=>Math.sqrt(e))),YA={kernelName:Cr,backendName:"cpu",kernelFunc:XA},QA={kernelName:Pr,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:a}=t,r=n;tI(a,"square");const s=r.data.get(a.dataId).values,o=new Float32Array(s.length);for(let i=0;i<s.length;++i){const e=s[i];o[i]=e*e}return{dataId:r.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},ZA=pI(((e,t)=>{const n=e-t;return n*n})),JA=DI(zr,ZA),$A={kernelName:zr,backendName:"cpu",kernelFunc:JA},e_=rI(((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)})),t_=oI(Br,e_),n_={kernelName:Br,backendName:"cpu",kernelFunc:t_},a_=sI(ts,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),r_={kernelName:ts,backendName:"cpu",kernelFunc:a_};function s_(e,t,n,a){const r=Yi(e,t.dtype);for(let s=0;s<r.size;s++){const e=r.indexToLoc(s),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+a[t];r.set(t.get(...o),...e)}return r}const o_={kernelName:Wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=a;tI(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=yl(r.shape,s,o,i,c,l,u,h,d);let w;if(m)w=BI({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){ut(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=rl(b,x,v),t=NT({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=BI({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=s_(p,n.bufferSync(r),v,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};class i_{constructor(e,t,n,a,r,s){this.separator=Ms(e),this.nGramWidths=t,this.leftPad=Ms(n),this.rightPad=Ms(a),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,s){for(let o=0;o<r;++o){const i=this.getPadWidth(s),c=Math.max(0,i-o),l=Math.max(0,i-(r-(o+1))),u=s-(c+l),h=t+(c>0?0:o-i);let d=0;d+=c*this.leftPad.length;for(let t=0;t<u;++t)d+=e[h+t].length;d+=l*this.rightPad.length;d+=(c+l+u-1)*this.separator.length,n[a+o]=new Uint8Array(d);const p=n[a+o];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<c;++e)m(this.leftPad),m(this.separator);for(let t=0;t<u-1;++t)m(e[h+t]),m(this.separator);if(u>0){m(e[h+u-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got ".concat(e));for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error("Invalid split value ".concat(t[r],", must be in [").concat(e,", ").concat(n,"]"));e=t[r]}if(e!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(e))}const r=a-1,s=St("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=r;++t)s[t]=0;return[e,s]}s[0]=0;for(let i=1;i<=r;++i){const e=t[i]-t[i-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),s[i]=s[i-1]+n}const o=new Array(s[r]);for(let i=0;i<r;++i){const n=t[i];let a=s[i];if(this.nGramWidths.forEach((r=>{const s=t[i+1]-t[i],c=this.getNumNGrams(s,r);this.createNGrams(e,n,o,a,c,r),a+=c})),this.preserveShort&&a===s[i]){const r=t[i+1]-t[i];if(0===r)continue;const s=r+2*this.padWidth,c=1;this.createNGrams(e,n,o,a,c,s)}}return[o,s]}}function c_(e,t,n,a,r,s,o,i){return new i_(n,a,r,s,o,i).compute(e,t)}const l_={kernelName:Vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:h}=t,d=n.data.get(u.dataId).values,p=n.data.get(h.dataId).values,[f,m]=c_(d,p,r,s,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function u_(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return void(n&&0===e.length||a.push(e))}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(r,s);n&&0===t.length||a.push(t),r=s+1}}function h_(e,t,n){const a=e.length,r=[];let s=0,o=0;const i=new Array(a);for(let d=0;d<a;++d){const a=r.length;u_(e[d],t,n,r);const c=r.length-a;i[d]=c,s+=c,o=Math.max(o,c)}const c=St("int32",2*s),l=new Array(s),u=[a,o];let h=0;for(let d=0;d<a;++d)for(let e=0;e<i[d];++e)c[2*h]=d,c[2*h+1]=e,l[h]=r[h],++h;return[c,l,u]}const d_={kernelName:Ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values[0],[l,u,h]=h_(i,c,r),d=u.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function p_(e,t){const n=St("int32",e.length);for(let a=0;a<e.length;++a)n[a]=_s(e[a]).modulo(t).getLowBitsUnsigned();return n}const f_={kernelName:Gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=p_(n.data.get(s.dataId).values,r);return n.makeTensorInfo(s.shape,"int32",o)}},m_=sI(jr,(e=>Math.tan(e))),g_={kernelName:jr,backendName:"cpu",kernelFunc:m_},y_=sI(qr,(e=>Math.tanh(e)));const b_={kernelName:yr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:s}=t,{sliceRank:o,numUpdates:i,sliceSize:c,strides:l,outputSize:u}=rp(0,r,a.shape),h=n.bufferSync(r),d=n.bufferSync(s),p=n.bufferSync(a),f=bA(h,d,a.shape,u,c,i,o,l,p,!1);return n.makeTensorInfo(a.shape,f.dtype,f.values)}};function x_(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=Yi(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];const s=e.locToIndex(n);a.values[r]=e.values[s]}return a}const v_={kernelName:Kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;tI(r,"tile");const o=x_(n.bufferSync(r),s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},w_=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function k_(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;a>n;){if(a-n>600){const r=a-n+1,s=t-n+1,o=Math.log(r),i=.5*Math.exp(2*o/3),c=.5*Math.sqrt(o*i*(r-i)/r)*Math.sign(s-r/2);k_(e,t,Math.max(n,Math.floor(t-s*i/r+c)),Math.min(a,Math.floor(t+(r-s)*i/r+c)))}const r=e[t];let s=n,o=a;for(lt(e,n,t),w_(e[a],r)>0&&lt(e,n,a);s<o;){for(lt(e,s,o),s++,o--;w_(e[s],r)<0;)s+=1;for(;w_(e[o],r)>0;)o-=1}0===w_(e[n],r)?lt(e,n,o):(o+=1,lt(e,o,a)),o<=t&&(n=o+1),t<=o&&(a=o-1)}}function S_(e,t,n,a,r){const s=t[t.length-1],[o,i]=[e.length/s,s],c=kt(n,o*a),l=kt("int32",o*a);for(let h=0;h<o;h++){const t=h*i,n=e.subarray(t,t+i);let s=new Array(n.length);n.forEach(((e,t)=>s[t]={value:e,index:t})),a<s.length&&(k_(s,a),s=s.slice(0,a)),r&&s.sort(w_);const o=h*a,u=c.subarray(o,o+a),d=l.subarray(o,o+a);for(let e=0;e<a;e++)u[e]=s[e].value,d[e]=s[e].index}const u=t.slice();return u[u.length-1]=a,[Yi(u,n,c),Yi(u,"int32",l)]}const N_={kernelName:Xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a;tI(r,"topk");const i=n.data.get(r.dataId).values,[c,l]=S_(i,r.shape,r.dtype,s,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const I_={kernelName:Yr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=n,[u,h,d,p]=r.shape,[f,m]=null!=l?l:[h,d],g=[u,f,m,p],y=_t(r.shape),b=y[0],x=y[1],v=y[2],w=_t(g),k=w[0],S=w[1],N=w[2],I=kt(r.dtype,pt(g));I.fill(c);const T=a.data.get(r.dataId).values,C=a.data.get(s.dataId).values;for(let E=0;E<u;++E){const e=1===s.shape[0]?C:C.subarray(8*E,8*E+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let a=0;a<p;++a){let r;const s=e[6]*n+e[7]*t+1;if(0===s)continue;const l=(e[0]*n+e[1]*t+e[2])/s,u=(e[3]*n+e[4]*t+e[5])/s,p=T_(l,d,i),f=T_(u,h,i);switch(o){case"nearest":r=E_(T,h,d,b,x,v,E,f,p,a,c);break;case"bilinear":r=R_(T,h,d,b,x,v,E,f,p,a,c);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(o))}I[E*k+t*S+n*N+a]=r}return a.makeTensorInfo(g,r.dtype,I)}return{dataId:a.write(I,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function T_(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return it(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return it(0,n,t-1)}(e,t);case"nearest":return function(e,t){return it(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function C_(e,t,n,a,r,s,o,i,c,l,u){return 0<=i&&i<t&&0<=c&&c<n?e[o*a+i*r+c*s+l]:u}function E_(e,t,n,a,r,s,o,i,c,l,u){return C_(e,t,n,a,r,s,o,Math.round(i),Math.round(c),l,u)}function R_(e,t,n,a,r,s,o,i,c,l,u){const h=Math.floor(i),d=Math.floor(c),p=h+1,f=d+1;return(p-i)*((f-c)*C_(e,t,n,a,r,s,o,h,d,l,u)+(c-d)*C_(e,t,n,a,r,s,o,h,f,l,u))+(i-h)*((f-c)*C_(e,t,n,a,r,s,o,p,d,l,u)+(c-d)*C_(e,t,n,a,r,s,o,p,f,l,u))}function A_(e,t,n,a){const r=vt(t,n)[0],s=[1,n[0],1];for(let f=0;f<r;f++)s[0]*=n[f];s[1]=n[r];for(let f=r+1;f<n.length;f++)s[2]*=n[f];const o=new Map,i=new Int32Array(n[r]),c=new Qs(s,a,e),l=[],u=1===s[0]&&1===s[2];for(let f=0;f<n[r];f++){let t;if(u)t=e[f].toString();else{const e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(c.get(t,f,n));t=e.join(",")}const n=o.get(t);if(null!=n)i[f]=n;else{const e=o.size;o.set(t,e),i[f]=e,l.push(f)}}const h=s.slice();h[1]=o.size;const d=new Qs(h,a);l.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)d.set(c.get(n,e,a),n,t,a)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:i}}const __={kernelName:Zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;tI(s,"unique");const o=a.data.get(s.dataId).values,{outputValues:i,outputShape:c,indices:l}=A_(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const F_={kernelName:Jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r.shape.length,i=r.shape[s],c=new Array(o-1);let l=0;for(let p=0;p<o;p++)p!==s&&(c[l++]=r.shape[p]);const u=new Array(o).fill(0),h=r.shape.slice();h[s]=1;const d=new Array(i);for(let p=0;p<d.length;p++){u[s]=p;const e=NT({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});d[p]=BI({inputs:{x:e},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(e)}return d}};const D_={kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:o}=a;tI(r,"unsortedSegmentSum");const i=[],c=[],l=r.shape.length-s.shape.length;let u=s;for(let d=0;d<l;++d){const e=PC({inputs:{input:u},backend:n,attrs:{dim:d+1}});u=e,c.push(e)}for(let d=0;d<o;++d){const e=Fs(d,"int32"),t=n.makeTensorInfo([],"int32",e),a=IC({inputs:{a:t,b:u},backend:n}),s=_I({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),o=bC({inputs:{a:s,b:r},backend:n}),l=vC({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});i.push(l),c.push(t),c.push(a),c.push(s),c.push(o),c.push(l)}const h=MR({inputs:i,backend:n,attrs:{axis:0}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},O_=[GI,jI,KI,YI,PI,QI,eT,tT,nT,aT,sT,iT,lT,dT,fT,bT,xT,vT,wT,UI,kT,TT,RT,FT,DT,FI,LT,PT,TI,BT,HT,qT,KT,XT,YT,QT,ZT,$T,tC,nC,aC,rC,sC,oC,cC,lC,uC,hC,dC,pC,fC,mC,kC,cI,SC,TC,OC,zC,BC,UC,$C,tE,nE,sE,cE,lE,uE,dE,fE,yE,vE,uI,wE,UT,SE,IE,CE,dI,AE,DE,ME,PE,WE,GE,jE,XE,YE,QE,$E,nR,aR,rR,sR,oR,iR,cR,lR,dR,pR,gR,xR,xC,wR,SR,IR,CR,AR,_R,OR,LR,zR,WR,gI,UR,KR,QR,nA,rA,RI,jC,oA,bI,vI,WI,iA,cA,lA,uA,hA,dA,fA,yA,xA,kA,SA,CA,SI,RA,_A,DA,IT,bR,LA,zA,BA,VA,GA,HA,jA,qA,YA,QA,$A,n_,r_,o_,l_,d_,f_,YC,wC,g_,{kernelName:qr,backendName:"cpu",kernelFunc:y_},b_,v_,N_,I_,$I,__,F_,D_,DR];for(const n of O_)fs(n);const M_={},L_={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function z_(e,t){if(!(e in M_)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(Ht().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete M_[e]}),!1),Ht().getBool("SOFTWARE_WEBGL_ENABLED")&&(L_.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",L_)||n.getContext("experimental-webgl",L_);return n.getContext("webgl2",L_)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;M_[e]=n}const n=M_[e];return null==n||n.isContextLost()?(delete M_[e],z_(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),M_[e])}var P_,B_,W_;function V_(e,t){return[t,e]}function U_(e){const t=pt(e);return gt(Math.ceil(t/4))}function G_(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function H_(e,t){const n=e;let a,r,s,o,i,c,l,u,h,d;return 2===Ht().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,s=n.RGBA16F,o=n.RGBA32F,i=n.RED,l=4,u=1,h=n.HALF_FLOAT,d=n.FLOAT,c=n.RGBA8):(a=e.RGBA,r=e.RGBA,s=e.RGBA,o=n.RGBA,i=e.RGBA,l=4,u=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,c=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}function j_(e,t){const n=t();return Ht().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(t)}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(P_||(P_={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(B_||(B_={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(W_||(W_={}));function q_(e){return!!(Ht().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function K_(e,t){return nF(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const X_=/ERROR: [0-9]+:([0-9]+):/g;function Y_(e,t){const n=X_.exec(t);if(null==n)return console.log("Couldn't parse line number in error: ".concat(t)),void console.log(e);const a=+n[1],r=e.split("\n"),s=r.length.toString().length+2,o=r.map(((e,t)=>yt((t+1).toString(),s)+e));let i=0;for(let h=0;h<o.length;h++)i=Math.max(o[h].length,i);const c=o.slice(0,a-1),l=o.slice(a-1,a),u=o.slice(a);console.log(c.join("\n")),console.log(t.split("\n")[0]),console.log("%c ".concat(yt(l[0],i)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join("\n"))}function Q_(e,t){if(j_(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Z_(e,t,n,a,r,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(j_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),j_(e,(()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,s,o))),j_(e,(()=>e.enableVertexAttribArray(i))),!0)}function J_(e,t,n,a){j_(e,(()=>function(e,t,n){aF(e,n),j_(e,(()=>e.activeTexture(e.TEXTURE0+n))),j_(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),j_(e,(()=>e.uniform1i(n,a)))}function $_(e,t,n){j_(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),j_(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function eF(e,t){j_(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),j_(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function tF(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(t)}}(e,t))}function nF(e,t,n){const a=j_(e,(()=>t()));if(null==a)throw new Error(n);return a}function aF(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){const e="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(e,"."))}}function rF(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return pt(e.slice(0,e.length-t))}function sF(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function oF(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[rF(e),...sF(e)]),t}function iF(e){return e%2===0}function cF(e,t){if(ft(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if(iF(n)&&iF(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&iF(e[0])&&iF(t[0])}let lF,uF;function hF(e,t){return null!=e.getExtension(t)}function dF(e){try{if(null!=z_(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function pF(e){if(0===e)return!1;const t=z_(e);if(1!==e){if(hF(t,"EXT_color_buffer_float"))return fF(t);const e="EXT_color_buffer_half_float";if(hF(t,e)){const n=t.getExtension(e);return function(e,t){const n=H_(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);const r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!hF(t,"OES_texture_float"))return!1;if(!hF(t,"WEBGL_color_buffer_float"))return!1;return fF(t)}function fF(e){const t=H_(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function mF(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ut("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors ")+"in the WebGL backend."))}))}const gF=Ht();function yF(){let e,t,n,a,r,s,o,i,c,l;return 2===Ht().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",o="out vec4 outputColor;",i=Ht().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:c,defineRound:l}}function bF(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=_t(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(t),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(t):"index -= ".concat(e[r]," * ").concat(t);return"".concat(s,"; ").concat(o,";")})).join("")}function xF(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=_t(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / outShapeStrides[").concat(r,"]"),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * outShapeStrides[").concat(r,"]"):"index -= ".concat(e[r]," * outShapeStrides[").concat(r,"]");return"".concat(s,"; ").concat(o,";")})).join("")}function vF(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=function(e,t){const n=e.length,a=e.map((e=>"".concat(t,"[").concat(e,"]"))),r=new Array(n-1);r[n-2]=a[n-1];for(let s=n-3;s>=0;--s)r[s]="(".concat(r[s+1]," * ").concat(a[s+1],")");return r}(e.map(((e,t)=>t)),t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(a[r]),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(a[r]):"index -= ".concat(e[r]," * ").concat(a[r]);return"".concat(s,"; ").concat(o,";")})).join("")}function wF(e){const t=_t(e).map((e=>e.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(t[0]," + coords.y * ").concat(t[1]," + coords.z;\n  }\n")}gF.registerFlag("HAS_WEBGL",(()=>gF.getNumber("WEBGL_VERSION")>0)),gF.registerFlag("WEBGL_VERSION",(()=>dF(2)?2:dF(1)?1:0)),gF.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),gF.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===gF.get("WEBGL_VERSION"))),gF.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),gF.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),gF.registerFlag("WEBGL_PACK",(()=>gF.getBool("HAS_WEBGL"))),gF.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>gF.getBool("WEBGL_PACK"))),gF.registerFlag("WEBGL_PACK_CLIP",(()=>gF.getBool("WEBGL_PACK"))),gF.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>gF.getBool("WEBGL_PACK"))),gF.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>gF.getBool("WEBGL_PACK"))),gF.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>gF.getBool("WEBGL_PACK"))),gF.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>gF.getBool("WEBGL_PACK"))),gF.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>gF.getBool("WEBGL_PACK"))),gF.registerFlag("WEBGL_PACK_REDUCE",(()=>gF.getBool("WEBGL_PACK"))),gF.registerFlag("WEBGL_LAZILY_UNPACK",(()=>gF.getBool("WEBGL_PACK"))),gF.registerFlag("WEBGL_CONV_IM2COL",(()=>gF.getBool("WEBGL_PACK"))),gF.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>gF.getBool("WEBGL_PACK"))),gF.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==lF){const t=z_(e);lF=t.getParameter(t.MAX_TEXTURE_SIZE)}return lF}(gF.getNumber("WEBGL_VERSION")))),gF.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==uF){const t=z_(e);uF=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,uF)}(gF.getNumber("WEBGL_VERSION")))),gF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=gF.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=z_(e);return t=hF(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:hF(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),gF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>gF.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Io())),gF.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=z_(e);if(1===e){if(!hF(t,"OES_texture_float"))return!1}else if(!hF(t,"EXT_color_buffer_float"))return!1;return fF(t)}(gF.getNumber("WEBGL_VERSION")))),gF.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!gF.getBool("WEBGL_FORCE_F16_TEXTURES")&&gF.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),gF.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>pF(gF.getNumber("WEBGL_VERSION")))),gF.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=gF.getNumber("WEBGL_VERSION"))&&null!=z_(e).fenceSync;var e})),gF.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>gF.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),gF.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(e,"."))})),gF.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Io()?1:-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(e,"."))})),gF.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),gF.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),gF.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),gF.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),gF.registerFlag("WEBGL_EXP_CONV",(()=>!1)),gF.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>gF.getBool("IS_TEST"))),gF.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),gF.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),gF.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),gF.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const kF="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:SF}=o;function NF(e,t,n){const a=[];if(e.forEach((e=>{const t=pt(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push("uniform float ".concat(e.name).concat(t>1?"[".concat(t,"]"):"",";")):(a.push("uniform sampler2D ".concat(e.name,";")),a.push("uniform int offset".concat(e.name,";"))),n.enableShapeUniforms){const{uniformShape:t}=OF(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push("uniform int ".concat(e.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(e.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(e.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(e.name,"Shape;"))}a.push("uniform ivec2 ".concat(e.name,"TexShape;"))}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push("uniform ".concat(e.type," ").concat(e.name).concat(e.arrayIndex?"[".concat(e.arrayIndex,"]"):"",";"))}));const r=a.join("\n"),s=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?TF(e,a):IF(e,a);const s=e.shapeInfo.logicalShape,o=t.logicalShape;s.length<=o.length&&(r+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=SF(e.shapeInfo.logicalShape,t.logicalShape),c=DF(o),l=o-s;let u;const h=["x","y","z","w","u","v"];u=0===s?"":o<2&&i.length>=1?"coords = 0;":i.map((e=>"coords.".concat(h[e+l]," = 0;"))).join("\n");let d="";d=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(h[t+l]))).join(", ");let p="return outputValue;";const f=1===pt(e.shapeInfo.logicalShape),m=pt(t.logicalShape),g=1===m;if(1!==s||f||g){if(f&&!g)p=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=s-2,t=s-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?p="return vec4(outputValue.x);":i.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(r,"() {\n      ").concat(c," coords = getOutputCoords();\n      ").concat(u,"\n      vec4 outputValue = get").concat(a,"(").concat(d,");\n      ").concat(p,"\n    }\n  ")}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===c&&null==e.shapeInfo.flatOffset&&ft(o,s))return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const l=DF(c),u=SF(e.shapeInfo.logicalShape,t.logicalShape),h=c-i;let d;const p=["x","y","z","w","u","v"];d=0===i?"":c<2&&u.length>=1?"coords = 0;":u.map((e=>"coords.".concat(p[e+h]," = 0;"))).join("\n");let f="";f=c<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(p[t+h]))).join(", ");return"\n    float ".concat(r,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(d,"\n      return get").concat(a,"(").concat(f,");\n    }\n  ")}(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,i=yF(),c=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(e.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(i);let l,u,h=function(e){const t="".concat(e.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(e.varyingFs," vec2 resultUV;\n    ").concat(e.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(e.defineSpecialNaN,"\n    ").concat(e.defineSpecialInf,"\n    ").concat(e.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(CF,"\n    ").concat(EF,"\n    ").concat(RF,"\n  ");return t}(i);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ft(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let o=s,i="",c="b, r, c";for(let l=2;l<e.length-1;l++)o*=e[e.length-l-1],i="\n      int b".concat(l," = index / ").concat(o,";\n      index -= b").concat(l," * ").concat(o,";\n    ")+i,c="b".concat(l,", ")+c;return"\n    ivec".concat(e.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec").concat(e.length,"(").concat(c,");\n    }\n  ")}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),u=function(e){return"\n    void setOutput(vec4 val) {\n      ".concat(e.output," = val;\n    }\n  ")}(i)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(t[1],".0);\n      }\n    ");if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(t[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      return resTexRC.x * ").concat(t[1]," + resTexRC.y;\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){if(ft(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(t[0],", ").concat(t[1],"));\n      }\n    ");if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      int r = index / ").concat(e[1],";\n      int c = index - r * ").concat(e[1],";\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n){const t=xF(["r","c","d"],e);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(t,"\n    return ivec3(r, c, d);\n  }\n")}const a=bF(["r","c","d"],e);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,t,n);case 4:return function(e,t,n){if(n){const t=xF(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(t,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=bF(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(e,t,n);case 5:return function(e,t){const n=bF(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(t[0],",\n                             ").concat(t[1],"));\n\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(e,t);case 6:return function(e,t){const n=bF(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(e,t);default:throw new Error("".concat(e.length,"-D output sampling is not yet supported"))}}(t.logicalShape,o,n.enableShapeUniforms),u=function(e){return"\n    void setOutput(float val) {\n      ".concat(e.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(i)),n.packedInputs&&(h+=AF);return[h,c,u,r,l,s,n.userCode].join("\n")}function IF(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const o=_F(n);if(t)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=e.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(FF(e),"\n      }\n    ");const r=e.shapeInfo.texShape,s=r[0],o=r[1];if(1===o&&1===s)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=_F(n);if(1===o)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(s,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===s)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(t)return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(s,", ").concat(o,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape;if(null!=s&&ft(n,s)){if(t)return"\n      float ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const e=s[0],n=s[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(e,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:o,keptDims:i}=wt(n),c=o;if(c.length<n.length){const n=MF(e,c),a=["row","col"];return"\n      ".concat(IF(n,t),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(LF(a,i),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(FF(e),"\n      }\n    ");const l=s[0],u=s[1],h=_F(a);if(1===u)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(l,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(1===l)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(u,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(t)return"\n      float ".concat(r,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(h,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");return"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(h,";\n    vec2 uv = uvFromFlat(").concat(l,", ").concat(u,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],o=n[2],{newShape:i,keptDims:c}=wt(n),l=i;if(l.length<n.length){const n=MF(e,l),a=["row","col","depth"];return"\n        ".concat(IF(n,t),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(LF(a,c),");\n        }\n      ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(s,", ").concat(o,", 1)));\n        ").concat(FF(e),"\n      }\n    ");const u=e.shapeInfo.texShape,h=u[0],d=u[1],p=e.shapeInfo.flatOffset;if(d===s&&null==p)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(o,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(d,".0, ").concat(h,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(d===o&&null==p)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(d,".0, ").concat(h,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const f=_F(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    ");return"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(s," + col * ").concat(o," + depth + ").concat(f,";\n        vec2 uv = uvFromFlat(").concat(h,", ").concat(d,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],o=n[2]*s,i=n[1]*o,{newShape:c,keptDims:l}=wt(n);if(c.length<n.length){const n=MF(e,c),a=["row","col","depth","depth2"];return"\n      ".concat(IF(n,t),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(LF(a,l),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(i,", ").concat(o,", ").concat(s,", 1)));\n        ").concat(FF(e),"\n      }\n    ");const u=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f="int stride2 = ".concat(a,"Shape[3];"),m="int stride1 = ".concat(a,"Shape[2] * stride2;"),g="int stride0 = ".concat(a,"Shape[1] * stride1;");if(p===i&&null==u)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        ").concat(f,"\n        ").concat(m,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(o,", ").concat(s,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(p===s&&null==u)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const y=_F(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(f,"\n      ").concat(m,"\n      ").concat(g,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," +\n          depth * ").concat(s," + depth2;\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,o=t[2]*s,i=t[1]*o,{newShape:c,keptDims:l}=wt(t);if(c.length<t.length){const t=MF(e,c),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(IF(t),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(LF(n,l),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(i,", ").concat(o,", ").concat(s,", ").concat(r,")) +\n          depth3;\n        ").concat(FF(e),"\n      }\n    ");const u=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(o,", ").concat(s,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(p===r&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3],",\n               ").concat(t[2]*t[3],", ").concat(t[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const f=_F(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," + depth * ").concat(s," +\n          depth2 * ").concat(r," + depth3 + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=wt(t);if(r.length<t.length){const t=MF(e,r),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(IF(t),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(LF(n,s),");\n      }\n    ")}const o=t[5],i=t[4]*o,c=t[3]*i,l=t[2]*c,u=t[1]*l;if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(u,", ").concat(l,", ").concat(c,", ").concat(i,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(o,", 1)));\n        ").concat(FF(e),"\n      }\n    ");const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===u&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(l,", ").concat(c,", ").concat(i,", ").concat(o,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===o&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3]*t[4],",\n               ").concat(t[2]*t[3]*t[4],",\n               ").concat(t[3]*t[4],",\n               ").concat(t[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=_F(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(u," + col * ").concat(l," + depth * ").concat(c," +\n          depth2 * ").concat(i," + depth3 * ").concat(o," + depth4 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function TF(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=yF();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(t,", halfCR);\n    }\n  ")}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=yF();if(t)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(o[0],", ").concat(o[1],", index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=s[0],i=s[1],c=yF();if(null!=s&&ft(n,s))return t?"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(i,".0, ").concat(o,".0);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    ");if(t)return"\n    vec4 ".concat(r,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ");const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],u=Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(u,", ").concat(l[0],", ").concat(l[1],", row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const a=[1,2],s=MF(e,n.slice(1)),o=["b","row","col"];return"\n        ".concat(TF(s,t),"\n        vec4 ").concat(r,"(int b, int row, int col) {\n          return ").concat(r,"(").concat(LF(o,a),");\n        }\n      ")}const i=yF();if(t)return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=o[0],l=o[1],u=Math.ceil(n[2]/2),h=u*Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(l,", ").concat(h,", ").concat(u,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=yF();if(t)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const s=e.shapeInfo.logicalShape,o=s.length,i=e.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],h=Math.ceil(s[o-1]/2);let d=h*Math.ceil(s[o-2]/2),p="int b, int row, int col",f="b * ".concat(d," + (row / 2) * ").concat(h," + (col / 2)");for(let m=2;m<o-1;m++)p="int b".concat(m,", ")+p,d*=s[o-m-1],f="b".concat(m," * ").concat(d," + ")+f;return"\n    vec4 ".concat(a,"(").concat(p,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(u,";\n      int texC = index - texR * ").concat(u,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(u,", ").concat(l,");\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t)}}const CF="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",EF="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",RF="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",AF="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function _F(e){return"offset".concat(e)}function FF(e){const t=e.name,n=pt(e.shapeInfo.logicalShape);return n<2?"return ".concat(t,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(t,"[i];\n      }\n    }\n  ")}function DF(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function OF(e,t,n){const{newShape:a,keptDims:r}=wt(t),s=t.length,o=e&&3===s&&1===t[0],i=o?t.slice(1):a,c=!e&&s>1&&!ft(t,n)&&a.length<s||o;return{useSqueezeShape:c,uniformShape:c?i:t,keptDims:r}}function MF(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function LF(e,t){return t.map((t=>e[t])).join(", ")}function zF(e,t,n,a){const r=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),s=r.map((e=>e.shapeInfo)),o={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},i=NF(r,o,t),c=function(e,t){const n=nF(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(j_(e,(()=>e.shaderSource(n,t))),j_(e,(()=>e.compileShader(n))),Ht().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw Y_(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,i),l=e.createProgram(c);return Ht().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:o},PF(e,t,l)))}function PF(e,t,n){const a=[],r=[];let s,o,i,c=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===Ht().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const u=!1;for(const h of t.variableNames){const r={name:h,uniform:e.getUniformLocation(n,h,u),offset:e.getUniformLocation(n,"offset".concat(h),u)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,"".concat(h,"Shape"),u),r.texShape=e.getUniformLocation(n,"".concat(h,"TexShape"),u)),a.push(r)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",u),i=e.getUniformLocation(n,"outShapeStrides",u),o=e.getUniformLocation(n,"outTexShape",u)),t.customUniforms)for(const h of t.customUniforms)r.push(e.getUniformLocation(n,h.name,u));return{variablesLocations:a,customUniformLocations:r,infLoc:c,nanLoc:l,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}}function BF(e,t){if(e.length!==t.length)throw Error("Binary was compiled with ".concat(e.length," inputs, but ")+"was executed with ".concat(t.length," inputs"));e.forEach(((e,n)=>{const a=e.logicalShape,r=t[n],s=r.shape;if(!ft(a,s))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(s," must match"));if(e.isUniform&&r.isUniform)return;const o=e.texShape,i=r.isUniform?null:r.texData.texShape;if(!ft(o,i))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(o," and ").concat(i," must match"))}))}function WF(e){return Ht().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class VF{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=P_.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=yF();this.outputShape=e,this.enableShapeUniforms=WF(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?xF(["r","c","d"],e):bF(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class UF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=P_.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=yF();this.outputShape=e,this.enableShapeUniforms=WF(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?xF(["r","c","d"],e):bF(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class GF{constructor(e){this.variableNames=["A"],this.outTexUsage=B_.DOWNLOAD;const t=yF();this.outputShape=e,this.userCode="\n      ".concat(kF,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}class HF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=B_.DOWNLOAD;const t=yF();this.outputShape=e,this.userCode="\n      ".concat(kF,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}const jF={R:0,G:1,B:2,A:3};class qF{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=yF();this.outputShape=e,this.enableShapeUniforms=WF(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let s="";for(let o=0;o<n.length;o++){const e=n[o];s+="\n          if(offset == ".concat(o,") {\n            result = values[").concat(jF[e],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":wF(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(s,"\n        }\n        ").concat(a.output," = vec4(").concat(r,", 0., 0., 0.);\n      }\n    ")}}class KF{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=yF();this.outputShape=e,this.enableShapeUniforms=WF(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const r=2*s+t;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(t," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(e[2]),") {\n          localCoords[2] += ").concat(t,";\n          if (localCoords[1] + ").concat(s," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(e[1]),") {\n            localCoords[1] += ").concat(s,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(r,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(r,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(r,"] = values[2];\n            } else {\n              result[").concat(r,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":wF(e),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(r,";\n        }\n    ")}}function XF(e){const t=yF();return function(e,t){const n=nF(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(j_(e,(()=>e.shaderSource(n,t))),j_(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,"".concat(t.version,"\n    precision highp float;\n    ").concat(t.attribute," vec3 clipSpacePos;\n    ").concat(t.attribute," vec2 uv;\n    ").concat(t.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function YF(e){return function(e,t){const n=nF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return j_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),j_(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function QF(e){return function(e,t){const n=nF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return j_(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),j_(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function ZF(e,t,n,a,r,s){!function(e,t){const n=Ht().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n="[".concat(e,"x").concat(t,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const a="[".concat(e,"x").concat(t,"]"),r="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}(t,n);const o=function(e){return nF(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),i=e.TEXTURE_2D;return j_(e,(()=>e.bindTexture(i,o))),j_(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),j_(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),j_(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),j_(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Ht().getNumber("WEBGL_VERSION")?j_(e,(()=>e.texImage2D(i,0,a,t,n,0,r,s,null))):j_(e,(()=>e.texStorage2D(i,1,a,t,n))),j_(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function JF(e){return e.internalFormatFloat}function $F(e){return e.internalFormatHalfFloat}function eD(e){return e.downloadTextureFormat}function tD(e){return e.internalFormatPackedFloat}function nD(e){return e.internalFormatPackedHalfFloat}function aD(e,t,n,a,r,s,o,i){const c=e,l=new Float32Array(function(e,t){const[n,a]=G_(e,t);return n*a*4}(s,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}class rD{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Ht().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){M_[e]=t}(t,e)):this.gl=z_(t),e=this.gl,2===Ht().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>j_(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>j_(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>j_(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>j_(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>j_(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>j_(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>j_(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>j_(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Ht().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=K_(this.gl,e),hF(this.gl,t))this.textureHalfFloatExtension=K_(this.gl,t);else if(Ht().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),hF(this.gl,a))this.colorBufferHalfFloatExtension=K_(this.gl,a);else if(Ht().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",hF(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!hF(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=YF(this.gl),this.indexBuffer=QF(this.gl),this.framebuffer=function(e){return nF(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=H_(this.gl,this.textureHalfFloatExtension)}get debug(){return Ht().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;j_(e,(()=>e.finish())),j_(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),j_(e,(()=>e.deleteFramebuffer(this.framebuffer))),j_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),j_(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),j_(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=V_(t,n);return ZF(e,r,s,JF(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=V_(t,n);return ZF(e,r,s,$F(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=V_(t,n);return ZF(e,r,s,eD(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){j_(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Ht().getNumber("WEBGL_VERSION")?j_(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):j_(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Ht().getNumber("WEBGL_VERSION")?j_(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):j_(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),j_(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,r,s){let o,i,c;j_(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(o=new Uint8Array(n*a*4),i=e.UNSIGNED_BYTE,c=e.RGBA):(o=new Float32Array(n*a*4),i=e.FLOAT,c=s.internalFormatPackedFloat),o.set(r),2===Ht().getNumber("WEBGL_VERSION")?j_(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,i,o))):j_(e,(()=>e.texImage2D(e.TEXTURE_2D,0,c,n,a,0,e.RGBA,i,o))),j_(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=G_(t,n);return ZF(e,r,s,nD(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=G_(t,n);return ZF(e,r,s,tD(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(eF(this.gl,this.framebuffer),this.outputTexture=null),j_(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[r,s]=V_(t,n),o=new Uint8Array(t*n*4);return j_(e,(()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return aD(this.gl,e,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n,a){const r=e.createBuffer();j_(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const s=16*t*n;return j_(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),j_(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),j_(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ht().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else Ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return j_(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=XF(t));const n=function(e){return nF(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);j_(t,(()=>t.attachShader(n,this.vertexShader))),j_(t,(()=>t.attachShader(n,e))),function(e,t){if(j_(e,(()=>e.linkProgram(t))),!Ht().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&Q_(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;j_(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){j_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),Z_(e,t,"clipSpacePos",n,3,20,0)&&Z_(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(j_(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&Q_(this.gl,this.program),j_(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return nF(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),j_(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),J_(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,r]=G_(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Q_(this.gl,this.program),tF(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}j_(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),j_(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=K_(this.gl,2===Ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await bt((()=>this.disposed||this.isQueryAvailable(e,Ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Ht().platform&&(n=Ht().platform.setTimeoutCustom.bind(Ht().platform)),bt((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),$_(this.gl,e,this.framebuffer),this.debug&&tF(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?($_(this.gl,this.outputTexture,this.framebuffer),this.debug&&tF(this.gl)):eF(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;$_(a,e,this.framebuffer),this.debug&&tF(a),this.outputTexture=e,j_(a,(()=>a.viewport(0,0,t,n))),j_(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),j_(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:sD,XI:oD,Nk:iD,f6:cD,ct:lD,YG:uD,hH:hD,z3:dD,sG:pD,uM:fD,vS:mD,qB:gD,GG:yD,rq:bD,lg:xD,WR:vD,cu:wD,GE:kD,px:SD,jC:ND,He:ID,hE:TD,BF:CD,Dk:ED,cl:RD,_B:AD,ub:_D,_f:FD,Ku:DD,qy:OD,Zy:MD,bu:LD,zv:zD,dH:PD,HS:BD,yH:WD,l3:VD,z9:UD,x6:GD,_m:HD,eW:jD,GK:qD,SP:KD,yr:XD,dl:YD,Dw:QD,xT:ZD,_X:JD,wz:$D}=C;function eO(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>"".concat(e,".").concat(t)))}function tO(e,t){return 1===t?[e]:eO(e,t)}class nO{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=WF(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=tO("rc",this.rank),t=DF(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode="\n        void main() {\n          ".concat(t," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(r,"));\n          }\n        }\n      ")}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let t=2;t<this.rank;t++)r="".concat(e[e.length-1-t],",")+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+="".concat(e[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(t[0],";\n      int c = ").concat(t[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(e," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(t[0],"),\n            cEdge ? 0. : getA(").concat(t[1],"),\n            rEdge ? 0. : getA(").concat(t[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(t[3],")")}}class aO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=WF(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+="\n        ".concat(e,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(e,t){const n=t?vF(["r","c","d"],"inputShape"):bF(["r","c","d"],e);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":wF(e),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":e[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":e[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class rO{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=oO(t,n),r=iO(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const s=sO(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let o;return a===W_.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===W_.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===W_.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===W_.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===W_.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const r=oO(n,a),s=iO(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);const o=sO(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),i=Ht().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const c=this.usedTextures[s],l=c&&c.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[l]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(e,")"));const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*t),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function sO(e,t,n,a,r){const s=function(e,t){switch(e){case W_.PACKED_2X2_FLOAT32:return tD(t);case W_.PACKED_2X2_FLOAT16:return nD(t);case W_.UNPACKED_FLOAT32:return JF(t);case W_.UNPACKED_FLOAT16:return $F(t);case W_.PACKED_4X1_UNSIGNED_BYTE:return eD(t);default:throw new Error("Unknown physical texture type ".concat(e))}}(t,a);let o;if(r){const[t,n]=G_(e[0],e[1]);o=t*n}else{const[t,n]=V_(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(t))}(n,s);return o*i}function oO(e,t){if(e===B_.UPLOAD)return W_.PACKED_2X2_FLOAT32;if(e===B_.RENDER||null==e)return function(e){return Ht().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?W_.PACKED_2X2_FLOAT32:W_.UNPACKED_FLOAT32:e?W_.PACKED_2X2_FLOAT16:W_.UNPACKED_FLOAT16}(t);if(e===B_.DOWNLOAD||e===B_.PIXELS)return W_.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(e))}function iO(e,t,n){return"".concat(e[0],"_").concat(e[1],"_").concat(t,"_").concat(n)}class cO{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=WF(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const lO="if (isnan(x)) return x;",uO="return x;",hO="return abs(x);";const dO="return (x >= 0.0) ? x : (exp(x) - 1.0);",pO=lO+"\n  return (x < 0.0) ? 0.0 : x;\n",fO=lO+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",mO="return x;",gO="return 1.0 / (1.0 + exp(-1.0 * x));",yO="return x;",bO="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",xO="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",vO="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",wO="return 1.0 / (1.0 + exp(-1.0 * x));";class kO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=WF(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class SO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=WF(this.outputShape.length);const t=e.length,n=tO("rc",t),a=DF(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":"vec2(".concat(s.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(r,");\n\n        setOutput(getChannel(packedInput, ").concat(o,"));\n      }\n    ")}}const NO=pp,IO={};const TO=Ht().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class CO extends rt{nextDataId(){return CO.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Ht().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof rD)t=e;else{const n=z_(Ht().getNumber("WEBGL_VERSION"),e);t=new rD(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=z_(Ht().getNumber("WEBGL_VERSION"));t=new rD(e),this.binaryCache=((n=Ht().getNumber("WEBGL_VERSION"))in IO||(IO[n]={}),IO[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new rO(this.gpgpu),this.numMBBeforeWarning=null==Ht().global.screen?1024:Ht().global.screen.height*Ht().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new at(this,Wo())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,s){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[a,r]},i.texShape=[a,r];const c=oF(t),l=new qF(c,!1,s),u=this.runWebGLProgram(l,[o],n,[[a,r]]);return u.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),u.dataId}write(e,t,n){if((Ht().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ht().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:B_.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,r){if(Ht().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:B_.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:o,isPacked:i}=t;if(null!=s){let t;t=i?new kO(o,mO):new cO(o,mO);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const c=null!=this.activeTimers;let l,u;if(c&&(l=Os()),"complex64"===a){u=pm(this.readSync(r.real.dataId),this.readSync(r.imag.dataId))}else u=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=Os()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:o,isPacked:i}=t;if(null!=r){let t;t=i?new kO(a,mO):new cO(a,mO);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(Ht().getBool("DEBUG")&&!Ht().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ht().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,u=null;if("complex64"!==s&&Ht().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const t=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(t.texture.texture,...U_(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);l=pm(e[0],e[1])}else if(null==u)l=this.getValuesFromTexture(e);else{const e=pt(a);l=this.gpgpu.downloadFloat32MatrixFromBuffer(u,e)}if(null!=c&&this.disposeIntermediateTensorInfo(c),null!=u){const e=this.gpgpu.gl;j_(e,(()=>e.deleteBuffer(u)))}const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Wo().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:a,shape:r,slice:s,dtype:o,isPacked:i,texture:c}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=i?new kO(r,mO):new cO(r,mO);const a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:o}],o),s=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),s}if(null==c)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),u=Wo().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:u},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Ls(e)));return Yi(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Yi(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!q_(n)){if(Ht().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=pt(t);if(Ht().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...U_(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}const s=Ht().getBool("WEBGL_PACK")&&!0===a,o=s?oF(t):t,i=s?new HF(o):new GF(o),c=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),l=this.texData.get(c.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),u}timerAvailable(){return Ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=Ps(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=Ps(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);o.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>"".concat(e.name,": ").concat(e.ms))).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Os(),endMs:null}}endTimer(e){return Ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Os(),e)}async getQueryTime(e){if(Ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:TO;return Ht().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&pt(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){is("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return NO(e.shape,t)}packedUnaryOp(e,t,n){const a=new kO(e.shape,t),r=this.compileAndRun(a,[e],n);return Wo().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=PD(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ht().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,hO,e.dtype);const t=new cO(e.shape,hO),n=this.compileAndRun(t,[e]);return Wo().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&Tt(n[0])){const r=n.map((e=>Ms(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return Wo().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new SO(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new nO(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[rF(e.shape),...sF(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[rF(t),...sF(t)],s=new aO(r,n),o=[n],i=this.runWebGLProgram(s,[a],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:r,dtype:s}=n;if(null!=t){ut(pt(r)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=oF(r);let i;i=a?new UF(o):new VF(o);const c=[null!=t?t:U_(o)];return{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,c,!0,t).dataId}}runWebGLProgram(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0;const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===P_.DENSE){const t=null!=s?s:U_(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===pt(o.shape))return i.values=kt(o.dtype,0),o;const c=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&pt(t.shape)<=Ht().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),c.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!cF(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),c.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const u={shape:o.shape,texData:i,isUniform:!1},h=function(e,t,n){let a="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:o,uniformShape:i,keptDims:c}=OF(e.packedInputs,t.shape,s);let l="",u="",h="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l="".concat(e[0]>1,"_").concat(e[1]>1)}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=_t(i);h="".concat(e[0]===s[1],"_").concat(e[e.length-1]===s[1])}}else u="".concat(i[0]>1,"_").concat(i[1]>1);const d=t.shape.length,p=2===i.length&&ft(t.shape,s),f=1===pt(t.shape),m=wc(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&ft(s,n.texData.texShape),y=e.packedInputs||i.length>2?"":"".concat(s[0]>1,"_").concat(s[1]>1);a+="".concat(d,"_").concat(g,"_").concat(o?c:"","_").concat(i.length,"_").concat(f,"_").concat(m,"_").concat(p,"_").concat(l,"_").concat(u,"_").concat(h,"_").concat(y,"_").concat(r)}else{const e=t.isUniform?"uniform":t.texData.texShape;a+="".concat(t.shape,"_").concat(e,"_").concat(r)}}));const r=e.userCode;let s=e.constructor.name;return s+="_"+a+"_"+r+"".concat(Ht().getNumber("WEBGL_VERSION")),s}(e,l,u),d=this.getAndSaveBinary(h,(()=>zF(this.gpgpu,e,l,u))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),Ht().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(BF(t.inShapeInfos,n),BF([t.outShapeInfo],[a]));const s=a.texData.texture,o=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,o[0],o[1]):e.setOutputMatrixTexture(s.texture,o[0],o[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Ht().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let c=0;c<n.length;++c){const a=n[c],{uniform:r,offset:s,shape:o,texShape:i}=t.variablesLocations[c];if(o){const{uniformShape:n}=OF(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(i&&e.gl.uniform2i(i,a.texData.texShape[0],a.texData.texShape[1]),null!=r)if(a.isUniform)if(pt(a.shape)<2)e.gl.uniform1f(r,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=a.texData.slice&&null!=s&&e.gl.uniform1i(s,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,r,c)}const i=t.outShapeLocation;if(i)switch(a.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=_t(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let c=0;c<t.program.customUniforms.length;++c){const n=t.program.customUniforms[c],a=t.customUniformLocations[c],s=r[c];if("float"===n.type)e.gl.uniform1fv(a,s);else if("vec2"===n.type)e.gl.uniform2fv(a,s);else if("vec3"===n.type)e.gl.uniform3fv(a,s);else if("vec4"===n.type)e.gl.uniform4fv(a,s);else if("int"===n.type)e.gl.uniform1iv(a,s);else if("ivec2"===n.type)e.gl.uniform2iv(a,s);else if("ivec3"===n.type)e.gl.uniform3iv(a,s);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));e.gl.uniform4iv(a,s)}}e.executeProgram()}(this.gpgpu,d,l,u,a),c.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Ht().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Os();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Ht().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===r){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Ht().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Uo((()=>{if(!Ht().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Ht().getBool("DEBUG");Ht().set("DEBUG",!1);const t=this.abs(ic(1e-8)).dataSync()[0];if(Ht().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:o,isPacked:i}=t;if(null!=s)return;const c=null!=this.activeTimers;let l;c&&(l=Os());let u=t.texShape;if(null==u&&(u=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Ht().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=Ht().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&Ht().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?ct(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=wt(e);e=t.newShape}let r=pt(e),s=null;e.length<=1&&r<=n?s=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);const o=null!=s&&Math.max(...s)>a&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||o)if(t){const t=rF(e);let n=2,a=2;e.length&&([n,a]=sF(e)),r=t*(n/2)*(a/2),s=gt(r).map((e=>2*e))}else s=gt(r);return s}(n,i),t.texShape=u),null!=r){const e=oF(n);let s,o=u[1],h=u[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!i&&d||([o,h]=G_(u[0],u[1])),s=i?new KF(e,d):new qF(e,d);const p=d?[h,o]:u,f=this.makeTensorInfo(p,a),m=this.texData.get(f.dataId);m.usage=d?B_.PIXELS:B_.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,h,r);const g=[[h,o]],y=!0,b=this.runWebGLProgram(s,[f],a,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Ht().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),c&&(this.uploadWaitMs+=Os()-l)}else{const e=this.acquireTexture(u,o,a,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype ".concat(t))}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(e," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*It(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Uf(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw Y_(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}=PF(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=s,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:s,channels:o}=e,i=Wo().backend;if(!i.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=i.writeTexture(a,t,n,r,s,o);return Wo().makeTensorFromDataId(c,t,n,i)}}CO.nextDataId=0;To()&&jo("webgl",(()=>new CO),2);const EO="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class RO{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Sc(t,n),this.enableShapeUniforms=WF(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const AO="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class _O{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Sc(t,n);const r=this.outputShape.length;this.enableShapeUniforms=WF(r);let s="";if(a)if(0===r||1===pt(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=DF(r);if(s="\n          ".concat(e," coords = getOutputCoords();\n        "),1===r)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const e=tO("coords",r);this.enableShapeUniforms?s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= outShape[").concat(r," - 2];\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= outShape[").concat(r," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= ").concat(this.outputShape[r-2],";\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= ").concat(this.outputShape[r-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(s,"\n\n        setOutput(result);\n      }\n    ")}}function FO(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const DO={kernelName:ha,backendName:"webgl",kernelFunc:FO};function OO(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),o=n.texData.get(s.dataId),i=FO({inputs:{x:a},backend:n}),c=FO({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:c},s}const MO={kernelName:kn,backendName:"webgl",kernelFunc:OO},LO="return (a < 0.) ? b * a : a;",zO="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const PO={kernelName:ya,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,o=n.makeTensorInfo([],"float32",Fs(s,"float32")),i=Ht().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _O(zO,r.shape,o.shape):new RO(LO,r.shape,o.shape),c=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),c}},BO="return (a < 0.) ? b * a : a;",WO="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const VO={kernelName:Ja,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=Ht().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _O(WO,a.shape,r.shape):new RO(BO,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],"float32")}},UO="if (isnan(x)) return x;";function GO(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=e;return e=>{let{inputs:s,backend:o}=e;const{x:i}=s,c=o,l=r||i.dtype;if(c.shouldExecuteOnCPU([i])&&null!=a){const e=c.texData.get(i.dataId),t=a(e.values,l);return c.makeTensorInfo(i.shape,l,t)}let u;return u=Ht().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new kO(i.shape,n):new cO(i.shape,t),c.runWebGLProgram(u,[i],l)}}function HO(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}=e;return e=>{let{inputs:i,backend:c}=e;const{a:l,b:u}=i,h=c;if(r&&"complex64"===l.dtype){const e=h.texData.get(l.dataId),n=h.texData.get(u.dataId),[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:a.dataId,dtype:a.dtype,shape:u.shape},o=new RO(t,l.shape,u.shape);return h.runWebGLProgram(o,[r,s],lo(n.dtype,a.dtype))})),s=OO({inputs:{real:a,imag:r},backend:h});return h.disposeIntermediateTensorInfo(a),h.disposeIntermediateTensorInfo(r),s}const d=o||lo(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||h.shouldExecuteOnCPU([l,u]))&&null!=s){const e=h.texData.get(l.dataId).values,t=h.texData.get(u.dataId).values,n="string"===l.dtype?Km(e):e,a="string"===l.dtype?Km(t):t,[r,o]=s(l.shape,u.shape,n,a,d),i=h.makeTensorInfo(o,d);return h.texData.get(i.dataId).values=r,i}let p;return p=Ht().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new _O(n,l.shape,u.shape,a):new RO(t,l.shape,u.shape),h.runWebGLProgram(p,[l,u],d)}}function jO(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return t?yO:uO;if("relu"===e)return t?xO:pO;if("elu"===e)return t?bO:dO;if("relu6"===e)return t?vO:fO;if("prelu"===e)return t?WO:BO;if("leakyrelu"===e)return t?zO:LO;if("sigmoid"===e)return t?wO:gO;throw new Error("Activation ".concat(e," has not been implemented for the WebGL backend."))}class qO{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=WF(this.outputShape.length);const l=a?e[1]:e[2],u=Math.ceil(l/2),h=a?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(o,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(o,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(o,"\n        }"),g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b="imod(rc.x, ".concat(e[0],")"):t[0]<e[0]&&(x="imod(rc.x, ".concat(t[0],")")),this.userCode="\n      ".concat(m,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(u,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(b,";\n        int batchB = ").concat(x,";\n        for (int i = 0; i < ").concat(u,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(h,");\n          vec4 b = getMatrixB(batchB, ").concat(d,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(y,"\n\n        ").concat(g,"\n\n        setOutput(result);\n      }\n    ")}}const KO={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class XO{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Sc(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const YO="return a * b;";function QO(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=lo(a.dtype,r.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),s=new XO(KO.REAL,a.shape,r.shape),o=new XO(KO.IMAG,a.shape,r.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],c=n.runWebGLProgram(s,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),u=OO({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([a,r])){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),[o,i]=CD(a.shape,r.shape,e.values,t.values,s),c=n.makeTensorInfo(i,s);return n.texData.get(c.dataId).values=o,c}let o;return o=Ht().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _O(YO,a.shape,r.shape):new RO(YO,a.shape,r.shape),n.runWebGLProgram(o,[a,r],s)}const ZO={kernelName:Va,backendName:"webgl",kernelFunc:QO};function JO(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,o=n,i=pt(r.shape),c=xt(s,i),l=pt(c);ut(i===l,(()=>"The new shape (".concat(c,") has ").concat(l," elements and the old ")+"shape (".concat(r.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."));const u=o.texData.get(r.dataId);return!u.isPacked||cF(r.shape,c)||null!==u.texture&&cF(u.shape,c)?(o.incRef(r.dataId),{dataId:r.dataId,shape:c,dtype:r.dtype}):function(e,t,n){const a=[rF(e.shape),...sF(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[rF(t),...sF(t)],o=new aO(s,a),i=[a],c=n.runWebGLProgram(o,[r],e.dtype,i,!0);return{dataId:c.dataId,shape:t,dtype:c.dtype}}(r,c,o)}const $O={kernelName:ir,backendName:"webgl",kernelFunc:JO};class eM{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];const o=4*Math.floor(n/4),i=n%4;let c="sumValue += dot(values, ones);";if(null!=t){const e=1/t;c="sumValue += dot(values * ".concat(mt(e)?e.toPrecision(2):e,", ones);")}let l="";r%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(o,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(c,"\n        }\n\n        int inIdx = inOffset + ").concat(o,";\n        if (").concat(1===i,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(2===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(3===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(c,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class tM{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let c="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?c="sumValue":"prod"===t?c="prodValue":"all"===t?c="allValue":"any"===t&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let h="\n      if (".concat("sum"===t,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===t,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===t," || ").concat("max"===t,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),d="vec4";"all"===t?(o="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(o="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(o,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(o,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(h,"\n        }\n\n        int inIdx = inOffset + ").concat(l,";\n        if (").concat(1===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(2===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(3===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(h,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function nM(e,t,n,a){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=Zf(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let s=e;for(let o=0;o<r.length;o++){const{inSize:i,windowSize:c,outSize:l}=r[o];let u,h;u="mean"===n?0===o?new eM({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},i):new eM({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l}):new tM({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},n),h=s,s=a.runWebGLProgram(u,[s],t),h.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(h)}return s}class aM{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const a=DF(this.rank),r=function(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}(t);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(r,"));\n    }\n    ")}}class rM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=DF(this.rank),r=eO("rc",this.rank),s=new Array(this.rank);for(let l=0;l<t.length;l++)s[t[l]]=r[l];const o="vec2(".concat(s.slice(-2).join(),")"),i="++".concat(r[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(s.join(),"), ").concat(o,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(r[this.rank-1],";\n      if(++").concat(r[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function sM(e,t,n){const a=Ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rM(e.shape,t):new aM(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function oM(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;return function(e,t,n,a){const r=t,s=e.shape.length,o=vt(r,e.shape);let i=o;const c=ju(i,s),l=null!=c;let u=e;l&&(u=sM(e,c,a),i=Ku(i.length,s)),Hu("sum",i,s);const[h,d]=Uu(u.shape,i);let p=h;n&&(p=Gu(h,o));const f=pt(d),m=JO({inputs:{x:u},attrs:{shape:[pt(e.shape)/f,f]},backend:a}),g=nM(m,uo(e.dtype),"sum",a),y=JO({inputs:{x:g},attrs:{shape:p},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),l&&a.disposeIntermediateTensorInfo(u),y}(r,s,o,n)}const iM={kernelName:Er,backendName:"webgl",kernelFunc:oM};function cM(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,o=n,i=r.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=r.shape[s[u]];let l;if(o.shouldExecuteOnCPU([r])){const e=o.texData.get(r.dataId).values,t=JD(e,r.shape,r.dtype,s,c);l=o.makeTensorInfo(c,r.dtype);o.texData.get(l.dataId).values=t}else l=sM(r,s,o);return l}const lM={kernelName:Qr,backendName:"webgl",kernelFunc:cM},uM=1e3;function hM(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=e;const u=t.shape.length,h=n.shape.length,d=a?t.shape[u-2]:t.shape[u-1],p=r?n.shape[h-1]:n.shape[h-2],f=a?t.shape[u-1]:t.shape[u-2],m=r?n.shape[h-2]:n.shape[h-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=pt(g),x=pt(y),v=Sc(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);ut(d===p,(()=>"Error in matMul: inner shapes (".concat(d,") and (")+"".concat(p,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const w=a?[b,d,f]:[b,f,d],k=r?[x,m,p]:[x,p,m],S=JO({inputs:{x:t},backend:s,attrs:{shape:w}}),N=JO({inputs:{x:n},backend:s,attrs:{shape:k}}),I=[S,N],T=Math.max(b,x),C=a?S.shape[1]:S.shape[2],E=null!=o,R=null!=i,A="leakyrelu"===l,_=null!=l?jO(l,!0):null;let F;if((1===f||1===m)&&C>uM&&!1===(E||R||A||null!=_)){let e=S,t=N;a&&(e=cM({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),I.push(e)),r&&(t=cM({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),I.push(t));const n=1===m;let o=e;1!==m&&(o=JO({inputs:{x:e},backend:s,attrs:{shape:[T,C,1]}}),I.push(o));const i=1===m?2:1;let c=t;n&&(c=JO({inputs:{x:t},backend:s,attrs:{shape:[T,1,C]}}),I.push(c));const l=QO({inputs:{a:o,b:c},backend:s});F=oM({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),I.push(l)}else{const e=lo(t.dtype,n.dtype),l=new qO(w,k,[T,f,m],a,r,E,_,R,A),u=[S,N];if(null!=o&&u.push(o),R&&u.push(i),A){const e=s.makeTensorInfo([],"float32",Fs(c,"float32"));u.push(e),I.push(e)}F=s.runWebGLProgram(l,u,e)}const D=JO({inputs:{x:F},backend:s,attrs:{shape:v}});I.push(F);for(const O of I)s.disposeIntermediateTensorInfo(O);return D}const dM={kernelName:rs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;return hM({a:r,b:s,transposeA:c,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:u})}},pM="return abs(x);";const fM={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=PD(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let r;return r=Ht().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new kO(a.shape,pM):new cO(a.shape,pM),n.runWebGLProgram(r,[a],a.dtype)}},mM=GO({opSnippet:lO+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),gM={kernelName:Qt,backendName:"webgl",kernelFunc:mM},yM=GO({opSnippet:lO+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),bM={kernelName:Zt,backendName:"webgl",kernelFunc:yM},xM="return a + b;",vM=HO({opSnippet:xM,packedOpSnippet:xM,supportsComplex:!0,cpuKernelImpl:sD}),wM={kernelName:Jt,backendName:"webgl",kernelFunc:vM};class kM{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("float v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class SM{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("vec4 v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const NM={kernelName:$t,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,r=n;if(1===r.length)return FO({inputs:{x:r[0]},backend:a});if(r.length>Ht().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),s=e({inputs:r.slice(t),backend:a});return e({inputs:[n,s],backend:a})}const s=r.map((e=>e.dtype)).reduce(((e,t)=>lo(e,t))),o=r.map((e=>e.shape)),i=Ht().getBool("WEBGL_PACK")?new SM(r[0].shape,o):new kM(r[0].shape,o);return a.runWebGLProgram(i,r,s)}};const IM={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=vt(s,r.shape);let l=c;const u=ju(l,i);let h=r;null!=u&&(h=cM({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Ku(l.length,i)),Hu("all",l,i);const[d,p]=Uu(h.shape,l),f=JO({inputs:{x:h},backend:n,attrs:{shape:[-1,pt(p)]}}),m=nM(f,f.dtype,"all",n);let g;if(o){g=JO({inputs:{x:m},backend:n,attrs:{shape:Gu(d,c)}})}else g=JO({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}};const TM={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=vt(s,r.shape);let l=c;const u=ju(l,i);let h=r;null!=u&&(h=cM({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Ku(l.length,i)),Hu("any",l,i);const[d,p]=Uu(h.shape,l),f=JO({inputs:{x:h},backend:n,attrs:{shape:[-1,pt(p)]}}),m=nM(f,f.dtype,"any",n);let g;if(o){g=JO({inputs:{x:m},backend:n,attrs:{shape:Gu(d,c)}})}else g=JO({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}};class CM{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(o," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class EM{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ut(e.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,c=DF(i),l=tO("coords",i);let u,h;if(1===s){h=i+1;const e=DF(h);u="\n        ".concat(e," sourceLocR = ").concat(e,"(").concat(l.join(),", 0);\n        ++").concat(l[i-1],";\n        ").concat(e," sourceLocG = ").concat(e,"(").concat(l.join(),", 0);\n        ++").concat(l[i-2],";\n        ").concat(e," sourceLocA = ").concat(e,"(").concat(l.join(),", 0);\n        --").concat(l[i-1],";\n        ").concat(e," sourceLocB = ").concat(e,"(").concat(l.join(),", 0);\n        --").concat(l[i-2],";")}else h=i,u="\n        ".concat(c," sourceLocR = coords;\n        ++").concat(l[i-1],";\n        ").concat(c," sourceLocG = coords;\n        ++").concat(l[i-2],";\n        ").concat(c," sourceLocA = coords;\n        --").concat(l[i-1],";\n        ").concat(c," sourceLocB = coords;\n        --").concat(l[i-2],";");const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=tO("sourceLocR",h-1).concat("inIdx.r"),g=tO("sourceLocG",h-1).concat("inIdx.g"),y=tO("sourceLocB",h-1).concat("inIdx.b"),b=tO("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(m.join(),"),\n                             getBestIndicesAChannel(").concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),")));"),w="vec4(\n            getAChannel(".concat(m.join(),"),\n            hasNextCol ? getAChannel(").concat(g.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(b.join(),") : 0.)"),k=a?"":"\n      float getBestIndicesAChannel(".concat(f.join(),") {\n        return getChannel(getBestIndicesA(").concat(d.join(),"),\n                                          vec2(").concat(d.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(f.join(),") {\n        return getChannel(getA(").concat(d.join(),"),\n                               vec2(").concat(d.slice(-2).join(),"));\n      }\n      ").concat(k,"\n      void main() {\n        ").concat(c," coords = getOutputCoords();\n        bool hasNextCol = ").concat(l[i-1]," < ").concat(o[i-1]-1,";\n        bool hasNextRow = ").concat(l[i-2]," < ").concat(o[i-2]-1,";\n        ").concat(u,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(p,", sourceLocG").concat(p,",\n          sourceLocB").concat(p,", sourceLocA").concat(p,") * ").concat(t,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(w,";\n\n        for (int i = 0; i < ").concat(t,"; i++) {\n          inIdx = srcIdx;\n          ").concat(v,"\n          vec4 candidate = ").concat(w,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(x,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function RM(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=t.shape[0],s=t.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);const o=Zf(s),i={windowSize:o,inSize:s,batchSize:r,outSize:Math.ceil(s/o)},c=new CM(i,n,null==a),l=[t];null!=a&&l.push(a);const u=e.runWebGLProgram(c,l,"int32");if(1===u.shape[1])return u;const h=RM(e,t,n,u);return e.disposeIntermediateTensorInfo(u),h}function AM(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:t.shape,s=Zf(r[r.length-1]),o=new EM(r,s,n,null==a),i=null==a?[t]:[t,a],c=e.runWebGLProgram(o,i,"int32");if(c.shape.length===t.shape.length){const a=AM(e,t,n,c);return e.disposeIntermediateTensorInfo(c),a}return c}function _M(e,t,n,a){const r=[n];if(Hu("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!Ht().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let o=t;null!==s&&s.isPacked&&(o=e.unpackTensor(t),n.push(o));const[i,c]=Uu(o.shape,r),l=pt(c),u=JO({inputs:{x:o},backend:e,attrs:{shape:[-1,l]}});n.push(u);const h=RM(e,u,a);n.push(h);const d=JO({inputs:{x:h},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return AM(e,t,a)}const FM={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let o=vt(s,r.shape);const i=ju(o,r.shape.length);let c=r;const l=[];null!=i&&(c=cM({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=Ku(o.length,c.shape.length)),Hu("argMax",[o[0]],c.shape.length);const u=_M(n,c,o[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};const DM={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let o=vt(s,r.shape);const i=ju(o,r.shape.length);let c=r;const l=[];null!=i&&(c=cM({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=Ku(o.length,c.shape.length)),Hu("argMin",[o[0]],c.shape.length);const u=_M(n,c,o[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}},OM=GO({opSnippet:lO+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),MM={kernelName:rn,backendName:"webgl",kernelFunc:OM},LM=GO({opSnippet:lO+"return log(x + sqrt(x * x + 1.0));"}),zM={kernelName:sn,backendName:"webgl",kernelFunc:LM},PM=GO({opSnippet:lO+"\n  return atan(x);\n"}),BM={kernelName:on,backendName:"webgl",kernelFunc:PM},WM=HO({opSnippet:EO+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+AO+"\n  return result;\n"}),VM={kernelName:ln,backendName:"webgl",kernelFunc:WM},UM=GO({opSnippet:lO+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),GM={kernelName:cn,backendName:"webgl",kernelFunc:UM};class HM{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m="((batch  * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),g="(xR * ".concat(e.inWidth," + xC) * ").concat(e.inChannels," + d");let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(l,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(t," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?r?m:g:"wR * ".concat(h," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let b="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(s/4),v=s%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(u,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(x,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              getValue(batch, xR, xC + 3 * ").concat(l,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(x,";\n          if (").concat(1===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(b,");\n      }\n    ")}}class jM{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(d,";\n              wD += ").concat(l,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(u,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(h,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(t," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?r?"(((batch * ".concat(e.inDepth," + xD) * ").concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"((xD * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let v="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(s/4),k=s%4,S="\n      if (".concat(b,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n      const float initializationValue = ").concat(x,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(x,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(d,";\n            wD += ").concat(l,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(h,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(h,", ch)\n              );\n\n              ").concat(S,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(2===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(3===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                initializationValue\n              );\n\n              ").concat(S,"\n            }\n          }\n        }\n        setOutput(").concat(v,");\n      }\n    ")}}const qM={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;mF(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;ut(Ul(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=Fl(r.shape,s,o,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&ft(l.inShape,l.outShape))return FO({inputs:{x:r},backend:n});const u=new HM(l,"avg",!1);return n.runWebGLProgram(u,[r],"float32")}};const KM={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a,u=Dl(r.shape,s,o,[1,1,1],i,c,l),h=new jM(u,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class XM{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.top,u=c-1-e.padInfo.left,h=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(l,", ").concat(u,");\n      const float avgMultiplier = float(").concat(h,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(s,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(o,") {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class YM{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=u-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(g,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(r,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(h,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(l,") {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const QM={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,h=Dl(o.shape,i,c,[1,1,1],l,u),d=new YM(h);return n.runWebGLProgram(d,[r],o.dtype)}};const ZM={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s;mF([r,s],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=Fl(o.shape,i,c,1,l),h=new XM(u);return n.runWebGLProgram(h,[r],o.dtype)}};const JM={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:i}=a;return hM({a:r,b:s,transposeA:o,transposeB:i,backend:n})}};class $M{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Sc(e,t),Sc(e,n);let o="0.0";null!=a&&(Sc(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=r&&(Sc(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(o,";\n        float scale = ").concat(i,";\n        float inv = scale * inversesqrt(variance + float(").concat(s,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class eL{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Sc(e,t),Sc(e,n);let o="vec4(0.0)";null!=a&&(Sc(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=r&&(Sc(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = ".concat(o,";\n        vec4 scale = ").concat(i,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(s,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const tL={kernelName:oa,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,mean:s,variance:o,offset:i,scale:c}=t;ut(s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ut(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ut(null==c||s.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=[r,s,o];let h=null;null!=i&&(h=i.shape,u.push(i));let d=null;null!=c&&(d=c.shape,u.push(c));const p=Ht().getBool("WEBGL_PACK_NORMALIZATION")?new eL(r.shape,s.shape,o.shape,h,d,l):new $M(r.shape,s.shape,o.shape,h,d,l);return n.runWebGLProgram(p,u,u[0].dtype)}};class nL{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=DF(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return aL.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let a;const r=e.map(((e,t)=>"sourceLoc.".concat(aL[t]," = start[").concat(t,"] + coords.").concat(aL[t],";")));a="\n        ".concat(t," sourceLoc;\n        ").concat(t," coords = getOutputCoords();\n        ").concat(r.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const aL=["x","y","z","w","u","v"];class rL{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=DF(this.rank),n=tO("coords",this.rank),a=tO("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),s="getChannel(getSource(".concat(a.join(),"), ").concat(r,")"),o="\n      result.x = ".concat(s,";\n      if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(s,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(e[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(s,";\n        if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(s,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(t,"(").concat(e.map(((e,t)=>"start[".concat(t,"]"))).join(),");"):e.map(((e,t)=>"".concat(a[t]," = ").concat(n[t]," + start[").concat(t,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(t," coords = getOutputCoords();\n        ").concat(t," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(o,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function sL(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:o}=a,[i,c]=gl(r,s,o);if(nl(r,i,c),0===pt(c))return n.makeTensorInfo(c,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=BD(e.values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,t)}const{isPacked:l}=n.texData.get(r.dataId),u=fl(r.shape,i,c);if(l||!u){const e=Ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rL(c):new nL(c),t=[i];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){const r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),o=a.texData.get(s.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=ml(t,_t(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};const c=a.dataRefCount.get(o.slice.origDataId)||1;return a.dataRefCount.set(o.slice.origDataId,c+1),s}(r,i,c,n)}const oL={kernelName:wr,backendName:"webgl",kernelFunc:sL},iL={kernelName:mn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:o}=a;ut(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((e,t)=>e*t)),c=$f(r.shape,s,i),l=em(c.length,s.length),u=tm(r.shape,s,i),h=nm(o,s.length),d=am(u,o,s.length),p=[],f=JO({inputs:{x:r},backend:n,attrs:{shape:c}}),m=cM({inputs:{x:f},backend:n,attrs:{perm:l}}),g=JO({inputs:{x:m},backend:n,attrs:{shape:u}}),y=sL({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const cL={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=n.readSync(r.dataId),c=n.readSync(s.dataId),l=oD(i,c,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,l)}};const lL={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=Ht().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=Ht().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===o){const e=n.texData.get(a.dataId).values,t=n.texData.get(r.dataId).values,[s,o]=cD(a.shape,r.shape,e,t,a.dtype),i=n.makeTensorInfo(o,a.dtype);return n.texData.get(i.dataId).values=s,i}let i;return i=s?new _O("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new RO("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(i,[a,r],a.dtype)}};const uL={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.readSync(a.dataId),o=n.readSync(r.dataId),i=Sc(Array.from(s),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},hL=HO({opSnippet:"return float(a != b);",cpuKernelImpl:RD,dtype:"bool"}),dL={kernelName:Ga,backendName:"webgl",kernelFunc:hL};function pL(e){const{inputs:t,backend:n}=e,{input:a}=t;return FO({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const fL={kernelName:rr,backendName:"webgl",kernelFunc:pL},mL="return float(int(x));";const gL={kernelName:xn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:o}=r;if("complex64"===o){if("complex64"===s.dtype)return FO({inputs:{x:s},backend:a});const t=Lh(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=OO({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){const t=pL({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:o}});return a.disposeIntermediateTensorInfo(t),n}if(!Nt(s.dtype,o)){const e=FO({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId).values,[t,n,r]=lD(e,s.shape,s.dtype,o);return a.makeTensorInfo(t,n,r)}if("int32"===o)return function(e,t){const n=new cO(e.shape,mL),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===o){const e=a.makeTensorInfo([],"bool",kt("bool",1)),t=hL({inputs:{a:s,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error("Error in Cast: failed to cast ".concat(s.dtype," to ").concat(o))}},yL="return ceil(x);",bL=GO({opSnippet:yL,packedOpSnippet:yL,cpuKernelImpl:uD}),xL={kernelName:vn,backendName:"webgl",kernelFunc:bL};class vL{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class wL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const kL={kernelName:wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:o}=a;let i;i=Ht().getBool("WEBGL_PACK_CLIP")?new wL(r.shape):new vL(r.shape);const c=[[s],[o]];return n.runWebGLProgram(i,[r],r.dtype,c)}};class SL{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function NL(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const IL={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new SL(a.shape),o=[NL(a,r.complexTensorInfos.real),NL(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class TL{constructor(e){this.outputShape=[],this.outputShape=Hf(e,1),this.variableNames=e.map(((e,t)=>"T".concat(t)));const t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];const n=["if (yC < ".concat(t[0],") setOutput(getT0(yR, yC));")];for(let s=1;s<t.length;s++){const e=t[s-1];n.push("else if (yC < ".concat(t[s],") ")+"setOutput(getT".concat(s,"(yR, yC-").concat(e,"));"))}const a=t.length,r=t[t.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(r,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class CL{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Hf(e,t);const n=this.outputShape,a=n.length,r=DF(a),s=tO("coords",a),o=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>"T".concat(t)));const i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];const c=o[t],l=o.slice(-2),u=o.join();let h="if (".concat(c," < ").concat(i[0],") {\n        return getChannel(\n            getT0(").concat(u,"), vec2(").concat(l.join(),"));\n        }");for(let f=1;f<i.length;f++){const e=i[f-1];h+="\n        if (".concat(c," < ").concat(i[f],"  && ").concat(c," >= ").concat(i[f-1],") {\n          return getChannel(\n            getT").concat(f,"(").concat(EL(o,c,e),"),\n            vec2(").concat(EL(l,c,e),"));\n        }")}const d=i.length,p=i[i.length-1];h+="\n        return getChannel(\n          getT".concat(d,"(").concat(EL(o,c,p),"),\n          vec2(").concat(EL(l,c,p),"));"),this.userCode="\n      float getValue(".concat(o.map((e=>"int "+e)),") {\n        ").concat(h,"\n      }\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(s,"), 0., 0., 0.);\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," + 1;\n        if (").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-2]," = ").concat(s[a-2]," + 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," - 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2]," &&\n            ").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(s,");\n        }\n        setOutput(result);\n      }\n    ")}}function EL(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?"".concat(e," - ").concat(n):e)).join()}function RL(e){const{inputs:t,backend:n}=e,{input:a}=t;return FO({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const AL={kernelName:pa,backendName:"webgl",kernelFunc:RL};function _L(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>pL({inputs:{input:e},backend:n}))),r=e.map((e=>RL({inputs:{input:e},backend:n}))),s=_L(a,t,n),o=_L(r,t,n),i=OO({inputs:{real:s,imag:o},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=pt(e.shape.slice(t));return JO({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=Hf(r.map((e=>e.shape)),1),i=1===r[0].shape[0],c=hD(s,o,a,i),l=Hf(e.map((e=>e.shape)),t),u=n.makeTensorInfo(l,a,c);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const s=e.filter((e=>pt(e.shape)>0)),o=Ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){const t=o?new cO(e[0].shape,mO):new kO(e[0].shape,mO);return n.runWebGLProgram(t,e,a)}const i=Ht().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>i){const e=[];for(let r=0;r<s.length;r+=i){const a=s.slice(r,r+i);e.push(_L(a,t,n))}const a=_L(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(o){const e=new CL(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,a)}const{tensors2D:c,outShape:l}=function(e,t,n){const a=Hf(e.map((e=>e.shape)),t),r=e.map((e=>JO({inputs:{x:e},attrs:{shape:[-1,pt(e.shape.slice(t))]},backend:n})));return{tensors2D:r,outShape:a}}(s,t,n),u=new TL(c.map((e=>e.shape))),h=n.runWebGLProgram(u,c,a);c.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=JO({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),d}function FL(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=vt(r,t[0].shape)[0];Gf(t.map((e=>e.shape)),s);const o=Hf(t.map((e=>e.shape)),s);if(0===pt(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>pt(e.shape)>0));return 1===i.length?FO({inputs:{x:i[0]},backend:n}):_L(i,s,n)}const DL={kernelName:Nn,backendName:"webgl",kernelFunc:FL};class OL{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(x,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(b,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(g,"], coords[").concat(y,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(h,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(d,"; wC++) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            if (xC < 0 || xC >= ").concat(e.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(v,"\n        setOutput(result);\n      }\n    ")}}class ML{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(r,", ").concat(s,", ").concat(o,");\n      const ivec3 pads = ivec3(").concat(t,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(u,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(h,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,"; wC++) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class LL{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=WF(this.outputShape.length);const s=e.padInfo.left,o=e.strideWidth,i=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,u=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<l;m++)h+="\n           vec4 xTexelC".concat(2*m,";\n           int xTexelC").concat(2*m,"Ready;\n           vec4 xTexelC").concat(2*m+1,";\n           int xTexelC").concat(2*m+1,"Ready;\n           vec4 xC").concat(m,";");h+="\n     for (int r = 0; r < ".concat(c,"; r++) {\n      for (int d1 = 0; d1 < ").concat(e.inChannels,"; d1 += 2) {\n       ");for(let m=0;m<l;m++)h+="\n           xTexelC".concat(2*m," = vec4(0.0);\n           xTexelC").concat(2*m,"Ready = 0;\n           xTexelC").concat(2*m+1," = vec4(0.0);\n           xTexelC").concat(2*m+1,"Ready = 0;\n           xC").concat(m," = vec4(0.0);");h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(u+1)/2;m++){const t=2*m;if(h+="\n           xC = xCCorner + ".concat(t*i,";\n           "),1===o){if(t<l&&(s%2===1?(h+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n               "),h+=1===i&&t>0?"\n                 xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                   } else {\n                     xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                   }\n                   ")):h+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xC").concat(t," = xTexelC").concat(t,";\n                 "),t+1<l)){const e=s%2===0?ct(i):i;i%2===0&&s%2===1||i%2!==0&&s%2!==1?(h+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                     xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(t+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(t+1,"Ready = 1;\n                   }\n                   "),h+=i>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                     } else {\n                      xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                     }\n                     "):"\n                     xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                     ")):h+=1===e?"\n                     xC".concat(t+1," = xTexelC").concat(t,";\n                     "):"\n                     xCOffset = xC + ".concat(e,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                       xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(t+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(t+1,"Ready = 1;\n                     }\n\n                     xC").concat(t+1," = xTexelC").concat(t+1,";\n                     ")}}else t<l&&(s%2===1?(h+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n               "),t+1<l&&(h+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                 "))):(h+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(\n                   xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n               "),t+1<l&&(h+="\n                   xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                 "))));t<l&&(h+="\n             wTexel = getW(r, ".concat(t,", d1, d2);\n             dotProd += xC").concat(t,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(e.inChannels,") {\n               dotProd += xC").concat(t,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),t+1<l&&(h+="\n               wTexel = getW(r, ".concat(t+1,", d1, d2);\n               dotProd += xC").concat(t+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(e.inChannels,") {\n                 dotProd += xC").concat(t+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):r?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(d,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(h,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(f,"\n         ").concat(p,"\n         setOutput(result);\n       }\n     ")}}class zL{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=WF(this.outputShape.length);const{dataFormat:n}=t,a=yF(),r="channelsLast"===n,s=r?1:2,o=r?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(e[2]," && pos < ").concat(e[1],") {");let c="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)c+="\n          blockIndex = rc.z + ".concat(e,";\n          pos = rc.y + ").concat(l,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(s,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(o,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(r,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}function PL(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function BL(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}=e;const l=t.shape,u=r.texData.get(t.dataId),h=a.inChannels,d=l[0]*l[1]*l[2],p=a.outChannels,f="channelsLast"===a.dataFormat,m=!1;let g;const y=[];if(null!=o){const e=PL(o.shape,f);null!=e&&(o=JO({inputs:{x:o},backend:r,attrs:{shape:e}}),y.push(o))}if(null!=s){const e=PL(s.shape,f);null!=e&&(s=JO({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}if(!((1===d||1===p)&&h>uM)&&u.isPacked&&f&&null!=u.texture&&l[2]%2!==0&&ft(u.shape.slice(-3),l.slice(-3))){const e=l[0]*l[1]*(l[2]+1),h={dataId:t.dataId,shape:[1,e,a.inChannels],dtype:t.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,ut(cF(u.shape,h.shape),(()=>"packed reshape ".concat(u.shape," to ").concat(h.shape," isn't free")));const p=JO({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});y.push(p);const f=hM({a:h,b:p,backend:r,transposeA:false,transposeB:m,bias:s,activation:c,preluActivationWeights:o,leakyreluAlpha:i}),b=r.texData.get(f.dataId);ut(b.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,b.shape=a.outShape,g=FO({inputs:{x:f},backend:r}),g.shape=a.outShape,y.push(f)}else{const e=a.outHeight*a.outWidth,l=JO({inputs:{x:t},backend:r,attrs:{shape:f?[a.batchSize,e,a.inChannels]:[a.batchSize,a.inChannels,e]}}),u=JO({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),h=hM({a:f?l:u,b:f?u:l,transposeA:!f,transposeB:m,backend:r,bias:s,activation:c,preluActivationWeights:o,leakyreluAlpha:i});g=JO({inputs:{x:h},backend:r,attrs:{shape:a.outShape}}),y.push(l),y.push(u),y.push(h)}for(const b of y)r.disposeIntermediateTensorInfo(b);return g}function WL(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}=e;const{filterWidth:l,filterHeight:u,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=a,m="channelsLast"===f,g=l*u*h,y=p*d,b=[a.batchSize,g,y],x=[];if(null!=o){const e=PL(o.shape,m);null!=e&&(o=JO({inputs:{x:o},backend:r,attrs:{shape:e}}),x.push(o))}if(null!=s){const e=PL(s.shape,m);null!=e&&(s=JO({inputs:{x:s},backend:r,attrs:{shape:e}}),x.push(s))}const v=JO({inputs:{x:n},backend:r,attrs:{shape:[1,g,pt(n.shape)/g]}});x.push(v);const w=new zL(b,a),k=[t.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],S=r.runWebGLProgram(w,[t],"float32",k),N=JO({inputs:{x:S},backend:r,attrs:{shape:b}});x.push(S),x.push(N);const I=null!=s,T=null!=o,C="leakyrelu"===c,E=c?jO(c,!0):null,R=new qO(m?N.shape:v.shape,m?v.shape:N.shape,m?[a.batchSize,y,a.outChannels]:[a.batchSize,a.outChannels,y],!0,!1,I,E,T,C),A=m?[N,v]:[v,N];if(s&&A.push(s),T&&A.push(o),C){const e=r.makeTensorInfo([],"float32",Fs(i,"float32"));A.push(e),x.push(e)}const _=r.runWebGLProgram(R,A,"float32"),F=JO({inputs:{x:_},backend:r,attrs:{shape:a.outShape}});x.push(_);for(const D of x)r.disposeIntermediateTensorInfo(D);return F}const VL={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a,h=Hl(c),d=Ol(r.shape,s.shape,o,l,i,u,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&Ht().getBool("WEBGL_EXP_CONV")){const e=new LL(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[r,s],"float32",t)}else if(Ht().getBool("WEBGL_CONV_IM2COL"))p=WL({x:r,filter:s,convInfo:d,backend:n});else{const e=new OL(d);p=n.runWebGLProgram(e,[r,s],"float32")}else p=BL({x:r,filter:s,convInfo:d,backend:n});const f=JO({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class UL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              ").concat(s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class GL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,c=s?1:2,l=s?2:3,u=s?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(u,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(l,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n\n              if (").concat(s,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class HL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(e.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(t," - ").concat(r,";\n\n            if (xF < 0 || xF >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(s,";\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(o,";\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class jL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,c=n-1-e.padInfo.top,l=a-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(l,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(t,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(r,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(e.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(t," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const qL={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a,h=Hl(c),d=Ol(r.shape,u,o,1,i,l,!1,h),p=new UL(d);return n.runWebGLProgram(p,[r,s],"float32")}};class KL{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=WF(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(r,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(e.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(e.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const XL={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,h=Hl(l),d=Ol(o,s.shape,i,1,c,u,!1,h);if(Ht().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new KL(d);return n.runWebGLProgram(t,[r,s],"float32",e)}{const e=new GL(d);return n.runWebGLProgram(e,[r,s],"float32")}}};const YL={kernelName:En,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a,l=Ml(r.shape,s.shape,o,c,i),u=new ML(l);return n.runWebGLProgram(u,[r,s],"float32")}};const QL={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,filterShape:c}=a,l=Ml(r.shape,c,o,1,i),u=new HL(l);return n.runWebGLProgram(u,[r,s],"float32")}};const ZL={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:o,strides:i,inputShape:c}=a,l=Ml(c,s.shape,i,1,o),u=new jL(l);return n.runWebGLProgram(u,[r,s],"float32")}},JL=GO({opSnippet:UO+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(AO,"\n  return result;\n")}),$L={kernelName:_n,backendName:"webgl",kernelFunc:JL},ez=GO({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),tz={kernelName:Fn,backendName:"webgl",kernelFunc:ez};class nz{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,c]=e,[l]=t,[u,h]=n;this.outputShape=[l,u,h,c];const d="bilinear"===a?1:0,[p,f]=["".concat(o-1,".0"),"".concat(i-1,".0")],[m,g,y]=u>1?["".concat((o-1)/(u-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[b,x,v]=h>1?["".concat((i-1)/(h-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(b,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(s,") {\n          return;\n        }\n\n        float height_scale = ").concat(g,";\n        float width_scale = ").concat(x,";\n\n        float in_y = ").concat(y,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n        float in_x = ").concat(v,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(d," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const az={kernelName:Mn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:l}=a,u=new nz(r.shape,s.shape,i,c,l);return n.runWebGLProgram(u,[r,s,o],"float32")}};var rz;!function(e){e.Prod="*",e.Sum="+"}(rz||(rz={}));class sz{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,s=this.op===rz.Prod?"1.0":"0.0",o=n?s:"getX(".concat(oz(r,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",l="";n?(c=a?"end != ".concat(i-1):"end != 0",l=a?"end + 1":"end - 1"):(c=a?"end + pow2 < ".concat(i):"end >= pow2",l=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(DF(r)," coords = getOutputCoords();\n        int end = ").concat(iz(r,"coords",this.op),";\n        float val = ").concat(o,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(l,";\n          ").concat(iz(r,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(oz(r,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function oz(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function iz(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function cz(e,t,n,a,r,s){const o=t.shape.length,i=ju([a],o);let c=t;null!=i&&(c=cM({inputs:{x:t},backend:n,attrs:{perm:i}}));const l=Ku(1,o)[0];if(l!==o-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(a));const u=c.shape[l];let h=FO({inputs:{x:c},backend:n});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const t=new sz(e,c.shape,!1,s),a=[[d]],r=h;h=n.runWebGLProgram(t,[h],h.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){const t=new sz(e,c.shape,r,s),a=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=i){const e=cM({inputs:{x:h},backend:n,attrs:{perm:qu(i)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),e}return h}const lz={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return cz(rz.Prod,r,n,s,o,i)}};const uz={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return cz(rz.Sum,r,n,s,o,i)}};const hz={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(s.dataId),a=oD(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(s),a=iD(e,t,o,i);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};class dz{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(t,";\n      int offset_h = imod(h, ").concat(t,");\n      int in_w = w / ").concat(t,";\n      int offset_w = imod(w, ").concat(t,");\n      int offset_d = (offset_h * ").concat(t," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const pz={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a,i=r.shape[0],c=("NHWC"===o?r.shape[1]:r.shape[2])*s,l=("NHWC"===o?r.shape[2]:r.shape[3])*s,u=("NHWC"===o?r.shape[3]:r.shape[1])/(s*s),h=new dz("NHWC"===o?[i,c,l,u]:[i,u,c,l],s,o);return n.runWebGLProgram(h,[r],r.dtype)}};class fz{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=WF(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let c="",l="";n&&(c=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),l="result = activation(result);");const u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(s,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(u,"\n        ").concat(l,"\n        setOutput(result);\n      }\n    ")}}class mz{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=WF(this.outputShape.length);const s=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,h=u;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<u;g++)d+="\n          vec4 xTexelC".concat(2*g,";\n          int xTexelC").concat(2*g,"Ready;\n          vec4 xTexelC").concat(2*g+1,";\n          int xTexelC").concat(2*g+1,"Ready;\n          vec4 xC").concat(g,";");d+="\n    for (int r = 0; r < ".concat(l,"; r++) {\n      ");for(let g=0;g<u;g++)d+="\n          xTexelC".concat(2*g," = vec4(0.0);\n          xTexelC").concat(2*g,"Ready = 0;\n          xTexelC").concat(2*g+1," = vec4(0.0);\n          xTexelC").concat(2*g+1,"Ready = 0;\n          xC").concat(g," = vec4(0.0);");d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(h+1)/2;g++){const e=2*g;if(d+="\n          xC = xCCorner + ".concat(e*c,";\n          "),1===i){if(e<u&&(o%2===1?(d+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n              "),d+=1===c&&e>0?"\n                xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                  } else {\n                    xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                  }\n                  ")):d+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xC").concat(e," = xTexelC").concat(e,";\n                "),e+1<u)){const t=o%2===0?ct(c):c;c%2===0&&o%2===1||c%2!==0&&o%2!==1?(d+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                    xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(e+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(e+1,"Ready = 1;\n                  }\n                  "),d+=c>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                    } else {\n                     xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                    }\n                    "):"\n                    xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                    ")):d+=1===t?"\n                    xC".concat(e+1," = xTexelC").concat(e,";\n                    "):"\n                    xCOffset = xC + ".concat(t,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                      xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(e+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(e+1,"Ready = 1;\n                    }\n\n                    xC").concat(e+1," = xTexelC").concat(e+1,";\n                    ")}}else e<u&&(o%2===1?(d+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n              "),e+1<u&&(d+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                "))):(d+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(\n                  xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n              "),e+1<u&&(d+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                "))));e<u&&(d+="\n            wTexel = getW(r, ".concat(e,", d1, q);\n            dotProd += xC").concat(e," * vec4(wTexel.xz, wTexel.xz);\n          "),e+1<u&&(d+="\n              wTexel = getW(r, ".concat(e+1,", d1, q);\n              dotProd += xC").concat(e+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(p,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(s,";\n        int q = d2 - d1 * ").concat(s,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(d,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(m,"\n        ").concat(f,"\n        setOutput(result);\n      }\n    ")}}const gz={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=a;let u=c;null==u&&(u=[1,1]),ut(Ul(o,u),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(u,"'")));const h=Ol(r.shape,s.shape,o,u,i,l,!0);let d;d=Ht().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new mz(h):new fz(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,s],"float32",p)}};class yz{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(s," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class bz{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const xz={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a,h=Ol(r.shape,u,o,i,c,l,!0),d=new yz(h);return n.runWebGLProgram(d,[r,s],"float32")}};const vz={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a,h=Ol(u,s.shape,o,i,c,l,!0),d=new bz(h);return n.runWebGLProgram(d,[r,s],"float32")}};class wz{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const kz={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=pt(a.shape),o=JO({inputs:{x:a},backend:n,attrs:{shape:[s]}}),i=new wz(s),c=n.runWebGLProgram(i,[o],o.dtype),l=JO({inputs:{x:c},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}};class Sz{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:l}=e,{top:u,left:h}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(r,", ").concat(s,");\n      const ivec2 pads = ivec2(").concat(u,", ").concat(h,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(o,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(t,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(l,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const Nz={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a,l=_l(r.shape,s.shape,o,i,"NHWC",c);let u;const h=new Sz(l);u=n.runWebGLProgram(h,[r,s],"float32");const d=JO({inputs:{x:u},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(u),d}};const Iz={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:o,summedDims:i,idDims:c}=Im(r,s.length);Cm(o.length,c,s);const{path:l,steps:u}=Em(i,c),h=u.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const e of u[m]){const{permutationIndices:t,expandDims:a}=Tm(p,c[e]);let r;Rm(t)?r=s[e]:(r=cM({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(r));const o=r.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);ft(r.shape,o)||(r=JO({inputs:{x:r},backend:n,attrs:{shape:o}}),f.push(r)),null===d?d=r:(d=QO({inputs:{a:r,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=oM({inputs:{x:d},backend:n,attrs:{axis:l[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},Tz=GO({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Cz={kernelName:Xn,backendName:"webgl",kernelFunc:Tz},Ez={kernelName:Yn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=Ht().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _O("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new RO("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},Rz=HO({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:dD}),Az={kernelName:Zn,backendName:"webgl",kernelFunc:Rz},_z=GO({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(im,";\n  float a1 = ").concat(cm,";\n  float a2 = ").concat(lm,";\n  float a3 = ").concat(um,";\n  float a4 = ").concat(hm,";\n  float a5 = ").concat(dm,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),Fz={kernelName:Qn,backendName:"webgl",kernelFunc:_z},Dz=GO({opSnippet:UO+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:pD,dtype:"float32"}),Oz={kernelName:Jn,backendName:"webgl",kernelFunc:Dz};function Mz(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,o=s.shape.length,i=s.shape.slice();let c=r;return r<0&&(ut(-(o+1)<=r,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),c=o+r+1),i.splice(c,0,1),JO({inputs:{x:s},backend:a,attrs:{shape:i}})}const Lz={kernelName:$n,backendName:"webgl",kernelFunc:Mz},zz="return exp(x) - 1.0;",Pz=GO({opSnippet:zz,packedOpSnippet:zz,cpuKernelImpl:fD}),Bz={kernelName:ea,backendName:"webgl",kernelFunc:Pz};class Wz{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),s=n?"".concat(a,".0"):"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '.concat(e,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(r,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(s,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function Vz(e,t,n){const a=n.texData.get(e.dataId),r=pt(e.shape),s=e.shape[e.shape.length-1],o=JO({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}}),i=o.shape,c=new Wz("real",i,t),l=new Wz("imag",i,t),u=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:i},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:i}],h=n.runWebGLProgram(c,u,"float32"),d=n.runWebGLProgram(l,u,"float32"),p=OO({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=JO({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(p),f}const Uz={kernelName:ta,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return Vz(a,!1,n)}};class Gz{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Hz(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||Et(r),"string"===s){const e=St(s,pt(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{const e=new Gz(a,r),n=[[r]];return t.runWebGLProgram(e,[],s,n)}}const jz={kernelName:na,backendName:"webgl",kernelFunc:Hz};class qz{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(t," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(t,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const Kz={kernelName:aa,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,r=n,s=new qz(a.shape);return r.runWebGLProgram(s,[a],a.dtype)}},Xz="return floor(x);",Yz=GO({opSnippet:Xz,packedOpSnippet:Xz,cpuKernelImpl:mD}),Qz={kernelName:ra,backendName:"webgl",kernelFunc:Yz},Zz=HO({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Jz={kernelName:sa,backendName:"webgl",kernelFunc:Zz};class $z{constructor(e){this.variableNames=["A"];const t=yF(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(t.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class eP{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=yF(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(t.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}const tP={kernelName:ns,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:s}=a,o="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,i="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[c,l]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[l,c],h=[l,c,s];if(i||o){const e=Ht().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=nP&&e===aP||(aP=e,nP=document.createElement("canvas").getContext("2d",{willReadFrequently:aP})),nP.canvas.width=c,nP.canvas.height=l,nP.drawImage(r,0,0,c,l),r=nP.canvas}const d=n.makeTensorInfo(u,"int32");n.texData.get(d.dataId).usage=B_.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=Ht().getBool("WEBGL_PACK")?new eP(h):new $z(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let nP,aP=Ht().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const rP={kernelName:ss,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a,m=Hl(u),g=Ol(r.shape,s.shape,c,h,l,d,!1,m);let y;const b=[],x=null!=o,v=null!=i,w="leakyrelu"===p,k=()=>{const e=[r,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=JO({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(o,u)),v&&e.push(t(i,u)),w){const t=n.makeTensorInfo([],"float32",Fs(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&Ht().getBool("WEBGL_EXP_CONV")){const e=p?jO(p,!0):null,t=new LL(g,x,e,v,w),a=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],r=k();y=n.runWebGLProgram(t,r,"float32",a)}else if(Ht().getBool("WEBGL_CONV_IM2COL"))y=WL({x:r,filter:s,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const e=p?jO(p,!1):null,t=new OL(g,x,e,v,w),a=k();y=n.runWebGLProgram(t,a,"float32")}else y=BL({x:r,filter:s,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});const S=JO({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};const sP={kernelName:os,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=a,f=[];let m=u;null==m&&(m=[1,1]),ut(Ul(c,m),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(c," and dilations '").concat(m,"'")));const g=Ol(r.shape,s.shape,c,m,l,h,!0),y=Ht().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?jO(d,y):null,x=[r,s],v=null!=o,w=null!=i,k="leakyrelu"===d;if(v&&x.push(o),w&&x.push(i),k){const e=n.makeTensorInfo([],"float32",Fs(p,"float32"));x.push(e),f.push(e)}let S;S=y?new mz(g,v,b,w,k):new fz(g,v,b,w,k);const N=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],I=n.runWebGLProgram(S,x,"float32",N);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};class oP{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const r=DF(n.length);let s="\n    int index;";for(let o=0;o<this.sliceDim;o++)s+="\n          index = round(getIndices(coords[0], ".concat(o,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[o],";\n          flattenIndex += index * ").concat(this.strides[o],";");this.userCode="\n         void main() {\n          ".concat(r," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(s,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const iP={kernelName:ca,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,o=s[s.length-1],i=pt(a.shape),[c,l,u,h]=rm(a,r),d=JO({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),p=JO({inputs:{x:a},backend:n,attrs:{shape:[pt(a.shape)/u,u]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),s=gD(e,t,a.dtype,l,o,u,h,a.shape,i);return n.makeTensorInfo(c,a.dtype,s.values)}const f=new oP(o,h,[l,u],a.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=JO({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class cP{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=DF(this.rank),a=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e.length;r++)2===r?a.push("index"):a.push("".concat(n[r]));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(e[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function lP(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:o,batchDims:i}=a,c=vt(o,r.shape)[0];if(Ht().get("DEBUG")){const e=n.readSync(s.dataId),t=r.shape[c];for(let n=0;n<e.length;++n){const a=e[n];ut(a<=t-1&&a>=0,(()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(t-1,"]")))}}const l=qm(r,s,c,i),u=pt(s.shape),h=[],d=JO({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=JO({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),a=yD(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,a.dtype,a.values)}const m=new cP(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=JO({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const uP={kernelName:ia,backendName:"webgl",kernelFunc:lP},hP=HO({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:bD,dtype:"bool"}),dP={kernelName:la,backendName:"webgl",kernelFunc:hP},pP=HO({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:xD}),fP={kernelName:ua,backendName:"webgl",kernelFunc:pP};const mP={kernelName:da,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return Vz(a,!0,n)}},gP=GO({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),yP={kernelName:fa,backendName:"webgl",kernelFunc:gP},bP=GO({opSnippet:"return float(isinf(x));",dtype:"bool"}),xP={kernelName:ma,backendName:"webgl",kernelFunc:bP},vP=GO({opSnippet:"return float(isnan(x));",dtype:"bool"}),wP={kernelName:ga,backendName:"webgl",kernelFunc:vP},kP=HO({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:vD,dtype:"bool"}),SP={kernelName:ba,backendName:"webgl",kernelFunc:kP},NP=HO({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:wD,dtype:"bool"}),IP={kernelName:xa,backendName:"webgl",kernelFunc:NP};const TP={kernelName:va,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=kD(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},CP=GO({opSnippet:UO+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:SD}),EP={kernelName:wa,backendName:"webgl",kernelFunc:CP},RP=GO({opSnippet:UO+"\n  return log(1.0 + x);\n"}),AP={kernelName:ka,backendName:"webgl",kernelFunc:RP},_P=HO({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),FP={kernelName:Sa,backendName:"webgl",kernelFunc:_P},DP=GO({opSnippet:"return float(!(x >= 1.0));"}),OP={kernelName:Na,backendName:"webgl",kernelFunc:DP},MP=HO({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),LP={kernelName:Ia,backendName:"webgl",kernelFunc:MP};class zP{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(s,"; j <= ").concat(s,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(o,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class PP{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(s,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(s,"; j <= ").concat(s,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(o,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const BP={kernelName:Ta,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:o,alpha:i,beta:c}=a,l=Ht().getBool("WEBGL_PACK_NORMALIZATION")?new PP(r.shape,s,o,i,c):new zP(r.shape,s,o,i,c);return n.runWebGLProgram(l,[r],r.dtype)}};class WP{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(t,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(t," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(r,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(r,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const VP={kernelName:Ca,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a,h=new WP(r.shape,i,c,l,u);return n.runWebGLProgram(h,[r,s,o],r.dtype)}};function UP(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:o}=a,i=r.shape.length,c=vt(s,r.shape);let l=c;const u=ju(l,i),h=null!=u,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(i);for(let n=0;n<t.length;n++)t[n]=r.shape[u[n]];const a=JD(e,r.shape,r.dtype,u,t);p=n.makeTensorInfo(t,r.dtype);n.texData.get(p.dataId).values=a}else p=sM(r,u,n);l=Ku(l.length,i)}Hu("max",l,i);const[f,m]=Uu(p.shape,l);let g,y=f;if(o&&(y=Gu(f,c)),d){const e=n.texData.get(p.dataId).values,t=ND(e,pt(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,a){const r=pt(t),s=JO({inputs:{x:e},attrs:{shape:[pt(e.shape)/r,r]},backend:a}),o=nM(s,e.dtype,"max",a),i=JO({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const GP={kernelName:Ea,backendName:"webgl",kernelFunc:UP},HP=HO({opSnippet:EO+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+AO+"\n  return result;\n",cpuKernelImpl:ID}),jP={kernelName:Ra,backendName:"webgl",kernelFunc:HP};const qP={kernelName:Aa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;mF(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;ut(Ul(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=Fl(r.shape,s,o,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&ft(l.inShape,l.outShape))return FO({inputs:{x:r},backend:n});const u=new HM(l,"max",!1);return n.runWebGLProgram(u,[r],r.dtype)}};const KP={kernelName:Fa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dataFormat:c,dimRoundingMode:l}=a,u=Dl(r.shape,s,o,[1,1,1],i,l,c),h=new jM(u,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class XP{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=s-1-e.padInfo.left,c=r*s-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(r,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(t,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(s," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class YP{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.front,h=c-1-e.padInfo.top,d=l-1-e.padInfo.left,p=i*c*l-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(u,", ").concat(h,", ").concat(d,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(r,") {\n          float dyD = float(dyDCorner + wD) / ").concat(t,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(s,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(o,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(l," +\n                  wR * ").concat(l," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const QP={kernelName:Da,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,h=Dl(o.shape,i,c,[1,1,1],l,u),d=new jM(h,"max",!0),p=n.runWebGLProgram(d,[o],o.dtype),f=new YP(h),m=n.runWebGLProgram(f,[r,p],o.dtype);return n.disposeIntermediateTensorInfo(p),m}};const ZP={kernelName:_a,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:o}=t,i=s;mF([s,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=Fl(i.shape,c,l,1,u,h),p=new HM(d,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new XP(d),g=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const JP={kernelName:Oa,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:c}=n,l=a;ut(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const u=[1,1];ut(Ul(o,u),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(u,"'")));const h=Fl(r.shape,s,o,u,i),[d,p]=function(e,t,n,a){let r=new HM(n,"max",!1);const s=a.runWebGLProgram(r,[e],"float32");return r=new HM(n,"max",!0,!0,t),[s,a.runWebGLProgram(r,[e],"float32")]}(r,c,h,l);return[d,p]}};const $P={kernelName:Ma,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{keepDims:s,axis:o}=n,i=a,c=r.shape.length,l=vt(o,r.shape);let u=l;const h=ju(u,c),d=null!=h,p=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(d){if(p){const e=i.texData.get(m.dataId).values,t=new Array(c);for(let a=0;a<t.length;a++)t[a]=r.shape[h[a]];const n=JD(e,r.shape,r.dtype,h,t);m=i.makeTensorInfo(t,r.dtype);i.texData.get(m.dataId).values=n}else m=sM(r,h,i);f.push(m),u=Ku(u.length,c)}Hu("sum",u,c);const[g,y]=Uu(m.shape,u);let b=g;s&&(b=Gu(g,l));const x=function(e,t,n,a){const r=pt(t),s=JO({inputs:{x:e},attrs:{shape:[pt(e.shape)/r,r]},backend:a}),o=nM(s,"float32","mean",a),i=JO({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(m,y,b,i);for(const v of f)i.disposeIntermediateTensorInfo(v);return x}};const eB={kernelName:La,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=vt(s,r.shape);let l=c;const u=ju(l,i);let h=r;null!=u&&(h=cM({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Ku(l.length,r.shape.length)),Hu("min",l,i);const[d,p]=Uu(h.shape,l),f=JO({inputs:{x:h},backend:n,attrs:{shape:[-1,pt(p)]}}),m=nM(f,f.dtype,"min",n);let g;if(o){g=JO({inputs:{x:m},backend:n,attrs:{shape:Gu(d,c)}})}else g=JO({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}},tB=HO({opSnippet:EO+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+AO+"\n  return result;\n",cpuKernelImpl:TD}),nB={kernelName:za,backendName:"webgl",kernelFunc:tB};class aB{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=DF(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(r," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class rB{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=DF(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=tO("rc",a),c=tO("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h="reflect"===n?0:1;let d="";if(1===a){const e="\n        ".concat(r," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(h,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(h,";\n        }\n        source -= start;\n      ");d="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ")}else{const e="\n        ".concat(r," source = rc;\n        ").concat(r," lt = ").concat(r,"(lessThan(source, start));\n        ").concat(r," gte = ").concat(r,"(greaterThanEqual(source, end));\n        ").concat(r," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(h,") +\n                gte * ((end - 1) * 2 - source + ").concat(h,");\n        source -= start;\n      ");d="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(e,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(l,") {\n            ").concat(e,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(d,"\n        setOutput(result);\n      }\n    ")}}const sB={kernelName:Pa,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r}=t,{paddings:s,mode:o}=a,i=Ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rB(r.shape,s,o):new aB(r.shape,s,o);return n.runWebGLProgram(i,[r],r.dtype)}},oB=HO({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+AO+"\n  return result;\n"}),iB={kernelName:Ba,backendName:"webgl",kernelFunc:oB};class cB{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(t-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(t-1,"));\n      }\n    ")}}const lB=HO({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),uB={kernelName:qn,backendName:"webgl",kernelFunc:lB},hB="return a - b;",dB=HO({opSnippet:hB,packedOpSnippet:hB,supportsComplex:!0,cpuKernelImpl:YD}),pB={kernelName:Hr,backendName:"webgl",kernelFunc:dB};function fB(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,o=vt([s],r.shape),i=UP({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),c=Gu(i.shape,o),l=JO({inputs:{x:i},backend:n,attrs:{shape:c}}),u=dB({inputs:{a:r,b:l},backend:n}),h=Dz({inputs:{x:u},backend:n}),d=oM({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),p=JO({inputs:{x:d},backend:n,attrs:{shape:c}}),f=lB({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const mB={kernelName:_r,backendName:"webgl",kernelFunc:fB};const gB={kernelName:Wa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:i}=a,c=i?r:fB({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=c.shape[0],u=c.shape[1],h=new cB(l,u,s),d=[[o]],p=n.runWebGLProgram(h,[c],"int32",d);return i||n.disposeIntermediateTensorInfo(c),p}},yB=lO+"\n  return -x;\n";const bB={kernelName:Ua,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=ED(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r;return r=Ht().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new kO(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new cO(a.shape,yB),n.runWebGLProgram(r,[a],a.dtype)}},xB=Xp;const vB={kernelName:Ha,backendName:"webgl",kernelFunc:function(e){is("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a,l=n.readSync(r.dataId),u=n.readSync(s.dataId),{selectedIndices:h}=xB(l,u,o,i,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},wB=Yp;const kB={kernelName:ja,backendName:"webgl",kernelFunc:function(e){is("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a,u=n.readSync(r.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=wB(u,h,o,i,c,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},SB=Qp;const NB={kernelName:qa,backendName:"webgl",kernelFunc:function(e){is("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a,u=n.readSync(r.dataId),h=n.readSync(s.dataId),d=o,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=SB(u,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class IB{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const TB={kernelName:Xa,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:o,onValue:i,offValue:c}=a,l=pt(r.shape),u=new IB(l,o,i,c),h=JO({inputs:{x:r},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(u,[h],s);n.disposeIntermediateTensorInfo(h);const p=JO({inputs:{x:d},backend:n,attrs:{shape:[...r.shape,o]}});return n.disposeIntermediateTensorInfo(d),p}};function CB(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=pL({inputs:{input:a},backend:n}),t=CB({inputs:{x:e},backend:n}),r=RL({inputs:{input:a},backend:n}),s=CB({inputs:{x:r},backend:n}),o=OO({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return Hz({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const EB={kernelName:es,backendName:"webgl",kernelFunc:CB};const RB={kernelName:Ka,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=pL({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=RL({inputs:{input:r},backend:a}),o=CB({inputs:{x:s},backend:a}),i=OO({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return Hz({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const AB={kernelName:Ya,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return Mz({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{ht(s,e.shape,"All tensors passed to stack must have matching shapes"),ut(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=FL({inputs:t.map((e=>{const t=Mz({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};class _B{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=DF(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(r," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class FB{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=DF(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=tO("rc",a),c=tO("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h=["".concat(r," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(l,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(l,") {")],d=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===a?2:4;f<m;f++)p+="\n        ".concat(h[f],"\n        if (").concat(d,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(r," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ");p+=1===a?"} ":"}}",this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const DB=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:o}=a;if(0===pt(r.shape)){const e=s.map(((e,t)=>e[0]+r.shape[t]+e[1]));return Hz({backend:n,attrs:{shape:e,value:o,dtype:r.dtype}})}const i=Ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FB(r.shape,s,o):new _B(r.shape,s,o),c=[[o]];return n.runWebGLProgram(i,[r],r.dtype,c)},OB={kernelName:Qa,backendName:"webgl",kernelFunc:DB},MB=HO({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+AO+"\n  return result;\n"}),LB={kernelName:Za,backendName:"webgl",kernelFunc:MB};const zB={kernelName:$a,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=[],l=vt(s,r.shape);let u=l;const h=ju(u,i);let d,p=r;if(null!=h&&(p=cM({inputs:{x:r},backend:n,attrs:{perm:h}}),u=Ku(u.length,i),c.push(p)),Hu("prod",u,i),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:a,outDtype:r}=AD(p.shape,p.dtype,e,u);d=n.makeTensorInfo(a,r,t)}else{const[e,t]=Uu(p.shape,u),a=pt(t),s=JO({inputs:{x:p},backend:n,attrs:{shape:[-1,a]}}),o=nM(s,uo(r.dtype),"prod",n);d=JO({inputs:{x:o},backend:n,attrs:{shape:e}}),c.push(s),c.push(o)}if(o){c.push(d);const e=Gu(d.shape,l);d=JO({inputs:{x:d},backend:n,attrs:{shape:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const PB={kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.readSync(e.dataId))),l=r.map((e=>e.shape)),u=n.readSync(s.dataId),h=n.readSync(o.dataId),[d,p,f]=_D(c,l,u,s.shape,s.dtype,h,o.shape,i),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}};const BB={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=FD(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};const WB={kernelName:nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.readSync(r.dataId),u=n.readSync(s.dataId),h=n.readSync(o.dataId),d=i.map((e=>n.readSync(e.dataId))),p=i.map((e=>e.shape)),[f,m]=DD(l,r.shape,u,s.shape,s.dtype,h,o.shape,d,p,c);return n.makeTensorInfo(f,s.dtype,m)}},VB=e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:o}=n,i=OD(a,r,s,o);return t.makeTensorInfo([i.length],o,i)},UB={kernelName:ar,backendName:"webgl",kernelFunc:VB},GB=GO({opSnippet:"return 1.0 / x;"}),HB={kernelName:sr,backendName:"webgl",kernelFunc:GB},jB=GO({opSnippet:lO+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),qB={kernelName:or,backendName:"webgl",kernelFunc:jB},KB=GO({opSnippet:lO+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),XB={kernelName:dr,backendName:"webgl",kernelFunc:KB};class YB{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class QB{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const ZB={kernelName:ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a,[c,l]=i,u=Ht().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new QB(r.shape,c,l,s,o):new YB(r.shape,c,l,s,o);return n.runWebGLProgram(u,[r],"float32")}};class JB{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(r-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const $B={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new JB(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class eW{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class tW{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const nW={kernelName:cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a,[c,l]=i,u=Ht().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new tW(r.shape,c,l,s,o):new eW(r.shape,c,l,s,o);return n.runWebGLProgram(u,[r],r.dtype)}};class aW{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const rW={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new aW(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class sW{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=e,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(e[0]," - coord - 1));\n        }\n      "));const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),r=DF(n);this.userCode="\n      void main() {\n        ".concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class oW{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=e;const a=tO("rc",n),r="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),s="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),o=DF(n);function i(n){const a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(r,n))),r=a.join(","),s=a.slice(-2).join(",");return"getChannel(getX(".concat(r,"), vec2(").concat(s,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(e[0]," - rc - 1),\n            ").concat(e[0]," - rc - 1);\n          if(").concat(r,"){\n              result.g = getChannel(getX(").concat(e[0]," - (rc  + 1) - 1),\n                ").concat(e[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(o," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(e){return i(e)}(a.slice()),";\n          if(").concat(r,"){\n            result.g = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(a.slice()),";\n          }\n          if(").concat(s,") {\n            result.b = ").concat(function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            if(").concat(r,") {\n              result.a = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const iW={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,o=r.shape.length,i=vt(s,r.shape);if(0===o)return FO({inputs:{x:r},backend:n});const c=Ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new oW(r.shape,i):new sW(r.shape,i);return n.runWebGLProgram(c,[r],r.dtype)}};class cW{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let r="";r="number"===typeof t?"float outputValue = ".concat(t.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(t.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(r,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const lW={kernelName:as,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:o,center:i}=n,c=a,l=new cW(r.shape,o),[u,h]=Jf(i,r.shape[1],r.shape[2]),d=[[u,h,Math.sin(s),Math.cos(s)]];return c.runWebGLProgram(l,[r],r.dtype,d)}},uW=GO({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),hW={kernelName:fr,backendName:"webgl",kernelFunc:uW},dW=GO({opSnippet:"return inversesqrt(x);",cpuKernelImpl:MD}),pW={kernelName:mr,backendName:"webgl",kernelFunc:dW};class fW{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=DF(r.length),c=DF(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(e,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(t,"; j++) {\n              int index = round(").concat(u,");\n              flattenedIndex += index * ").concat(m,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(d,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(f,", sum, float(found)));\n        }\n      ")}}class mW{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const i=DF(r.length),c=DF(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(e,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(t,"; j+=2) {\n              ivec4 index = round(").concat(u,");\n              flattenedIndex += index.xz * ").concat(m,";\n              if (j + 1 < ").concat(t,") {\n                flattenedIndex += index.yw * ").concat(g,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(d,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(f,", sum, found));\n        }\n      ")}}const gW={kernelName:gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:o}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=rp(0,r,o),d=[h/l,l];if(0===h)return n.makeTensorInfo(o,r.dtype);const p=JO({inputs:{x:r},backend:n,attrs:{shape:[c,i]}}),f=JO({inputs:{x:s},backend:n,attrs:{shape:[c,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=Ht().getBool("WEBGL_PACK")?new mW(c,i,p.shape.length,f.shape.length,u,d):new fW(c,i,p.shape.length,f.shape.length,u,d);const y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=JO({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class yW{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r="for (int i = 0; i < ".concat(Math.ceil(Math.log2(t+1)),"; ++i) { if (left >= right) break;"),s=2===Ht().getNumber("WEBGL_VERSION")?"while (left < right) {":r,o="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(s,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(o," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const bW={kernelName:br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,i=new yW(r.shape[0],r.shape[1],s.shape[1],o),c=[[r.shape[1]]];return n.runWebGLProgram(i,[r,s],"int32",c)}};class xW{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let a=0;a<t.length;a++)o.push("".concat(n[a])),a<e&&s.push("".concat(n[a]));a=s.join(),r=o.join()}const s=DF(n);this.userCode="\n      void main() {\n        ".concat(s," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(r,"));\n        } else {\n          setOutput(getB(").concat(r,"));\n        }\n      }\n    ")}}const vW={kernelName:xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,o=new xW(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[a,r,s],lo(r.dtype,s.dtype))}},wW=GO({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(sm,";\n  float scale = ").concat(om,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),kW={kernelName:vr,backendName:"webgl",kernelFunc:wW},SW=GO({opSnippet:UO+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:zD}),NW={kernelName:Ir,backendName:"webgl",kernelFunc:SW},IW=GO({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),TW={kernelName:Nr,backendName:"webgl",kernelFunc:IW},CW=GO({opSnippet:UO+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(AO,"\n  return result;\n")}),EW={kernelName:kr,backendName:"webgl",kernelFunc:CW},RW=GO({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),AW={kernelName:Sr,backendName:"webgl",kernelFunc:RW},_W=GO({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),FW={kernelName:Tr,backendName:"webgl",kernelFunc:_W},DW={kernelName:Rr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:o}=a;ut(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((e,t)=>e*t)),c=[[0,0]];c.push(...o);for(let y=1+s.length;y<r.shape.length;++y)c.push([0,0]);const l=[],u=DB({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),h=$f(u.shape,s,i,!1),d=em(h.length,s.length,!1),p=tm(u.shape,s,i,!1),f=JO({inputs:{x:u},backend:n,attrs:{shape:h}}),m=cM({inputs:{x:f},backend:n,attrs:{perm:d}}),g=JO({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(u),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const OW={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.readSync(a.dataId),c=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(o.dataId)[0],[h,d,p,f,m]=WD(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};const MW={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.readSync(r.dataId)),i=n.readSync(a.dataId),c=Array.from(n.readSync(s.dataId)),[l,u,h]=VD(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};const LW={kernelName:Or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=UD(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const zW={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=UD(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const PW={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:o}=t,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=rp(0,r,i),p=!1;if("string"===s.dtype){const e=n.bufferSync(r),t=n.bufferSync(s),a=Ls(n.readSync(o.dataId)[0]),f=LD(e,t,i,d,u,l,c,h,a,p);return n.makeTensorInfo(i,f.dtype,f.values)}const f=new fW(l,c,r.shape.length,s.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[s,r,o],s.dtype),g=JO({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(m),g}};const BW={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:o}=a,i=vt(o,r.shape)[0],c=_m(r,s,i),l=r.shape.length,u=new Array(l).fill(0),h=r.shape.slice();return c.map((e=>{const t=[...h];t[i]=e;const a=sL({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[i]+=e,a}))}},WW="return sqrt(x);",VW=GO({opSnippet:WW,packedOpSnippet:WW,cpuKernelImpl:GD}),UW={kernelName:Cr,backendName:"webgl",kernelFunc:VW},GW={kernelName:Pr,backendName:"webgl",kernelFunc:GO({opSnippet:"return x * x;"})},HW="return (a - b) * (a - b);",jW=HO({opSnippet:HW,packedOpSnippet:HW}),qW={kernelName:zr,backendName:"webgl",kernelFunc:jW};const KW={kernelName:Br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const s=Km(n.readSync(r.dataId)),o=HD(s,"string",a);return n.makeTensorInfo(r.shape,"string",o)}};const XW={kernelName:ts,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,s=lO+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),o=new cO(r.shape,s);return a.runWebGLProgram(o,[r],r.dtype)}};class YW{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=DF(n.length),s=DF(n.length);let o="";if(1===a)o="coords * strides + begin";else{let e=0;o=n.map(((t,a)=>(e++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(e-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(r," begin = ").concat(r,"(").concat(e,");\n      ").concat(r," strides = ").concat(r,"(").concat(t,");\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        setOutput(getX(").concat(o,"));\n      }\n    ")}}const QW={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=a,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=yl(r.shape,s,o,i,c,l,u,h,d);let w;if(m)w=JO({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){ut(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=rl(b,x,v),t=sL({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=JO({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=Yi(r.shape,r.dtype,e),a=jD(p,t,v,b);w=n.makeTensorInfo(f,r.dtype,a.values)}else{const e=new YW(b,v,p);w=n.runWebGLProgram(e,[r],r.dtype)}}const k=JO({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};const ZW={kernelName:Vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:h}=t,d=n.readSync(u.dataId),p=n.readSync(h.dataId),[f,m]=qD(d,p,r,s,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const JW={kernelName:Ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.readSync(s.dataId),c=n.readSync(o.dataId)[0],[l,u,h]=KD(i,c,r),d=u.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const $W={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=XD(o,r);return n.makeTensorInfo(s.shape,"int32",i)}},eV=GO({opSnippet:"return tan(x);"}),tV={kernelName:jr,backendName:"webgl",kernelFunc:eV},nV=GO({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),aV={kernelName:qr,backendName:"webgl",kernelFunc:nV};const rV={kernelName:yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:s,updates:o}=t,{}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=rp(0,s,r.shape),d=[h/l,l];if(0===h)return n.makeTensorInfo(r.shape,s.dtype);const p=JO({inputs:{x:s},backend:n,attrs:{shape:[c,i]}}),f=JO({inputs:{x:o},backend:n,attrs:{shape:[c,l]}}),m=JO({inputs:{x:r},backend:n,attrs:{shape:d}}),g=new fW(c,i,p.shape.length,f.shape.length,u,d,!1,!0),y=n.runWebGLProgram(g,[f,p,m],m.dtype),b=JO({inputs:{x:y},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class sV{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const a=DF(this.rank),r=function(e){const t=e.length;if(t>5)throw Error("Tile for rank ".concat(t," is not yet supported"));if(1===t)return"imod(resRC, ".concat(e[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push("imod(".concat(n[r],", ").concat(e[r],")"));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}function oV(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>Ls(e))):e,a=Yi(r.shape,r.dtype,t),o=QD(a,s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new sV(r.shape,s);return n.runWebGLProgram(o,[r],r.dtype)}const iV={kernelName:Kr,backendName:"webgl",kernelFunc:oV};class cV{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class lV{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function uV(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function hV(e){let t=1;for(;t<e;)t*=2;return t}const dV={kernelName:Xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a,i=Ht().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=Ht().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=r.shape,u=l[l.length-1];if(n.shouldExecuteOnCPU([r])||u<i||s>c){const e=n.readSync(r.dataId),[t,a]=ZD(e,l,r.dtype,s,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,r.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===u)return[r,Hz({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(r):r,f=pt(l)/u,m=JO({inputs:{x:p},attrs:{shape:[f,u]},backend:n});d&&uV(n,p);const g=hV(s),y=hV(u);let b=null;const x=()=>null===b?[m,m]:[m,b],v=(e,t,a)=>{const r=x(),s=new cV(a),o=[[u],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=b;b=n.runWebGLProgram(s,r,"int32",o),uV(n,i)};for(let I=1;I<g;I*=2){const e=2*I;for(let t=I;t>=1;t/=2)v(e,t,[f,y])}for(let I=y;I>g;I/=2){const e=x(),t=new lV([f,I/2]),a=[[u],[null===b?1:0],[g]],r=b;b=n.runWebGLProgram(t,e,"int32",a),uV(n,r);const s=g/2,o=2*s;for(let n=s;n>=1;n/=2)v(o,n,b.shape)}let w=b;b=sL({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),uV(n,w);let k=lP({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});uV(n,m);const S=l.slice(0,-1);S.push(s),w=b,b=JO({inputs:{x:b},attrs:{shape:S},backend:n}),uV(n,w);const N=k;return k=JO({inputs:{x:k},attrs:{shape:S},backend:n}),uV(n,N),[k,b]}};class pV{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(e," && 0 <= coordX && coordX < ").concat(t,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(r,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(r,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(t,"));\n                float mapY = mapCoord(inY, float(").concat(e,"));\n\n                if (").concat(o," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const fV={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=a,[u,h,d,p]=r.shape,[f,m]=null!=l?l:[h,d],g=new pV(h,d,o,i,c,[u,f,m,p]);return n.runWebGLProgram(g,[r,s],"float32")}};const mV={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;mF(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=a.readSync(s.dataId),{outputValues:i,outputShape:c,indices:l}=$D(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const gV={kernelName:Jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r,i=o.shape.length,c=r.shape[s],l=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==s&&(l[u++]=o.shape[m]);const h=[],d=new Array(i).fill(0),p=o.shape.slice();p[s]=1;const f=new Array(c);for(let m=0;m<f.length;m++){d[s]=m;const e=sL({inputs:{x:o},backend:n,attrs:{begin:d,size:p}}),t=JO({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class yV{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,o=s*Math.ceil(r/n);this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      "));let h="";r%n>0&&(h="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(h,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(s,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(s,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const bV={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:o}=a,i=r.shape.length,c=[];let l=0;const u=ju([l],i);let h=r;null!=u&&(h=cM({inputs:{x:r},backend:n,attrs:{perm:u}}),c.push(h),l=Ku(1,i)[0]);const d=jm(h.shape,l,o),p=pt([h.shape[l]]),f=JO({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});c.push(f);const m=uo(r.dtype),g=(e,t,a,r,s)=>{const o=e.shape[0],i=e.shape[1],l=Hm(i,s),u=new yV({windowSize:l,inSize:i,batchSize:o,numSegments:s},t),h=n.compileAndRun(u,[e,a],r);if(c.push(h),h.shape[1]===s)return h;const d=VB({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=oV({inputs:{x:d},backend:n,attrs:{reps:[i/l]}});c.push(d),c.push(p);return g(h,t,p,r,s)},y=JO({inputs:{x:g(f,"unsortedSegmentSum",s,m,o)},backend:n,attrs:{shape:d}});let b=y;if(null!=u){c.push(y);const e=qu(u);b=cM({inputs:{x:b},backend:n,attrs:{perm:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},xV=[dM,fM,gM,bM,wM,NM,IM,TM,FM,DM,MM,zM,BM,VM,GM,qM,KM,QM,ZM,JM,tL,iL,cL,lL,uL,gL,xL,kL,MO,IL,DL,VL,qL,XL,YL,QL,ZL,$L,tz,az,lz,uz,hz,pz,gz,xz,vz,kz,Nz,Iz,Cz,Ez,Az,Fz,Oz,Lz,Bz,Uz,jz,Kz,Qz,Jz,tP,rP,sP,iP,uP,dP,fP,DO,mP,AL,yP,xP,wP,PO,SP,IP,TP,EP,AP,FP,OP,LP,BP,VP,GP,jP,qP,KP,QP,ZP,JP,$P,eB,nB,sB,iB,gB,ZO,bB,vB,kB,NB,dL,TB,RB,AB,OB,LB,VO,zB,PB,BB,WB,UB,fL,uB,HB,qB,XB,$O,ZB,$B,nW,rW,iW,lW,hW,pW,gW,bW,vW,kW,NW,TW,EW,AW,oL,mB,FW,DW,OW,MW,LW,zW,PW,BW,UW,GW,qW,KW,XW,QW,ZW,JW,$W,pB,iM,tV,aV,rV,iV,dV,fV,lM,mV,gV,bV,EB];for(const n of xV)fs(n);const vV=["cone"];class wV{constructor(){this.get=e=>this.palette[Math.floor(e)%this.n],this.palette=["#FF3838","#FF9D97","#FF701F","#FFB21D","#CFD231","#48F90A","#92CC17","#3DDB86","#1A9334","#00D4BB","#2C99A8","#00C2FF","#344593","#6473FF","#0018EC","#8438FF","#520085","#CB38FF","#FF95C8","#FF37C7"],this.n=this.palette.length}}wV.hexToRgba=(e,t)=>{var n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return n?"rgba(".concat([parseInt(n[1],16),parseInt(n[2],16),parseInt(n[3],16)].join(", "),", ").concat(t,")"):null};const kV=vV.length,SV=async function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:()=>{};const s=Date.now(),[o,i]=t.inputShape.slice(1,3);Wo().startScope();const[c,l,u]=((e,t,n)=>{let a,r;return[Uo((()=>{const s=$c(e),[o,i]=s.shape.slice(0,2),c=Math.max(i,o),l=s.pad([[0,c-o],[0,c-i],[0,0]]);return a=c/i,r=c/o,Mf.resizeBilinear(l,[t,n]).div(255).expandDims(0)})),a,r]})(e,o,i),h=t.net.execute(c),d=h.transpose([0,2,1]),p=Uo((()=>{const e=d.slice([0,0,2],[-1,-1,1]),t=d.slice([0,0,3],[-1,-1,1]),n=bc(d.slice([0,0,0],[-1,-1,1]),tc(e,2)),a=bc(d.slice([0,0,1],[-1,-1,1]),tc(t,2));return Yl([a,n,$i(a,t),$i(n,e)],2).squeeze()})),[f,m]=Uo((()=>{const e=d.slice([0,0,4],[-1,-1,kV]).squeeze(0);return[e.max(1),e.argMax(1)]})),g=await Mf.nonMaxSuppressionAsync(p,f,5,.15,.7),y=p.gather(g,0).dataSync(),b=f.gather(g,0).dataSync(),x=m.gather(g,0).dataSync(),v=[];for(let N=0;N<b.length;++N){let[e,t,n,a]=y.slice(4*N,4*(N+1));t*=l,a*=l,e*=u,n*=u;let r=(t+a)/2/o,s=(e+n)/2/i;v.push({x:r,y:s,width:(a-t)/o,height:(n-e)/i,score:b[N],class:x[N]})}v.length>0&&(async(e,t)=>{const n="https://".concat(t,".tail49268.ts.net:8000/cone_detections");try{const t=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({detections:e})});if(!t.ok)throw new Error("HTTP error! status: ".concat(t.status));return await t.json()}catch(a){console.error("Error sending data:",a)}})(v,a),((e,t,n,a,r)=>{const s=e.getContext("2d");s.clearRect(0,0,s.canvas.width,s.canvas.height);const o=new wV,i="".concat(Math.max(Math.round(Math.max(s.canvas.width,s.canvas.height)/40),14),"px Arial");s.font=i,s.textBaseline="top";for(let c=0;c<n.length;++c){const e=vV[a[c]],l=o.get(a[c]),u=(100*n[c]).toFixed(1);let[h,d,p,f]=t.slice(4*c,4*(c+1));d*=r[0],f*=r[0],h*=r[1],p*=r[1];const m=f-d,g=p-h;s.fillStyle=wV.hexToRgba(l,.2),s.fillRect(d,h,m,g),s.strokeStyle=l,s.lineWidth=Math.max(Math.min(s.canvas.width,s.canvas.height)/200,2.5),s.strokeRect(d,h,m,g),s.fillStyle=l;const y=s.measureText(e+" - "+u+"%").width,b=parseInt(i,10),x=h-(b+s.lineWidth);s.fillRect(d-1,x<0?0:x,y+s.lineWidth,b+s.lineWidth),s.fillStyle="#ffffff",s.fillText(e+" - "+u+"%",d-1,x<0?0:x)}})(n,y,b,x,[l,u]),Go([h,d,p,f,m,g]),r(),Wo().endScope();const w=Date.now()-s,k=n.getContext("2d");k.fillStyle="black",k.fillRect(0,0,110,55),k.fillStyle="white",k.font="Bold 16px Arial",k.fillText("Time: ".concat(w,"ms"),10,10);const S=1e3/w;k.fillText("FPS : ".concat(S.toFixed(2)),10,30)};class NV{constructor(){this.requestCameraPermission=async()=>{try{await navigator.mediaDevices.getUserMedia({video:!0})}catch(e){console.error("Error accessing camera:",e)}},this.openNormalCamera=async(e,t)=>{this.requestCameraPermission().then((async()=>{if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){const n=await navigator.mediaDevices.enumerateDevices();let a=n.find((e=>"videoinput"===e.kind&&e.label.toLowerCase().includes("back")&&!e.label.toLowerCase().includes("wide")&&!e.label.toLowerCase().includes("telephoto")&&!e.label.toLowerCase().includes("dual")&&!e.label.toLowerCase().includes("triple")));if(a||(console.log("No NORMAL BACK camera found, using any video input."),a=n.find((e=>"videoinput"===e.kind))),!a)return alert("No back camera found!"),void t(!1);navigator.mediaDevices.getUserMedia({video:{deviceId:{exact:a.deviceId}}}).then((n=>{e.srcObject=n,e.style.display="block",t("normal")}))}})).catch((e=>{throw console.error("Error accessing camera:",e),e}))},this.openTelephotoCamera=async(e,t)=>{this.requestCameraPermission().then((async()=>{if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){const n=await navigator.mediaDevices.enumerateDevices();let a=n.find((e=>"videoinput"===e.kind&&e.label.toLowerCase().includes("back")&&e.label.toLowerCase().includes("telephoto")&&!e.label.toLowerCase().includes("wide")&&!e.label.toLowerCase().includes("dual")&&!e.label.toLowerCase().includes("triple")));if(a||(console.log("No TELEPHOTO BACK camera found, using any video input."),a=n.find((e=>"videoinput"===e.kind))),!a)return alert("No back camera found!"),void t(!1);navigator.mediaDevices.getUserMedia({video:{deviceId:{exact:a.deviceId}}}).then((n=>{e.srcObject=n,e.style.display="block",t("telephoto")}))}})).catch((e=>{throw console.error("Error accessing camera:",e),e}))},this.close=(e,t)=>{e.srcObject&&(e.srcObject.getTracks().forEach((e=>{e.stop()})),e.srcObject=null,e.style.display="none"),t(!1)}}}var IV=n(579);const TV=function(){const e=window.location.href.split("?")[0],t="cones_yolov8s",[n,a]=(0,R.useState)({loading:!0,progress:0}),[r,s]=(0,R.useState)({net:null,inputShape:[1,0,0,3]}),o="survy-mac",[i,c]=(0,R.useState)(o),l=(0,R.useRef)(null),u=(0,R.useRef)(null),h=new NV,[d,p]=(0,R.useState)(!1);return(0,R.useEffect)((()=>{ko.ready().then((async()=>{const n=await SN("".concat(e,"/").concat(t,"/model.json"),{onProgress:e=>{a({loading:!0,progress:e})}}),r=zh(n.inputs[0].shape),o=n.execute(r);a({loading:!1,progress:1}),s({net:n,inputShape:n.inputs[0].shape}),Go([o,r])}))}),[e]),(0,R.useEffect)((()=>{r.net&&h.openNormalCamera(l.current,p)}),[r]),(0,IV.jsx)("div",{className:"flex justify-center",children:(0,IV.jsxs)("div",{className:"max-w-screen-md w-full",children:[(0,IV.jsx)("div",{className:"flex justify-center m-2",children:(0,IV.jsx)("h1",{className:"text-xl text-gray-800 font-semibold",children:"Camera Streamer!"})}),(0,IV.jsxs)("div",{className:"flex justify-center m-2 text-sm text-gray-800",children:[n.loading&&(0,IV.jsxs)("div",{children:["Loading: ",(0,IV.jsxs)("strong",{children:[(100*n.progress).toFixed(2),"%"]})]}),!n.loading&&1===n.progress&&(0,IV.jsxs)("div",{children:["Model: ",(0,IV.jsx)("strong",{children:t})]})]}),(0,IV.jsx)("div",{className:"flex justify-center m-2",children:(0,IV.jsx)("div",{className:"text-sm text-gray-800 w-full max-w-60",children:(0,IV.jsxs)("select",{value:o,onChange:e=>c(e.target.value),className:"w-full p-2 border border-gray-300 rounded-md",children:[(0,IV.jsx)("option",{value:e,children:"Select server"}),(0,IV.jsx)("option",{value:"survy-mac",children:"Server: survy-mac"}),(0,IV.jsx)("option",{value:"raspberrypi",children:"Server: raspberrypi"})]})})}),(0,IV.jsxs)("div",{className:"grid grid-cols-2 m-2 space-x-2 text-lg",children:[(0,IV.jsx)("button",{disabled:"telephoto"===d,className:"\n            bg-blue-500 text-white font-bold p-4 rounded\n            ".concat("telephoto"===d?"opacity-50":"","\n            "),onClick:()=>{d?h.close(l.current,p):h.openNormalCamera(l.current,p)},children:"normal"===d?"Stop":"Normal"}),(0,IV.jsx)("button",{disabled:"normal"===d,className:"\n            bg-blue-500 text-white font-bold p-4 rounded\n            ".concat("normal"===d?"opacity-50":"","\n            "),onClick:()=>{"telephoto"===d?h.close(l.current,p):(h.close(l.current,p),h.openTelephotoCamera(l.current,p))},children:"telephoto"===d?"Stop":"Telephoto"})]}),(0,IV.jsxs)("div",{className:"relative m-2",children:[(0,IV.jsx)("video",{className:"w-full h-auto",autoPlay:!0,display:"none",playsInline:!0,muted:!0,ref:l,onPlay:()=>((e,t,n,a)=>{const r=async()=>{if(0!==e.videoWidth||null!==e.srcObject)SV(e,t,n,a,(()=>{requestAnimationFrame(r)}));else{const e=n.getContext("2d");e.clearRect(0,0,e.canvas.width,e.canvas.height)}};r()})(l.current,r,u.current,i)}),(0,IV.jsx)("canvas",{className:"absolute top-0 left-0 w-full h-full",width:r.inputShape[1],height:r.inputShape[2],ref:u})]})]})})};const CV=function(){return(0,IV.jsx)("div",{className:"flex justify-center",children:(0,IV.jsxs)("div",{className:"max-w-screen-md w-full",children:[(0,IV.jsx)("div",{className:"flex justify-center m-2",children:(0,IV.jsx)("h1",{className:"text-xl text-gray-800 font-semibold",children:"Control Center!"})}),(0,IV.jsx)("div",{className:"grid grid-cols-1 m-2 space-y-2 text-lg ",children:(0,IV.jsx)("a",{href:"/robo_magellan",className:"bg-gray-300 text-black font-bold p-4 rounded text-center",children:"Home"})})]})})};function EV(){return(0,IV.jsx)("div",{className:"flex justify-center",children:(0,IV.jsxs)("div",{className:"max-w-screen-md w-full",children:[(0,IV.jsx)("div",{className:"flex justify-center m-2",children:(0,IV.jsx)("h1",{className:"text-xl text-gray-800 font-semibold",children:"Home!"})}),(0,IV.jsxs)("div",{className:"grid grid-cols-1 m-2 space-y-2 text-lg ",children:[(0,IV.jsx)("a",{href:"/robo_magellan?pg=cone_detector",className:"bg-blue-500 text-white font-bold p-4 rounded text-center",children:"\ud83d\udcf8 \xa0 Cone Detector"}),(0,IV.jsx)("a",{href:"/robo_magellan?pg=control_center",className:"bg-blue-500 text-white font-bold p-4 rounded text-center",children:"\u2699\ufe0f \xa0 Control Center"})]})]})})}const RV=function(){const{search:e}=ye(),t=nt.parse(e);return(0,IV.jsxs)("div",{children:["cone_detector"===t.pg&&(0,IV.jsx)(TV,{}),"control_center"===t.pg&&(0,IV.jsx)(CV,{}),!t.pg&&(0,IV.jsx)(EV,{})]})};const AV=function(){return(0,IV.jsxs)(Ae,{children:[(0,IV.jsx)(Ee,{path:"/",element:(0,IV.jsx)(RV,{})}),(0,IV.jsx)(Ee,{path:"robo_magellan",element:(0,IV.jsx)(RV,{})})]})},_V=e=>{e&&e instanceof Function&&n.e(453).then(n.bind(n,453)).then((t=>{let{getCLS:n,getFID:a,getFCP:r,getLCP:s,getTTFB:o}=t;n(e),a(e),r(e),s(e),o(e)}))};var FV=n(950),DV=n.t(FV,2);new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);try{window.__reactRouterVersion="6"}catch(BV){}new Map;const OV=A.startTransition;DV.flushSync,A.useId;function MV(e){let{basename:t,children:n,future:a,window:r}=e,s=R.useRef();var o;null==s.current&&(s.current=(void 0===(o={window:r,v5Compat:!0})&&(o={}),W((function(e,t){let{pathname:n,search:a,hash:r}=e.location;return z("",{pathname:n,search:a,hash:r},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){return"string"===typeof t?t:P(t)}),null,o)));let i=s.current,[c,l]=R.useState({action:i.action,location:i.location}),{v7_startTransition:u}=a||{},h=R.useCallback((e=>{u&&OV?OV((()=>l(e))):l(e)}),[l,u]);return R.useLayoutEffect((()=>i.listen(h)),[i,h]),R.createElement(Re,{basename:t,children:n,location:c.location,navigationType:c.action,navigator:i,future:a})}"undefined"!==typeof window&&"undefined"!==typeof window.document&&window.document.createElement;var LV,zV;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"})(LV||(LV={})),function(e){e.UseFetcher="useFetcher",e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(zV||(zV={}));_.createRoot(document.getElementById("root")).render((0,IV.jsx)(R.StrictMode,{children:(0,IV.jsx)(MV,{children:(0,IV.jsx)(AV,{})})})),_V()})()})();
//# sourceMappingURL=main.5d9fd345.js.map