/*! For license information please see main.9f96408a.js.LICENSE.txt */
(()=>{var e={353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(I){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var r={},s={};function o(e,t){var n,a,o;return t?(o=0<=(e>>>=0)&&e<256)&&(a=s[e])?a:(n=c(e,(0|e)<0?-1:0,!0),o&&(s[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(a=r[e])?a:(n=c(e,e<0?-1:0,!1),o&&(r[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?i(-e,t).neg():c(e%d|0,e/d|0,t)}function c(e,t,a){return new n(e,t,a)}n.fromInt=o,n.fromNumber=i,n.fromBits=c;var l=Math.pow;function u(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return u(e.substring(1),t,n).neg();for(var r=i(l(n,8)),s=g,o=0;o<e.length;o+=8){var c=Math.min(8,e.length-o),h=parseInt(e.substring(o,o+c),n);if(c<8){var d=i(l(n,c));s=s.mul(d).add(i(h))}else s=(s=s.mul(r)).add(i(h))}return s.unsigned=t,s}function h(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?u(e,t):c(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=u,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var x=o(1,!0);n.UONE=x;var v=o(-1);n.NEG_ONE=v;var w=c(-1,2147483647,!1);n.MAX_VALUE=w;var k=c(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=c(0,-2147483648,!1);n.MIN_VALUE=S;var N=n.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=i(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=i(l(e,6),this.unsigned),s=this,o="";;){var c=s.div(r),u=(s.sub(c.mul(r)).toInt()>>>0).toString(e);if((s=c).isZero())return u+o;for(;u.length<6;)u="0"+u;o=""+u+o}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1===(1&this.low)},N.isEven=function(){return 0===(1&this.low)},N.equals=function(e){return a(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(a(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},N.neg=N.negate,N.add=function(e){a(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,l=e.low>>>16,u=0,d=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,d+=(p+=r+l)>>>16,u+=(d+=n+i)>>>16,u+=t+o,c((p&=65535)<<16|(f&=65535),(u&=65535)<<16|(d&=65535),this.unsigned)},N.subtract=function(e){return a(e)||(e=h(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=h(e)),t)return c(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,s=this.low>>>16,o=65535&this.low,l=e.high>>>16,u=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=o*p)>>>16,y+=(b+=s*p)>>>16,b&=65535,y+=(b+=o*d)>>>16,f+=(y+=r*p)>>>16,y&=65535,f+=(y+=s*d)>>>16,y&=65535,f+=(y+=o*u)>>>16,f+=n*p+r*d+s*u+o*l,c((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(a(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;s=y}else{if(this.eq(S))return e.eq(b)||e.eq(v)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(r=this.sub(e.mul(n)),s=n.add(r.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),u=o<=48?1:l(2,o-48),d=i(n),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=i(n-=u,this.unsigned)).mul(e);d.isZero()&&(d=b),s=s.add(d),r=r.sub(p)}return s},N.div=N.divide,N.modulo=function(e){return a(e)||(e=h(e)),t?c((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return c(~this.low,~this.high,this.unsigned)},N.and=function(e){return a(e)||(e=h(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return a(e)||(e=h(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return a(e)||(e=h(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},730:(e,t,n)=>{"use strict";var a=n(43),r=n(853);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,i={};function c(e,t){l(e,t),l(e+"Capture",t)}function l(e,t){for(i[e]=t,e=0;e<t.length;e++)o.add(t[e])}var u=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),h=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function m(e,t,n,a,r,s,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=a,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function x(e,t,n,a){var r=g.hasOwnProperty(t)?g[t]:null;(null!==r?0!==r.type:a||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,a){if(null===t||"undefined"===typeof t||function(e,t,n,a){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,r,a)&&(n=null),a||null===r?function(e){return!!h.call(f,e)||!h.call(p,e)&&(d.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):r.mustUseProperty?e[r.propertyName]=null===n?3!==r.type&&"":n:(t=r.attributeName,a=r.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var v=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),N=Symbol.for("react.strict_mode"),I=Symbol.for("react.profiler"),T=Symbol.for("react.provider"),C=Symbol.for("react.context"),E=Symbol.for("react.forward_ref"),R=Symbol.for("react.suspense"),A=Symbol.for("react.suspense_list"),_=Symbol.for("react.memo"),F=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var D=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var O=Symbol.iterator;function M(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=O&&e[O]||e["@@iterator"])?e:null}var L,z=Object.assign;function P(e){if(void 0===L)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);L=t&&t[1]||""}return"\n"+L+e}var B=!1;function W(e,t){if(!e||B)return"";B=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(l){var a=l}Reflect.construct(e,[],t)}else{try{t.call()}catch(l){a=l}e.call(t.prototype)}else{try{throw Error()}catch(l){a=l}e()}}catch(l){if(l&&a&&"string"===typeof l.stack){for(var r=l.stack.split("\n"),s=a.stack.split("\n"),o=r.length-1,i=s.length-1;1<=o&&0<=i&&r[o]!==s[i];)i--;for(;1<=o&&0<=i;o--,i--)if(r[o]!==s[i]){if(1!==o||1!==i)do{if(o--,0>--i||r[o]!==s[i]){var c="\n"+r[o].replace(" at new "," at ");return e.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",e.displayName)),c}}while(1<=o&&0<=i);break}}}finally{B=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?P(e):""}function V(e){switch(e.tag){case 5:return P(e.type);case 16:return P("Lazy");case 13:return P("Suspense");case 19:return P("SuspenseList");case 0:case 2:case 15:return e=W(e.type,!1);case 11:return e=W(e.type.render,!1);case 1:return e=W(e.type,!0);default:return""}}function U(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case k:return"Portal";case I:return"Profiler";case N:return"StrictMode";case R:return"Suspense";case A:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case C:return(e.displayName||"Context")+".Consumer";case T:return(e._context.displayName||"Context")+".Provider";case E:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case _:return null!==(t=e.displayName||null)?t:U(e.type)||"Memo";case F:t=e._payload,e=e._init;try{return U(e(t))}catch(n){}}return null}function G(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return U(t);case 8:return t===N?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function H(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function j(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function q(e){e._valueTracker||(e._valueTracker=function(e){var t=j(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){a=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function K(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=j(e)?e.checked?"true":"false":e.value),(e=a)!==n&&(t.setValue(e),!0)}function X(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Y(e,t){var n=t.checked;return z({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Q(e,t){var n=null==t.defaultValue?"":t.defaultValue,a=null!=t.checked?t.checked:t.defaultChecked;n=H(null!=t.value?t.value:n),e._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Z(e,t){null!=(t=t.checked)&&x(e,"checked",t,!1)}function J(e,t){Z(e,t);var n=H(t.value),a=t.type;if(null!=n)"number"===a?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,H(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function $(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!("submit"!==a&&"reset"!==a||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&X(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,a){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&a&&(e[n].defaultSelected=!0)}else{for(n=""+H(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(a&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return z({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(s(92));if(te(n)){if(1<n.length)throw Error(s(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:H(n)}}function se(e,t){var n=H(t.value),a=H(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=a&&(e.defaultValue=""+a)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ce(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var le,ue,he=(ue=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((le=le||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=le.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,a){MSApp.execUnsafeLocalFunction((function(){return ue(e,t)}))}:ue);function de(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var a=0===n.indexOf("--"),r=me(n,t[n],a);"float"===n&&(n="cssFloat"),a?e.setProperty(n,r):e[n]=r}}Object.keys(pe).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ye=z({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(s(62))}}function xe(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ve=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Se=null,Ne=null;function Ie(e){if(e=xr(e)){if("function"!==typeof ke)throw Error(s(280));var t=e.stateNode;t&&(t=wr(t),ke(e.stateNode,e.type,t))}}function Te(e){Se?Ne?Ne.push(e):Ne=[e]:Se=e}function Ce(){if(Se){var e=Se,t=Ne;if(Ne=Se=null,Ie(e),t)for(e=0;e<t.length;e++)Ie(t[e])}}function Ee(e,t){return e(t)}function Re(){}var Ae=!1;function _e(e,t,n){if(Ae)return e(t,n);Ae=!0;try{return Ee(e,t,n)}finally{Ae=!1,(null!==Se||null!==Ne)&&(Re(),Ce())}}function Fe(e,t){var n=e.stateNode;if(null===n)return null;var a=wr(n);if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(s(231,t,typeof n));return n}var De=!1;if(u)try{var Oe={};Object.defineProperty(Oe,"passive",{get:function(){De=!0}}),window.addEventListener("test",Oe,Oe),window.removeEventListener("test",Oe,Oe)}catch(ue){De=!1}function Me(e,t,n,a,r,s,o,i,c){var l=Array.prototype.slice.call(arguments,3);try{t.apply(n,l)}catch(u){this.onError(u)}}var Le=!1,ze=null,Pe=!1,Be=null,We={onError:function(e){Le=!0,ze=e}};function Ve(e,t,n,a,r,s,o,i,c){Le=!1,ze=null,Me.apply(We,arguments)}function Ue(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function He(e){if(Ue(e)!==e)throw Error(s(188))}function je(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ue(e)))throw Error(s(188));return t!==e?null:e}for(var n=e,a=t;;){var r=n.return;if(null===r)break;var o=r.alternate;if(null===o){if(null!==(a=r.return)){n=a;continue}break}if(r.child===o.child){for(o=r.child;o;){if(o===n)return He(r),e;if(o===a)return He(r),t;o=o.sibling}throw Error(s(188))}if(n.return!==a.return)n=r,a=o;else{for(var i=!1,c=r.child;c;){if(c===n){i=!0,n=r,a=o;break}if(c===a){i=!0,a=r,n=o;break}c=c.sibling}if(!i){for(c=o.child;c;){if(c===n){i=!0,n=o,a=r;break}if(c===a){i=!0,a=o,n=r;break}c=c.sibling}if(!i)throw Error(s(189))}}if(n.alternate!==a)throw Error(s(190))}if(3!==n.tag)throw Error(s(188));return n.stateNode.current===n?e:t}(e))?qe(e):null}function qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=qe(e);if(null!==t)return t;e=e.sibling}return null}var Ke=r.unstable_scheduleCallback,Xe=r.unstable_cancelCallback,Ye=r.unstable_shouldYield,Qe=r.unstable_requestPaint,Ze=r.unstable_now,Je=r.unstable_getCurrentPriorityLevel,$e=r.unstable_ImmediatePriority,et=r.unstable_UserBlockingPriority,tt=r.unstable_NormalPriority,nt=r.unstable_LowPriority,at=r.unstable_IdlePriority,rt=null,st=null;var ot=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(it(e)/ct|0)|0},it=Math.log,ct=Math.LN2;var lt=64,ut=4194304;function ht(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var n=e.pendingLanes;if(0===n)return 0;var a=0,r=e.suspendedLanes,s=e.pingedLanes,o=268435455&n;if(0!==o){var i=o&~r;0!==i?a=ht(i):0!==(s&=o)&&(a=ht(s))}else 0!==(o=n&~r)?a=ht(o):0!==s&&(a=ht(s));if(0===a)return 0;if(0!==t&&t!==a&&0===(t&r)&&((r=a&-a)>=(s=t&-t)||16===r&&0!==(4194240&s)))return t;if(0!==(4&a)&&(a|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=a;0<t;)r=1<<(n=31-ot(t)),a|=e[n],t&=~r;return a}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=lt;return 0===(4194240&(lt<<=1))&&(lt=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-ot(n),r=1<<a;r&t|e[a]&t&&(e[a]|=t),n&=~r}}var xt=0;function vt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var wt,kt,St,Nt,It,Tt=!1,Ct=[],Et=null,Rt=null,At=null,_t=new Map,Ft=new Map,Dt=[],Ot="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Mt(e,t){switch(e){case"focusin":case"focusout":Et=null;break;case"dragenter":case"dragleave":Rt=null;break;case"mouseover":case"mouseout":At=null;break;case"pointerover":case"pointerout":_t.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ft.delete(t.pointerId)}}function Lt(e,t,n,a,r,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:s,targetContainers:[r]},null!==t&&(null!==(t=xr(t))&&kt(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==r&&-1===t.indexOf(r)&&t.push(r),e)}function zt(e){var t=br(e.target);if(null!==t){var n=Ue(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void It(e.priority,(function(){St(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Pt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Yt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=xr(n))&&kt(t),e.blockedOn=n,!1;var a=new(n=e.nativeEvent).constructor(n.type,n);ve=a,n.target.dispatchEvent(a),ve=null,t.shift()}return!0}function Bt(e,t,n){Pt(e)&&n.delete(t)}function Wt(){Tt=!1,null!==Et&&Pt(Et)&&(Et=null),null!==Rt&&Pt(Rt)&&(Rt=null),null!==At&&Pt(At)&&(At=null),_t.forEach(Bt),Ft.forEach(Bt)}function Vt(e,t){e.blockedOn===t&&(e.blockedOn=null,Tt||(Tt=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Wt)))}function Ut(e){function t(t){return Vt(t,e)}if(0<Ct.length){Vt(Ct[0],e);for(var n=1;n<Ct.length;n++){var a=Ct[n];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==Et&&Vt(Et,e),null!==Rt&&Vt(Rt,e),null!==At&&Vt(At,e),_t.forEach(t),Ft.forEach(t),n=0;n<Dt.length;n++)(a=Dt[n]).blockedOn===e&&(a.blockedOn=null);for(;0<Dt.length&&null===(n=Dt[0]).blockedOn;)zt(n),null===n.blockedOn&&Dt.shift()}var Gt=v.ReactCurrentBatchConfig,Ht=!0;function jt(e,t,n,a){var r=xt,s=Gt.transition;Gt.transition=null;try{xt=1,Kt(e,t,n,a)}finally{xt=r,Gt.transition=s}}function qt(e,t,n,a){var r=xt,s=Gt.transition;Gt.transition=null;try{xt=4,Kt(e,t,n,a)}finally{xt=r,Gt.transition=s}}function Kt(e,t,n,a){if(Ht){var r=Yt(e,t,n,a);if(null===r)Ha(e,t,a,Xt,n),Mt(e,a);else if(function(e,t,n,a,r){switch(t){case"focusin":return Et=Lt(Et,e,t,n,a,r),!0;case"dragenter":return Rt=Lt(Rt,e,t,n,a,r),!0;case"mouseover":return At=Lt(At,e,t,n,a,r),!0;case"pointerover":var s=r.pointerId;return _t.set(s,Lt(_t.get(s)||null,e,t,n,a,r)),!0;case"gotpointercapture":return s=r.pointerId,Ft.set(s,Lt(Ft.get(s)||null,e,t,n,a,r)),!0}return!1}(r,e,t,n,a))a.stopPropagation();else if(Mt(e,a),4&t&&-1<Ot.indexOf(e)){for(;null!==r;){var s=xr(r);if(null!==s&&wt(s),null===(s=Yt(e,t,n,a))&&Ha(e,t,a,Xt,n),s===r)break;r=s}null!==r&&a.stopPropagation()}else Ha(e,t,a,null,n)}}var Xt=null;function Yt(e,t,n,a){if(Xt=null,null!==(e=br(e=we(a))))if(null===(t=Ue(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ge(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Xt=e,null}function Qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case $e:return 1;case et:return 4;case tt:case nt:return 16;case at:return 536870912;default:return 16}default:return 16}}var Zt=null,Jt=null,$t=null;function en(){if($t)return $t;var e,t,n=Jt,a=n.length,r="value"in Zt?Zt.value:Zt.textContent,s=r.length;for(e=0;e<a&&n[e]===r[e];e++);var o=a-e;for(t=1;t<=o&&n[a-t]===r[s-t];t++);return $t=r.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function an(){return!1}function rn(e){function t(t,n,a,r,s){for(var o in this._reactName=t,this._targetInst=a,this.type=n,this.nativeEvent=r,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(r):r[o]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?nn:an,this.isPropagationStopped=an,this}return z(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var sn,on,cn,ln={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},un=rn(ln),hn=z({},ln,{view:0,detail:0}),dn=rn(hn),pn=z({},hn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:In,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(sn=e.screenX-cn.screenX,on=e.screenY-cn.screenY):on=sn=0,cn=e),sn)},movementY:function(e){return"movementY"in e?e.movementY:on}}),fn=rn(pn),mn=rn(z({},pn,{dataTransfer:0})),gn=rn(z({},hn,{relatedTarget:0})),yn=rn(z({},ln,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=z({},ln,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),xn=rn(bn),vn=rn(z({},ln,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Nn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function In(){return Nn}var Tn=z({},hn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:In,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Cn=rn(Tn),En=rn(z({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Rn=rn(z({},hn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:In})),An=rn(z({},ln,{propertyName:0,elapsedTime:0,pseudoElement:0})),_n=z({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Fn=rn(_n),Dn=[9,13,27,32],On=u&&"CompositionEvent"in window,Mn=null;u&&"documentMode"in document&&(Mn=document.documentMode);var Ln=u&&"TextEvent"in window&&!Mn,zn=u&&(!On||Mn&&8<Mn&&11>=Mn),Pn=String.fromCharCode(32),Bn=!1;function Wn(e,t){switch(e){case"keyup":return-1!==Dn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Vn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Un=!1;var Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function jn(e,t,n,a){Te(a),0<(t=qa(t,"onChange")).length&&(n=new un("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var qn=null,Kn=null;function Xn(e){Pa(e,0)}function Yn(e){if(K(vr(e)))return e}function Qn(e,t){if("change"===e)return t}var Zn=!1;if(u){var Jn;if(u){var $n="oninput"in document;if(!$n){var ea=document.createElement("div");ea.setAttribute("oninput","return;"),$n="function"===typeof ea.oninput}Jn=$n}else Jn=!1;Zn=Jn&&(!document.documentMode||9<document.documentMode)}function ta(){qn&&(qn.detachEvent("onpropertychange",na),Kn=qn=null)}function na(e){if("value"===e.propertyName&&Yn(Kn)){var t=[];jn(t,Kn,e,we(e)),_e(Xn,t)}}function aa(e,t,n){"focusin"===e?(ta(),Kn=n,(qn=t).attachEvent("onpropertychange",na)):"focusout"===e&&ta()}function ra(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yn(Kn)}function sa(e,t){if("click"===e)return Yn(t)}function oa(e,t){if("input"===e||"change"===e)return Yn(t)}var ia="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function ca(e,t){if(ia(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var r=n[a];if(!h.call(t,r)||!ia(e[r],t[r]))return!1}return!0}function la(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ua(e,t){var n,a=la(e);for(e=0;a;){if(3===a.nodeType){if(n=e+a.textContent.length,e<=t&&n>=t)return{node:a,offset:t-e};e=n}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=la(a)}}function ha(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?ha(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function da(){for(var e=window,t=X();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(a){n=!1}if(!n)break;t=X((e=t.contentWindow).document)}return t}function pa(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fa(e){var t=da(),n=e.focusedElem,a=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&ha(n.ownerDocument.documentElement,n)){if(null!==a&&pa(n))if(t=a.start,void 0===(e=a.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var r=n.textContent.length,s=Math.min(a.start,r);a=void 0===a.end?s:Math.min(a.end,r),!e.extend&&s>a&&(r=a,a=s,s=r),r=ua(n,s);var o=ua(n,a);r&&o&&(1!==e.rangeCount||e.anchorNode!==r.node||e.anchorOffset!==r.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(r.node,r.offset),e.removeAllRanges(),s>a?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var ma=u&&"documentMode"in document&&11>=document.documentMode,ga=null,ya=null,ba=null,xa=!1;function va(e,t,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;xa||null==ga||ga!==X(a)||("selectionStart"in(a=ga)&&pa(a)?a={start:a.selectionStart,end:a.selectionEnd}:a={anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},ba&&ca(ba,a)||(ba=a,0<(a=qa(ya,"onSelect")).length&&(t=new un("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=ga)))}function wa(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var ka={animationend:wa("Animation","AnimationEnd"),animationiteration:wa("Animation","AnimationIteration"),animationstart:wa("Animation","AnimationStart"),transitionend:wa("Transition","TransitionEnd")},Sa={},Na={};function Ia(e){if(Sa[e])return Sa[e];if(!ka[e])return e;var t,n=ka[e];for(t in n)if(n.hasOwnProperty(t)&&t in Na)return Sa[e]=n[t];return e}u&&(Na=document.createElement("div").style,"AnimationEvent"in window||(delete ka.animationend.animation,delete ka.animationiteration.animation,delete ka.animationstart.animation),"TransitionEvent"in window||delete ka.transitionend.transition);var Ta=Ia("animationend"),Ca=Ia("animationiteration"),Ea=Ia("animationstart"),Ra=Ia("transitionend"),Aa=new Map,_a="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Fa(e,t){Aa.set(e,t),c(t,[e])}for(var Da=0;Da<_a.length;Da++){var Oa=_a[Da];Fa(Oa.toLowerCase(),"on"+(Oa[0].toUpperCase()+Oa.slice(1)))}Fa(Ta,"onAnimationEnd"),Fa(Ca,"onAnimationIteration"),Fa(Ea,"onAnimationStart"),Fa("dblclick","onDoubleClick"),Fa("focusin","onFocus"),Fa("focusout","onBlur"),Fa(Ra,"onTransitionEnd"),l("onMouseEnter",["mouseout","mouseover"]),l("onMouseLeave",["mouseout","mouseover"]),l("onPointerEnter",["pointerout","pointerover"]),l("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ma="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),La=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ma));function za(e,t,n){var a=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,a,r,o,i,c,l){if(Ve.apply(this,arguments),Le){if(!Le)throw Error(s(198));var u=ze;Le=!1,ze=null,Pe||(Pe=!0,Be=u)}}(a,t,void 0,e),e.currentTarget=null}function Pa(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var a=e[n],r=a.event;a=a.listeners;e:{var s=void 0;if(t)for(var o=a.length-1;0<=o;o--){var i=a[o],c=i.instance,l=i.currentTarget;if(i=i.listener,c!==s&&r.isPropagationStopped())break e;za(r,i,l),s=c}else for(o=0;o<a.length;o++){if(c=(i=a[o]).instance,l=i.currentTarget,i=i.listener,c!==s&&r.isPropagationStopped())break e;za(r,i,l),s=c}}}if(Pe)throw e=Be,Pe=!1,Be=null,e}function Ba(e,t){var n=t[mr];void 0===n&&(n=t[mr]=new Set);var a=e+"__bubble";n.has(a)||(Ga(t,e,2,!1),n.add(a))}function Wa(e,t,n){var a=0;t&&(a|=4),Ga(n,e,a,t)}var Va="_reactListening"+Math.random().toString(36).slice(2);function Ua(e){if(!e[Va]){e[Va]=!0,o.forEach((function(t){"selectionchange"!==t&&(La.has(t)||Wa(t,!1,e),Wa(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Va]||(t[Va]=!0,Wa("selectionchange",!1,t))}}function Ga(e,t,n,a){switch(Qt(t)){case 1:var r=jt;break;case 4:r=qt;break;default:r=Kt}n=r.bind(null,t,n,e),r=void 0,!De||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(r=!0),a?void 0!==r?e.addEventListener(t,n,{capture:!0,passive:r}):e.addEventListener(t,n,!0):void 0!==r?e.addEventListener(t,n,{passive:r}):e.addEventListener(t,n,!1)}function Ha(e,t,n,a,r){var s=a;if(0===(1&t)&&0===(2&t)&&null!==a)e:for(;;){if(null===a)return;var o=a.tag;if(3===o||4===o){var i=a.stateNode.containerInfo;if(i===r||8===i.nodeType&&i.parentNode===r)break;if(4===o)for(o=a.return;null!==o;){var c=o.tag;if((3===c||4===c)&&((c=o.stateNode.containerInfo)===r||8===c.nodeType&&c.parentNode===r))return;o=o.return}for(;null!==i;){if(null===(o=br(i)))return;if(5===(c=o.tag)||6===c){a=s=o;continue e}i=i.parentNode}}a=a.return}_e((function(){var a=s,r=we(n),o=[];e:{var i=Aa.get(e);if(void 0!==i){var c=un,l=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":c=Cn;break;case"focusin":l="focus",c=gn;break;case"focusout":l="blur",c=gn;break;case"beforeblur":case"afterblur":c=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":c=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":c=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":c=Rn;break;case Ta:case Ca:case Ea:c=yn;break;case Ra:c=An;break;case"scroll":c=dn;break;case"wheel":c=Fn;break;case"copy":case"cut":case"paste":c=xn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":c=En}var u=0!==(4&t),h=!u&&"scroll"===e,d=u?null!==i?i+"Capture":null:i;u=[];for(var p,f=a;null!==f;){var m=(p=f).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&(null!=(m=Fe(f,d))&&u.push(ja(f,m,p)))),h)break;f=f.return}0<u.length&&(i=new c(i,l,null,n,r),o.push({event:i,listeners:u}))}}if(0===(7&t)){if(c="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===ve||!(l=n.relatedTarget||n.fromElement)||!br(l)&&!l[fr])&&(c||i)&&(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,c?(c=a,null!==(l=(l=n.relatedTarget||n.toElement)?br(l):null)&&(l!==(h=Ue(l))||5!==l.tag&&6!==l.tag)&&(l=null)):(c=null,l=a),c!==l)){if(u=fn,m="onMouseLeave",d="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(u=En,m="onPointerLeave",d="onPointerEnter",f="pointer"),h=null==c?i:vr(c),p=null==l?i:vr(l),(i=new u(m,f+"leave",c,n,r)).target=h,i.relatedTarget=p,m=null,br(r)===a&&((u=new u(d,f+"enter",l,n,r)).target=p,u.relatedTarget=h,m=u),h=m,c&&l)e:{for(d=l,f=0,p=u=c;p;p=Ka(p))f++;for(p=0,m=d;m;m=Ka(m))p++;for(;0<f-p;)u=Ka(u),f--;for(;0<p-f;)d=Ka(d),p--;for(;f--;){if(u===d||null!==d&&u===d.alternate)break e;u=Ka(u),d=Ka(d)}u=null}else u=null;null!==c&&Xa(o,i,c,u,!1),null!==l&&null!==h&&Xa(o,h,l,u,!0)}if("select"===(c=(i=a?vr(a):window).nodeName&&i.nodeName.toLowerCase())||"input"===c&&"file"===i.type)var g=Qn;else if(Hn(i))if(Zn)g=oa;else{g=ra;var y=aa}else(c=i.nodeName)&&"input"===c.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(g=sa);switch(g&&(g=g(e,a))?jn(o,g,n,r):(y&&y(e,i,a),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ee(i,"number",i.value)),y=a?vr(a):window,e){case"focusin":(Hn(y)||"true"===y.contentEditable)&&(ga=y,ya=a,ba=null);break;case"focusout":ba=ya=ga=null;break;case"mousedown":xa=!0;break;case"contextmenu":case"mouseup":case"dragend":xa=!1,va(o,n,r);break;case"selectionchange":if(ma)break;case"keydown":case"keyup":va(o,n,r)}var b;if(On)e:{switch(e){case"compositionstart":var x="onCompositionStart";break e;case"compositionend":x="onCompositionEnd";break e;case"compositionupdate":x="onCompositionUpdate";break e}x=void 0}else Un?Wn(e,n)&&(x="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(x="onCompositionStart");x&&(zn&&"ko"!==n.locale&&(Un||"onCompositionStart"!==x?"onCompositionEnd"===x&&Un&&(b=en()):(Jt="value"in(Zt=r)?Zt.value:Zt.textContent,Un=!0)),0<(y=qa(a,x)).length&&(x=new vn(x,e,null,n,r),o.push({event:x,listeners:y}),b?x.data=b:null!==(b=Vn(n))&&(x.data=b))),(b=Ln?function(e,t){switch(e){case"compositionend":return Vn(t);case"keypress":return 32!==t.which?null:(Bn=!0,Pn);case"textInput":return(e=t.data)===Pn&&Bn?null:e;default:return null}}(e,n):function(e,t){if(Un)return"compositionend"===e||!On&&Wn(e,t)?(e=en(),$t=Jt=Zt=null,Un=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return zn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(a=qa(a,"onBeforeInput")).length&&(r=new vn("onBeforeInput","beforeinput",null,n,r),o.push({event:r,listeners:a}),r.data=b))}Pa(o,t)}))}function ja(e,t,n){return{instance:e,listener:t,currentTarget:n}}function qa(e,t){for(var n=t+"Capture",a=[];null!==e;){var r=e,s=r.stateNode;5===r.tag&&null!==s&&(r=s,null!=(s=Fe(e,n))&&a.unshift(ja(e,s,r)),null!=(s=Fe(e,t))&&a.push(ja(e,s,r))),e=e.return}return a}function Ka(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Xa(e,t,n,a,r){for(var s=t._reactName,o=[];null!==n&&n!==a;){var i=n,c=i.alternate,l=i.stateNode;if(null!==c&&c===a)break;5===i.tag&&null!==l&&(i=l,r?null!=(c=Fe(n,s))&&o.unshift(ja(n,c,i)):r||null!=(c=Fe(n,s))&&o.push(ja(n,c,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Ya=/\r\n?/g,Qa=/\u0000|\uFFFD/g;function Za(e){return("string"===typeof e?e:""+e).replace(Ya,"\n").replace(Qa,"")}function Ja(e,t,n){if(t=Za(t),Za(e)!==t&&n)throw Error(s(425))}function $a(){}var er=null,tr=null;function nr(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ar="function"===typeof setTimeout?setTimeout:void 0,rr="function"===typeof clearTimeout?clearTimeout:void 0,sr="function"===typeof Promise?Promise:void 0,or="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof sr?function(e){return sr.resolve(null).then(e).catch(ir)}:ar;function ir(e){setTimeout((function(){throw e}))}function cr(e,t){var n=t,a=0;do{var r=n.nextSibling;if(e.removeChild(n),r&&8===r.nodeType)if("/$"===(n=r.data)){if(0===a)return e.removeChild(r),void Ut(t);a--}else"$"!==n&&"$?"!==n&&"$!"!==n||a++;n=r}while(n);Ut(t)}function lr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ur(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var hr=Math.random().toString(36).slice(2),dr="__reactFiber$"+hr,pr="__reactProps$"+hr,fr="__reactContainer$"+hr,mr="__reactEvents$"+hr,gr="__reactListeners$"+hr,yr="__reactHandles$"+hr;function br(e){var t=e[dr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fr]||n[dr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ur(e);null!==e;){if(n=e[dr])return n;e=ur(e)}return t}n=(e=n).parentNode}return null}function xr(e){return!(e=e[dr]||e[fr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function vr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function wr(e){return e[pr]||null}var kr=[],Sr=-1;function Nr(e){return{current:e}}function Ir(e){0>Sr||(e.current=kr[Sr],kr[Sr]=null,Sr--)}function Tr(e,t){Sr++,kr[Sr]=e.current,e.current=t}var Cr={},Er=Nr(Cr),Rr=Nr(!1),Ar=Cr;function _r(e,t){var n=e.type.contextTypes;if(!n)return Cr;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var r,s={};for(r in n)s[r]=t[r];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function Fr(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Dr(){Ir(Rr),Ir(Er)}function Or(e,t,n){if(Er.current!==Cr)throw Error(s(168));Tr(Er,t),Tr(Rr,n)}function Mr(e,t,n){var a=e.stateNode;if(t=t.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var r in a=a.getChildContext())if(!(r in t))throw Error(s(108,G(e)||"Unknown",r));return z({},n,a)}function Lr(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Cr,Ar=Er.current,Tr(Er,e),Tr(Rr,Rr.current),!0}function zr(e,t,n){var a=e.stateNode;if(!a)throw Error(s(169));n?(e=Mr(e,t,Ar),a.__reactInternalMemoizedMergedChildContext=e,Ir(Rr),Ir(Er),Tr(Er,e)):Ir(Rr),Tr(Rr,n)}var Pr=null,Br=!1,Wr=!1;function Vr(e){null===Pr?Pr=[e]:Pr.push(e)}function Ur(){if(!Wr&&null!==Pr){Wr=!0;var e=0,t=xt;try{var n=Pr;for(xt=1;e<n.length;e++){var a=n[e];do{a=a(!0)}while(null!==a)}Pr=null,Br=!1}catch(r){throw null!==Pr&&(Pr=Pr.slice(e+1)),Ke($e,Ur),r}finally{xt=t,Wr=!1}}return null}var Gr=[],Hr=0,jr=null,qr=0,Kr=[],Xr=0,Yr=null,Qr=1,Zr="";function Jr(e,t){Gr[Hr++]=qr,Gr[Hr++]=jr,jr=e,qr=t}function $r(e,t,n){Kr[Xr++]=Qr,Kr[Xr++]=Zr,Kr[Xr++]=Yr,Yr=e;var a=Qr;e=Zr;var r=32-ot(a)-1;a&=~(1<<r),n+=1;var s=32-ot(t)+r;if(30<s){var o=r-r%5;s=(a&(1<<o)-1).toString(32),a>>=o,r-=o,Qr=1<<32-ot(t)+r|n<<r|a,Zr=s+e}else Qr=1<<s|n<<r|a,Zr=e}function es(e){null!==e.return&&(Jr(e,1),$r(e,1,0))}function ts(e){for(;e===jr;)jr=Gr[--Hr],Gr[Hr]=null,qr=Gr[--Hr],Gr[Hr]=null;for(;e===Yr;)Yr=Kr[--Xr],Kr[Xr]=null,Zr=Kr[--Xr],Kr[Xr]=null,Qr=Kr[--Xr],Kr[Xr]=null}var ns=null,as=null,rs=!1,ss=null;function os(e,t){var n=_l(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function is(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ns=e,as=lr(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ns=e,as=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Yr?{id:Qr,overflow:Zr}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=_l(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ns=e,as=null,!0);default:return!1}}function cs(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ls(e){if(rs){var t=as;if(t){var n=t;if(!is(e,t)){if(cs(e))throw Error(s(418));t=lr(n.nextSibling);var a=ns;t&&is(e,t)?os(a,n):(e.flags=-4097&e.flags|2,rs=!1,ns=e)}}else{if(cs(e))throw Error(s(418));e.flags=-4097&e.flags|2,rs=!1,ns=e}}}function us(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ns=e}function hs(e){if(e!==ns)return!1;if(!rs)return us(e),rs=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!nr(e.type,e.memoizedProps)),t&&(t=as)){if(cs(e))throw ds(),Error(s(418));for(;t;)os(e,t),t=lr(t.nextSibling)}if(us(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){as=lr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}as=null}}else as=ns?lr(e.stateNode.nextSibling):null;return!0}function ds(){for(var e=as;e;)e=lr(e.nextSibling)}function ps(){as=ns=null,rs=!1}function fs(e){null===ss?ss=[e]:ss.push(e)}var ms=v.ReactCurrentBatchConfig;function gs(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(s(309));var a=n.stateNode}if(!a)throw Error(s(147,e));var r=a,o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!==typeof e)throw Error(s(284));if(!n._owner)throw Error(s(290,e))}return e}function ys(e,t){throw e=Object.prototype.toString.call(t),Error(s(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function bs(e){return(0,e._init)(e._payload)}function xs(e){function t(t,n){if(e){var a=t.deletions;null===a?(t.deletions=[n],t.flags|=16):a.push(n)}}function n(n,a){if(!e)return null;for(;null!==a;)t(n,a),a=a.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=Dl(e,t)).index=0,e.sibling=null,e}function o(t,n,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<n?(t.flags|=2,n):a:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function c(e,t,n,a){return null===t||6!==t.tag?((t=zl(n,e.mode,a)).return=e,t):((t=r(t,n)).return=e,t)}function l(e,t,n,a){var s=n.type;return s===S?h(e,t,n.props.children,a,n.key):null!==t&&(t.elementType===s||"object"===typeof s&&null!==s&&s.$$typeof===F&&bs(s)===t.type)?((a=r(t,n.props)).ref=gs(e,t,n),a.return=e,a):((a=Ol(n.type,n.key,n.props,null,e.mode,a)).ref=gs(e,t,n),a.return=e,a)}function u(e,t,n,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Pl(n,e.mode,a)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function h(e,t,n,a,s){return null===t||7!==t.tag?((t=Ml(n,e.mode,a,s)).return=e,t):((t=r(t,n)).return=e,t)}function d(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=zl(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Ol(t.type,t.key,t.props,null,e.mode,n)).ref=gs(e,null,t),n.return=e,n;case k:return(t=Pl(t,e.mode,n)).return=e,t;case F:return d(e,(0,t._init)(t._payload),n)}if(te(t)||M(t))return(t=Ml(t,e.mode,n,null)).return=e,t;ys(e,t)}return null}function p(e,t,n,a){var r=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==r?null:c(e,t,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===r?l(e,t,n,a):null;case k:return n.key===r?u(e,t,n,a):null;case F:return p(e,t,(r=n._init)(n._payload),a)}if(te(n)||M(n))return null!==r?null:h(e,t,n,a,null);ys(e,n)}return null}function f(e,t,n,a,r){if("string"===typeof a&&""!==a||"number"===typeof a)return c(t,e=e.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case w:return l(t,e=e.get(null===a.key?n:a.key)||null,a,r);case k:return u(t,e=e.get(null===a.key?n:a.key)||null,a,r);case F:return f(e,t,n,(0,a._init)(a._payload),r)}if(te(a)||M(a))return h(t,e=e.get(n)||null,a,r,null);ys(t,a)}return null}function m(r,s,i,c){for(var l=null,u=null,h=s,m=s=0,g=null;null!==h&&m<i.length;m++){h.index>m?(g=h,h=null):g=h.sibling;var y=p(r,h,i[m],c);if(null===y){null===h&&(h=g);break}e&&h&&null===y.alternate&&t(r,h),s=o(y,s,m),null===u?l=y:u.sibling=y,u=y,h=g}if(m===i.length)return n(r,h),rs&&Jr(r,m),l;if(null===h){for(;m<i.length;m++)null!==(h=d(r,i[m],c))&&(s=o(h,s,m),null===u?l=h:u.sibling=h,u=h);return rs&&Jr(r,m),l}for(h=a(r,h);m<i.length;m++)null!==(g=f(h,r,m,i[m],c))&&(e&&null!==g.alternate&&h.delete(null===g.key?m:g.key),s=o(g,s,m),null===u?l=g:u.sibling=g,u=g);return e&&h.forEach((function(e){return t(r,e)})),rs&&Jr(r,m),l}function g(r,i,c,l){var u=M(c);if("function"!==typeof u)throw Error(s(150));if(null==(c=u.call(c)))throw Error(s(151));for(var h=u=null,m=i,g=i=0,y=null,b=c.next();null!==m&&!b.done;g++,b=c.next()){m.index>g?(y=m,m=null):y=m.sibling;var x=p(r,m,b.value,l);if(null===x){null===m&&(m=y);break}e&&m&&null===x.alternate&&t(r,m),i=o(x,i,g),null===h?u=x:h.sibling=x,h=x,m=y}if(b.done)return n(r,m),rs&&Jr(r,g),u;if(null===m){for(;!b.done;g++,b=c.next())null!==(b=d(r,b.value,l))&&(i=o(b,i,g),null===h?u=b:h.sibling=b,h=b);return rs&&Jr(r,g),u}for(m=a(r,m);!b.done;g++,b=c.next())null!==(b=f(m,r,g,b.value,l))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),i=o(b,i,g),null===h?u=b:h.sibling=b,h=b);return e&&m.forEach((function(e){return t(r,e)})),rs&&Jr(r,g),u}return function e(a,s,o,c){if("object"===typeof o&&null!==o&&o.type===S&&null===o.key&&(o=o.props.children),"object"===typeof o&&null!==o){switch(o.$$typeof){case w:e:{for(var l=o.key,u=s;null!==u;){if(u.key===l){if((l=o.type)===S){if(7===u.tag){n(a,u.sibling),(s=r(u,o.props.children)).return=a,a=s;break e}}else if(u.elementType===l||"object"===typeof l&&null!==l&&l.$$typeof===F&&bs(l)===u.type){n(a,u.sibling),(s=r(u,o.props)).ref=gs(a,u,o),s.return=a,a=s;break e}n(a,u);break}t(a,u),u=u.sibling}o.type===S?((s=Ml(o.props.children,a.mode,c,o.key)).return=a,a=s):((c=Ol(o.type,o.key,o.props,null,a.mode,c)).ref=gs(a,s,o),c.return=a,a=c)}return i(a);case k:e:{for(u=o.key;null!==s;){if(s.key===u){if(4===s.tag&&s.stateNode.containerInfo===o.containerInfo&&s.stateNode.implementation===o.implementation){n(a,s.sibling),(s=r(s,o.children||[])).return=a,a=s;break e}n(a,s);break}t(a,s),s=s.sibling}(s=Pl(o,a.mode,c)).return=a,a=s}return i(a);case F:return e(a,s,(u=o._init)(o._payload),c)}if(te(o))return m(a,s,o,c);if(M(o))return g(a,s,o,c);ys(a,o)}return"string"===typeof o&&""!==o||"number"===typeof o?(o=""+o,null!==s&&6===s.tag?(n(a,s.sibling),(s=r(s,o)).return=a,a=s):(n(a,s),(s=zl(o,a.mode,c)).return=a,a=s),i(a)):n(a,s)}}var vs=xs(!0),ws=xs(!1),ks=Nr(null),Ss=null,Ns=null,Is=null;function Ts(){Is=Ns=Ss=null}function Cs(e){var t=ks.current;Ir(ks),e._currentValue=t}function Es(e,t,n){for(;null!==e;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==a&&(a.childLanes|=t)):null!==a&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}}function Rs(e,t){Ss=e,Is=Ns=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(xi=!0),e.firstContext=null)}function As(e){var t=e._currentValue;if(Is!==e)if(e={context:e,memoizedValue:t,next:null},null===Ns){if(null===Ss)throw Error(s(308));Ns=e,Ss.dependencies={lanes:0,firstContext:e}}else Ns=Ns.next=e;return t}var _s=null;function Fs(e){null===_s?_s=[e]:_s.push(e)}function Ds(e,t,n,a){var r=t.interleaved;return null===r?(n.next=n,Fs(t)):(n.next=r.next,r.next=n),t.interleaved=n,Os(e,a)}function Os(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Ms=!1;function Ls(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function zs(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ps(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Bs(e,t,n){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,0!==(2&Ec)){var r=a.pending;return null===r?t.next=t:(t.next=r.next,r.next=t),a.pending=t,Os(e,n)}return null===(r=a.interleaved)?(t.next=t,Fs(a)):(t.next=r.next,r.next=t),a.interleaved=t,Os(e,n)}function Ws(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}function Vs(e,t){var n=e.updateQueue,a=e.alternate;if(null!==a&&n===(a=a.updateQueue)){var r=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===s?r=s=o:s=s.next=o,n=n.next}while(null!==n);null===s?r=s=t:s=s.next=t}else r=s=t;return n={baseState:a.baseState,firstBaseUpdate:r,lastBaseUpdate:s,shared:a.shared,effects:a.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Us(e,t,n,a){var r=e.updateQueue;Ms=!1;var s=r.firstBaseUpdate,o=r.lastBaseUpdate,i=r.shared.pending;if(null!==i){r.shared.pending=null;var c=i,l=c.next;c.next=null,null===o?s=l:o.next=l,o=c;var u=e.alternate;null!==u&&((i=(u=u.updateQueue).lastBaseUpdate)!==o&&(null===i?u.firstBaseUpdate=l:i.next=l,u.lastBaseUpdate=c))}if(null!==s){var h=r.baseState;for(o=0,u=l=c=null,i=s;;){var d=i.lane,p=i.eventTime;if((a&d)===d){null!==u&&(u=u.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var f=e,m=i;switch(d=t,p=n,m.tag){case 1:if("function"===typeof(f=m.payload)){h=f.call(p,h,d);break e}h=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(d="function"===typeof(f=m.payload)?f.call(p,h,d):f)||void 0===d)break e;h=z({},h,d);break e;case 2:Ms=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(d=r.effects)?r.effects=[i]:d.push(i))}else p={eventTime:p,lane:d,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===u?(l=u=p,c=h):u=u.next=p,o|=d;if(null===(i=i.next)){if(null===(i=r.shared.pending))break;i=(d=i).next,d.next=null,r.lastBaseUpdate=d,r.shared.pending=null}}if(null===u&&(c=h),r.baseState=c,r.firstBaseUpdate=l,r.lastBaseUpdate=u,null!==(t=r.shared.interleaved)){r=t;do{o|=r.lane,r=r.next}while(r!==t)}else null===s&&(r.shared.lanes=0);Lc|=o,e.lanes=o,e.memoizedState=h}}function Gs(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],r=a.callback;if(null!==r){if(a.callback=null,a=n,"function"!==typeof r)throw Error(s(191,r));r.call(a)}}}var Hs={},js=Nr(Hs),qs=Nr(Hs),Ks=Nr(Hs);function Xs(e){if(e===Hs)throw Error(s(174));return e}function Ys(e,t){switch(Tr(Ks,t),Tr(qs,e),Tr(js,Hs),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ce(null,"");break;default:t=ce(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Ir(js),Tr(js,t)}function Qs(){Ir(js),Ir(qs),Ir(Ks)}function Zs(e){Xs(Ks.current);var t=Xs(js.current),n=ce(t,e.type);t!==n&&(Tr(qs,e),Tr(js,n))}function Js(e){qs.current===e&&(Ir(js),Ir(qs))}var $s=Nr(0);function eo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var to=[];function no(){for(var e=0;e<to.length;e++)to[e]._workInProgressVersionPrimary=null;to.length=0}var ao=v.ReactCurrentDispatcher,ro=v.ReactCurrentBatchConfig,so=0,oo=null,io=null,co=null,lo=!1,uo=!1,ho=0,po=0;function fo(){throw Error(s(321))}function mo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ia(e[n],t[n]))return!1;return!0}function go(e,t,n,a,r,o){if(so=o,oo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ao.current=null===e||null===e.memoizedState?$o:ei,e=n(a,r),uo){o=0;do{if(uo=!1,ho=0,25<=o)throw Error(s(301));o+=1,co=io=null,t.updateQueue=null,ao.current=ti,e=n(a,r)}while(uo)}if(ao.current=Jo,t=null!==io&&null!==io.next,so=0,co=io=oo=null,lo=!1,t)throw Error(s(300));return e}function yo(){var e=0!==ho;return ho=0,e}function bo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===co?oo.memoizedState=co=e:co=co.next=e,co}function xo(){if(null===io){var e=oo.alternate;e=null!==e?e.memoizedState:null}else e=io.next;var t=null===co?oo.memoizedState:co.next;if(null!==t)co=t,io=e;else{if(null===e)throw Error(s(310));e={memoizedState:(io=e).memoizedState,baseState:io.baseState,baseQueue:io.baseQueue,queue:io.queue,next:null},null===co?oo.memoizedState=co=e:co=co.next=e}return co}function vo(e,t){return"function"===typeof t?t(e):t}function wo(e){var t=xo(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=io,r=a.baseQueue,o=n.pending;if(null!==o){if(null!==r){var i=r.next;r.next=o.next,o.next=i}a.baseQueue=r=o,n.pending=null}if(null!==r){o=r.next,a=a.baseState;var c=i=null,l=null,u=o;do{var h=u.lane;if((so&h)===h)null!==l&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),a=u.hasEagerState?u.eagerState:e(a,u.action);else{var d={lane:h,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===l?(c=l=d,i=a):l=l.next=d,oo.lanes|=h,Lc|=h}u=u.next}while(null!==u&&u!==o);null===l?i=a:l.next=c,ia(a,t.memoizedState)||(xi=!0),t.memoizedState=a,t.baseState=i,t.baseQueue=l,n.lastRenderedState=a}if(null!==(e=n.interleaved)){r=e;do{o=r.lane,oo.lanes|=o,Lc|=o,r=r.next}while(r!==e)}else null===r&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function ko(e){var t=xo(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=n.dispatch,r=n.pending,o=t.memoizedState;if(null!==r){n.pending=null;var i=r=r.next;do{o=e(o,i.action),i=i.next}while(i!==r);ia(o,t.memoizedState)||(xi=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,a]}function So(){}function No(e,t){var n=oo,a=xo(),r=t(),o=!ia(a.memoizedState,r);if(o&&(a.memoizedState=r,xi=!0),a=a.queue,Lo(Co.bind(null,n,a,e),[e]),a.getSnapshot!==t||o||null!==co&&1&co.memoizedState.tag){if(n.flags|=2048,_o(9,To.bind(null,n,a,r,t),void 0,null),null===Rc)throw Error(s(349));0!==(30&so)||Io(n,t,r)}return r}function Io(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function To(e,t,n,a){t.value=n,t.getSnapshot=a,Eo(t)&&Ro(e)}function Co(e,t,n){return n((function(){Eo(t)&&Ro(e)}))}function Eo(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ia(e,n)}catch(a){return!0}}function Ro(e){var t=Os(e,1);null!==t&&nl(t,e,1,-1)}function Ao(e){var t=bo();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:vo,lastRenderedState:e},t.queue=e,e=e.dispatch=Xo.bind(null,oo,e),[t.memoizedState,e]}function _o(e,t,n,a){return e={tag:e,create:t,destroy:n,deps:a,next:null},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function Fo(){return xo().memoizedState}function Do(e,t,n,a){var r=bo();oo.flags|=e,r.memoizedState=_o(1|t,n,void 0,void 0===a?null:a)}function Oo(e,t,n,a){var r=xo();a=void 0===a?null:a;var s=void 0;if(null!==io){var o=io.memoizedState;if(s=o.destroy,null!==a&&mo(a,o.deps))return void(r.memoizedState=_o(t,n,s,a))}oo.flags|=e,r.memoizedState=_o(1|t,n,s,a)}function Mo(e,t){return Do(8390656,8,e,t)}function Lo(e,t){return Oo(2048,8,e,t)}function zo(e,t){return Oo(4,2,e,t)}function Po(e,t){return Oo(4,4,e,t)}function Bo(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Wo(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Oo(4,4,Bo.bind(null,t,e),n)}function Vo(){}function Uo(e,t){var n=xo();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&mo(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Go(e,t){var n=xo();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&mo(t,a[1])?a[0]:(e=e(),n.memoizedState=[e,t],e)}function Ho(e,t,n){return 0===(21&so)?(e.baseState&&(e.baseState=!1,xi=!0),e.memoizedState=n):(ia(n,t)||(n=mt(),oo.lanes|=n,Lc|=n,e.baseState=!0),t)}function jo(e,t){var n=xt;xt=0!==n&&4>n?n:4,e(!0);var a=ro.transition;ro.transition={};try{e(!1),t()}finally{xt=n,ro.transition=a}}function qo(){return xo().memoizedState}function Ko(e,t,n){var a=tl(e);if(n={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null},Yo(e))Qo(t,n);else if(null!==(n=Ds(e,t,n,a))){nl(n,e,a,el()),Zo(n,t,a)}}function Xo(e,t,n){var a=tl(e),r={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null};if(Yo(e))Qo(t,r);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var o=t.lastRenderedState,i=s(o,n);if(r.hasEagerState=!0,r.eagerState=i,ia(i,o)){var c=t.interleaved;return null===c?(r.next=r,Fs(t)):(r.next=c.next,c.next=r),void(t.interleaved=r)}}catch(l){}null!==(n=Ds(e,t,r,a))&&(nl(n,e,a,r=el()),Zo(n,t,a))}}function Yo(e){var t=e.alternate;return e===oo||null!==t&&t===oo}function Qo(e,t){uo=lo=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Zo(e,t,n){if(0!==(4194240&n)){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}var Jo={readContext:As,useCallback:fo,useContext:fo,useEffect:fo,useImperativeHandle:fo,useInsertionEffect:fo,useLayoutEffect:fo,useMemo:fo,useReducer:fo,useRef:fo,useState:fo,useDebugValue:fo,useDeferredValue:fo,useTransition:fo,useMutableSource:fo,useSyncExternalStore:fo,useId:fo,unstable_isNewReconciler:!1},$o={readContext:As,useCallback:function(e,t){return bo().memoizedState=[e,void 0===t?null:t],e},useContext:As,useEffect:Mo,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Do(4194308,4,Bo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Do(4194308,4,e,t)},useInsertionEffect:function(e,t){return Do(4,2,e,t)},useMemo:function(e,t){var n=bo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var a=bo();return t=void 0!==n?n(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=Ko.bind(null,oo,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},bo().memoizedState=e},useState:Ao,useDebugValue:Vo,useDeferredValue:function(e){return bo().memoizedState=e},useTransition:function(){var e=Ao(!1),t=e[0];return e=jo.bind(null,e[1]),bo().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var a=oo,r=bo();if(rs){if(void 0===n)throw Error(s(407));n=n()}else{if(n=t(),null===Rc)throw Error(s(349));0!==(30&so)||Io(a,t,n)}r.memoizedState=n;var o={value:n,getSnapshot:t};return r.queue=o,Mo(Co.bind(null,a,o,e),[e]),a.flags|=2048,_o(9,To.bind(null,a,o,n,t),void 0,null),n},useId:function(){var e=bo(),t=Rc.identifierPrefix;if(rs){var n=Zr;t=":"+t+"R"+(n=(Qr&~(1<<32-ot(Qr)-1)).toString(32)+n),0<(n=ho++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=po++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ei={readContext:As,useCallback:Uo,useContext:As,useEffect:Lo,useImperativeHandle:Wo,useInsertionEffect:zo,useLayoutEffect:Po,useMemo:Go,useReducer:wo,useRef:Fo,useState:function(){return wo(vo)},useDebugValue:Vo,useDeferredValue:function(e){return Ho(xo(),io.memoizedState,e)},useTransition:function(){return[wo(vo)[0],xo().memoizedState]},useMutableSource:So,useSyncExternalStore:No,useId:qo,unstable_isNewReconciler:!1},ti={readContext:As,useCallback:Uo,useContext:As,useEffect:Lo,useImperativeHandle:Wo,useInsertionEffect:zo,useLayoutEffect:Po,useMemo:Go,useReducer:ko,useRef:Fo,useState:function(){return ko(vo)},useDebugValue:Vo,useDeferredValue:function(e){var t=xo();return null===io?t.memoizedState=e:Ho(t,io.memoizedState,e)},useTransition:function(){return[ko(vo)[0],xo().memoizedState]},useMutableSource:So,useSyncExternalStore:No,useId:qo,unstable_isNewReconciler:!1};function ni(e,t){if(e&&e.defaultProps){for(var n in t=z({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function ai(e,t,n,a){n=null===(n=n(a,t=e.memoizedState))||void 0===n?t:z({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ri={isMounted:function(e){return!!(e=e._reactInternals)&&Ue(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var a=el(),r=tl(e),s=Ps(a,r);s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Bs(e,s,r))&&(nl(t,e,r,a),Ws(t,e,r))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=el(),r=tl(e),s=Ps(a,r);s.tag=1,s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Bs(e,s,r))&&(nl(t,e,r,a),Ws(t,e,r))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=el(),a=tl(e),r=Ps(n,a);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),null!==(t=Bs(e,r,a))&&(nl(t,e,a,n),Ws(t,e,a))}};function si(e,t,n,a,r,s,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,s,o):!t.prototype||!t.prototype.isPureReactComponent||(!ca(n,a)||!ca(r,s))}function oi(e,t,n){var a=!1,r=Cr,s=t.contextType;return"object"===typeof s&&null!==s?s=As(s):(r=Fr(t)?Ar:Er.current,s=(a=null!==(a=t.contextTypes)&&void 0!==a)?_r(e,r):Cr),t=new t(n,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ri,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=s),t}function ii(e,t,n,a){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,a),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&ri.enqueueReplaceState(t,t.state,null)}function ci(e,t,n,a){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs={},Ls(e);var s=t.contextType;"object"===typeof s&&null!==s?r.context=As(s):(s=Fr(t)?Ar:Er.current,r.context=_r(e,s)),r.state=e.memoizedState,"function"===typeof(s=t.getDerivedStateFromProps)&&(ai(e,t,s,n),r.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(t=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&ri.enqueueReplaceState(r,r.state,null),Us(e,n,r,a),r.state=e.memoizedState),"function"===typeof r.componentDidMount&&(e.flags|=4194308)}function li(e,t){try{var n="",a=t;do{n+=V(a),a=a.return}while(a);var r=n}catch(s){r="\nError generating stack: "+s.message+"\n"+s.stack}return{value:e,source:t,stack:r,digest:null}}function ui(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function hi(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var di="function"===typeof WeakMap?WeakMap:Map;function pi(e,t,n){(n=Ps(-1,n)).tag=3,n.payload={element:null};var a=t.value;return n.callback=function(){Hc||(Hc=!0,jc=a),hi(0,t)},n}function fi(e,t,n){(n=Ps(-1,n)).tag=3;var a=e.type.getDerivedStateFromError;if("function"===typeof a){var r=t.value;n.payload=function(){return a(r)},n.callback=function(){hi(0,t)}}var s=e.stateNode;return null!==s&&"function"===typeof s.componentDidCatch&&(n.callback=function(){hi(0,t),"function"!==typeof a&&(null===qc?qc=new Set([this]):qc.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function mi(e,t,n){var a=e.pingCache;if(null===a){a=e.pingCache=new di;var r=new Set;a.set(t,r)}else void 0===(r=a.get(t))&&(r=new Set,a.set(t,r));r.has(n)||(r.add(n),e=Il.bind(null,e,t,n),t.then(e,e))}function gi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function yi(e,t,n,a,r){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Ps(-1,1)).tag=2,Bs(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=r,e)}var bi=v.ReactCurrentOwner,xi=!1;function vi(e,t,n,a){t.child=null===e?ws(t,null,n,a):vs(t,e.child,n,a)}function wi(e,t,n,a,r){n=n.render;var s=t.ref;return Rs(t,r),a=go(e,t,n,a,s,r),n=yo(),null===e||xi?(rs&&n&&es(t),t.flags|=1,vi(e,t,a,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Hi(e,t,r))}function ki(e,t,n,a,r){if(null===e){var s=n.type;return"function"!==typeof s||Fl(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ol(n.type,null,a,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,Si(e,t,s,a,r))}if(s=e.child,0===(e.lanes&r)){var o=s.memoizedProps;if((n=null!==(n=n.compare)?n:ca)(o,a)&&e.ref===t.ref)return Hi(e,t,r)}return t.flags|=1,(e=Dl(s,a)).ref=t.ref,e.return=t,t.child=e}function Si(e,t,n,a,r){if(null!==e){var s=e.memoizedProps;if(ca(s,a)&&e.ref===t.ref){if(xi=!1,t.pendingProps=a=s,0===(e.lanes&r))return t.lanes=e.lanes,Hi(e,t,r);0!==(131072&e.flags)&&(xi=!0)}}return Ti(e,t,n,a,r)}function Ni(e,t,n){var a=t.pendingProps,r=a.children,s=null!==e?e.memoizedState:null;if("hidden"===a.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Tr(Dc,Fc),Fc|=n;else{if(0===(1073741824&n))return e=null!==s?s.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Tr(Dc,Fc),Fc|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==s?s.baseLanes:n,Tr(Dc,Fc),Fc|=a}else null!==s?(a=s.baseLanes|n,t.memoizedState=null):a=n,Tr(Dc,Fc),Fc|=a;return vi(e,t,r,n),t.child}function Ii(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Ti(e,t,n,a,r){var s=Fr(n)?Ar:Er.current;return s=_r(t,s),Rs(t,r),n=go(e,t,n,a,s,r),a=yo(),null===e||xi?(rs&&a&&es(t),t.flags|=1,vi(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Hi(e,t,r))}function Ci(e,t,n,a,r){if(Fr(n)){var s=!0;Lr(t)}else s=!1;if(Rs(t,r),null===t.stateNode)Gi(e,t),oi(t,n,a),ci(t,n,a,r),a=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var c=o.context,l=n.contextType;"object"===typeof l&&null!==l?l=As(l):l=_r(t,l=Fr(n)?Ar:Er.current);var u=n.getDerivedStateFromProps,h="function"===typeof u||"function"===typeof o.getSnapshotBeforeUpdate;h||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==a||c!==l)&&ii(t,o,a,l),Ms=!1;var d=t.memoizedState;o.state=d,Us(t,a,o,r),c=t.memoizedState,i!==a||d!==c||Rr.current||Ms?("function"===typeof u&&(ai(t,n,u,a),c=t.memoizedState),(i=Ms||si(t,n,i,a,d,c,l))?(h||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(t.flags|=4194308)):("function"===typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=c),o.props=a,o.state=c,o.context=l,a=i):("function"===typeof o.componentDidMount&&(t.flags|=4194308),a=!1)}else{o=t.stateNode,zs(e,t),i=t.memoizedProps,l=t.type===t.elementType?i:ni(t.type,i),o.props=l,h=t.pendingProps,d=o.context,"object"===typeof(c=n.contextType)&&null!==c?c=As(c):c=_r(t,c=Fr(n)?Ar:Er.current);var p=n.getDerivedStateFromProps;(u="function"===typeof p||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==h||d!==c)&&ii(t,o,a,c),Ms=!1,d=t.memoizedState,o.state=d,Us(t,a,o,r);var f=t.memoizedState;i!==h||d!==f||Rr.current||Ms?("function"===typeof p&&(ai(t,n,p,a),f=t.memoizedState),(l=Ms||si(t,n,l,a,d,f,c)||!1)?(u||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(a,f,c),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(a,f,c)),"function"===typeof o.componentDidUpdate&&(t.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=f),o.props=a,o.state=f,o.context=c,a=l):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),a=!1)}return Ei(e,t,n,a,s,r)}function Ei(e,t,n,a,r,s){Ii(e,t);var o=0!==(128&t.flags);if(!a&&!o)return r&&zr(t,n,!1),Hi(e,t,s);a=t.stateNode,bi.current=t;var i=o&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return t.flags|=1,null!==e&&o?(t.child=vs(t,e.child,null,s),t.child=vs(t,null,i,s)):vi(e,t,i,s),t.memoizedState=a.state,r&&zr(t,n,!0),t.child}function Ri(e){var t=e.stateNode;t.pendingContext?Or(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Or(0,t.context,!1),Ys(e,t.containerInfo)}function Ai(e,t,n,a,r){return ps(),fs(r),t.flags|=256,vi(e,t,n,a),t.child}var _i,Fi,Di,Oi,Mi={dehydrated:null,treeContext:null,retryLane:0};function Li(e){return{baseLanes:e,cachePool:null,transitions:null}}function zi(e,t,n){var a,r=t.pendingProps,o=$s.current,i=!1,c=0!==(128&t.flags);if((a=c)||(a=(null===e||null!==e.memoizedState)&&0!==(2&o)),a?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),Tr($s,1&o),null===e)return ls(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(c=r.children,e=r.fallback,i?(r=t.mode,i=t.child,c={mode:"hidden",children:c},0===(1&r)&&null!==i?(i.childLanes=0,i.pendingProps=c):i=Ll(c,r,0,null),e=Ml(e,r,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=Li(n),t.memoizedState=Mi,e):Pi(t,c));if(null!==(o=e.memoizedState)&&null!==(a=o.dehydrated))return function(e,t,n,a,r,o,i){if(n)return 256&t.flags?(t.flags&=-257,Bi(e,t,i,a=ui(Error(s(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=a.fallback,r=t.mode,a=Ll({mode:"visible",children:a.children},r,0,null),(o=Ml(o,r,i,null)).flags|=2,a.return=t,o.return=t,a.sibling=o,t.child=a,0!==(1&t.mode)&&vs(t,e.child,null,i),t.child.memoizedState=Li(i),t.memoizedState=Mi,o);if(0===(1&t.mode))return Bi(e,t,i,null);if("$!"===r.data){if(a=r.nextSibling&&r.nextSibling.dataset)var c=a.dgst;return a=c,Bi(e,t,i,a=ui(o=Error(s(419)),a,void 0))}if(c=0!==(i&e.childLanes),xi||c){if(null!==(a=Rc)){switch(i&-i){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}0!==(r=0!==(r&(a.suspendedLanes|i))?0:r)&&r!==o.retryLane&&(o.retryLane=r,Os(e,r),nl(a,e,r,-1))}return ml(),Bi(e,t,i,a=ui(Error(s(421))))}return"$?"===r.data?(t.flags|=128,t.child=e.child,t=Cl.bind(null,e),r._reactRetry=t,null):(e=o.treeContext,as=lr(r.nextSibling),ns=t,rs=!0,ss=null,null!==e&&(Kr[Xr++]=Qr,Kr[Xr++]=Zr,Kr[Xr++]=Yr,Qr=e.id,Zr=e.overflow,Yr=t),t=Pi(t,a.children),t.flags|=4096,t)}(e,t,c,r,a,o,n);if(i){i=r.fallback,c=t.mode,a=(o=e.child).sibling;var l={mode:"hidden",children:r.children};return 0===(1&c)&&t.child!==o?((r=t.child).childLanes=0,r.pendingProps=l,t.deletions=null):(r=Dl(o,l)).subtreeFlags=14680064&o.subtreeFlags,null!==a?i=Dl(a,i):(i=Ml(i,c,n,null)).flags|=2,i.return=t,r.return=t,r.sibling=i,t.child=r,r=i,i=t.child,c=null===(c=e.child.memoizedState)?Li(n):{baseLanes:c.baseLanes|n,cachePool:null,transitions:c.transitions},i.memoizedState=c,i.childLanes=e.childLanes&~n,t.memoizedState=Mi,r}return e=(i=e.child).sibling,r=Dl(i,{mode:"visible",children:r.children}),0===(1&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function Pi(e,t){return(t=Ll({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Bi(e,t,n,a){return null!==a&&fs(a),vs(t,e.child,null,n),(e=Pi(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Wi(e,t,n){e.lanes|=t;var a=e.alternate;null!==a&&(a.lanes|=t),Es(e.return,t,n)}function Vi(e,t,n,a,r){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:r}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=a,s.tail=n,s.tailMode=r)}function Ui(e,t,n){var a=t.pendingProps,r=a.revealOrder,s=a.tail;if(vi(e,t,a.children,n),0!==(2&(a=$s.current)))a=1&a|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Wi(e,n,t);else if(19===e.tag)Wi(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(Tr($s,a),0===(1&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===eo(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Vi(t,!1,r,n,s);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===eo(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Vi(t,!0,n,null,s);break;case"together":Vi(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Gi(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Hi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Lc|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(n=Dl(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Dl(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function ji(e,t){if(!rs)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function qi(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,a=0;if(t)for(var r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=14680064&r.subtreeFlags,a|=14680064&r.flags,r.return=e,r=r.sibling;else for(r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=r.subtreeFlags,a|=r.flags,r.return=e,r=r.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function Ki(e,t,n){var a=t.pendingProps;switch(ts(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qi(t),null;case 1:case 17:return Fr(t.type)&&Dr(),qi(t),null;case 3:return a=t.stateNode,Qs(),Ir(Rr),Ir(Er),no(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(hs(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ss&&(ol(ss),ss=null))),Fi(e,t),qi(t),null;case 5:Js(t);var r=Xs(Ks.current);if(n=t.type,null!==e&&null!=t.stateNode)Di(e,t,n,a,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(null===t.stateNode)throw Error(s(166));return qi(t),null}if(e=Xs(js.current),hs(t)){a=t.stateNode,n=t.type;var o=t.memoizedProps;switch(a[dr]=t,a[pr]=o,e=0!==(1&t.mode),n){case"dialog":Ba("cancel",a),Ba("close",a);break;case"iframe":case"object":case"embed":Ba("load",a);break;case"video":case"audio":for(r=0;r<Ma.length;r++)Ba(Ma[r],a);break;case"source":Ba("error",a);break;case"img":case"image":case"link":Ba("error",a),Ba("load",a);break;case"details":Ba("toggle",a);break;case"input":Q(a,o),Ba("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!o.multiple},Ba("invalid",a);break;case"textarea":re(a,o),Ba("invalid",a)}for(var c in be(n,o),r=null,o)if(o.hasOwnProperty(c)){var l=o[c];"children"===c?"string"===typeof l?a.textContent!==l&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,l,e),r=["children",l]):"number"===typeof l&&a.textContent!==""+l&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,l,e),r=["children",""+l]):i.hasOwnProperty(c)&&null!=l&&"onScroll"===c&&Ba("scroll",a)}switch(n){case"input":q(a),$(a,o,!0);break;case"textarea":q(a),oe(a);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(a.onclick=$a)}a=r,t.updateQueue=a,null!==a&&(t.flags|=4)}else{c=9===r.nodeType?r:r.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof a.is?e=c.createElement(n,{is:a.is}):(e=c.createElement(n),"select"===n&&(c=e,a.multiple?c.multiple=!0:a.size&&(c.size=a.size))):e=c.createElementNS(e,n),e[dr]=t,e[pr]=a,_i(e,t,!1,!1),t.stateNode=e;e:{switch(c=xe(n,a),n){case"dialog":Ba("cancel",e),Ba("close",e),r=a;break;case"iframe":case"object":case"embed":Ba("load",e),r=a;break;case"video":case"audio":for(r=0;r<Ma.length;r++)Ba(Ma[r],e);r=a;break;case"source":Ba("error",e),r=a;break;case"img":case"image":case"link":Ba("error",e),Ba("load",e),r=a;break;case"details":Ba("toggle",e),r=a;break;case"input":Q(e,a),r=Y(e,a),Ba("invalid",e);break;case"option":default:r=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},r=z({},a,{value:void 0}),Ba("invalid",e);break;case"textarea":re(e,a),r=ae(e,a),Ba("invalid",e)}for(o in be(n,r),l=r)if(l.hasOwnProperty(o)){var u=l[o];"style"===o?ge(e,u):"dangerouslySetInnerHTML"===o?null!=(u=u?u.__html:void 0)&&he(e,u):"children"===o?"string"===typeof u?("textarea"!==n||""!==u)&&de(e,u):"number"===typeof u&&de(e,""+u):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(i.hasOwnProperty(o)?null!=u&&"onScroll"===o&&Ba("scroll",e):null!=u&&x(e,o,u,c))}switch(n){case"input":q(e),$(e,a,!1);break;case"textarea":q(e),oe(e);break;case"option":null!=a.value&&e.setAttribute("value",""+H(a.value));break;case"select":e.multiple=!!a.multiple,null!=(o=a.value)?ne(e,!!a.multiple,o,!1):null!=a.defaultValue&&ne(e,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof r.onClick&&(e.onclick=$a)}switch(n){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return qi(t),null;case 6:if(e&&null!=t.stateNode)Oi(e,t,e.memoizedProps,a);else{if("string"!==typeof a&&null===t.stateNode)throw Error(s(166));if(n=Xs(Ks.current),Xs(js.current),hs(t)){if(a=t.stateNode,n=t.memoizedProps,a[dr]=t,(o=a.nodeValue!==n)&&null!==(e=ns))switch(e.tag){case 3:Ja(a.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Ja(a.nodeValue,n,0!==(1&e.mode))}o&&(t.flags|=4)}else(a=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[dr]=t,t.stateNode=a}return qi(t),null;case 13:if(Ir($s),a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(rs&&null!==as&&0!==(1&t.mode)&&0===(128&t.flags))ds(),ps(),t.flags|=98560,o=!1;else if(o=hs(t),null!==a&&null!==a.dehydrated){if(null===e){if(!o)throw Error(s(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(s(317));o[dr]=t}else ps(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;qi(t),o=!1}else null!==ss&&(ol(ss),ss=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((a=null!==a)!==(null!==e&&null!==e.memoizedState)&&a&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&$s.current)?0===Oc&&(Oc=3):ml())),null!==t.updateQueue&&(t.flags|=4),qi(t),null);case 4:return Qs(),Fi(e,t),null===e&&Ua(t.stateNode.containerInfo),qi(t),null;case 10:return Cs(t.type._context),qi(t),null;case 19:if(Ir($s),null===(o=t.memoizedState))return qi(t),null;if(a=0!==(128&t.flags),null===(c=o.rendering))if(a)ji(o,!1);else{if(0!==Oc||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(c=eo(e))){for(t.flags|=128,ji(o,!1),null!==(a=c.updateQueue)&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=n,n=t.child;null!==n;)e=a,(o=n).flags&=14680066,null===(c=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=c.childLanes,o.lanes=c.lanes,o.child=c.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=c.memoizedProps,o.memoizedState=c.memoizedState,o.updateQueue=c.updateQueue,o.type=c.type,e=c.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Tr($s,1&$s.current|2),t.child}e=e.sibling}null!==o.tail&&Ze()>Uc&&(t.flags|=128,a=!0,ji(o,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=eo(c))){if(t.flags|=128,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ji(o,!0),null===o.tail&&"hidden"===o.tailMode&&!c.alternate&&!rs)return qi(t),null}else 2*Ze()-o.renderingStartTime>Uc&&1073741824!==n&&(t.flags|=128,a=!0,ji(o,!1),t.lanes=4194304);o.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=o.last)?n.sibling=c:t.child=c,o.last=c)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Ze(),t.sibling=null,n=$s.current,Tr($s,a?1&n|2:1&n),t):(qi(t),null);case 22:case 23:return hl(),a=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==a&&(t.flags|=8192),a&&0!==(1&t.mode)?0!==(1073741824&Fc)&&(qi(t),6&t.subtreeFlags&&(t.flags|=8192)):qi(t),null;case 24:case 25:return null}throw Error(s(156,t.tag))}function Xi(e,t){switch(ts(t),t.tag){case 1:return Fr(t.type)&&Dr(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Qs(),Ir(Rr),Ir(Er),no(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Js(t),null;case 13:if(Ir($s),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(s(340));ps()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Ir($s),null;case 4:return Qs(),null;case 10:return Cs(t.type._context),null;case 22:case 23:return hl(),null;default:return null}}_i=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Fi=function(){},Di=function(e,t,n,a){var r=e.memoizedProps;if(r!==a){e=t.stateNode,Xs(js.current);var s,o=null;switch(n){case"input":r=Y(e,r),a=Y(e,a),o=[];break;case"select":r=z({},r,{value:void 0}),a=z({},a,{value:void 0}),o=[];break;case"textarea":r=ae(e,r),a=ae(e,a),o=[];break;default:"function"!==typeof r.onClick&&"function"===typeof a.onClick&&(e.onclick=$a)}for(u in be(n,a),n=null,r)if(!a.hasOwnProperty(u)&&r.hasOwnProperty(u)&&null!=r[u])if("style"===u){var c=r[u];for(s in c)c.hasOwnProperty(s)&&(n||(n={}),n[s]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(i.hasOwnProperty(u)?o||(o=[]):(o=o||[]).push(u,null));for(u in a){var l=a[u];if(c=null!=r?r[u]:void 0,a.hasOwnProperty(u)&&l!==c&&(null!=l||null!=c))if("style"===u)if(c){for(s in c)!c.hasOwnProperty(s)||l&&l.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in l)l.hasOwnProperty(s)&&c[s]!==l[s]&&(n||(n={}),n[s]=l[s])}else n||(o||(o=[]),o.push(u,n)),n=l;else"dangerouslySetInnerHTML"===u?(l=l?l.__html:void 0,c=c?c.__html:void 0,null!=l&&c!==l&&(o=o||[]).push(u,l)):"children"===u?"string"!==typeof l&&"number"!==typeof l||(o=o||[]).push(u,""+l):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(i.hasOwnProperty(u)?(null!=l&&"onScroll"===u&&Ba("scroll",e),o||c===l||(o=[])):(o=o||[]).push(u,l))}n&&(o=o||[]).push("style",n);var u=o;(t.updateQueue=u)&&(t.flags|=4)}},Oi=function(e,t,n,a){n!==a&&(t.flags|=4)};var Yi=!1,Qi=!1,Zi="function"===typeof WeakSet?WeakSet:Set,Ji=null;function $i(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(a){Nl(e,t,a)}else n.current=null}function ec(e,t,n){try{n()}catch(a){Nl(e,t,a)}}var tc=!1;function nc(e,t,n){var a=t.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var r=a=a.next;do{if((r.tag&e)===e){var s=r.destroy;r.destroy=void 0,void 0!==s&&ec(t,n,s)}r=r.next}while(r!==a)}}function ac(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var a=n.create;n.destroy=a()}n=n.next}while(n!==t)}}function rc(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function sc(e){var t=e.alternate;null!==t&&(e.alternate=null,sc(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[dr],delete t[pr],delete t[mr],delete t[gr],delete t[yr])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function oc(e){return 5===e.tag||3===e.tag||4===e.tag}function ic(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||oc(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function cc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=$a));else if(4!==a&&null!==(e=e.child))for(cc(e,t,n),e=e.sibling;null!==e;)cc(e,t,n),e=e.sibling}function lc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==a&&null!==(e=e.child))for(lc(e,t,n),e=e.sibling;null!==e;)lc(e,t,n),e=e.sibling}var uc=null,hc=!1;function dc(e,t,n){for(n=n.child;null!==n;)pc(e,t,n),n=n.sibling}function pc(e,t,n){if(st&&"function"===typeof st.onCommitFiberUnmount)try{st.onCommitFiberUnmount(rt,n)}catch(i){}switch(n.tag){case 5:Qi||$i(n,t);case 6:var a=uc,r=hc;uc=null,dc(e,t,n),hc=r,null!==(uc=a)&&(hc?(e=uc,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):uc.removeChild(n.stateNode));break;case 18:null!==uc&&(hc?(e=uc,n=n.stateNode,8===e.nodeType?cr(e.parentNode,n):1===e.nodeType&&cr(e,n),Ut(e)):cr(uc,n.stateNode));break;case 4:a=uc,r=hc,uc=n.stateNode.containerInfo,hc=!0,dc(e,t,n),uc=a,hc=r;break;case 0:case 11:case 14:case 15:if(!Qi&&(null!==(a=n.updateQueue)&&null!==(a=a.lastEffect))){r=a=a.next;do{var s=r,o=s.destroy;s=s.tag,void 0!==o&&(0!==(2&s)||0!==(4&s))&&ec(n,t,o),r=r.next}while(r!==a)}dc(e,t,n);break;case 1:if(!Qi&&($i(n,t),"function"===typeof(a=n.stateNode).componentWillUnmount))try{a.props=n.memoizedProps,a.state=n.memoizedState,a.componentWillUnmount()}catch(i){Nl(n,t,i)}dc(e,t,n);break;case 21:dc(e,t,n);break;case 22:1&n.mode?(Qi=(a=Qi)||null!==n.memoizedState,dc(e,t,n),Qi=a):dc(e,t,n);break;default:dc(e,t,n)}}function fc(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zi),t.forEach((function(t){var a=El.bind(null,e,t);n.has(t)||(n.add(t),t.then(a,a))}))}}function mc(e,t){var n=t.deletions;if(null!==n)for(var a=0;a<n.length;a++){var r=n[a];try{var o=e,i=t,c=i;e:for(;null!==c;){switch(c.tag){case 5:uc=c.stateNode,hc=!1;break e;case 3:case 4:uc=c.stateNode.containerInfo,hc=!0;break e}c=c.return}if(null===uc)throw Error(s(160));pc(o,i,r),uc=null,hc=!1;var l=r.alternate;null!==l&&(l.return=null),r.return=null}catch(u){Nl(r,t,u)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gc(t,e),t=t.sibling}function gc(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(mc(t,e),yc(e),4&a){try{nc(3,e,e.return),ac(3,e)}catch(g){Nl(e,e.return,g)}try{nc(5,e,e.return)}catch(g){Nl(e,e.return,g)}}break;case 1:mc(t,e),yc(e),512&a&&null!==n&&$i(n,n.return);break;case 5:if(mc(t,e),yc(e),512&a&&null!==n&&$i(n,n.return),32&e.flags){var r=e.stateNode;try{de(r,"")}catch(g){Nl(e,e.return,g)}}if(4&a&&null!=(r=e.stateNode)){var o=e.memoizedProps,i=null!==n?n.memoizedProps:o,c=e.type,l=e.updateQueue;if(e.updateQueue=null,null!==l)try{"input"===c&&"radio"===o.type&&null!=o.name&&Z(r,o),xe(c,i);var u=xe(c,o);for(i=0;i<l.length;i+=2){var h=l[i],d=l[i+1];"style"===h?ge(r,d):"dangerouslySetInnerHTML"===h?he(r,d):"children"===h?de(r,d):x(r,h,d,u)}switch(c){case"input":J(r,o);break;case"textarea":se(r,o);break;case"select":var p=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!o.multiple;var f=o.value;null!=f?ne(r,!!o.multiple,f,!1):p!==!!o.multiple&&(null!=o.defaultValue?ne(r,!!o.multiple,o.defaultValue,!0):ne(r,!!o.multiple,o.multiple?[]:"",!1))}r[pr]=o}catch(g){Nl(e,e.return,g)}}break;case 6:if(mc(t,e),yc(e),4&a){if(null===e.stateNode)throw Error(s(162));r=e.stateNode,o=e.memoizedProps;try{r.nodeValue=o}catch(g){Nl(e,e.return,g)}}break;case 3:if(mc(t,e),yc(e),4&a&&null!==n&&n.memoizedState.isDehydrated)try{Ut(t.containerInfo)}catch(g){Nl(e,e.return,g)}break;case 4:default:mc(t,e),yc(e);break;case 13:mc(t,e),yc(e),8192&(r=e.child).flags&&(o=null!==r.memoizedState,r.stateNode.isHidden=o,!o||null!==r.alternate&&null!==r.alternate.memoizedState||(Vc=Ze())),4&a&&fc(e);break;case 22:if(h=null!==n&&null!==n.memoizedState,1&e.mode?(Qi=(u=Qi)||h,mc(t,e),Qi=u):mc(t,e),yc(e),8192&a){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!h&&0!==(1&e.mode))for(Ji=e,h=e.child;null!==h;){for(d=Ji=h;null!==Ji;){switch(f=(p=Ji).child,p.tag){case 0:case 11:case 14:case 15:nc(4,p,p.return);break;case 1:$i(p,p.return);var m=p.stateNode;if("function"===typeof m.componentWillUnmount){a=p,n=p.return;try{t=a,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){Nl(a,n,g)}}break;case 5:$i(p,p.return);break;case 22:if(null!==p.memoizedState){wc(d);continue}}null!==f?(f.return=p,Ji=f):wc(d)}h=h.sibling}e:for(h=null,d=e;;){if(5===d.tag){if(null===h){h=d;try{r=d.stateNode,u?"function"===typeof(o=r.style).setProperty?o.setProperty("display","none","important"):o.display="none":(c=d.stateNode,i=void 0!==(l=d.memoizedProps.style)&&null!==l&&l.hasOwnProperty("display")?l.display:null,c.style.display=me("display",i))}catch(g){Nl(e,e.return,g)}}}else if(6===d.tag){if(null===h)try{d.stateNode.nodeValue=u?"":d.memoizedProps}catch(g){Nl(e,e.return,g)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;h===d&&(h=null),d=d.return}h===d&&(h=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:mc(t,e),yc(e),4&a&&fc(e);case 21:}}function yc(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(oc(n)){var a=n;break e}n=n.return}throw Error(s(160))}switch(a.tag){case 5:var r=a.stateNode;32&a.flags&&(de(r,""),a.flags&=-33),lc(e,ic(e),r);break;case 3:case 4:var o=a.stateNode.containerInfo;cc(e,ic(e),o);break;default:throw Error(s(161))}}catch(i){Nl(e,e.return,i)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bc(e,t,n){Ji=e,xc(e,t,n)}function xc(e,t,n){for(var a=0!==(1&e.mode);null!==Ji;){var r=Ji,s=r.child;if(22===r.tag&&a){var o=null!==r.memoizedState||Yi;if(!o){var i=r.alternate,c=null!==i&&null!==i.memoizedState||Qi;i=Yi;var l=Qi;if(Yi=o,(Qi=c)&&!l)for(Ji=r;null!==Ji;)c=(o=Ji).child,22===o.tag&&null!==o.memoizedState?kc(r):null!==c?(c.return=o,Ji=c):kc(r);for(;null!==s;)Ji=s,xc(s,t,n),s=s.sibling;Ji=r,Yi=i,Qi=l}vc(e)}else 0!==(8772&r.subtreeFlags)&&null!==s?(s.return=r,Ji=s):vc(e)}}function vc(e){for(;null!==Ji;){var t=Ji;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Qi||ac(5,t);break;case 1:var a=t.stateNode;if(4&t.flags&&!Qi)if(null===n)a.componentDidMount();else{var r=t.elementType===t.type?n.memoizedProps:ni(t.type,n.memoizedProps);a.componentDidUpdate(r,n.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&Gs(t,o,a);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Gs(t,i,n)}break;case 5:var c=t.stateNode;if(null===n&&4&t.flags){n=c;var l=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&n.focus();break;case"img":l.src&&(n.src=l.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var u=t.alternate;if(null!==u){var h=u.memoizedState;if(null!==h){var d=h.dehydrated;null!==d&&Ut(d)}}}break;default:throw Error(s(163))}Qi||512&t.flags&&rc(t)}catch(p){Nl(t,t.return,p)}}if(t===e){Ji=null;break}if(null!==(n=t.sibling)){n.return=t.return,Ji=n;break}Ji=t.return}}function wc(e){for(;null!==Ji;){var t=Ji;if(t===e){Ji=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Ji=n;break}Ji=t.return}}function kc(e){for(;null!==Ji;){var t=Ji;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{ac(4,t)}catch(c){Nl(t,n,c)}break;case 1:var a=t.stateNode;if("function"===typeof a.componentDidMount){var r=t.return;try{a.componentDidMount()}catch(c){Nl(t,r,c)}}var s=t.return;try{rc(t)}catch(c){Nl(t,s,c)}break;case 5:var o=t.return;try{rc(t)}catch(c){Nl(t,o,c)}}}catch(c){Nl(t,t.return,c)}if(t===e){Ji=null;break}var i=t.sibling;if(null!==i){i.return=t.return,Ji=i;break}Ji=t.return}}var Sc,Nc=Math.ceil,Ic=v.ReactCurrentDispatcher,Tc=v.ReactCurrentOwner,Cc=v.ReactCurrentBatchConfig,Ec=0,Rc=null,Ac=null,_c=0,Fc=0,Dc=Nr(0),Oc=0,Mc=null,Lc=0,zc=0,Pc=0,Bc=null,Wc=null,Vc=0,Uc=1/0,Gc=null,Hc=!1,jc=null,qc=null,Kc=!1,Xc=null,Yc=0,Qc=0,Zc=null,Jc=-1,$c=0;function el(){return 0!==(6&Ec)?Ze():-1!==Jc?Jc:Jc=Ze()}function tl(e){return 0===(1&e.mode)?1:0!==(2&Ec)&&0!==_c?_c&-_c:null!==ms.transition?(0===$c&&($c=mt()),$c):0!==(e=xt)?e:e=void 0===(e=window.event)?16:Qt(e.type)}function nl(e,t,n,a){if(50<Qc)throw Qc=0,Zc=null,Error(s(185));yt(e,n,a),0!==(2&Ec)&&e===Rc||(e===Rc&&(0===(2&Ec)&&(zc|=n),4===Oc&&il(e,_c)),al(e,a),1===n&&0===Ec&&0===(1&t.mode)&&(Uc=Ze()+500,Br&&Ur()))}function al(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,r=e.expirationTimes,s=e.pendingLanes;0<s;){var o=31-ot(s),i=1<<o,c=r[o];-1===c?0!==(i&n)&&0===(i&a)||(r[o]=pt(i,t)):c<=t&&(e.expiredLanes|=i),s&=~i}}(e,t);var a=dt(e,e===Rc?_c:0);if(0===a)null!==n&&Xe(n),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(null!=n&&Xe(n),1===t)0===e.tag?function(e){Br=!0,Vr(e)}(cl.bind(null,e)):Vr(cl.bind(null,e)),or((function(){0===(6&Ec)&&Ur()})),n=null;else{switch(vt(a)){case 1:n=$e;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=at}n=Rl(n,rl.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function rl(e,t){if(Jc=-1,$c=0,0!==(6&Ec))throw Error(s(327));var n=e.callbackNode;if(kl()&&e.callbackNode!==n)return null;var a=dt(e,e===Rc?_c:0);if(0===a)return null;if(0!==(30&a)||0!==(a&e.expiredLanes)||t)t=gl(e,a);else{t=a;var r=Ec;Ec|=2;var o=fl();for(Rc===e&&_c===t||(Gc=null,Uc=Ze()+500,dl(e,t));;)try{bl();break}catch(c){pl(e,c)}Ts(),Ic.current=o,Ec=r,null!==Ac?t=0:(Rc=null,_c=0,t=Oc)}if(0!==t){if(2===t&&(0!==(r=ft(e))&&(a=r,t=sl(e,r))),1===t)throw n=Mc,dl(e,0),il(e,a),al(e,Ze()),n;if(6===t)il(e,a);else{if(r=e.current.alternate,0===(30&a)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var a=0;a<n.length;a++){var r=n[a],s=r.getSnapshot;r=r.value;try{if(!ia(s(),r))return!1}catch(i){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(r)&&(2===(t=gl(e,a))&&(0!==(o=ft(e))&&(a=o,t=sl(e,o))),1===t))throw n=Mc,dl(e,0),il(e,a),al(e,Ze()),n;switch(e.finishedWork=r,e.finishedLanes=a,t){case 0:case 1:throw Error(s(345));case 2:case 5:wl(e,Wc,Gc);break;case 3:if(il(e,a),(130023424&a)===a&&10<(t=Vc+500-Ze())){if(0!==dt(e,0))break;if(((r=e.suspendedLanes)&a)!==a){el(),e.pingedLanes|=e.suspendedLanes&r;break}e.timeoutHandle=ar(wl.bind(null,e,Wc,Gc),t);break}wl(e,Wc,Gc);break;case 4:if(il(e,a),(4194240&a)===a)break;for(t=e.eventTimes,r=-1;0<a;){var i=31-ot(a);o=1<<i,(i=t[i])>r&&(r=i),a&=~o}if(a=r,10<(a=(120>(a=Ze()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*Nc(a/1960))-a)){e.timeoutHandle=ar(wl.bind(null,e,Wc,Gc),a);break}wl(e,Wc,Gc);break;default:throw Error(s(329))}}}return al(e,Ze()),e.callbackNode===n?rl.bind(null,e):null}function sl(e,t){var n=Bc;return e.current.memoizedState.isDehydrated&&(dl(e,t).flags|=256),2!==(e=gl(e,t))&&(t=Wc,Wc=n,null!==t&&ol(t)),e}function ol(e){null===Wc?Wc=e:Wc.push.apply(Wc,e)}function il(e,t){for(t&=~Pc,t&=~zc,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),a=1<<n;e[n]=-1,t&=~a}}function cl(e){if(0!==(6&Ec))throw Error(s(327));kl();var t=dt(e,0);if(0===(1&t))return al(e,Ze()),null;var n=gl(e,t);if(0!==e.tag&&2===n){var a=ft(e);0!==a&&(t=a,n=sl(e,a))}if(1===n)throw n=Mc,dl(e,0),il(e,t),al(e,Ze()),n;if(6===n)throw Error(s(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,wl(e,Wc,Gc),al(e,Ze()),null}function ll(e,t){var n=Ec;Ec|=1;try{return e(t)}finally{0===(Ec=n)&&(Uc=Ze()+500,Br&&Ur())}}function ul(e){null!==Xc&&0===Xc.tag&&0===(6&Ec)&&kl();var t=Ec;Ec|=1;var n=Cc.transition,a=xt;try{if(Cc.transition=null,xt=1,e)return e()}finally{xt=a,Cc.transition=n,0===(6&(Ec=t))&&Ur()}}function hl(){Fc=Dc.current,Ir(Dc)}function dl(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,rr(n)),null!==Ac)for(n=Ac.return;null!==n;){var a=n;switch(ts(a),a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&Dr();break;case 3:Qs(),Ir(Rr),Ir(Er),no();break;case 5:Js(a);break;case 4:Qs();break;case 13:case 19:Ir($s);break;case 10:Cs(a.type._context);break;case 22:case 23:hl()}n=n.return}if(Rc=e,Ac=e=Dl(e.current,null),_c=Fc=t,Oc=0,Mc=null,Pc=zc=Lc=0,Wc=Bc=null,null!==_s){for(t=0;t<_s.length;t++)if(null!==(a=(n=_s[t]).interleaved)){n.interleaved=null;var r=a.next,s=n.pending;if(null!==s){var o=s.next;s.next=r,a.next=o}n.pending=a}_s=null}return e}function pl(e,t){for(;;){var n=Ac;try{if(Ts(),ao.current=Jo,lo){for(var a=oo.memoizedState;null!==a;){var r=a.queue;null!==r&&(r.pending=null),a=a.next}lo=!1}if(so=0,co=io=oo=null,uo=!1,ho=0,Tc.current=null,null===n||null===n.return){Oc=1,Mc=t,Ac=null;break}e:{var o=e,i=n.return,c=n,l=t;if(t=_c,c.flags|=32768,null!==l&&"object"===typeof l&&"function"===typeof l.then){var u=l,h=c,d=h.tag;if(0===(1&h.mode)&&(0===d||11===d||15===d)){var p=h.alternate;p?(h.updateQueue=p.updateQueue,h.memoizedState=p.memoizedState,h.lanes=p.lanes):(h.updateQueue=null,h.memoizedState=null)}var f=gi(i);if(null!==f){f.flags&=-257,yi(f,i,c,0,t),1&f.mode&&mi(o,u,t),l=u;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(l),t.updateQueue=g}else m.add(l);break e}if(0===(1&t)){mi(o,u,t),ml();break e}l=Error(s(426))}else if(rs&&1&c.mode){var y=gi(i);if(null!==y){0===(65536&y.flags)&&(y.flags|=256),yi(y,i,c,0,t),fs(li(l,c));break e}}o=l=li(l,c),4!==Oc&&(Oc=2),null===Bc?Bc=[o]:Bc.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Vs(o,pi(0,l,t));break e;case 1:c=l;var b=o.type,x=o.stateNode;if(0===(128&o.flags)&&("function"===typeof b.getDerivedStateFromError||null!==x&&"function"===typeof x.componentDidCatch&&(null===qc||!qc.has(x)))){o.flags|=65536,t&=-t,o.lanes|=t,Vs(o,fi(o,c,t));break e}}o=o.return}while(null!==o)}vl(n)}catch(v){t=v,Ac===n&&null!==n&&(Ac=n=n.return);continue}break}}function fl(){var e=Ic.current;return Ic.current=Jo,null===e?Jo:e}function ml(){0!==Oc&&3!==Oc&&2!==Oc||(Oc=4),null===Rc||0===(268435455&Lc)&&0===(268435455&zc)||il(Rc,_c)}function gl(e,t){var n=Ec;Ec|=2;var a=fl();for(Rc===e&&_c===t||(Gc=null,dl(e,t));;)try{yl();break}catch(r){pl(e,r)}if(Ts(),Ec=n,Ic.current=a,null!==Ac)throw Error(s(261));return Rc=null,_c=0,Oc}function yl(){for(;null!==Ac;)xl(Ac)}function bl(){for(;null!==Ac&&!Ye();)xl(Ac)}function xl(e){var t=Sc(e.alternate,e,Fc);e.memoizedProps=e.pendingProps,null===t?vl(e):Ac=t,Tc.current=null}function vl(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=Ki(n,t,Fc)))return void(Ac=n)}else{if(null!==(n=Xi(n,t)))return n.flags&=32767,void(Ac=n);if(null===e)return Oc=6,void(Ac=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Ac=t);Ac=t=e}while(null!==t);0===Oc&&(Oc=5)}function wl(e,t,n){var a=xt,r=Cc.transition;try{Cc.transition=null,xt=1,function(e,t,n,a){do{kl()}while(null!==Xc);if(0!==(6&Ec))throw Error(s(327));n=e.finishedWork;var r=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(s(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<n;){var r=31-ot(n),s=1<<r;t[r]=0,a[r]=-1,e[r]=-1,n&=~s}}(e,o),e===Rc&&(Ac=Rc=null,_c=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||Kc||(Kc=!0,Rl(tt,(function(){return kl(),null}))),o=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||o){o=Cc.transition,Cc.transition=null;var i=xt;xt=1;var c=Ec;Ec|=4,Tc.current=null,function(e,t){if(er=Ht,pa(e=da())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(a&&0!==a.rangeCount){n=a.anchorNode;var r=a.anchorOffset,o=a.focusNode;a=a.focusOffset;try{n.nodeType,o.nodeType}catch(w){n=null;break e}var i=0,c=-1,l=-1,u=0,h=0,d=e,p=null;t:for(;;){for(var f;d!==n||0!==r&&3!==d.nodeType||(c=i+r),d!==o||0!==a&&3!==d.nodeType||(l=i+a),3===d.nodeType&&(i+=d.nodeValue.length),null!==(f=d.firstChild);)p=d,d=f;for(;;){if(d===e)break t;if(p===n&&++u===r&&(c=i),p===o&&++h===a&&(l=i),null!==(f=d.nextSibling))break;p=(d=p).parentNode}d=f}n=-1===c||-1===l?null:{start:c,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(tr={focusedElem:e,selectionRange:n},Ht=!1,Ji=t;null!==Ji;)if(e=(t=Ji).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Ji=e;else for(;null!==Ji;){t=Ji;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=t.stateNode,x=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:ni(t.type,g),y);b.__reactInternalSnapshotBeforeUpdate=x}break;case 3:var v=t.stateNode.containerInfo;1===v.nodeType?v.textContent="":9===v.nodeType&&v.documentElement&&v.removeChild(v.documentElement);break;default:throw Error(s(163))}}catch(w){Nl(t,t.return,w)}if(null!==(e=t.sibling)){e.return=t.return,Ji=e;break}Ji=t.return}m=tc,tc=!1}(e,n),gc(n,e),fa(tr),Ht=!!er,tr=er=null,e.current=n,bc(n,e,r),Qe(),Ec=c,xt=i,Cc.transition=o}else e.current=n;if(Kc&&(Kc=!1,Xc=e,Yc=r),o=e.pendingLanes,0===o&&(qc=null),function(e){if(st&&"function"===typeof st.onCommitFiberRoot)try{st.onCommitFiberRoot(rt,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),al(e,Ze()),null!==t)for(a=e.onRecoverableError,n=0;n<t.length;n++)r=t[n],a(r.value,{componentStack:r.stack,digest:r.digest});if(Hc)throw Hc=!1,e=jc,jc=null,e;0!==(1&Yc)&&0!==e.tag&&kl(),o=e.pendingLanes,0!==(1&o)?e===Zc?Qc++:(Qc=0,Zc=e):Qc=0,Ur()}(e,t,n,a)}finally{Cc.transition=r,xt=a}return null}function kl(){if(null!==Xc){var e=vt(Yc),t=Cc.transition,n=xt;try{if(Cc.transition=null,xt=16>e?16:e,null===Xc)var a=!1;else{if(e=Xc,Xc=null,Yc=0,0!==(6&Ec))throw Error(s(331));var r=Ec;for(Ec|=4,Ji=e.current;null!==Ji;){var o=Ji,i=o.child;if(0!==(16&Ji.flags)){var c=o.deletions;if(null!==c){for(var l=0;l<c.length;l++){var u=c[l];for(Ji=u;null!==Ji;){var h=Ji;switch(h.tag){case 0:case 11:case 15:nc(8,h,o)}var d=h.child;if(null!==d)d.return=h,Ji=d;else for(;null!==Ji;){var p=(h=Ji).sibling,f=h.return;if(sc(h),h===u){Ji=null;break}if(null!==p){p.return=f,Ji=p;break}Ji=f}}}var m=o.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}Ji=o}}if(0!==(2064&o.subtreeFlags)&&null!==i)i.return=o,Ji=i;else e:for(;null!==Ji;){if(0!==(2048&(o=Ji).flags))switch(o.tag){case 0:case 11:case 15:nc(9,o,o.return)}var b=o.sibling;if(null!==b){b.return=o.return,Ji=b;break e}Ji=o.return}}var x=e.current;for(Ji=x;null!==Ji;){var v=(i=Ji).child;if(0!==(2064&i.subtreeFlags)&&null!==v)v.return=i,Ji=v;else e:for(i=x;null!==Ji;){if(0!==(2048&(c=Ji).flags))try{switch(c.tag){case 0:case 11:case 15:ac(9,c)}}catch(k){Nl(c,c.return,k)}if(c===i){Ji=null;break e}var w=c.sibling;if(null!==w){w.return=c.return,Ji=w;break e}Ji=c.return}}if(Ec=r,Ur(),st&&"function"===typeof st.onPostCommitFiberRoot)try{st.onPostCommitFiberRoot(rt,e)}catch(k){}a=!0}return a}finally{xt=n,Cc.transition=t}}return!1}function Sl(e,t,n){e=Bs(e,t=pi(0,t=li(n,t),1),1),t=el(),null!==e&&(yt(e,1,t),al(e,t))}function Nl(e,t,n){if(3===e.tag)Sl(e,e,n);else for(;null!==t;){if(3===t.tag){Sl(t,e,n);break}if(1===t.tag){var a=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===qc||!qc.has(a))){t=Bs(t,e=fi(t,e=li(n,e),1),1),e=el(),null!==t&&(yt(t,1,e),al(t,e));break}}t=t.return}}function Il(e,t,n){var a=e.pingCache;null!==a&&a.delete(t),t=el(),e.pingedLanes|=e.suspendedLanes&n,Rc===e&&(_c&n)===n&&(4===Oc||3===Oc&&(130023424&_c)===_c&&500>Ze()-Vc?dl(e,0):Pc|=n),al(e,t)}function Tl(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ut,0===(130023424&(ut<<=1))&&(ut=4194304)));var n=el();null!==(e=Os(e,t))&&(yt(e,t,n),al(e,n))}function Cl(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Tl(e,n)}function El(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,r=e.memoizedState;null!==r&&(n=r.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(s(314))}null!==a&&a.delete(t),Tl(e,n)}function Rl(e,t){return Ke(e,t)}function Al(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function _l(e,t,n,a){return new Al(e,t,n,a)}function Fl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Dl(e,t){var n=e.alternate;return null===n?((n=_l(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ol(e,t,n,a,r,o){var i=2;if(a=e,"function"===typeof e)Fl(e)&&(i=1);else if("string"===typeof e)i=5;else e:switch(e){case S:return Ml(n.children,r,o,t);case N:i=8,r|=8;break;case I:return(e=_l(12,n,t,2|r)).elementType=I,e.lanes=o,e;case R:return(e=_l(13,n,t,r)).elementType=R,e.lanes=o,e;case A:return(e=_l(19,n,t,r)).elementType=A,e.lanes=o,e;case D:return Ll(n,r,o,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case T:i=10;break e;case C:i=9;break e;case E:i=11;break e;case _:i=14;break e;case F:i=16,a=null;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=_l(i,n,t,r)).elementType=e,t.type=a,t.lanes=o,t}function Ml(e,t,n,a){return(e=_l(7,e,a,t)).lanes=n,e}function Ll(e,t,n,a){return(e=_l(22,e,a,t)).elementType=D,e.lanes=n,e.stateNode={isHidden:!1},e}function zl(e,t,n){return(e=_l(6,e,null,t)).lanes=n,e}function Pl(e,t,n){return(t=_l(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Bl(e,t,n,a,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=a,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function Wl(e,t,n,a,r,s,o,i,c){return e=new Bl(e,t,n,i,c),1===t?(t=1,!0===s&&(t|=8)):t=0,s=_l(3,null,null,t),e.current=s,s.stateNode=e,s.memoizedState={element:a,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ls(s),e}function Vl(e){if(!e)return Cr;e:{if(Ue(e=e._reactInternals)!==e||1!==e.tag)throw Error(s(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Fr(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(s(171))}if(1===e.tag){var n=e.type;if(Fr(n))return Mr(e,n,t)}return t}function Ul(e,t,n,a,r,s,o,i,c){return(e=Wl(n,a,!0,e,0,s,0,i,c)).context=Vl(null),n=e.current,(s=Ps(a=el(),r=tl(n))).callback=void 0!==t&&null!==t?t:null,Bs(n,s,r),e.current.lanes=r,yt(e,r,a),al(e,a),e}function Gl(e,t,n,a){var r=t.current,s=el(),o=tl(r);return n=Vl(n),null===t.context?t.context=n:t.pendingContext=n,(t=Ps(s,o)).payload={element:e},null!==(a=void 0===a?null:a)&&(t.callback=a),null!==(e=Bs(r,t,o))&&(nl(e,r,o,s),Ws(e,r,o)),o}function Hl(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function jl(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function ql(e,t){jl(e,t),(e=e.alternate)&&jl(e,t)}Sc=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Rr.current)xi=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return xi=!1,function(e,t,n){switch(t.tag){case 3:Ri(t),ps();break;case 5:Zs(t);break;case 1:Fr(t.type)&&Lr(t);break;case 4:Ys(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,r=t.memoizedProps.value;Tr(ks,a._currentValue),a._currentValue=r;break;case 13:if(null!==(a=t.memoizedState))return null!==a.dehydrated?(Tr($s,1&$s.current),t.flags|=128,null):0!==(n&t.child.childLanes)?zi(e,t,n):(Tr($s,1&$s.current),null!==(e=Hi(e,t,n))?e.sibling:null);Tr($s,1&$s.current);break;case 19:if(a=0!==(n&t.childLanes),0!==(128&e.flags)){if(a)return Ui(e,t,n);t.flags|=128}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),Tr($s,$s.current),a)break;return null;case 22:case 23:return t.lanes=0,Ni(e,t,n)}return Hi(e,t,n)}(e,t,n);xi=0!==(131072&e.flags)}else xi=!1,rs&&0!==(1048576&t.flags)&&$r(t,qr,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;Gi(e,t),e=t.pendingProps;var r=_r(t,Er.current);Rs(t,n),r=go(null,t,a,e,r,n);var o=yo();return t.flags|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Fr(a)?(o=!0,Lr(t)):o=!1,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,Ls(t),r.updater=ri,t.stateNode=r,r._reactInternals=t,ci(t,a,e,n),t=Ei(null,t,a,!0,o,n)):(t.tag=0,rs&&o&&es(t),vi(null,t,r,n),t=t.child),t;case 16:a=t.elementType;e:{switch(Gi(e,t),e=t.pendingProps,a=(r=a._init)(a._payload),t.type=a,r=t.tag=function(e){if("function"===typeof e)return Fl(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===E)return 11;if(e===_)return 14}return 2}(a),e=ni(a,e),r){case 0:t=Ti(null,t,a,e,n);break e;case 1:t=Ci(null,t,a,e,n);break e;case 11:t=wi(null,t,a,e,n);break e;case 14:t=ki(null,t,a,ni(a.type,e),n);break e}throw Error(s(306,a,""))}return t;case 0:return a=t.type,r=t.pendingProps,Ti(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 1:return a=t.type,r=t.pendingProps,Ci(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 3:e:{if(Ri(t),null===e)throw Error(s(387));a=t.pendingProps,r=(o=t.memoizedState).element,zs(e,t),Us(t,a,null,n);var i=t.memoizedState;if(a=i.element,o.isDehydrated){if(o={element:a,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Ai(e,t,a,n,r=li(Error(s(423)),t));break e}if(a!==r){t=Ai(e,t,a,n,r=li(Error(s(424)),t));break e}for(as=lr(t.stateNode.containerInfo.firstChild),ns=t,rs=!0,ss=null,n=ws(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ps(),a===r){t=Hi(e,t,n);break e}vi(e,t,a,n)}t=t.child}return t;case 5:return Zs(t),null===e&&ls(t),a=t.type,r=t.pendingProps,o=null!==e?e.memoizedProps:null,i=r.children,nr(a,r)?i=null:null!==o&&nr(a,o)&&(t.flags|=32),Ii(e,t),vi(e,t,i,n),t.child;case 6:return null===e&&ls(t),null;case 13:return zi(e,t,n);case 4:return Ys(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=vs(t,null,a,n):vi(e,t,a,n),t.child;case 11:return a=t.type,r=t.pendingProps,wi(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 7:return vi(e,t,t.pendingProps,n),t.child;case 8:case 12:return vi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(a=t.type._context,r=t.pendingProps,o=t.memoizedProps,i=r.value,Tr(ks,a._currentValue),a._currentValue=i,null!==o)if(ia(o.value,i)){if(o.children===r.children&&!Rr.current){t=Hi(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var c=o.dependencies;if(null!==c){i=o.child;for(var l=c.firstContext;null!==l;){if(l.context===a){if(1===o.tag){(l=Ps(-1,n&-n)).tag=2;var u=o.updateQueue;if(null!==u){var h=(u=u.shared).pending;null===h?l.next=l:(l.next=h.next,h.next=l),u.pending=l}}o.lanes|=n,null!==(l=o.alternate)&&(l.lanes|=n),Es(o.return,n,t),c.lanes|=n;break}l=l.next}}else if(10===o.tag)i=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(i=o.return))throw Error(s(341));i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),Es(i,n,t),i=o.sibling}else i=o.child;if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===t){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}vi(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,a=t.pendingProps.children,Rs(t,n),a=a(r=As(r)),t.flags|=1,vi(e,t,a,n),t.child;case 14:return r=ni(a=t.type,t.pendingProps),ki(e,t,a,r=ni(a.type,r),n);case 15:return Si(e,t,t.type,t.pendingProps,n);case 17:return a=t.type,r=t.pendingProps,r=t.elementType===a?r:ni(a,r),Gi(e,t),t.tag=1,Fr(a)?(e=!0,Lr(t)):e=!1,Rs(t,n),oi(t,a,r),ci(t,a,r,n),Ei(null,t,a,!0,e,n);case 19:return Ui(e,t,n);case 22:return Ni(e,t,n)}throw Error(s(156,t.tag))};var Kl="function"===typeof reportError?reportError:function(e){console.error(e)};function Xl(e){this._internalRoot=e}function Yl(e){this._internalRoot=e}function Ql(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Jl(){}function $l(e,t,n,a,r){var s=n._reactRootContainer;if(s){var o=s;if("function"===typeof r){var i=r;r=function(){var e=Hl(o);i.call(e)}}Gl(t,o,e,r)}else o=function(e,t,n,a,r){if(r){if("function"===typeof a){var s=a;a=function(){var e=Hl(o);s.call(e)}}var o=Ul(t,a,e,0,null,!1,0,"",Jl);return e._reactRootContainer=o,e[fr]=o.current,Ua(8===e.nodeType?e.parentNode:e),ul(),o}for(;r=e.lastChild;)e.removeChild(r);if("function"===typeof a){var i=a;a=function(){var e=Hl(c);i.call(e)}}var c=Wl(e,0,!1,null,0,!1,0,"",Jl);return e._reactRootContainer=c,e[fr]=c.current,Ua(8===e.nodeType?e.parentNode:e),ul((function(){Gl(t,c,n,a)})),c}(n,t,e,r,a);return Hl(o)}Yl.prototype.render=Xl.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(s(409));Gl(e,t,null,null)},Yl.prototype.unmount=Xl.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;ul((function(){Gl(null,e,null,null)})),t[fr]=null}},Yl.prototype.unstable_scheduleHydration=function(e){if(e){var t=Nt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Dt.length&&0!==t&&t<Dt[n].priority;n++);Dt.splice(n,0,e),0===n&&zt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ht(t.pendingLanes);0!==n&&(bt(t,1|n),al(t,Ze()),0===(6&Ec)&&(Uc=Ze()+500,Ur()))}break;case 13:ul((function(){var t=Os(e,1);if(null!==t){var n=el();nl(t,e,1,n)}})),ql(e,1)}},kt=function(e){if(13===e.tag){var t=Os(e,134217728);if(null!==t)nl(t,e,134217728,el());ql(e,134217728)}},St=function(e){if(13===e.tag){var t=tl(e),n=Os(e,t);if(null!==n)nl(n,e,t,el());ql(e,t)}},Nt=function(){return xt},It=function(e,t){var n=xt;try{return xt=e,t()}finally{xt=n}},ke=function(e,t,n){switch(t){case"input":if(J(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var r=wr(a);if(!r)throw Error(s(90));K(a),J(a,r)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ee=ll,Re=ul;var eu={usingClientEntryPoint:!1,Events:[xr,vr,wr,Te,Ce,ll]},tu={findFiberByHostInstance:br,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nu={bundleType:tu.bundleType,version:tu.version,rendererPackageName:tu.rendererPackageName,rendererConfig:tu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:v.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=je(e))?null:e.stateNode},findFiberByHostInstance:tu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var au=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!au.isDisabled&&au.supportsFiber)try{rt=au.inject(nu),st=au}catch(ue){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=eu,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ql(t))throw Error(s(200));return function(e,t,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==a?null:""+a,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Ql(e))throw Error(s(299));var n=!1,a="",r=Kl;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(r=t.onRecoverableError)),t=Wl(e,1,!1,null,0,n,0,a,r),e[fr]=t.current,Ua(8===e.nodeType?e.parentNode:e),new Xl(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(s(188));throw e=Object.keys(e).join(","),Error(s(268,e))}return e=null===(e=je(t))?null:e.stateNode},t.flushSync=function(e){return ul(e)},t.hydrate=function(e,t,n){if(!Zl(t))throw Error(s(200));return $l(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Ql(e))throw Error(s(405));var a=null!=n&&n.hydratedSources||null,r=!1,o="",i=Kl;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(r=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Ul(t,null,e,1,null!=n?n:null,r,0,o,i),e[fr]=t.current,Ua(e),a)for(e=0;e<a.length;e++)r=(r=(n=a[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,r]:t.mutableSourceEagerHydrationData.push(n,r);return new Yl(t)},t.render=function(e,t,n){if(!Zl(t))throw Error(s(200));return $l(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zl(e))throw Error(s(40));return!!e._reactRootContainer&&(ul((function(){$l(null,null,e,!1,(function(){e._reactRootContainer=null,e[fr]=null}))})),!0)},t.unstable_batchedUpdates=ll,t.unstable_renderSubtreeIntoContainer=function(e,t,n,a){if(!Zl(n))throw Error(s(200));if(null==e||void 0===e._reactInternals)throw Error(s(38));return $l(e,t,n,!1,a)},t.version="18.3.1-next-f1338f8080-20240426"},391:(e,t,n)=>{"use strict";var a=n(950);t.createRoot=a.createRoot,t.hydrateRoot=a.hydrateRoot},950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(730)},153:(e,t,n)=>{"use strict";var a=n(43),r=Symbol.for("react.element"),s=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,i=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,n){var a,s={},l=null,u=null;for(a in void 0!==n&&(l=""+n),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(u=t.ref),t)o.call(t,a)&&!c.hasOwnProperty(a)&&(s[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===s[a]&&(s[a]=t[a]);return{$$typeof:r,type:e,key:l,ref:u,props:s,_owner:i.current}}t.jsx=l,t.jsxs=l},202:(e,t)=>{"use strict";var n=Symbol.for("react.element"),a=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),c=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),h=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function x(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var v=x.prototype=new b;v.constructor=x,m(v,y.prototype),v.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,S={current:null},N={key:!0,ref:!0,__self:!0,__source:!0};function I(e,t,a){var r,s={},o=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)k.call(t,r)&&!N.hasOwnProperty(r)&&(s[r]=t[r]);var c=arguments.length-2;if(1===c)s.children=a;else if(1<c){for(var l=Array(c),u=0;u<c;u++)l[u]=arguments[u+2];s.children=l}if(e&&e.defaultProps)for(r in c=e.defaultProps)void 0===s[r]&&(s[r]=c[r]);return{$$typeof:n,type:e,key:o,ref:i,props:s,_owner:S.current}}function T(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var C=/\/+/g;function E(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function R(e,t,r,s,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var c=!1;if(null===e)c=!0;else switch(i){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case n:case a:c=!0}}if(c)return o=o(c=e),e=""===s?"."+E(c,0):s,w(o)?(r="",null!=e&&(r=e.replace(C,"$&/")+"/"),R(o,t,r,"",(function(e){return e}))):null!=o&&(T(o)&&(o=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,r+(!o.key||c&&c.key===o.key?"":(""+o.key).replace(C,"$&/")+"/")+e)),t.push(o)),1;if(c=0,s=""===s?".":s+":",w(e))for(var l=0;l<e.length;l++){var u=s+E(i=e[l],l);c+=R(i,t,r,u,o)}else if(u=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"===typeof u)for(e=u.call(e),l=0;!(i=e.next()).done;)c+=R(i=i.value,t,r,u=s+E(i,l++),o);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return c}function A(e,t,n){if(null==e)return e;var a=[],r=0;return R(e,a,"","",(function(e){return t.call(n,e,r++)})),a}function _(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var F={current:null},D={transition:null},O={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:D,ReactCurrentOwner:S};function M(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:A,forEach:function(e,t,n){A(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return A(e,(function(){t++})),t},toArray:function(e){return A(e,(function(e){return e}))||[]},only:function(e){if(!T(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=r,t.Profiler=o,t.PureComponent=x,t.StrictMode=s,t.Suspense=u,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,t.act=M,t.cloneElement=function(e,t,a){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=m({},e.props),s=e.key,o=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,i=S.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(l in t)k.call(t,l)&&!N.hasOwnProperty(l)&&(r[l]=void 0===t[l]&&void 0!==c?c[l]:t[l])}var l=arguments.length-2;if(1===l)r.children=a;else if(1<l){c=Array(l);for(var u=0;u<l;u++)c[u]=arguments[u+2];r.children=c}return{$$typeof:n,type:e.type,key:s,ref:o,props:r,_owner:i}},t.createContext=function(e){return(e={$$typeof:c,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=I,t.createFactory=function(e){var t=I.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:_}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=D.transition;D.transition={};try{e()}finally{D.transition=t}},t.unstable_act=M,t.useCallback=function(e,t){return F.current.useCallback(e,t)},t.useContext=function(e){return F.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return F.current.useDeferredValue(e)},t.useEffect=function(e,t){return F.current.useEffect(e,t)},t.useId=function(){return F.current.useId()},t.useImperativeHandle=function(e,t,n){return F.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return F.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return F.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return F.current.useMemo(e,t)},t.useReducer=function(e,t,n){return F.current.useReducer(e,t,n)},t.useRef=function(e){return F.current.useRef(e)},t.useState=function(e){return F.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return F.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return F.current.useTransition()},t.version="18.3.1"},43:(e,t,n)=>{"use strict";e.exports=n(202)},579:(e,t,n)=>{"use strict";e.exports=n(153)},234:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var a=n-1>>>1,r=e[a];if(!(0<s(r,t)))break e;e[a]=t,e[n]=r,n=a}}function a(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var a=0,r=e.length,o=r>>>1;a<o;){var i=2*(a+1)-1,c=e[i],l=i+1,u=e[l];if(0>s(c,n))l<r&&0>s(u,c)?(e[a]=u,e[l]=n,a=l):(e[a]=c,e[i]=n,a=i);else{if(!(l<r&&0>s(u,n)))break e;e[a]=u,e[l]=n,a=l}}}return t}function s(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,c=i.now();t.unstable_now=function(){return i.now()-c}}var l=[],u=[],h=1,d=null,p=3,f=!1,m=!1,g=!1,y="function"===typeof setTimeout?setTimeout:null,b="function"===typeof clearTimeout?clearTimeout:null,x="undefined"!==typeof setImmediate?setImmediate:null;function v(e){for(var t=a(u);null!==t;){if(null===t.callback)r(u);else{if(!(t.startTime<=e))break;r(u),t.sortIndex=t.expirationTime,n(l,t)}t=a(u)}}function w(e){if(g=!1,v(e),!m)if(null!==a(l))m=!0,D(k);else{var t=a(u);null!==t&&O(w,t.startTime-e)}}function k(e,n){m=!1,g&&(g=!1,b(T),T=-1),f=!0;var s=p;try{for(v(n),d=a(l);null!==d&&(!(d.expirationTime>n)||e&&!R());){var o=d.callback;if("function"===typeof o){d.callback=null,p=d.priorityLevel;var i=o(d.expirationTime<=n);n=t.unstable_now(),"function"===typeof i?d.callback=i:d===a(l)&&r(l),v(n)}else r(l);d=a(l)}if(null!==d)var c=!0;else{var h=a(u);null!==h&&O(w,h.startTime-n),c=!1}return c}finally{d=null,p=s,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,N=!1,I=null,T=-1,C=5,E=-1;function R(){return!(t.unstable_now()-E<C)}function A(){if(null!==I){var e=t.unstable_now();E=e;var n=!0;try{n=I(!0,e)}finally{n?S():(N=!1,I=null)}}else N=!1}if("function"===typeof x)S=function(){x(A)};else if("undefined"!==typeof MessageChannel){var _=new MessageChannel,F=_.port2;_.port1.onmessage=A,S=function(){F.postMessage(null)}}else S=function(){y(A,0)};function D(e){I=e,N||(N=!0,S())}function O(e,n){T=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,D(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return a(l)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,r,s){var o=t.unstable_now();switch("object"===typeof s&&null!==s?s="number"===typeof(s=s.delay)&&0<s?o+s:o:s=o,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:h++,callback:r,priorityLevel:e,startTime:s,expirationTime:i=s+i,sortIndex:-1},s>o?(e.sortIndex=s,n(u,e),null===a(l)&&e===a(u)&&(g?(b(T),T=-1):g=!0,O(w,s-o))):(e.sortIndex=i,n(l,e),m||f||(m=!0,D(k))),e},t.unstable_shouldYield=R,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},853:(e,t,n)=>{"use strict";e.exports=n(234)},334:(e,t,n)=>{var a=n(359),r=n(66),s=n(16),o=n(538),i=n(288),c=n(262),l=n(430);l.alea=a,l.xor128=r,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=c,e.exports=l},359:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function c(e,t){var n=new o(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.alea=c}(0,e=n.nmd(e),n.amdD)},262:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.tychei=c}(0,e=n.nmd(e),n.amdD)},66:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xor128=c}(0,e=n.nmd(e),n.amdD)},288:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,o,i=[],c=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,c=Math.max(c,t.length)),r=0,s=-32;s<c;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(o=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(o=o+1640531527|0,r=0==(n=i[127&s]^=a+o)?r+1:0);for(r>=128&&(i[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=i[r+34&127],n=i[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[r]=a^n;e.w=o,e.X=i,e.i=r}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xor4096=c}(0,e=n.nmd(e),n.amdD)},538:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xorshift7=c}(0,e=n.nmd(e),n.amdD)},16:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xorwow=c}(0,e=n.nmd(e),n.amdD)},430:function(e,t,n){var a;!function(r,s,o){var i,c=256,l=o.pow(c,6),u=o.pow(2,52),h=2*u,d=c-1;function p(e,t,n){var a=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(c):(e=new Uint8Array(c),(r.crypto||r.msCrypto).getRandomValues(e)),b(e)}catch(a){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,b(s)]}}():e,3),a),p=new f(a),x=function(){for(var e=p.g(6),t=l,n=0;e<u;)e=(e+n)*c,t*=c,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),s),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,p),e.state=function(){return m(p,{})}),n?(o.random=e,t):e})(x,d,"global"in t?t.global:this==o,t.state)}function f(e){var t,n=e.length,a=this,r=0,s=a.i=a.j=0,o=a.S=[];for(n||(e=[n++]);r<c;)o[r]=r++;for(r=0;r<c;r++)o[r]=o[s=d&s+e[r%n]+(t=o[r])],o[s]=t;(a.g=function(e){for(var t,n=0,r=a.i,s=a.j,o=a.S;e--;)t=o[r=d&r+1],n=n*c+o[d&(o[r]=o[s=d&s+t])+(o[s]=t)];return a.i=r,a.j=s,n})(c)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(g(e[n],t-1))}catch(s){}return a.length?a:"string"==r?e:e+"\0"}function y(e,t){for(var n,a=e+"",r=0;r<a.length;)t[d&r]=d&(n^=19*t[d&r])+a.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(o.random(),s),e.exports){e.exports=p;try{i=n(996)}catch(x){}}else void 0===(a=function(){return p}.call(t,n,t,e))||(e.exports=a)}("undefined"!==typeof self?self:this,[],Math)},817:()=>{},590:()=>{},530:()=>{},108:()=>{},551:()=>{},996:()=>{}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var s=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},(()=>{var e,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__;n.t=function(a,r){if(1&r&&(a=this(a)),8&r)return a;if("object"===typeof a&&a){if(4&r&&a.__esModule)return a;if(16&r&&"function"===typeof a.then)return a}var s=Object.create(null);n.r(s);var o={};e=e||[null,t({}),t([]),t(t)];for(var i=2&r&&a;"object"==typeof i&&!~e.indexOf(i);i=t(i))Object.getOwnPropertyNames(i).forEach((e=>o[e]=()=>a[e]));return o.default=()=>a,n.d(s,o),s}})(),n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,a)=>(n.f[a](e,t),t)),[])),n.u=e=>"static/js/"+e+".0b3dd17d.chunk.js",n.miniCssF=e=>{},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={},t="phone_cam_streamer:";n.l=(a,r,s,o)=>{if(e[a])e[a].push(r);else{var i,c;if(void 0!==s)for(var l=document.getElementsByTagName("script"),u=0;u<l.length;u++){var h=l[u];if(h.getAttribute("src")==a||h.getAttribute("data-webpack")==t+s){i=h;break}}i||(c=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,n.nc&&i.setAttribute("nonce",n.nc),i.setAttribute("data-webpack",t+s),i.src=a),e[a]=[r];var d=(t,n)=>{i.onerror=i.onload=null,clearTimeout(p);var r=e[a];if(delete e[a],i.parentNode&&i.parentNode.removeChild(i),r&&r.forEach((e=>e(n))),t)return t(n)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=d.bind(null,i.onerror),i.onload=d.bind(null,i.onload),c&&document.head.appendChild(i)}}})(),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/robo_magellan/",(()=>{var e={792:0};n.f.j=(t,a)=>{var r=n.o(e,t)?e[t]:void 0;if(0!==r)if(r)a.push(r[2]);else{var s=new Promise(((n,a)=>r=e[t]=[n,a]));a.push(r[2]=s);var o=n.p+n.u(t),i=new Error;n.l(o,(a=>{if(n.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var s=a&&("load"===a.type?"missing":a.type),o=a&&a.target&&a.target.src;i.message="Loading chunk "+t+" failed.\n("+s+": "+o+")",i.name="ChunkLoadError",i.type=s,i.request=o,r[1](i)}}),"chunk-"+t,t)}};var t=(t,a)=>{var r,s,o=a[0],i=a[1],c=a[2],l=0;if(o.some((t=>0!==e[t]))){for(r in i)n.o(i,r)&&(n.m[r]=i[r]);if(c)c(n)}for(t&&t(a);l<o.length;l++)s=o[l],n.o(e,s)&&e[s]&&e[s][0](),e[s]=0},a=self.webpackChunkphone_cam_streamer=self.webpackChunkphone_cam_streamer||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})(),(()=>{"use strict";var e={};n.r(e),n.d(e,{CompositeArrayBuffer:()=>mo,browserFiles:()=>lc,browserHTTPRequest:()=>bc,concatenateArrayBuffers:()=>Oo,copyModel:()=>xi,decodeWeights:()=>Io,decodeWeightsStream:()=>Ao,encodeWeights:()=>No,fromMemory:()=>kc,fromMemorySync:()=>Sc,getLoadHandlers:()=>jo,getModelArtifactsForJSON:()=>Po,getModelArtifactsForJSONSync:()=>zo,getModelArtifactsInfoForJSON:()=>Bo,getSaveHandlers:()=>Ho,getWeightSpecs:()=>Wo,http:()=>yc,isHTTPScheme:()=>mc,listModels:()=>yi,loadWeights:()=>dc,moveModel:()=>vi,registerLoadRouter:()=>Go,registerSaveRouter:()=>Uo,removeModel:()=>bi,weightsLoaderFactory:()=>pc,withSaveHandler:()=>Nc,withSaveHandlerSync:()=>Ic});var t={};n.r(t),n.d(t,{assertParamsValid:()=>Fc,computeFlatOffset:()=>jc,computeOutShape:()=>Oc,getNormalizedAxes:()=>Pc,isSliceContinous:()=>Hc,maskToAxes:()=>Dc,parseSliceParams:()=>qc,sliceInfo:()=>Kc,startForAxis:()=>Uc,startIndicesWithElidedDims:()=>Bc,stopForAxis:()=>Gc,stopIndicesWithElidedDims:()=>Wc,stridesForAxis:()=>Vc,stridesWithElidedDims:()=>Mc});var a={};n.r(a),n.d(a,{conv2d:()=>op,depthwiseConv2d:()=>lp,matMul:()=>up});var r={};n.r(r),n.d(r,{collectGatherOpShapeInfo:()=>km,computeOutShape:()=>wm,segOpComputeOptimalWindowSize:()=>vm});var s={};n.r(s),n.d(s,{ERF_A1:()=>Pf,ERF_A2:()=>Bf,ERF_A3:()=>Wf,ERF_A4:()=>Vf,ERF_A5:()=>Uf,ERF_P:()=>zf,PARALLELIZE_THRESHOLD:()=>Tf,RowPartitionType:()=>wf,SELU_SCALE:()=>Lf,SELU_SCALEALPHA:()=>Mf,applyActivation:()=>rp,assertAndGetBroadcastShape:()=>$i,assertAxesAreInnerMostDims:()=>vu,assertParamsConsistent:()=>xf,assignToTypedArray:()=>Xf,axesAreInnerMostDims:()=>gu,calculateShapes:()=>Od,checkEinsumDimSizes:()=>am,checkPadOnDimRoundingMode:()=>wl,combineLocations:()=>yu,combineRaggedTensorToTensorShapes:()=>kf,complexWithEvenIndex:()=>jf,complexWithOddIndex:()=>qf,computeConv2DInfo:()=>ul,computeConv3DInfo:()=>hl,computeDefaultPad:()=>dl,computeDilation2DInfo:()=>il,computeOptimalWindowSize:()=>Cf,computeOutAndReduceShapes:()=>bu,computeOutShape:()=>vf,computePool2DInfo:()=>cl,computePool3DInfo:()=>ll,convertConv2DDataFormat:()=>vl,decodeEinsumEquation:()=>tm,eitherStridesOrDilationsAreOne:()=>bl,expandShapeToKeepDim:()=>xu,exponent:()=>Qf,exponents:()=>Yf,fromStringArrayToUint8:()=>Nm,fromUint8ToStringArray:()=>Sm,getAxesPermutation:()=>wu,getBroadcastDims:()=>Zi,getComplexWithIndex:()=>Kf,getEinsumComputePath:()=>rm,getEinsumPermutation:()=>nm,getFusedBiasGradient:()=>ap,getFusedDyActivation:()=>np,getImageCenter:()=>Ef,getInnerMostAxes:()=>Su,getPermuted:()=>Af,getRaggedRank:()=>Nf,getReductionAxes:()=>Ji,getReshaped:()=>Rf,getReshapedPermuted:()=>_f,getRowPartitionTypesHelper:()=>Sf,getSliceBeginCoords:()=>Ff,getSliceSize:()=>Df,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>cm,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>lm,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>um,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>pm,getSparseReshapeInputOutputMismatchErrorMessage:()=>mm,getSparseReshapeInputOutputMultipleErrorMessage:()=>fm,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>hm,getSparseReshapeNegativeOutputDimErrorMessage:()=>dm,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>xm,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>gm,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>ym,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>bm,getUndoAxesPermutation:()=>ku,isIdentityPermutation:()=>sm,log:()=>Pr,mergeRealAndImagArrays:()=>Gf,prepareAndValidate:()=>Of,prepareSplitSize:()=>im,segment_util:()=>r,shouldFuse:()=>sp,slice_util:()=>t,splitRealAndImagArrays:()=>Hf,stridesOrDilationsArePositive:()=>xl,tupleValuesAreOne:()=>yl,upcastType:()=>Bs,validateDefaultValueShape:()=>If,validateInput:()=>Dd,validateUpdateShape:()=>Fd,warn:()=>zr});var o={};n.r(o),n.d(o,{json:()=>qk});var i={};n.r(i),n.d(i,{json:()=>Kk});var c={};n.r(c),n.d(c,{json:()=>Xk});var l={};n.r(l),n.d(l,{json:()=>Yk});var u={};n.r(u),n.d(u,{json:()=>Qk});var h={};n.r(h),n.d(h,{json:()=>Zk});var d={};n.r(d),n.d(d,{json:()=>Jk});var p={};n.r(p),n.d(p,{json:()=>$k});var f={};n.r(f),n.d(f,{json:()=>eS});var m={};n.r(m),n.d(m,{json:()=>tS});var g={};n.r(g),n.d(g,{json:()=>nS});var y={};n.r(y),n.d(y,{json:()=>aS});var b={};n.r(b),n.d(b,{json:()=>rS});var x={};n.r(x),n.d(x,{json:()=>sS});var v={};n.r(v),n.d(v,{json:()=>oS});var w={};n.r(w),n.d(w,{json:()=>iS});var k={};n.r(k),n.d(k,{json:()=>cS});var S={};n.r(S),n.d(S,{json:()=>lS});var N={};n.r(N),n.d(N,{json:()=>uS});var I={};n.r(I),n.d(I,{OP_SCOPE_SUFFIX:()=>co,abs:()=>Qi,acos:()=>Yc,acosh:()=>Qc,add:()=>Ri,addN:()=>Zc,all:()=>Jc,any:()=>$c,argMax:()=>el,argMin:()=>tl,asin:()=>nl,asinh:()=>al,atan:()=>rl,atan2:()=>sl,atanh:()=>ol,avgPool:()=>Sl,avgPool3d:()=>Nl,basicLSTMCell:()=>Al,batchNorm:()=>Fl,batchNorm2d:()=>Dl,batchNorm3d:()=>Ol,batchNorm4d:()=>Ml,batchToSpaceND:()=>_l,bincount:()=>Ll,bitwiseAnd:()=>zl,booleanMaskAsync:()=>jd,broadcastArgs:()=>Pl,broadcastTo:()=>Bl,buffer:()=>Ii,cast:()=>Ti,ceil:()=>Wl,clipByValue:()=>Vl,clone:()=>Ci,complex:()=>uo,concat:()=>Il,concat1d:()=>Ul,concat2d:()=>Gl,concat3d:()=>Hl,concat4d:()=>jl,conv1d:()=>Kl,conv2d:()=>ql,conv2dTranspose:()=>Yl,conv3d:()=>Ql,conv3dTranspose:()=>Jl,cos:()=>$l,cosh:()=>eu,cosineWindow:()=>$d,cumprod:()=>tu,cumsum:()=>nu,denseBincount:()=>au,depthToSpace:()=>ru,depthwiseConv2d:()=>su,diag:()=>ou,dilation2d:()=>iu,div:()=>_i,divNoNan:()=>uu,dot:()=>hu,dropout:()=>Zd,einsum:()=>du,elu:()=>pu,enclosingPowerOfTwo:()=>Jd,ensureShape:()=>fu,equal:()=>cu,erf:()=>mu,euclideanNorm:()=>Ru,exp:()=>Au,expandDims:()=>_u,expm1:()=>Fu,eye:()=>Ou,fft:()=>gd,fill:()=>ji,floor:()=>Mu,floorDiv:()=>Ai,fused:()=>a,gather:()=>Lu,gatherND:()=>Qd,greater:()=>zu,greaterEqual:()=>Pu,ifft:()=>yd,imag:()=>Bu,image:()=>hf,inTopKAsync:()=>ep,irfft:()=>bd,isFinite:()=>Wu,isInf:()=>Vu,isNaN:()=>Uu,leakyRelu:()=>Gu,less:()=>Hu,lessEqual:()=>ju,linalg:()=>df,linspace:()=>qu,localResponseNormalization:()=>Ku,log:()=>Xu,log1p:()=>Yu,logSigmoid:()=>Ju,logSoftmax:()=>$u,logSumExp:()=>eh,logicalAnd:()=>th,logicalNot:()=>nh,logicalOr:()=>ah,logicalXor:()=>rh,losses:()=>pf,lowerBound:()=>ih,matMul:()=>Tl,max:()=>Nu,maxPool:()=>ch,maxPool3d:()=>lh,maxPoolWithArgmax:()=>uh,maximum:()=>ec,mean:()=>hh,meshgrid:()=>fh,min:()=>Iu,minimum:()=>mh,mirrorPad:()=>gh,mod:()=>yh,moments:()=>bh,movingAverage:()=>Kd,mul:()=>Fi,multiRNNCell:()=>xh,multinomial:()=>vh,neg:()=>Qu,norm:()=>Eu,notEqual:()=>wh,oneHot:()=>kh,ones:()=>ph,onesLike:()=>Sh,op:()=>lo,outerProduct:()=>Nh,pad:()=>Ih,pad1d:()=>Th,pad2d:()=>Ch,pad3d:()=>Eh,pad4d:()=>Rh,pool:()=>_h,pow:()=>Ki,prelu:()=>Fh,print:()=>Ei,prod:()=>Dh,raggedGather:()=>Oh,raggedRange:()=>Mh,raggedTensorToTensor:()=>Lh,rand:()=>zh,randomGamma:()=>Uh,randomNormal:()=>Gh,randomStandardNormal:()=>Hh,randomUniform:()=>jh,randomUniformInt:()=>qh,range:()=>Kh,real:()=>Xh,reciprocal:()=>Yh,relu:()=>Qh,relu6:()=>Zh,reshape:()=>kl,reverse:()=>Jh,reverse1d:()=>$h,reverse2d:()=>ed,reverse3d:()=>td,reverse4d:()=>nd,rfft:()=>vd,round:()=>ad,rsqrt:()=>rd,scalar:()=>zi,scatterND:()=>Xd,searchSorted:()=>oh,selu:()=>sd,separableConv2d:()=>od,setdiff1dAsync:()=>id,sigmoid:()=>Cl,sign:()=>cd,signal:()=>uf,sin:()=>ld,sinh:()=>ud,slice:()=>El,slice1d:()=>hd,slice2d:()=>dd,slice3d:()=>pd,slice4d:()=>fd,softmax:()=>md,softplus:()=>Zu,spaceToBatchND:()=>Ah,sparse:()=>ff,sparseToDense:()=>Yd,spectral:()=>lf,split:()=>xd,sqrt:()=>Di,square:()=>Oi,squaredDifference:()=>wd,squeeze:()=>kd,stack:()=>Sd,step:()=>Nd,stridedSlice:()=>Id,string:()=>mf,sub:()=>Xi,sum:()=>Tu,tan:()=>Td,tanh:()=>Rl,tensor:()=>po,tensor1d:()=>Cd,tensor2d:()=>Ed,tensor3d:()=>Tc,tensor4d:()=>Rd,tensor5d:()=>Ad,tensor6d:()=>_d,tensorScatterUpdate:()=>Md,tile:()=>Du,topk:()=>Ld,transpose:()=>qd,truncatedNormal:()=>zd,unique:()=>Pd,unsortedSegmentSum:()=>Bd,unstack:()=>Wd,upperBound:()=>Vd,variable:()=>Ud,where:()=>lu,whereAsync:()=>Hd,zeros:()=>dh,zerosLike:()=>Mi});var T={};n.r(T),n.d(T,{mx:()=>hI,XI:()=>aT,Nk:()=>rT,f6:()=>oT,ct:()=>oI,YG:()=>uT,hH:()=>gT,z3:()=>eC,sG:()=>hC,uM:()=>gC,vS:()=>DC,qB:()=>VC,GG:()=>GC,lg:()=>XC,rq:()=>jC,cu:()=>iE,WR:()=>rE,GE:()=>uE,px:()=>dE,jC:()=>CE,He:()=>AE,hE:()=>WE,BF:()=>qT,Dk:()=>QE,cl:()=>rR,_B:()=>yR,ub:()=>kR,_f:()=>IR,Ku:()=>_R,qy:()=>DR,Zy:()=>jR,bu:()=>XR,zv:()=>ZN,dH:()=>vI,HS:()=>$I,yH:()=>fA,l3:()=>gA,z9:()=>bA,x6:()=>SA,_m:()=>AA,eW:()=>MA,GK:()=>PA,SP:()=>VA,yr:()=>GA,dl:()=>kC,Dw:()=>YA,xT:()=>$A,_X:()=>CI,wz:()=>o_});var C,E=n(43),R=n.t(E,2),A=n(391);function _(){return _=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},_.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(C||(C={}));const F="popstate";function D(e,t){if(!1===e||null===e||"undefined"===typeof e)throw new Error(t)}function O(e,t){if(!e){"undefined"!==typeof console&&console.warn(t);try{throw new Error(t)}catch(n){}}}function M(e,t){return{usr:e.state,key:e.key,idx:t}}function L(e,t,n,a){return void 0===n&&(n=null),_({pathname:"string"===typeof e?e:e.pathname,search:"",hash:""},"string"===typeof t?P(t):t,{state:n,key:t&&t.key||a||Math.random().toString(36).substr(2,8)})}function z(e){let{pathname:t="/",search:n="",hash:a=""}=e;return n&&"?"!==n&&(t+="?"===n.charAt(0)?n:"?"+n),a&&"#"!==a&&(t+="#"===a.charAt(0)?a:"#"+a),t}function P(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let a=e.indexOf("?");a>=0&&(t.search=e.substr(a),e=e.substr(0,a)),e&&(t.pathname=e)}return t}function B(e,t,n,a){void 0===a&&(a={});let{window:r=document.defaultView,v5Compat:s=!1}=a,o=r.history,i=C.Pop,c=null,l=u();function u(){return(o.state||{idx:null}).idx}function h(){i=C.Pop;let e=u(),t=null==e?null:e-l;l=e,c&&c({action:i,location:p.location,delta:t})}function d(e){let t="null"!==r.location.origin?r.location.origin:r.location.href,n="string"===typeof e?e:z(e);return n=n.replace(/ $/,"%20"),D(t,"No window.location.(origin|href) available to create URL for href: "+n),new URL(n,t)}null==l&&(l=0,o.replaceState(_({},o.state,{idx:l}),""));let p={get action(){return i},get location(){return e(r,o)},listen(e){if(c)throw new Error("A history only accepts one active listener");return r.addEventListener(F,h),c=e,()=>{r.removeEventListener(F,h),c=null}},createHref:e=>t(r,e),createURL:d,encodeLocation(e){let t=d(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(e,t){i=C.Push;let a=L(p.location,e,t);n&&n(a,e),l=u()+1;let h=M(a,l),d=p.createHref(a);try{o.pushState(h,"",d)}catch(f){if(f instanceof DOMException&&"DataCloneError"===f.name)throw f;r.location.assign(d)}s&&c&&c({action:i,location:p.location,delta:1})},replace:function(e,t){i=C.Replace;let a=L(p.location,e,t);n&&n(a,e),l=u();let r=M(a,l),h=p.createHref(a);o.replaceState(r,"",h),s&&c&&c({action:i,location:p.location,delta:0})},go:e=>o.go(e)};return p}var W;!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(W||(W={}));new Set(["lazy","caseSensitive","path","id","index","children"]);function V(e,t,n){return void 0===n&&(n="/"),U(e,t,n,!1)}function U(e,t,n,a){let r=ne(("string"===typeof t?P(t):t).pathname||"/",n);if(null==r)return null;let s=G(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){let n=e.length===t.length&&e.slice(0,-1).every(((e,n)=>e===t[n]));return n?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(s);let o=null;for(let i=0;null==o&&i<s.length;++i){let e=te(r);o=$(s[i],e,a)}return o}function G(e,t,n,a){void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===a&&(a="");let r=(e,r,s)=>{let o={relativePath:void 0===s?e.path||"":s,caseSensitive:!0===e.caseSensitive,childrenIndex:r,route:e};o.relativePath.startsWith("/")&&(D(o.relativePath.startsWith(a),'Absolute route path "'+o.relativePath+'" nested under path "'+a+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),o.relativePath=o.relativePath.slice(a.length));let i=ae([a,o.relativePath]),c=n.concat(o);e.children&&e.children.length>0&&(D(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+i+'".'),G(e.children,t,c,i)),(null!=e.path||e.index)&&t.push({path:i,score:J(i,e.index),routesMeta:c})};return e.forEach(((e,t)=>{var n;if(""!==e.path&&null!=(n=e.path)&&n.includes("?"))for(let a of H(e.path))r(e,t,a);else r(e,t)})),t}function H(e){let t=e.split("/");if(0===t.length)return[];let[n,...a]=t,r=n.endsWith("?"),s=n.replace(/\?$/,"");if(0===a.length)return r?[s,""]:[s];let o=H(a.join("/")),i=[];return i.push(...o.map((e=>""===e?s:[s,e].join("/")))),r&&i.push(...o),i.map((t=>e.startsWith("/")&&""===t?"/":t))}const j=/^:[\w-]+$/,q=3,K=2,X=1,Y=10,Q=-2,Z=e=>"*"===e;function J(e,t){let n=e.split("/"),a=n.length;return n.some(Z)&&(a+=Q),t&&(a+=K),n.filter((e=>!Z(e))).reduce(((e,t)=>e+(j.test(t)?q:""===t?X:Y)),a)}function $(e,t,n){void 0===n&&(n=!1);let{routesMeta:a}=e,r={},s="/",o=[];for(let i=0;i<a.length;++i){let e=a[i],c=i===a.length-1,l="/"===s?t:t.slice(s.length)||"/",u=ee({path:e.relativePath,caseSensitive:e.caseSensitive,end:c},l),h=e.route;if(!u&&c&&n&&!a[a.length-1].route.index&&(u=ee({path:e.relativePath,caseSensitive:e.caseSensitive,end:!1},l)),!u)return null;Object.assign(r,u.params),o.push({params:r,pathname:ae([s,u.pathname]),pathnameBase:re(ae([s,u.pathnameBase])),route:h}),"/"!==u.pathnameBase&&(s=ae([s,u.pathnameBase]))}return o}function ee(e,t){"string"===typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[n,a]=function(e,t,n){void 0===t&&(t=!1);void 0===n&&(n=!0);O("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');let a=[],r="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,((e,t,n)=>(a.push({paramName:t,isOptional:null!=n}),n?"/?([^\\/]+)?":"/([^\\/]+)")));e.endsWith("*")?(a.push({paramName:"*"}),r+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?r+="\\/*$":""!==e&&"/"!==e&&(r+="(?:(?=\\/|$))");let s=new RegExp(r,t?void 0:"i");return[s,a]}(e.path,e.caseSensitive,e.end),r=t.match(n);if(!r)return null;let s=r[0],o=s.replace(/(.)\/+$/,"$1"),i=r.slice(1);return{params:a.reduce(((e,t,n)=>{let{paramName:a,isOptional:r}=t;if("*"===a){let e=i[n]||"";o=s.slice(0,s.length-e.length).replace(/(.)\/+$/,"$1")}const c=i[n];return e[a]=r&&!c?void 0:(c||"").replace(/%2F/g,"/"),e}),{}),pathname:s,pathnameBase:o,pattern:e}}function te(e){try{return e.split("/").map((e=>decodeURIComponent(e).replace(/\//g,"%2F"))).join("/")}catch(t){return O(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+t+")."),e}}function ne(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,a=e.charAt(n);return a&&"/"!==a?null:e.slice(n)||"/"}const ae=e=>e.join("/").replace(/\/\/+/g,"/"),re=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/");Error;function se(e){return null!=e&&"number"===typeof e.status&&"string"===typeof e.statusText&&"boolean"===typeof e.internal&&"data"in e}const oe=["post","put","patch","delete"],ie=(new Set(oe),["get",...oe]);new Set(ie),new Set([301,302,303,307,308]),new Set([307,308]);Symbol("deferred");function ce(){return ce=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},ce.apply(this,arguments)}const le=E.createContext(null);const ue=E.createContext(null);const he=E.createContext(null);const de=E.createContext(null);const pe=E.createContext({outlet:null,matches:[],isDataRoute:!1});const fe=E.createContext(null);function me(){return null!=E.useContext(de)}function ge(){return me()||D(!1),E.useContext(de).location}function ye(e,t,n,a){me()||D(!1);let{navigator:r}=E.useContext(he),{matches:s}=E.useContext(pe),o=s[s.length-1],i=o?o.params:{},c=(o&&o.pathname,o?o.pathnameBase:"/");o&&o.route;let l,u=ge();if(t){var h;let e="string"===typeof t?P(t):t;"/"===c||(null==(h=e.pathname)?void 0:h.startsWith(c))||D(!1),l=e}else l=u;let d=l.pathname||"/",p=d;if("/"!==c){let e=c.replace(/^\//,"").split("/");p="/"+d.replace(/^\//,"").split("/").slice(e.length).join("/")}let f=V(e,{pathname:p});let m=ke(f&&f.map((e=>Object.assign({},e,{params:Object.assign({},i,e.params),pathname:ae([c,r.encodeLocation?r.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?c:ae([c,r.encodeLocation?r.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])}))),s,n,a);return t&&m?E.createElement(de.Provider,{value:{location:ce({pathname:"/",search:"",hash:"",state:null,key:"default"},l),navigationType:C.Pop}},m):m}function be(){let e=function(){var e;let t=E.useContext(fe),n=Ne(Se.UseRouteError),a=Ie(Se.UseRouteError);if(void 0!==t)return t;return null==(e=n.errors)?void 0:e[a]}(),t=se(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),n=e instanceof Error?e.stack:null,a="rgba(200,200,200, 0.5)",r={padding:"0.5rem",backgroundColor:a};return E.createElement(E.Fragment,null,E.createElement("h2",null,"Unexpected Application Error!"),E.createElement("h3",{style:{fontStyle:"italic"}},t),n?E.createElement("pre",{style:r},n):null,null)}const xe=E.createElement(be,null);class ve extends E.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location||"idle"!==t.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:void 0!==e.error?e.error:t.error,location:t.location,revalidation:e.revalidation||t.revalidation}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return void 0!==this.state.error?E.createElement(pe.Provider,{value:this.props.routeContext},E.createElement(fe.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function we(e){let{routeContext:t,match:n,children:a}=e,r=E.useContext(le);return r&&r.static&&r.staticContext&&(n.route.errorElement||n.route.ErrorBoundary)&&(r.staticContext._deepestRenderedBoundaryId=n.route.id),E.createElement(pe.Provider,{value:t},a)}function ke(e,t,n,a){var r;if(void 0===t&&(t=[]),void 0===n&&(n=null),void 0===a&&(a=null),null==e){var s;if(null==(s=n)||!s.errors)return null;e=n.matches}let o=e,i=null==(r=n)?void 0:r.errors;if(null!=i){let e=o.findIndex((e=>e.route.id&&void 0!==(null==i?void 0:i[e.route.id])));e>=0||D(!1),o=o.slice(0,Math.min(o.length,e+1))}let c=!1,l=-1;if(n&&a&&a.v7_partialHydration)for(let u=0;u<o.length;u++){let e=o[u];if((e.route.HydrateFallback||e.route.hydrateFallbackElement)&&(l=u),e.route.id){let{loaderData:t,errors:a}=n,r=e.route.loader&&void 0===t[e.route.id]&&(!a||void 0===a[e.route.id]);if(e.route.lazy||r){c=!0,o=l>=0?o.slice(0,l+1):[o[0]];break}}}return o.reduceRight(((e,a,r)=>{let s,u=!1,h=null,d=null;var p;n&&(s=i&&a.route.id?i[a.route.id]:void 0,h=a.route.errorElement||xe,c&&(l<0&&0===r?(p="route-fallback",!1||Te[p]||(Te[p]=!0),u=!0,d=null):l===r&&(u=!0,d=a.route.hydrateFallbackElement||null)));let f=t.concat(o.slice(0,r+1)),m=()=>{let t;return t=s?h:u?d:a.route.Component?E.createElement(a.route.Component,null):a.route.element?a.route.element:e,E.createElement(we,{match:a,routeContext:{outlet:e,matches:f,isDataRoute:null!=n},children:t})};return n&&(a.route.ErrorBoundary||a.route.errorElement||0===r)?E.createElement(ve,{location:n.location,revalidation:n.revalidation,component:h,error:s,children:m(),routeContext:{outlet:null,matches:f,isDataRoute:!0}}):m()}),null)}var Se=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(Se||{});function Ne(e){let t=E.useContext(ue);return t||D(!1),t}function Ie(e){let t=function(e){let t=E.useContext(pe);return t||D(!1),t}(),n=t.matches[t.matches.length-1];return n.route.id||D(!1),n.route.id}const Te={};R.startTransition;function Ce(e){D(!1)}function Ee(e){let{basename:t="/",children:n=null,location:a,navigationType:r=C.Pop,navigator:s,static:o=!1,future:i}=e;me()&&D(!1);let c=t.replace(/^\/*/,"/"),l=E.useMemo((()=>({basename:c,navigator:s,static:o,future:ce({v7_relativeSplatPath:!1},i)})),[c,i,s,o]);"string"===typeof a&&(a=P(a));let{pathname:u="/",search:h="",hash:d="",state:p=null,key:f="default"}=a,m=E.useMemo((()=>{let e=ne(u,c);return null==e?null:{location:{pathname:e,search:h,hash:d,state:p,key:f},navigationType:r}}),[c,u,h,d,p,f,r]);return null==m?null:E.createElement(he.Provider,{value:l},E.createElement(de.Provider,{children:n,value:m}))}function Re(e){let{children:t,location:n}=e;return ye(Ae(t),n)}new Promise((()=>{}));E.Component;function Ae(e,t){void 0===t&&(t=[]);let n=[];return E.Children.forEach(e,((e,a)=>{if(!E.isValidElement(e))return;let r=[...t,a];if(e.type===E.Fragment)return void n.push.apply(n,Ae(e.props.children,r));e.type!==Ce&&D(!1),e.props.index&&e.props.children&&D(!1);let s={id:e.props.id||r.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,Component:e.props.Component,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,ErrorBoundary:e.props.ErrorBoundary,hasErrorBoundary:null!=e.props.ErrorBoundary||null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle,lazy:e.props.lazy};e.props.children&&(s.children=Ae(e.props.children,r)),n.push(s)})),n}var _e=n(579);const Fe=function(){return(0,_e.jsx)("div",{className:"flex justify-center",children:(0,_e.jsxs)("div",{className:"max-w-screen-md w-full",children:[(0,_e.jsx)("div",{className:"flex justify-center m-2",children:(0,_e.jsx)("h1",{className:"text-xl text-gray-800 font-semibold",children:"Home!"})}),(0,_e.jsxs)("div",{className:"grid grid-cols-1 m-2 space-y-2 text-lg ",children:[(0,_e.jsx)("a",{href:"/robo_magellan",className:"bg-blue-500 text-white font-bold p-4 rounded text-center",children:"\ud83d\udcf8 \xa0 Cone Detector"}),(0,_e.jsx)("a",{href:"/control_center",className:"bg-blue-500 text-white font-bold p-4 rounded text-center",children:"\u2699\ufe0f \xa0 Control Center"})]})]})})};class De{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Oe{refCount(e){return Me("refCount")}incRef(e){return Me("incRef")}timerAvailable(){return!0}time(e){return Me("time")}read(e){return Me("read")}readSync(e){return Me("readSync")}readToGPU(e,t){return Me("readToGPU")}numDataIds(){return Me("numDataIds")}disposeData(e,t){return Me("disposeData")}write(e,t,n){return Me("write")}move(e,t,n,a,r){return Me("move")}createTensorFromGPUData(e,t,n){return Me("createTensorFromGPUData")}memory(){return Me("memory")}floatPrecision(){return Me("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Me("dispose")}}function Me(e){throw new Error("'".concat(e,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}function Le(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Be(e,t,n)}function ze(e,t,n){return Math.max(e,Math.min(t,n))}function Pe(e){return e%2===0?e:e+1}function Be(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function We(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function Ve(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";We(He(e,t),(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}function Ue(e){We(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Ge(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function He(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function je(e){return e%1===0}function qe(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function Ke(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function Xe(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise(((r,s)=>{let o=0;const i=()=>{if(e())return void r();o++;const c=t(o);null!=n&&o>=n?s():null!=a?a(i,c):setTimeout(i,c)};i()}))}function Ye(e,t){let n=1,a=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(s));a=s}else if(e[s]<0)throw Error("Shapes can not be < 0. Found ".concat(e[s]," at dim ").concat(s));if(-1===a){if(t>0&&t!==n)throw Error("Size(".concat(t,") must match the product of shape ").concat(e));return e}if(0===n)throw Error("Cannot infer the missing size in [".concat(e,"] when ")+"there are 0 elements");if(t%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(t," / ").concat(n));const r=e.slice();return r[a]=t/n,r}function Qe(e,t){const n=t.length;return We((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(e))),We(e.every((e=>je(e))),(()=>"All values in axis param must be integers but "+"got axis ".concat(e))),e.map((e=>e<0?n+e:e))}function Ze(e,t){const n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||r?null:Qe(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=s){if(s[o]===i&&1!==e[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(e[i],"' is not 1"));(null==s[o]||s[o]>i)&&1===e[i]&&(n.push(e[i]),a.push(i)),s[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),a.push(i))}return{newShape:n,keptDims:a}}function Je(e,t){return $e(e,t)}function $e(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type ".concat(e));n=new Array(t)}return n}function et(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function tt(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype ".concat(e))}function nt(e){return"string"===typeof e||e instanceof String}function at(e){return"number"===typeof e}function rt(e){return Array.isArray(e)?rt(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":at(e)?"float32":nt(e)?"string":"boolean"===typeof e?"bool":"float32"}function st(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ot(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function it(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function ct(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=new Array;if(1===t.length){const s=t[0]*(a?2:1);for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<s;t++)r[t]=ct(e+t*i,o,n,a)}return r}function lt(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error("[".concat(e,"] does not match the input size ").concat(t.length).concat(n?" for a complex tensor":"","."));return ct(0,e,t,n)}function ut(e,t){const n=ht(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function ht(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type ".concat(t))}function dt(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return lt(e,new Float32Array(n));if("int32"===t)return lt(e,new Int32Array(n));if("bool"===t)return lt(e,new Uint8Array(n));throw new Error("Unknown data type ".concat(t))}function pt(e){e.forEach((t=>{We(Number.isInteger(t)&&t>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(e,"].")))}))}function ft(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function mt(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function gt(e){return e&&e.then&&"function"===typeof e.then}const yt="tfjsflags";class bt{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=xt,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(vt().getBool("IS_TEST")||vt().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,"."))),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];vt().getBool("IS_TEST")||vt().getBool("PROD")||console.warn("Setting feature override from URL ".concat(e,": ").concat(t,".")),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(gt(t))throw new Error("Flag ".concat(e," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag ".concat(e," as it has not been registered."));this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '".concat(e,"': no evaluation function found."));return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(yt in e){e[yt].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:t}(0,n)}))}}}function xt(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,a[0],a[1]),a.join("=")})),t}function vt(){return kt}let wt,kt=null;function St(){if(null==wt){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}wt=e}return wt}function Nt(e,t){const n=function(){const e=St();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}const It="Abs",Tt="Acos",Ct="Acosh",Et="Add",Rt="AddN",At="All",_t="Any",Ft="ArgMax",Dt="ArgMin",Ot="Asin",Mt="Asinh",Lt="Atan",zt="Atanh",Pt="Atan2",Bt="AvgPool",Wt="AvgPoolGrad",Vt="AvgPool3D",Ut="AvgPool3DGrad",Gt="BatchMatMul",Ht="BatchToSpaceND",jt="Bincount",qt="BitwiseAnd",Kt="BroadcastArgs",Xt="Cast",Yt="Ceil",Qt="ClipByValue",Zt="Complex",Jt="ComplexAbs",$t="Concat",en="Conv2D",tn="Conv2DBackpropFilter",nn="Conv2DBackpropInput",an="Conv3D",rn="Conv3DBackpropFilterV2",sn="Conv3DBackpropInputV2",on="Cos",cn="Cosh",ln="Cumprod",un="Cumsum",hn="CropAndResize",dn="DenseBincount",pn="DepthToSpace",fn="DepthwiseConv2dNative",mn="DepthwiseConv2dNativeBackpropFilter",gn="DepthwiseConv2dNativeBackpropInput",yn="Diag",bn="Dilation2D",xn="Dilation2DBackpropInput",vn="Dilation2DBackpropFilter",wn="Draw",kn="RealDiv",Sn="Einsum",Nn="Elu",In="EluGrad",Tn="Erf",Cn="Equal",En="Exp",Rn="ExpandDims",An="Expm1",_n="FFT",Fn="Fill",Dn="FlipLeftRight",On="Floor",Mn="FloorDiv",Ln="FusedBatchNorm",zn="GatherV2",Pn="GatherNd",Bn="Greater",Wn="GreaterEqual",Vn="Identity",Un="IFFT",Gn="Imag",Hn="IsFinite",jn="IsInf",qn="IsNan",Kn="LeakyRelu",Xn="Less",Yn="LessEqual",Qn="LinSpace",Zn="Log",Jn="Log1p",$n="LogicalAnd",ea="LogicalNot",ta="LogicalOr",na="LRN",aa="LRNGrad",ra="Max",sa="Maximum",oa="MaxPool",ia="MaxPoolGrad",ca="MaxPool3D",la="MaxPool3DGrad",ua="MaxPoolWithArgmax",ha="Mean",da="Min",pa="Minimum",fa="MirrorPad",ma="Mod",ga="Multinomial",ya="Multiply",ba="Neg",xa="NotEqual",va="NonMaxSuppressionV3",wa="NonMaxSuppressionV4",ka="NonMaxSuppressionV5",Sa="OnesLike",Na="OneHot",Ia="Pack",Ta="PadV2",Ca="Pow",Ea="Prelu",Ra="Prod",Aa="RaggedGather",_a="RaggedRange",Fa="RaggedTensorToTensor",Da="Range",Oa="Real",Ma="Reciprocal",La="Relu",za="Reshape",Pa="ResizeNearestNeighbor",Ba="ResizeNearestNeighborGrad",Wa="ResizeBilinear",Va="ResizeBilinearGrad",Ua="Relu6",Ga="Reverse",Ha="Round",ja="Rsqrt",qa="ScatterNd",Ka="TensorScatterUpdate",Xa="SearchSorted",Ya="Select",Qa="Selu",Za="Slice",Ja="Sin",$a="Sinh",er="Sign",tr="Sigmoid",nr="Softplus",ar="Sqrt",rr="Sum",sr="SpaceToBatchND",or="SplitV",ir="Softmax",cr="SparseFillEmptyRows",lr="SparseReshape",ur="SparseSegmentMean",hr="SparseSegmentSum",dr="SparseToDense",pr="SquaredDifference",fr="Square",mr="StaticRegexReplace",gr="StridedSlice",yr="StringNGrams",br="StringSplit",xr="StringToHashBucketFast",vr="Sub",wr="Tan",kr="Tanh",Sr="Tile",Nr="TopK",Ir="Transform",Tr="Transpose",Cr="Unique",Er="Unpack",Rr="UnsortedSegmentSum",Ar="ZerosLike",_r="Step",Fr="FromPixels",Dr="RotateWithOffset",Or="_FusedMatMul",Mr="FusedConv2D",Lr="FusedDepthwiseConv2D";function zr(){vt().getBool("IS_TEST")||vt().getBool("PROD")||console.warn(...arguments)}function Pr(){vt().getBool("IS_TEST")||vt().getBool("PROD")||console.log(...arguments)}const Br=Nt("kernelRegistry",(()=>new Map)),Wr=Nt("gradRegistry",(()=>new Map));function Vr(e,t){const n=qr(e,t);return Br.get(n)}function Ur(e){return Wr.get(e)}function Gr(e){const t=Br.entries(),n=[];for(;;){const{done:a,value:r}=t.next();if(a)break;const[s,o]=r,[i]=s.split("_");i===e&&n.push(o)}return n}function Hr(e){const{kernelName:t,backendName:n}=e,a=qr(t,n);Br.has(a)&&zr("The kernel '".concat(t,"' for backend ")+"'".concat(n,"' is already registered")),Br.set(a,e)}function jr(e){const{kernelName:t}=e;Wr.has(t)&&vt().getBool("DEBUG")&&zr("Overriding the gradient for '".concat(t,"'")),Wr.set(t,e)}function qr(e,t){return"".concat(t,"_").concat(e)}function Kr(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Xr=n(353);const Yr=n.n(Xr)()||Xr;function Qr(e){return Yr.fromString(e,!0,16)}const Zr=Qr("c3a5c85c97cb3127"),Jr=Qr("b492b66fbe98f273"),$r=Qr("9ae16a3b2f90404f");function es(e){return e.xor(e.shru(47))}function ts(e,t,n){const a=e.slice(t,t+n);return Yr.fromBytes(Array.from(a),!0,!0)}function ns(e,t){return ts(e,t,8)}function as(e,t){return ts(e,t,4)}function rs(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function ss(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Qr("9ddfea08eb382d69"),a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function os(e,t,n,a){return function(e,t,n,a,r,s){r=r.add(e),s=rs(s.add(r).add(a),21);const o=r;return r=(r=r.add(t)).add(n),s=s.add(rs(r,44)),[r.add(a),s.add(o)]}(ns(e,t),ns(e,t+8),ns(e,t+16),ns(e,t+24),n,a)}function is(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Yr.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=$r.add(2*t),a=ns(e,0).add($r),r=ns(e,t-8);return ss(rs(r,37).mul(n).add(a),rs(a,25).add(r).mul(n),n)}if(t>=4){const n=$r.add(2*t);return ss(as(e,0).shl(3).add(t),as(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return es($r.mul(n).xor(Zr.mul(a))).mul($r)}return $r}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=$r.add(2*t),a=ns(e,0).mul(Jr),r=ns(e,8),s=ns(e,t-8).mul(n),o=ns(e,t-16).mul($r);return ss(rs(a.add(r),43).add(rs(s,30)).add(o),a.add(rs(r.add($r),18)).add(s),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=$r.add(2*t),a=ns(e,0).mul($r),r=ns(e,8),s=ns(e,t-8).mul(n),o=ns(e,t-16).mul($r),i=rs(a.add(r),43).add(rs(s,30)).add(o),c=ss(i,a.add(rs(r.add($r),18)).add(s),n),l=ns(e,16).mul(n),u=ns(e,24),h=i.add(ns(e,t-32)).mul(n),d=c.add(ns(e,t-24)).mul(n);return ss(rs(l.add(u),43).add(rs(h,30)).add(d),l.add(rs(u.add(a),18)).add(h),n)}(e,t);let a=n,r=n.mul(Jr).add(113),s=es(r.mul($r).add(113)).mul($r),o=[Yr.UZERO,Yr.UZERO],i=[Yr.UZERO,Yr.UZERO];a=a.mul($r).add(ns(e,0));let c=0;const l=64*(t-1>>6),u=l+(t-1&63)-63;do{a=rs(a.add(r).add(o[0]).add(ns(e,c+8)),37).mul(Jr),r=rs(r.add(o[1]).add(ns(e,c+48)),42).mul(Jr),a=a.xor(i[1]),r=r.add(o[0]).add(ns(e,c+40)),s=rs(s.add(i[0]),33).mul(Jr),o=os(e,c,o[1].mul(Jr),a.add(i[0])),i=os(e,c+32,s.add(i[1]),r.add(ns(e,c+16))),[s,a]=[a,s],c+=64}while(c!==l);const h=Jr.add(s.and(255).shl(1));return c=u,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),a=rs(a.add(r).add(o[0]).add(ns(e,c+8)),37).mul(h),r=rs(r.add(o[1]).add(ns(e,c+48)),42).mul(h),a=a.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(ns(e,c+40))),s=rs(s.add(i[0]),33).mul(h),o=os(e,c,o[1].mul(h),a.add(i[0])),i=os(e,c+32,s.add(i[1]),r.add(ns(e,c+16))),[s,a]=[a,s],ss(ss(o[0],i[0],h).add(es(r).mul(Zr)).add(s),ss(o[1],i[1],h).add(a),h)}function cs(e,t){return"string"===t?hs(e):ls([e],t)}function ls(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=fs(e)),vt().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(t," being uploaded contains ").concat(a,"."))}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type ".concat(t))}function us(){return vt().platform.now()}function hs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",vt().platform.encode(e,t)}function ds(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",vt().platform.decode(e,t)}function ps(e){return null!=vt().platform.isTypedArray?vt().platform.isTypedArray(e):Kr(e)}function fs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||gt(e)||null==e||ps(e)&&n)t.push(e);else if(Array.isArray(e)||ps(e))for(let a=0;a<e.length;++a)fs(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)fs(e[r],t,n)}return t}class ms{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ys)}profileKernel(e,t,n){let a;const r=()=>{a=n()};let s;const o=us();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(const e of a)e.dataSync();s=Promise.resolve({kernelMs:us()-o})}if(vt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<a.length;i++){const t=a[i];t.data().then((n=>{gs(n,t.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),a,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function gs(e,t,n){if("float32"!==t)return!1;for(let a=0;a<e.length;a++){const t=e[a];if(isNaN(t)||!isFinite(t))return console.warn("Found ".concat(t," in the result of '").concat(n,"'")),!0}return!1}class ys{logKernelProfile(e,t,n,a,r,s){const o="number"===typeof a?Ke("".concat(a,"ms"),9):a.error,i=Ke(e,25),c=t.rank,l=t.size,u=Ke(t.shape.toString(),14);let h="";for(const d in r){const e=r[d];if(null!=e){const n=e.shape||t.shape,a=n.length;h+="".concat(d,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(c,"D ").concat(u,"\t%c").concat(l,"\t%c").concat(h,"\t%c").concat(s),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const bs=20,xs=3,vs=7;function ws(e,t,n,a){const r=it(t),s=function(e,t,n,a){const r=Ge(t),s=a[a.length-1],o=new Array(s).fill(0),i=t.length,c="complex64"===n?Is(e):e;if(i>1)for(let l=0;l<r/s;l++){const e=l*s;for(let t=0;t<s;t++)o[t]=Math.max(o[t],ks(c[e+t],0,n).length)}return o}(e,t,n,r),o=t.length,i=Ns(e,t,n,r,s),c=["Tensor"];return a&&(c.push("  dtype: ".concat(n)),c.push("  rank: ".concat(o)),c.push("  shape: [".concat(t,"]")),c.push("  values:")),c.push(i.map((e=>"    "+e)).join("\n")),c.join("\n")}function ks(e,t,n){let a;return a=Array.isArray(e)?"".concat(parseFloat(e[0].toFixed(vs))," + ")+"".concat(parseFloat(e[1].toFixed(vs)),"j"):nt(e)?"'".concat(e,"'"):"bool"===n?Ss(e):parseFloat(e.toFixed(vs)).toString(),Ke(a,t)}function Ss(e){return 0===e?"false":"true"}function Ns(e,t,n,a,r){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const o="complex64"===n?2:1,i=t[0],c=t.length;if(0===c){if("complex64"===n){return[ks(Is(e)[0],0,n)]}return"bool"===n?[Ss(e[0])]:[e[0].toString()]}if(1===c){if(i>bs){const t=xs*o;let a=Array.from(e.slice(0,t)),s=Array.from(e.slice((i-xs)*o,i*o));return"complex64"===n&&(a=Is(a),s=Is(s)),["["+a.map(((e,t)=>ks(e,r[t],n))).join(", ")+", ..., "+s.map(((e,t)=>ks(e,r[i-xs+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Is(e):Array.from(e)).map(((e,t)=>ks(e,r[t],n))).join(", ")+"]"]}const l=t.slice(1),u=a.slice(1),h=a[0]*o,d=[];if(i>bs){for(let t=0;t<xs;t++){const a=t*h,s=a+h;d.push(...Ns(e.slice(a,s),l,n,u,r,!1))}d.push("...");for(let t=i-xs;t<i;t++){const a=t*h,s=a+h;d.push(...Ns(e.slice(a,s),l,n,u,r,t===i-1))}}else for(let m=0;m<i;m++){const t=m*h,a=t+h;d.push(...Ns(e.slice(t,a),l,n,u,r,m===i-1))}const p=2===c?",":"";d[0]="["+(i>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=",\n";for(let m=2;m<c;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function Is(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Ts{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Ge(e),null!=n){const e=n.length;We(e===this.size,(()=>"Length of values '".concat(e,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||$e(t,this.size),this.strides=it(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),We(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const r=this.locToIndex(n);this.values[r]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let a=0;for(const s of t){if(s<0||s>=this.shape[a]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}a++}let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=this.strides[s]*t[s];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Cs().makeTensor(this.values,this.shape,this.dtype)}}let Cs=null,Es=null,Rs=null;class As{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Ge(e),this.strides=it(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Es.buffer(this.shape,this.dtype,e)}bufferSync(){return Es.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return lt(this.shape,e,"complex64"===this.dtype)}arraySync(){return lt(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Cs().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>ds(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Cs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Cs().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>ds(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Cs().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Cs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Es.print(this,e)}clone(){return this.throwIfDisposed(),Es.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return ws(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Es.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),Cs().makeVariable(this,e,t,n)}}function _s(){return Nt("Tensor",(()=>As))}Object.defineProperty(As,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),_s();class Fs extends As{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(e.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!He(e.shape,this.shape))throw new Error("shape of the new value (".concat(e.shape,") and ")+"previous value (".concat(this.shape,") must match"));Cs().disposeTensor(this),this.dataId=e.dataId,Cs().incRef(this,null)}dispose(){Cs().disposeVariable(this),this.isDisposedInternal=!0}}var Ds,Os,Ms,Ls,zs;Object.defineProperty(Fs,Symbol.hasInstance,{value:e=>e instanceof As&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Ds||(Ds={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Os||(Os={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Ms||(Ms={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Ls||(Ls={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(zs||(zs={}));const Ps={float32:Ls,int32:Os,bool:Ms,complex64:zs};function Bs(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast ".concat(e," with ").concat(t))}return Ps[e][t]}function Ws(e){return Bs(e,"int32")}function Vs(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Us(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Gs(e,t){if(e.dtype===t.dtype)return[e,t];const n=Bs(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Hs(e,t){return t.some((t=>t.id===e.id))}function js(e){const t=[];return qs(e,t,new Set),t}function qs(e,t,n){if(null==e)return;if(e instanceof As)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!==typeof a)return;var a;const r=e;for(const s in r){const e=r[s];n.has(e)||(n.add(e),qs(e,t,n))}}function Ks(e){return null!=e.kernelName}class Xs{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ys{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Xs}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error("The highest priority backend '".concat(e,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(zr("".concat(e," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error("Backend name '".concat(e,"' not found in registry"));if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ms(this.backendInstance),!0}setupRegisteredKernels(){Gr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Gr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error("Cannot initialize backend ".concat(e,", no registration found."));try{const n=t.factory();if(!n||n instanceof Oe||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,zr("Initialization of backend ".concat(e," failed")),zr(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return zr("Initialization of backend ".concat(e," failed")),zr(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error("".concat(e," backend not found in registry"));this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(a){throw t(),a}}nextTensorId(){return Ys.nextTensorId++}nextVariableId(){return Ys.nextVariableId++}clone(e){const t=Zs.runKernel(Vn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return Zs.runKernel(Xt,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Vr(e,this.backendName)))throw new Error("Kernel '".concat(e,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-t-r-s;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(e,"'"))}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;let o,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=Ks(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ks(e)){const{kernelName:t,inputs:r,attrs:s}=e;null==this.backendName&&this.backend;const c=Vr(t,this.backendName);We(null!=c,(()=>"Cannot find registered kernel '".concat(t,"' for backend '").concat(this.backendName,"'"))),o=()=>{const e=this.backend.numDataIds();i=c.kernelFunc({inputs:r,attrs:s,backend:this.backend});const o=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const l=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){const e=this.getTensorsForGradient(t,r,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,r=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();i=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:l,attrs:u}=e,h=Ks(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(c,l,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=o()})),a&&this.addTapeNode(c,l,t,h,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const a=Ur(e);if(null!=a){const e=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(We(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>r[t]));return s.concat(o)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&nt(e[0])&&(r=e.map((e=>hs(e))));const s=a.write(r,t,n),o=new As(t,n,s,this.nextTensorId());if(this.trackTensor(o,a),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,a){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:r}=e,s=new As(a,r,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const r=new Fs(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error("Variable with name ".concat(r.name," was already registered"));return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*tt(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Fs||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*tt(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=Ur(e);null!=i&&(a=i.gradFunc),null!=a&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=ht(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=js(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(We(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));We(r instanceof As,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const a={},r={};for(let c=0;c<t.length;c++)a[t[c].id]=!0;for(let c=0;c<e.length;c++){const n=e[c],s=n.inputs;for(const e in s){const o=s[e];let i=!1;for(let e=0;e<t.length;e++)if(a[o.id]){n.outputs.forEach((e=>a[e.id]=!0)),i=!0,r[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let c=e.length-1;c>=0;c--){const t=e[c],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let c=0;c<e.length;c++){const t=e[c];if(r[t.id]&&o[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];a[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,r);if(!a&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=ut(Ge(e),"float32");return Zs.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){const s=t[r],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(s.kernelName,"."));const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error("Cannot backprop through input ".concat(t,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const r=n((()=>i[t]()));if("float32"!==r.dtype)throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"".concat(t," must have 'float32' dtype, but has '").concat(r.dtype,"'"));const o=s.inputs[t];if(!He(r.shape,o.shape))throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"'".concat(t,"' has shape '").concat(r.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==e[o.id])e[o.id]=r;else{const t=e[o.id];e[o.id]=a(t,r),t.dispose()}}}}(e,s,(e=>this.tidy(e)),Js);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){var t=this;return We(st(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];let s;We(a.every((e=>e instanceof As)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};a.forEach(((e,t)=>{o[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(s=e(...a,n),We(s.value instanceof As,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),We(st(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),backwardsFunc:(e,t)=>{const n=s.gradFunc(e,t),r=Array.isArray(n)?n:[n];We(r.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),We(r.every((e=>e instanceof As)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return r.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=us(),n=await this.backend.time(e);return n.wallMs=us()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Xs;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Qs(){const e=St();if(null==e._tfengine){const t=new bt(e);e._tfengine=new Ys(t)}var t;return t=e._tfengine.ENV,kt=t,Cs=()=>e._tfengine,e._tfengine}Ys.nextTensorId=0,Ys.nextVariableId=0;const Zs=Qs();function Js(e,t){const n={a:e,b:t};return Zs.runKernel(Et,n)}let $s;function eo(e){if(void 0!==$s)return $s;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function to(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}const no=vt();function ao(e,t){let n=e;if(ps(e))return"string"===t?[]:[e.length];if(Vs(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Us(e))return[e.buffer.size/(null==t?4:tt(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||ps(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&vt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ro(e,a,[]),a}function ro(e,t,n){if(n=n||[],!Array.isArray(e)&&!ps(e))return void We(0===t.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(t[0]," elements")));We(t.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements"))),We(e.length===t[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(t[0]," ")+"elements, but has ".concat(e.length," elements")));const a=t.slice(1);for(let r=0;r<e.length;++r)ro(e[r],a,n.concat(r))}function so(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(e," tensor, but got ").concat(t," tensor"))}}function oo(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof _s())return so(a,e.dtype,t,n),e;let r=rt(e);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),so(a,r,t,n),null==e||!ps(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const a=null==e?"null":e.constructor.name;throw new Error("Argument '".concat(t,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const s=ao(e,r);ps(e)||Array.isArray(e)||(e=[e]);const o="string"!==r?ls(e,r):fs(e,[],!0);return Zs.makeTensor(o,s,r)}function io(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error("Argument ".concat(t," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return e.map(((e,r)=>oo(e,"".concat(t,"[").concat(r,"]"),n,a)))}no.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),no.registerFlag("IS_BROWSER",(()=>to())),no.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),no.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),no.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),no.registerFlag("PROD",(()=>!1)),no.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>no.getBool("DEBUG"))),no.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),no.registerFlag("IS_TEST",(()=>!1)),no.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>no.getBool("DEBUG"))),no.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),no.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),no.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const co="__op";function lo(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(t.length," keys."));let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=co;const r=function(){Zs.startScope(n);try{const e=a(...arguments);return gt(e)&&console.error("Cannot return a Promise inside of tidy."),Zs.endScope(e),e}catch(e){throw Zs.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const uo=lo({complex_:function(e,t){const n=oo(e,"real","complex"),a=oo(t,"imag","complex");Ve(n.shape,a.shape,"real and imag shapes, ".concat(n.shape," and ").concat(a.shape,", ")+"must match in call to tf.complex().");const r={real:n,imag:a};return Zs.runKernel(Zt,r)}});function ho(e,t,n,a){if(null==a)a=rt(e);else if("complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Us(e)||Vs(e)){if("float32"!==a&&"int32"!==a)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(a,"."));return Zs.backend.createTensorFromGPUData(e,t||n,a)}if(!ps(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){pt(t);const e=Ge(t),a=Ge(n);We(e===a,(()=>"Based on the provided shape, [".concat(t,"], the tensor should have ")+"".concat(e," values but has ").concat(a)));for(let r=0;r<n.length;++r){const e=n[r],a=r!==n.length-1||e!==Ge(t.slice(r));We(n[r]===t[r]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(t,"). ")))}}return ps(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==a?ls(e,a):fs(e,[],!0),Zs.makeTensor(e,t,a)}function po(e,t,n){return ho(e,t,ao(e,n),n)}const fo={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class mo{static join(e){return new mo(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>ps(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error("Could not find start shard for byte ".concat(e));const a=new ArrayBuffer(t-e),r=new Uint8Array(a);let s=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],a=e+s-n.start,i=s,c=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,a,c-a);if(r.set(l,i),s+=l.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const r=Math.floor((a-n)/2)+n,s=t(e[r]);if(0===s)return r;s<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function go(){return Zs}function yo(){return Zs.memory()}function bo(e,t){return Zs.tidy(e,t)}function xo(e){js(e).forEach((e=>e.dispose()))}function vo(e){return Zs.keep(e)}function wo(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Zs.registerBackend(e,t,n)}function ko(){return Zs.backend}Rs=function(e){vt().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const So=4;async function No(e,t){const n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<r.length;++s){const o=r[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(o,"': ").concat(i.dtype));const c={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+So*t.length,a=new Uint8Array(n);let r=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);a.set(n,r),r+=So,a.set(e,r),r+=e.length}e(a)}));a.push(e)}else a.push(i.data());null!=t&&(c.group=t),n.push(c)}return{data:_o(await Promise.all(a)),specs:n}}function Io(e,t){const n=new mo(e),a={};let r=0;for(const s of t){const e=To(s,((e,t)=>n.slice(r+e,r+t)));a[s.name]=Eo(s,n.slice(r,r+e)),r+=e}return a}function To(e,t){const n=Ge(e.shape);let a;if("quantization"in e){const t=e.quantization;a=fo[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=So+new Uint32Array(t(e,e+So))[0];return e}a=fo[e.dtype]}return n*a}async function Co(e,t){const n=Ge(e.shape);let a;if("quantization"in e){const t=e.quantization;a=fo[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=So+new Uint32Array(await t(e,e+So))[0];return e}a=fo[e.dtype]}return n*a}function Eo(e,t){const n=e.name,a=e.dtype,r=e.shape,s=Ge(r);let o,i=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error("Weight ".concat(e.name," with quantization ").concat(r.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==r.dtype)throw new Error("Weight ".concat(e.name," has unknown ")+"quantization dtype ".concat(r.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==a)throw new Error("Weight ".concat(e.name," is quantized with ").concat(r.dtype," ")+"which only supports weights of type float32 not ".concat(a,"."))}const c=fo[r.dtype],l="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===a)if("uint8"===r.dtype||"uint16"===r.dtype){o=new Float32Array(l.length);for(let e=0;e<l.length;e++){const t=l[e];o[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error("Unsupported quantization type ".concat(r.dtype," ")+"for weight type float32.");{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let o=0;o<a.length;o++){const r=a[o],i=e[n[r>>10]+(1023&r)]+t[r>>10];s[o]=i}return new Float32Array(r)}}();o=e(l)}}else{if("int32"!==a)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(a));if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error("Unsupported quantization type ".concat(r.dtype," ")+"for weight type int32.");o=new Int32Array(l.length);for(let e=0;e<l.length;e++){const t=l[e];o[e]=Math.round(t*r.scale+r.min)}}i+=s*c}else if("string"===a){const n=Ge(e.shape);o=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(i,i+So))[0];i+=So;const n=new Uint8Array(t.slice(i,i+e));o.push(n),i+=e}}else{const e=fo[a];if("float32"===a)o=new Float32Array(t);else if("int32"===a)o=new Int32Array(t);else{if("bool"!==a){if("complex64"===a){o=new Float32Array(t);const e=new Float32Array(o.length/2),n=new Float32Array(o.length/2);for(let t=0;t<e.length;t++)e[t]=o[2*t],n[t]=o[2*t+1];const a=po(e,r,"float32"),s=po(n,r,"float32"),i=uo(a,s);return a.dispose(),s.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(a))}o=new Uint8Array(t)}i+=s*e}return po(o,r,a)}async function Ro(e,t,n){let a=new Uint8Array(t);for(;a.byteLength<n;){const{done:t,value:r}=await e.read();if(t&&null==r){const e=n-a.byteLength;throw new Error("Reader is done but ".concat(e," bytes are still expected"))}const s=new Uint8Array(a.length+r.byteLength);s.set(a,0),s.set(new Uint8Array(r),a.length),a=s}return a.buffer}async function Ao(e,t){const n={},a=e.getReader();let r=new ArrayBuffer(0);for(const s of t){const e=await Co(s,(async(e,t)=>(r=await Ro(a,r,t),r.slice(e,t))));r=await Ro(a,r,e);const t=r.slice(0,e);r=r.slice(e);const o=Eo(s,t);if(n[s.name]=o,"webgpu"===Zs.backendName){const e=ko();"uploadToGPU"in e&&Ge(o.shape)>=vt().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(o.dataId)}}return n}function _o(e){if(null===e)throw new Error("Invalid input value: ".concat(JSON.stringify(e)));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(e.constructor.name))}));const a=new Uint8Array(t);let r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}const Fo="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function Do(e){return Fo?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Oo(e){return mo.join(e)}function Mo(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Lo(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function zo(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function Po(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),zo(e,n,a)}function Bo(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Do(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Do(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new mo(e.weightData).byteLength}}function Wo(e){const t=[];for(const n of e)t.push(...n.weights);return t}class Vo{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Vo.instance&&(Vo.instance=new Vo),Vo.instance}static registerSaveRouter(e){Vo.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Vo.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Vo.getHandlers(e,"save")}static getLoadHandlers(e,t){return Vo.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?Vo.getInstance().loadRouters:Vo.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&a.push(r)})),a}}const Uo=e=>Vo.registerSaveRouter(e),Go=e=>Vo.registerLoadRouter(e),Ho=e=>Vo.getSaveHandlers(e),jo=(e,t)=>Vo.getLoadHandlers(e,t),qo="tensorflowjs",Ko="models_store",Xo="model_info_store";function Yo(){if(!vt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Qo(e){const t=e.result;t.createObjectStore(Ko,{keyPath:"modelPath"}),t.createObjectStore(Xo,{keyPath:"modelPath"})}class Zo{constructor(e){if(this.indexedDB=Yo(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(qo,1);a.onupgradeneeded=()=>Qo(a),a.onsuccess=()=>{const r=a.result;if(null==t){const t=r.transaction(Ko,"readonly"),a=t.objectStore(Ko).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=mo.join(t.weightData);const a=Bo(t),o=r.transaction(Xo,"readwrite");let i,c,l=o.objectStore(Xo);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(s){return n(s)}i.onsuccess=()=>{c=r.transaction(Ko,"readwrite");const i=c.objectStore(Ko);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(s){return n(s)}u.onsuccess=()=>e({modelArtifactsInfo:a}),u.onerror=e=>{l=o.objectStore(Xo);const t=l.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(u.error)),t.onerror=e=>(r.close(),n(u.error))}},i.onerror=e=>(r.close(),n(i.error)),o.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}}Zo.URL_SCHEME="indexeddb://";const Jo=e=>{return vt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Zo.URL_SCHEME)?(t=e.slice(Zo.URL_SCHEME.length),new Zo(t)):null;var t};Vo.registerSaveRouter(Jo),Vo.registerLoadRouter(Jo);class $o{constructor(){this.indexedDB=Yo()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(qo,1);n.onupgradeneeded=()=>Qo(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(Xo,"readonly"),s=r.objectStore(Xo).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Zo.URL_SCHEME)?t.slice(Zo.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(qo,1);a.onupgradeneeded=()=>Qo(a),a.onsuccess=()=>{const r=a.result,s=r.transaction(Xo,"readwrite"),o=s.objectStore(Xo),i=o.get(e);let c;i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error("Cannot find model with path '".concat(e,"' ")+"in IndexedDB."));{const a=o.delete(e),s=()=>{c=r.transaction(Ko,"readwrite");const a=c.objectStore(Ko).delete(e);a.onsuccess=()=>t(i.result.modelArtifactsInfo),a.onerror=e=>n(i.error)};a.onsuccess=s,a.onerror=e=>(s(),r.close(),n(i.error))}},i.onerror=e=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}},a.onerror=e=>n(a.error)}))}}const ei="/",ti="tensorflowjs_models",ni="info",ai="model_topology",ri="weight_specs",si="weight_data",oi="model_metadata";function ii(e){return{info:[ti,e,ni].join(ei),topology:[ti,e,ai].join(ei),weightSpecs:[ti,e,ri].join(ei),weightData:[ti,e,si].join(ei),modelMetadata:[ti,e,oi].join(ei)}}function ci(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function li(e){const t=e.split(ei);if(t.length<3)throw new Error("Invalid key format: ".concat(e));return t.slice(1,t.length-1).join(ei)}class ui{constructor(e){if(!vt().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ii(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=Bo(e),s=mo.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,function(e){if(Fo)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}(s));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw ci(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(r.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(r.weightSpecsBytes,", ")+"weightDataBytes=".concat(r.weightDataBytes,"."))}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");t.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return t.weightData=function(e){if(Fo){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}(s),t}}ui.URL_SCHEME="localstorage://";const hi=e=>{return vt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ui.URL_SCHEME)?(t=e.slice(ui.URL_SCHEME.length),new ui(t)):null;var t};Vo.registerSaveRouter(hi),Vo.registerLoadRouter(hi);class di{constructor(){We(vt().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),We("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ti+ei,n=ei+ni;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(t)&&r.endsWith(n)){e[li(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){var t;const n=ii(e=(t=e).startsWith(ui.URL_SCHEME)?t.slice(ui.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(e,"'"));const a=JSON.parse(this.LS.getItem(n.info));return ci(n),a}}const pi="://";class fi{constructor(){this.managers={}}static getInstance(){return null==fi.instance&&(fi.instance=new fi),fi.instance}static registerManager(e,t){We(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(pi)&&(e=e.slice(0,e.indexOf(pi))),We(e.length>0,(()=>"scheme must not be an empty string."));const n=fi.getInstance();We(null==n.managers[e],(()=>"A model store manager is already registered for scheme '".concat(e,"'."))),n.managers[e]=t}static getManager(e){const t=fi.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '".concat(e,"'"));return t}static getSchemes(){return Object.keys(fi.getInstance().managers)}}function mi(e){if(-1===e.indexOf(pi))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(fi.getSchemes().join(",")));return{scheme:e.split(pi)[0],path:e.split(pi)[1]}}async function gi(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];We(e!==t,(()=>"Old path and new path are the same: '".concat(e,"'")));const a=Vo.getLoadHandlers(e);We(a.length>0,(()=>"Copying failed because no load handler is found for source URL ".concat(e,"."))),We(a.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(e,".")));const r=a[0],s=Vo.getSaveHandlers(t);We(s.length>0,(()=>"Copying failed because no save handler is found for destination "+"URL ".concat(t,"."))),We(s.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(t,".")));const o=s[0],i=mi(e).scheme,c=mi(e).path,l=i===mi(e).scheme,u=await r.load();n&&l&&await fi.getManager(i).removeModel(c);const h=await o.save(u);return n&&!l&&await fi.getManager(i).removeModel(c),h.modelArtifactsInfo}async function yi(){const e=fi.getSchemes(),t={};for(const n of e){const e=await fi.getManager(n).listModels();for(const a in e){t[n+pi+a]=e[a]}}return t}async function bi(e){const t=mi(e);return fi.getManager(t.scheme).removeModel(t.path)}async function xi(e,t){return gi(e,t,!1)}async function vi(e,t){return gi(e,t,!0)}class wi{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got ".concat(t));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&vt().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return Kr(e)}}if(vt().get("IS_BROWSER")){vt().setPlatform("browser",new wi);try{fi.registerManager(ui.URL_SCHEME,new di)}catch(hV){}try{fi.registerManager(Zo.URL_SCHEME,new $o)}catch(hV){}}const ki=()=>n(817);let Si;class Ni{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=vt().global.fetch?vt().global.fetch(e,t):(null==Si&&(Si=ki()),Si(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(t));return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}function Ii(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",pt(e),new Ts(e,t,n)}vt().get("IS_NODE")&&!vt().get("IS_BROWSER")&&vt().setPlatform("node",new Ni);const Ti=lo({cast_:function(e,t){const n=oo(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error("Failed to cast to unknown dtype ".concat(t));if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},r={dtype:t};return Zs.runKernel(Xt,a,r)}});const Ci=lo({clone_:function(e){const t={x:oo(e,"x","clone","string_or_numeric")};return Zs.runKernel(Vn,t)}});function Ei(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}Qs();Es={buffer:Ii,cast:Ti,clone:Ci,print:Ei};const Ri=lo({add_:function(e,t){let n=oo(e,"a","add"),a=oo(t,"b","add");[n,a]=Gs(n,a);const r={a:n,b:a};return Zs.runKernel(Et,r)}});const Ai=lo({floorDiv_:function(e,t){let n=oo(e,"a","floorDiv"),a=oo(t,"b","floorDiv");[n,a]=Gs(n,a);const r={a:n,b:a};return Zs.runKernel(Mn,r)}});const _i=lo({div_:function(e,t){let n=oo(e,"a","div"),a=oo(t,"b","div");if([n,a]=Gs(n,a),"int32"===n.dtype&&"int32"===a.dtype)return Ai(n,a);const r={a:n,b:a};return Zs.runKernel(kn,r,{})}});const Fi=lo({mul_:function(e,t){let n=oo(e,"a","mul"),a=oo(t,"b","mul");[n,a]=Gs(n,a);const r={a:n,b:a};return Zs.runKernel(ya,r)}});const Di=lo({sqrt_:function(e){const t={x:oo(e,"x","sqrt","float32")};return Zs.runKernel(ar,t)}});const Oi=lo({square_:function(e){const t=oo(e,"x","square");return Zs.runKernel("Square",{x:t},{})}});const Mi=lo({zerosLike_:function(e){const t={x:oo(e,"x","zerosLike")};return Zs.runKernel(Ar,t)}});function Li(e){return Zs.customGrad(e)}function zi(e,t){if((ps(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&ps(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ho(e,[],[],t)}const Pi=new Map,Bi=new Map;class Wi{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Vi{constructor(){this.classNameMap={}}static getMap(){return null==Vi.instance&&(Vi.instance=new Vi),Vi.instance}static register(e){Vi.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ui(e,t,n){We(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),We("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),We(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const a=t+">"+n;return Vi.register(e),Pi.set(a,e),Bi.set(e,a),e}class Gi extends Wi{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return xo(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){We(st(e),(()=>"The f passed in variableGrads(f) must be a function")),We(null==t||Array.isArray(t)&&t.every((e=>e instanceof Fs)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Zs.registeredVariables)t.push(Zs.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,r=t.length;t=t.filter((e=>e.trainable)),We(t.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(r," variables is ")+"trainable."));const{value:s,grads:o}=Zs.gradients(e,t,null,!0);We(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),We(0===s.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(s.rank," tensor")));const i={};return t.forEach(((e,t)=>{null!=o[t]&&(i[e.name]=o[t])})),null!=a&&a.forEach((e=>i[e.name]=null)),{value:s,grads:i}}(e,t)}dispose(){null!=this.iterations_&&xo(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:zi(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Gi,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Hi extends Gi{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Zs.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Zs.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(t,"/accum_grad"),variable:bo((()=>Mi(a).variable(r)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(t,"/accum_var"),variable:bo((()=>Mi(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;bo((()=>{const e=Ri(Fi(o,this.rho),Fi(Oi(s),1-this.rho)),t=Fi(_i(Di(Ri(i,this.epsilon)),Di(Ri(o,this.epsilon))),s),n=Ri(Fi(i,this.rho),Fi(Oi(t),1-this.rho));o.assign(e),i.assign(n);const r=Ri(Fi(t,-this.learningRate),a);a.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(xo(this.accumulatedGrads.map((e=>e.variable))),xo(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function ji(e,t,n){pt(e);const a={shape:e,value:t,dtype:n=n||rt(t)};return Zs.runKernel(Fn,{},a)}class qi extends Gi{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Zs.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:"".concat(t,"/accumulator"),variable:bo((()=>ji(a.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable;bo((()=>{const e=Ri(s,Oi(r));s.assign(e);const t=Ri(Fi(_i(r,Di(Ri(e,Zs.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&xo(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const Ki=lo({pow_:function(e,t){let n=oo(e,"base","pow"),a=oo(t,"exp","pow");[n,a]=Gs(n,a);const r={a:n,b:a};return Zs.runKernel(Ca,r)}});const Xi=lo({sub_:function(e,t){let n=oo(e,"a","sub"),a=oo(t,"b","sub");[n,a]=Gs(n,a);const r={a:n,b:a};return Zs.runKernel(vr,r)}});class Yi extends Gi{static get className(){return"Adam"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],bo((()=>{this.accBeta1=zi(t).variable(),this.accBeta2=zi(n).variable()})),null==a&&(this.epsilon=Zs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);bo((()=>{const n=Xi(1,this.accBeta1),a=Xi(1,this.accBeta2);t.forEach(((t,r)=>{const s=Zs.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:bo((()=>Mi(s).variable(o)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:"".concat(t,"/v"),variable:bo((()=>Mi(s).variable(o)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=Ri(Fi(c,this.beta1),Fi(i,1-this.beta1)),h=Ri(Fi(l,this.beta2),Fi(Oi(i),1-this.beta2)),d=_i(u,n),p=_i(h,a);c.assign(u),l.assign(h);const f=Ri(Fi(_i(d,Ri(Di(p),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign(Fi(this.accBeta1,this.beta1)),this.accBeta2.assign(Fi(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&xo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&xo(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),bo((()=>{this.accBeta1.assign(Ki(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ki(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const Qi=lo({abs_:function(e){const t=oo(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Zs.runKernel(Jt,e)}{const e={x:t};return Zs.runKernel(It,e)}}});function Zi(e,t){const n=e.length,a=[];for(let r=0;r<n;r++){const s=n-1-r,o=e[s]||1;(t[t.length-1-r]||1)>1&&1===o&&a.unshift(s)}return a}function Ji(e,t){const n=[];for(let a=0;a<t.length;a++){const r=e[e.length-a-1],s=t.length-a-1,o=t[s];(null==r||1===r&&o>1)&&n.unshift(s)}return n}function $i(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let s=e[e.length-r-1];null==s&&(s=1);let o=t[t.length-r-1];if(null==o&&(o=1),1===s)a[n-r-1]=o;else if(1===o)a[n-r-1]=s;else{if(s!==o){const n="Operands could not be broadcast together with shapes "+"".concat(e," and ").concat(t,".");throw Error(n)}a[n-r-1]=s}}return a}const ec=lo({maximum_:function(e,t){let n=oo(e,"a","maximum"),a=oo(t,"b","maximum");[n,a]=Gs(n,a),"bool"===n.dtype&&(n=Ti(n,"int32"),a=Ti(a,"int32")),$i(n.shape,a.shape);const r={a:n,b:a};return Zs.runKernel(sa,r)}});class tc extends Gi{static get className(){return"Adamax"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],bo((()=>{this.iteration=zi(0).variable(),this.accBeta1=zi(t).variable()})),null==a&&(this.epsilon=Zs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);bo((()=>{const n=Xi(1,this.accBeta1),a=_i(-this.learningRate,Ri(Fi(this.iteration,this.decay),1));t.forEach(((t,r)=>{const s=Zs.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:Mi(s).variable(o)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:"".concat(t,"/v"),variable:Mi(s).variable(o)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=Ri(Fi(c,this.beta1),Fi(i,1-this.beta1)),h=Fi(l,this.beta2),d=Qi(i),p=ec(h,d);c.assign(u),l.assign(p);const f=Ri(Fi(_i(a,n),_i(u,Ri(p,this.epsilon))),s);s.assign(f)})),this.iteration.assign(Ri(this.iteration,1)),this.accBeta1.assign(Fi(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&xo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&xo(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class nc extends Gi{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=Zs.registeredVariables[t];bo((()=>{const e=Ri(Fi(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=vo(zi(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class ac extends nc{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=zi(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Zs.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:"".concat(t,"/momentum"),variable:bo((()=>Mi(a).variable(e)))}}const r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&bo((()=>{let e;const t=Ri(Fi(this.m,r),s);e=this.useNesterov?Ri(Fi(this.c,Ri(s,Fi(t,this.m))),a):Ri(Fi(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&xo(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class rc extends Gi{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=Zs.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Zs.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(t,"/rms"),variable:bo((()=>Mi(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(t,"/momentum"),variable:bo((()=>Mi(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(t,"/mg"),variable:bo((()=>Mi(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;bo((()=>{const e=Ri(Fi(o,this.decay),Fi(Oi(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=Ri(Fi(t,this.decay),Fi(s,1-this.decay)),c=_i(Fi(s,this.learningRate),Di(Xi(e,Ri(Oi(r),this.epsilon)))),l=Ri(Fi(i,this.momentum),c);o.assign(e),t.assign(r),i.assign(l);const u=Xi(a,l);a.assign(u)}else{const e=Ri(Fi(o,this.decay),Fi(Oi(s),1-this.decay)),t=Ri(Fi(i,this.momentum),_i(Fi(s,this.learningRate),Di(Ri(e,this.epsilon))));o.assign(e),i.assign(t);const n=Xi(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&xo(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&xo(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&xo(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const sc=[Hi,qi,Yi,tc,ac,rc,nc];function oc(e){return new Promise((e=>setTimeout(e))).then(e)}class ic{constructor(e){if(!vt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ic.URL_SCHEME)&&(e=e.slice(ic.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=mo.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=Lo(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await oc((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await oc((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Bo(e)}}}}ic.URL_SCHEME="downloads://";class cc{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(e));this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==a.weightsManifest)return void t(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void e({modelTopology:r});const s=Po(a,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const a=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(r).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>a("Failed to weights data from file of path '".concat(e,"'.")),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Mo(e.name))),a={};for(const r of e)r.paths.forEach((e=>{const r=Mo(e);if(-1!==t.indexOf(r))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(r,"'"));if(t.push(r),-1===n.indexOf(r))throw new Error("Weight file with basename '".concat(r,"' is not provided."));a[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(t.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return a}}function lc(e){return new cc(e)}function uc(e,t,n,a){!function(e){We(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){We(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(e))),We(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(t))),We(t>=e,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(e," and endFraction ")+"".concat(t)))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++r/e.length*(a-n);return t(o),s})),s))))}async function hc(e,t){null==t&&(t={});const n=null==t.fetchFunc?vt().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await uc(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await uc(r,t.onProgress,.5,1)}async function dc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return pc((e=>hc(e,{requestInit:a})))(e,t,n)}function pc(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0;const r=t.map((()=>!1)),s={},o=null!=a?a.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const c="quantization"in e?e.quantization.dtype:e.dtype,l=fo[c]*Ge(e.shape),u=()=>{r[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=a?a.forEach(((t,n)=>{t===e.name&&(u(),o[n]=!0)})):u(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=a.filter(((e,t)=>!o[t]));throw new Error("Could not find weights in manifest with names: "+"".concat(e.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];c.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const u=await e(l),h={};let d=0;return c.forEach((e=>{const n=t[e].paths.length,a=new mo(u.slice(d,d+n));s[e].forEach((e=>{const t=Io(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)h[n]=t[n]})),d+=n})),h}}Vo.registerSaveRouter((e=>vt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ic.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new ic(e)}(e.slice(ic.URL_SCHEME.length)):null));class fc{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(We("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=vt().platform.fetch,We(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&We(2===e.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(e.length,")."))),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Lo(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=mo.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Bo(e),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(a.status,"."))}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(e.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let t;try{t=await e.json()}catch(r){let e="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();return Po(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Wo(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?vt().platform.fetch:t.fetchFunc;let r,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var o;s<e.length;){if(!r){const n=(await a(e[s],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:i,value:c}=await r.read();if(!i)return void n.enqueue(c);s++,r=void 0,null===(o=t.onProgress)||void 0===o||o.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}(t),r=this.weightPathPrefix||n,s=[],o=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(r+e+a);return this.weightUrlConverter&&s.push(...await Promise.all(o)),s}async loadWeights(e){const t=await this.getWeightUrls(e);return[Wo(e),await hc(t,this.loadOptions)]}}function mc(e){return null!=e.match(fc.URL_SCHEME_REGEX)}fc.URL_SCHEME_REGEX=/^https?:\/\//;const gc=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>mc(e))):mc(e),n)return yc(e,t)}return null};function yc(e,t){return new fc(e,t)}function bc(e,t){return yc(e,t)}Vo.registerSaveRouter(gc),Vo.registerLoadRouter(gc);class xc{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class vc{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class wc{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function kc(e,t,n,a){return new wc(Sc(...arguments))}function Sc(e,t,n,a){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new xc(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new xc({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new xc({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a})}function Nc(e){return new vc(e)}function Ic(e){return new vc(e)}function Tc(e,t,n){if(Ue(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const a=ao(e,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ho(e,t,a,n)}let Cc;function Ec(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(e.constructor.name));i=!0}if(null!=Vr(Fr,Zs.backendName)){const n={pixels:e},a={numChannels:t};return Zs.runKernel(Fr,n,a)}const[c,l]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let u,h;if(o)u=e.getContext("2d").getImageData(0,0,c,l).data;else if(a||n)u=e.data;else if(s||r||i){if(null==Cc)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Cc=new OffscreenCanvas(1,1).getContext("2d")}else Cc=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Cc.canvas.width=c,Cc.canvas.height=l,Cc.drawImage(e,0,0,c,l),u=Cc.getImageData(0,0,c,l).data}if(4===t)h=new Int32Array(u);else{const e=c*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=u[4*n+e]}return Tc(h,[l,c,t],"int32")}const Rc=lo({fromPixels_:Ec}),Ac=-2,_c=-1;function Fc(e,t,n){const a=e.shape.length;We(a===t.length,(()=>"Error in slice".concat(a,"D: Length of begin ").concat(t," must ")+"match the rank of the array (".concat(a,")."))),We(a===n.length,(()=>"Error in slice".concat(a,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(a,").")));for(let r=0;r<a;++r)We(t[r]+n[r]<=e.shape[r],(()=>"Error in slice".concat(a,"D: begin[").concat(r,"] + size[").concat(r,"] ")+"(".concat(t[r]+n[r],") would overflow input.shape[").concat(r,"] (").concat(e.shape[r],")")))}function Dc(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Oc(e,t,n){const a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function Mc(e,t,n,a){const r=[...e];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)0===s?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Lc(e,t,n){return n<=e?n:n-(t-1)}function zc(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function Pc(e,t,n,a,r,s,o,i,c){const l=e.length;let u=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const c=t[0],l=n+1;u=Bc(o,c,l,a,e),h=Wc(i,c,l,r,e),d=Mc(s,c,l,e)}else for(let p=0;p<l;p++)u[p]=Uc(o,a,s,e,p,c),h[p]=Gc(i,r,s,e,p,c),d[p]=Vc(s,p,c);return{begin:u,end:h,strides:d}}function Bc(e,t,n,a,r){const s=[...r],o=zc(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const r=Lc(t,n,i);let o=a[r];e&1<<r&&(o=0),s[i]=o}return s}function Wc(e,t,n,a,r){const s=[...r],o=zc(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{const r=Lc(t,n,i);let o=a[r];e&1<<r&&(o=Number.MAX_SAFE_INTEGER),s[i]=o}for(let i=0;i<s.length;i++){const e=r[i];s[i]<0&&(s[i]+=e),s[i]=ze(0,s[i],r[i])}return s}function Vc(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function Uc(e,t,n,a,r,s){let o=t[r];const i=n[r]||1;(e&1<<r||s&1<<r||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=a[r];return o<0&&(o+=c),o=ze(0,o,c-1),o}function Gc(e,t,n,a,r,s){let o=t[r];const i=n[r]||1;(e&1<<r||s&1<<r||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[r];return o<0&&(o+=c),o=i>0?ze(0,o,c):ze(-1,o,c-1),o}function Hc(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function jc(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function qc(e,t,n){let a;const r=e.shape.length;let s;return a="number"===typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),a.forEach((e=>{We(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(We(-1===t,(()=>"Negative size values should be exactly -1 but got "+"".concat(t," for the slice() size at index ").concat(n,"."))),e.shape[n]-a[n]))),[a,s]}function Kc(e,t,n,a,r,s,o,i,c){let l;if(null==a?(l=new Array(t.length),l.fill(1)):l=a,null!=o&&0!==(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:r,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:c};for(let b=0;b<h.dims;b++)u&&0!==(1<<b&i)&&h.numAddAxisAfterEllipsis++,1<<b&o&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(Ac),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(t.dims," dims, ").concat(t.begin.length,"."));null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(_c),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<e.length;++b){if(0===d.strides[b])throw Error("strides[".concat(b,"] must be non-zero"));const t=!!(d.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}const a=[d.beginMask&1<<b,d.endMask&1<<b],r=[d.strides[b]>0?0:-1,d.strides[b]>0?n:n-1];if(t&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[b];const s=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(t){const e=d.begin[b]<0?n+d.begin[b]:d.begin[b];if(d.begin[b]=e,d.end[b]=d.begin[b]+1,e<0||e>=n)throw Error("slice index ".concat(d.begin[b]," of dimension ").concat(b," out of bounds."))}else d.begin[b]=Xc(d.begin[b],0,d.strides[b],n,a,r),d.end[b]=Xc(d.end[b],1,d.strides[b],n,a,r);const e=1===d.strides[b]&&0===d.begin[b]&&d.end[b]===n;p=p&&e,f=f&&(0===b&&1===d.strides[b]||e)}else p=p&&1===d.strides[b]&&s,f=f&&(0===b&&1===d.strides[b]||s);let o,i=!1;if(d.beginValid&&d.endValid?(o=d.end[b]-d.begin[b],i=!0):t?(o=1,i=!0):s&&n>=0&&(o=d.strides[b]<0?-n:n,i=!0),i){let e;e=0===o||o<0!==d.strides[b]<0?0:Math.trunc(o/d.strides[b])+(o%d.strides[b]!==0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const e=d.finalShapeGatherIndices[b];e>=0?y.push(g[e]):e===Ac&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>d.finalShapeGatherIndices[t]!==Ac)),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Xc(e,t,n,a,r,s){if(r[t])return n>0?s[t]:s[t+1&1];{const t=e<0?a+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}const Yc=lo({acos_:function(e){const t={x:oo(e,"x","acos")};return Zs.runKernel(Tt,t)}});const Qc=lo({acosh_:function(e){const t={x:oo(e,"x","acosh")};return Zs.runKernel(Ct,t)}});const Zc=lo({addN_:function(e){We(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),We(e.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(e.length)));const t=e.map(((e,t)=>oo(e,"tensors".concat(t),"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!He(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=t;return Zs.runKernel(Rt,a)}});const Jc=lo({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:oo(e,"x","all","bool")},r={axis:t,keepDims:n};return Zs.runKernel(At,a,r)}});const $c=lo({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:oo(e,"x","any","bool")},r={axis:t,keepDims:n};return Zs.runKernel(_t,a,r)}});const el=lo({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:oo(e,"x","argMax")},a={axis:t};return Zs.runKernel(Ft,n,a)}});const tl=lo({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:oo(e,"x","argMin")},a={axis:t};return Zs.runKernel(Dt,n,a)}});const nl=lo({asin_:function(e){const t={x:oo(e,"x","asin")};return Zs.runKernel(Ot,t)}});const al=lo({asinh_:function(e){const t={x:oo(e,"x","asinh")};return Zs.runKernel(Mt,t)}});const rl=lo({atan_:function(e){const t={x:oo(e,"x","atan")};return Zs.runKernel(Lt,t)}});const sl=lo({atan2_:function(e,t){let n=oo(e,"a","atan2"),a=oo(t,"b","atan2");[n,a]=Gs(n,a);const r={a:n,b:a};return Zs.runKernel(Pt,r)}});const ol=lo({atanh_:function(e){const t={x:oo(e,"x","atanh")};return Zs.runKernel(zt,t)}});function il(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;return ul(e,[...t,e[3]],n,s,a,null,null,vl(r))}function cl(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[i,c]=pl(t);let l;if("channelsLast"===o)l=[i,c,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));l=[i,c,e[1],e[1]]}return ul(e,l,n,a,r,s,!1,o)}function ll(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,c,l]=fl(t);let u,h;if("NDHWC"===o)h="channelsLast",u=[i,c,l,e[4],e[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat ".concat(o));h="channelsFirst",u=[i,c,l,e[1],e[1]]}return hl(e,u,n,a,r,!1,h,s)}function ul(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,l,u,h]=[-1,-1,-1,-1];if("channelsLast"===i)[c,l,u,h]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,h,l,u]=e}const[d,p,,f]=t,[m,g]=pl(n),[y,b]=pl(a),x=ml(d,y),v=ml(p,b),{padInfo:w,outHeight:k,outWidth:S}=function(e,t,n,a,r,s,o,i,c){let l,u,h;if("number"===typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,r){null==a&&(a=dl(e,t,n));const s=e[0],o=e[1],i=gl((s-t+2*a)/n+1,r),c=gl((o-t+2*a)/n+1,r);return[i,c]}([t,n],s,a,e,i);u=r[0],h=r[1]}else if("same"===e){u=Math.ceil(t/a),h=Math.ceil(n/r);const e=Math.max(0,(u-1)*a+s-t),i=Math.max(0,(h-1)*r+o-n),c=Math.floor(e/2),d=e-c,p=Math.floor(i/2);l={top:c,bottom:d,left:p,right:i-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-s+1)/a),h=Math.ceil((n-o+1)/r);else{if("object"!==typeof e)throw Error("Unknown padding parameter: ".concat(e));{const d="channelsLast"===c?e[1][0]:e[2][0],p="channelsLast"===c?e[1][1]:e[2][1],f="channelsLast"===c?e[2][0]:e[3][0],m="channelsLast"===c?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},u=gl((t-s+d+p)/a+1,i),h=gl((n-o+f+m)/r+1,i)}}return{padInfo:l,outHeight:u,outWidth:h}}(r,l,u,m,g,x,v,s,i),N=o?f*h:f;let I;return"channelsFirst"===i?I=[c,N,k,S]:"channelsLast"===i&&(I=[c,k,S,N]),{batchSize:c,dataFormat:i,inHeight:l,inWidth:u,inChannels:h,outHeight:k,outWidth:S,outChannels:N,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:I,filterShape:t}}function hl(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,l,u,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[c,l,u,h,d]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));[c,d,l,u,h]=e}const[p,f,m,,g]=t,[y,b,x]=fl(n),[v,w,k]=fl(a),S=ml(p,v),N=ml(f,w),I=ml(m,k),{padInfo:T,outDepth:C,outHeight:E,outWidth:R}=function(e,t,n,a,r,s,o,i,c,l,u){let h,d,p,f;"valid"===e&&(e=0);if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,a,r,s){null==r&&(r=dl(e,t[0],a[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*r>=t[i]&&(o[i]=gl((e[i]-t[i]+2*r)/a[i]+1,s));return o}([t,n,a,1],[i,c,l],1,[r,s,o],e,u);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error("Unknown padding parameter: ".concat(e));{d=Math.ceil(t/r),p=Math.ceil(n/s),f=Math.ceil(a/o);const e=(d-1)*r+i-t,u=(p-1)*s+c-n,m=(f-1)*o+l-a,g=Math.floor(e/2),y=e-g,b=Math.floor(u/2),x=u-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,l,u,h,y,b,x,S,N,I,i),A=s?g*d:g;let _;return"channelsFirst"===o?_=[c,A,C,E,R]:"channelsLast"===o&&(_=[c,C,E,R,A]),{batchSize:c,dataFormat:o,inDepth:l,inHeight:u,inWidth:h,inChannels:d,outDepth:C,outHeight:E,outWidth:R,outChannels:A,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:N,effectiveFilterWidth:I,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:_,filterShape:t}}function dl(e,t,n){const a=ml(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+a)/2)}function pl(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function fl(e){return"number"===typeof e?[e,e,e]:e}function ml(e,t){return t<=1?e:e+(e-1)*(t-1)}function gl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode ".concat(t))}}function yl(e){const[t,n,a]=pl(e);return 1===t&&1===n&&1===a}function bl(e,t){return yl(e)||yl(t)}function xl(e){return pl(e).every((e=>e>0))}function vl(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(e))}function wl(e,t,n){if(null!=n){if("string"===typeof t)throw Error("Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));if("number"===typeof t)We(je(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")));else{if("object"!==typeof t)throw Error("Error in ".concat(e,": Unknown padding parameter: ").concat(t));t.forEach((t=>{t.forEach((t=>{We(je(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")))}))}))}}}const kl=lo({reshape_:function(e,t){const n={x:oo(e,"x","reshape","string_or_numeric")},a={shape:t};return Zs.runKernel(za,n,a)}});const Sl=lo({avgPool_:function(e,t,n,a,r){const s=oo(e,"x","avgPool","float32");We(bl(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let o=s,i=!1;3===s.rank&&(i=!0,o=kl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),We(4===o.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(o.rank,"."))),wl("avgPool",a,r);const c={x:o},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r};let u=Zs.runKernel(Bt,c,l);return u=Ti(u,s.dtype),i?kl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const Nl=lo({avgPool3d_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=oo(e,"x","avgPool3d","float32");let i=o,c=!1;4===o.rank&&(c=!0,i=kl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),We(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),We("NDHWC"===s,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),We("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),wl("avgPool3d",a,r);const l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s};let h=Zs.runKernel(Vt,l,u);return h=Ti(h,i.dtype),c?kl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const Il=lo({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;We(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=io(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(e.dtype,". "))})),1===n.length)return Ci(n[0]);const a=n,r={axis:t};return Zs.runKernel($t,a,r)}});const Tl=lo({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=oo(e,"a","matMul"),s=oo(t,"b","matMul");[r,s]=Gs(r,s);const o={a:r,b:s},i={transposeA:n,transposeB:a};return Zs.runKernel(Gt,o,i)}});const Cl=lo({sigmoid_:function(e){const t={x:oo(e,"x","sigmoid","float32")};return Zs.runKernel(tr,t)}});const El=lo({slice_:function(e,t,n){const a=oo(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const r={x:a},s={begin:t,size:n};return Zs.runKernel(Za,r,s)}});const Rl=lo({tanh_:function(e){const t={x:oo(e,"x","tanh","float32")};return Zs.runKernel(kr,t)}});const Al=lo({basicLSTMCell_:function(e,t,n,a,r,s){const o=oo(e,"forgetBias","basicLSTMCell"),i=oo(t,"lstmKernel","basicLSTMCell"),c=oo(n,"lstmBias","basicLSTMCell"),l=oo(a,"data","basicLSTMCell"),u=oo(r,"c","basicLSTMCell"),h=oo(s,"h","basicLSTMCell"),d=Il([l,h],1),p=Tl(d,i),f=Ri(p,c),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=El(f,[0,0],y),x=El(f,[0,g],y),v=El(f,[0,2*g],y),w=El(f,[0,3*g],y),k=Ri(Fi(Cl(b),Rl(x)),Fi(u,Cl(Ri(o,v))));return[k,Fi(Rl(k),Cl(w))]}});const _l=lo({batchToSpaceND_:function(e,t,n){const a=oo(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));We(a.rank>=1+t.length,(()=>"input rank is ".concat(a.rank," but should be > than blockShape.length ").concat(t.length))),We(n.length===t.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(t.length))),We(a.shape[0]%r===0,(()=>"input tensor batch is ".concat(a.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(t.join(" * ")," === ").concat(r)));const s={x:a},o={blockShape:t,crops:n};return Zs.runKernel(Ht,s,o)}});const Fl=lo({batchNorm_:function(e,t,n,a,r,s){null==s&&(s=.001);const o=oo(e,"x","batchNorm"),i=oo(t,"mean","batchNorm"),c=oo(n,"variance","batchNorm");let l,u;null!=r&&(l=oo(r,"scale","batchNorm")),null!=a&&(u=oo(a,"offset","batchNorm")),We(i.rank===c.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),We(null==u||i.rank===u.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),We(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?kl(e,[1,1,1,e.size]):2===e.rank?kl(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?kl(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),scale:l,offset:u,mean:i,variance:c},d={varianceEpsilon:s},p=Zs.runKernel(Ln,h,d);return kl(p,o.shape)}});const Dl=lo({batchNorm2d_:function(e,t,n,a,r,s){const o=oo(e,"x","batchNorm"),i=oo(t,"mean","batchNorm"),c=oo(n,"variance","batchNorm");let l,u;return null!=r&&(l=oo(r,"scale","batchNorm")),null!=a&&(u=oo(a,"offset","batchNorm")),We(2===o.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(o.rank,"."))),We(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),We(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&We(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&We(2===u.rank||1===u.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,"."))),Fl(o,i,c,u,l,s)}});const Ol=lo({batchNorm3d_:function(e,t,n,a,r,s){const o=oo(e,"x","batchNorm"),i=oo(t,"mean","batchNorm"),c=oo(n,"variance","batchNorm");let l,u;return null!=r&&(l=oo(r,"scale","batchNorm")),null!=a&&(u=oo(a,"offset","batchNorm")),We(3===o.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(o.rank,"."))),We(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),We(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&We(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&We(3===u.rank||1===u.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,"."))),Fl(o,i,c,u,l,s)}});const Ml=lo({batchNorm4d_:function(e,t,n,a,r,s){const o=oo(e,"x","batchNorm"),i=oo(t,"mean","batchNorm"),c=oo(n,"variance","batchNorm");let l,u;return null!=r&&(l=oo(r,"scale","batchNorm")),null!=a&&(u=oo(a,"offset","batchNorm")),We(4===o.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(o.rank,"."))),We(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),We(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&We(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&We(4===u.rank||1===u.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,"."))),Fl(o,i,c,u,l,s)}});const Ll=lo({bincount_:function(e,t,n){const a=oo(e,"x","bincount"),r=oo(t,"weights","bincount");We("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),We(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),We(r.size===a.size||0===r.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(r.shape,".")));const s={x:a,weights:r},o={size:n};return Zs.runKernel(jt,s,o)}});const zl=lo({bitwiseAnd_:function(e,t){const n=oo(e,"x","bitwiseAnd"),a=oo(t,"y","bitwiseAnd");if(!He(n.shape,a.shape))throw new Error("BitwiseAnd: Tensors must have the same shape. x: ".concat(n.shape,", y: ").concat(a.shape));if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error("BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ".concat(n.dtype," and type of y: ").concat(a.dtype));const r={a:n,b:a};return Zs.runKernel(qt,r)}});const Pl=lo({broadcastArgs_:function(e,t){const n=oo(e,"s0","broadcastArgs","int32"),a=oo(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). "+"Has rank ".concat(n.rank));if(1!==a.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). "+"Has rank ".concat(a.rank));const r={s0:n,s1:a};return Zs.runKernel(Kt,r)}});const Bl=lo({broadcastTo_:function(e,t){let n=oo(e,"broadcastTo","x");const a=n.shape;if(pt(t),t.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(t.length," < input.rank=").concat(n.rank,"."));if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=kl(n,e)}const r=n.shape,s=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])s[c]=1;else if(1!==n.shape[c])throw new Error("broadcastTo(): [".concat(a,"] cannot be broadcast to [").concat(t,"]."));if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Ci(n);const o={x:n},i={reps:s};return Zs.runKernel(Sr,o,i)}});const Wl=lo({ceil_:function(e){const t={x:oo(e,"x","ceil","float32")};return Zs.runKernel(Yt,t)}});const Vl=lo({clipByValue_:function(e,t,n){const a=oo(e,"x","clipByValue");if(We(t<=n,(()=>"Error in clip: min (".concat(t,") must be ")+"less than or equal to max (".concat(n,")."))),t===n)return ji(a.shape,t,a.dtype);const r={x:a},s={clipValueMin:t,clipValueMax:n};return Zs.runKernel(Qt,r,s)}});const Ul=lo({concat1d_:function(e){return Il(e,0)}});const Gl=lo({concat2d_:function(e,t){return Il(e,t)}});const Hl=lo({concat3d_:function(e,t){return Il(e,t)}});const jl=lo({concat4d_:function(e,t){return Il(e,t)}});const ql=lo({conv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=oo(e,"x","conv2d","float32"),c=oo(t,"filter","conv2d","float32");let l=i,u=!1;3===i.rank&&(u=!0,l=kl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),We(4===l.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(l.rank,"."))),We(4===c.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(c.rank,"."))),wl("conv2d",a,o);const h="NHWC"===r?l.shape[3]:l.shape[1];We(h===c.shape[2],(()=>"Error in conv2d: depth of input (".concat(h,") must match ")+"input depth for filter ".concat(c.shape[2],"."))),We(bl(n,s),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),We(xl(s),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),We(xl(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:l,filter:c},p={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o},f=Zs.runKernel(en,d,p);return u?kl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Kl=lo({conv1d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,o=arguments.length>6?arguments[6]:void 0;const i=oo(e,"x","conv1d"),c=oo(t,"filter","conv1d");let l=i,u=!1;2===i.rank&&(u=!0,l=kl(i,[1,i.shape[0],i.shape[1]])),We(3===l.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(l.rank,"."))),We(3===c.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(c.rank,"."))),wl("conv1d",a,o),We(l.shape[2]===c.shape[1],(()=>"Error in conv1d: depth of input (".concat(l.shape[2],") must match ")+"input depth for filter ".concat(c.shape[1],"."))),We(bl(n,s),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(s,"'"))),We(xl(s),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),We(xl(n),(()=>"Error in conv1D: Stride should be larger than 0.")),We("NWC"===r,(()=>"Error in conv1d: got dataFormat of ".concat(r," but only NWC is currently supported.")));const h=kl(c,[1,c.shape[0],c.shape[1],c.shape[2]]),d=kl(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=ql(d,h,[1,n],a,"NHWC",[1,s],o);return kl(p,u?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});const Xl=lo({conv2DBackpropInput_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0;We(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let i=e,c=t,l=!1;3===t.rank&&(l=!0,c=kl(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),We(4===i.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(i.length,"."))),We(4===c.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(c.rank))),We(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const u="NHWC"===s?i[3]:i[1],h="NHWC"===s?c.shape[3]:c.shape[1];We(u===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(u,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),We(h===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(h,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),wl("conv2dDerInput",r,o);const d={dy:c,filter:n},p={strides:a,pad:r,dataFormat:s,dimRoundingMode:o,inputShape:i},f=Zs.runKernel(nn,d,p);return l?kl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Yl=lo({conv2dTranspose_:function(e,t,n,a,r,s){const o=oo(e,"x","conv2dTranspose"),i=oo(t,"filter","conv2dTranspose");return Xl(n,o,i,a,r,"NHWC",s)}});const Ql=lo({conv3d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=oo(e,"x","conv3d"),i=oo(t,"filter","conv3d");let c=o,l=!1;4===o.rank&&(l=!0,c=kl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),We(5===c.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(c.rank,"."))),We(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),We(c.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(c.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),We(bl(n,s),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),We("NDHWC"===r,(()=>"Error in conv3d: got dataFormat of ".concat(r," but only NDHWC is currently supported."))),We(xl(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),We(xl(n),(()=>"Error in conv3D: Strides should be larger than 0."));const u={x:c,filter:i},h={strides:n,pad:a,dataFormat:r,dilations:s},d=Zs.runKernel(an,u,h);return l?kl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Zl=lo({conv3DBackpropInput_:function(e,t,n,a,r){We(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let s=e,o=t,i=!1;4===t.rank&&(i=!0,o=kl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const c=s[4],l=o.shape[4];We(5===s.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(s.length,"."))),We(5===o.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(o.rank))),We(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),We(c===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(c,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),We(l===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(l,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const u={dy:o,filter:n},h={pad:r,strides:a,inputShape:s},d=Zs.runKernel(sn,u,h);return i?kl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Jl=lo({conv3dTranspose_:function(e,t,n,a,r){const s=oo(e,"x","conv3dTranspose"),o=oo(t,"filter","conv3dTranspose");return Zl(n,s,o,a,r)}});const $l=lo({cos_:function(e){const t={x:oo(e,"x","cos","float32")};return Zs.runKernel(on,t)}});const eu=lo({cosh_:function(e){const t={x:oo(e,"x","cosh","float32")};return Zs.runKernel(cn,t)}});const tu=lo({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:oo(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:a};return Zs.runKernel(ln,r,s)}});const nu=lo({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:oo(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:a};return Zs.runKernel(un,r,s)}});const au=lo({denseBincount_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=oo(e,"x","denseBincount"),s=oo(t,"weights","denseBincount");We("int32"===r.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(r.dtype))),We(r.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(r.rank,"."))),We(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),We(s.size===r.size||0===s.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(r.shape,", weights shape: ")+"".concat(s.shape,".")));const o={x:r,weights:s},i={size:n,binaryOutput:a};return Zs.runKernel(dn,o,i)}});const ru=lo({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const a=oo(e,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],s="NHWC"===n?a.shape[2]:a.shape[3],o="NHWC"===n?a.shape[3]:a.shape[1];We(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(t))),We(r*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(r," and ").concat(t,"  for depthToSpace with input shape\n    ").concat(a.shape))),We(s*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(s," and ").concat(t," for depthToSpace with input shape\n        ").concat(a.shape))),We(o%(t*t)===0,(()=>"Dimension size must be evenly divisible by ".concat(t*t," but is ").concat(o," for depthToSpace with input shape ").concat(a.shape)));const i={x:a},c={blockSize:t,dataFormat:n};return Zs.runKernel(pn,i,c)}});const su=lo({depthwiseConv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=oo(e,"x","depthwiseConv2d","float32"),c=oo(t,"filter","depthwiseConv2d","float32");let l=i,u=!1;3===i.rank&&(u=!0,l=kl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),We(4===l.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(l.rank,"."))),We(4===c.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(c.rank,".")));const h="NHWC"===r?l.shape[3]:l.shape[1];We(h===c.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(h,") must match the inChannels dimension in ")+"filter ".concat(c.shape[2],"."))),wl("depthwiseConv2d",a,o);const d={x:l,filter:c},p={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o},f=Zs.runKernel(fn,d,p);return u?kl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const ou=lo({diag_:function(e){const t={x:oo(e,"x","diag")};return Zs.runKernel(yn,t)}});const iu=lo({dilation2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const o=oo(e,"x","dilation2d"),i=oo(t,"filter","dilation2d");We(3===o.rank||4===o.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(o.rank,"."))),We(3===i.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(i.rank,"."))),We("NHWC"===s,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(s)));let c=o,l=!1;3===o.rank&&(c=kl(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0),We(c.shape[3]===i.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(c.shape[3]," vs ").concat(i.shape[2])));const u={x:c,filter:i},h={strides:n,pad:a,dilations:r},d=Zs.runKernel(bn,u,h);return l?kl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const cu=lo({equal_:function(e,t){let n=oo(e,"a","equal","string_or_numeric"),a=oo(t,"b","equal","string_or_numeric");[n,a]=Gs(n,a),$i(n.shape,a.shape);const r={a:n,b:a};return Zs.runKernel(Cn,r)}});const lu=lo({where_:function(e,t,n){const a=oo(t,"a","where"),r=oo(n,"b","where"),s=oo(e,"condition","where","bool"),o=$i($i(s.shape,a.shape),r.shape),i={condition:Bl(s,o),t:Bl(a,o),e:Bl(r,o)};return Zs.runKernel(Ya,i)}});const uu=lo({divNoNan_:function(e,t){let n=oo(e,"a","div"),a=oo(t,"b","div");[n,a]=Gs(n,a);const r=_i(n,a),s=Mi(r),o=cu(a,s);return lu(o,s,r)}});const hu=lo({dot_:function(e,t){const n=oo(e,"t1","dot"),a=oo(t,"t2","dot");We((1===n.rank||2===n.rank)&&(1===a.rank||2===a.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=1===n.rank?n.size:n.shape[1],s=1===a.rank?a.size:a.shape[0];if(We(r===s,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(r," and ").concat(s,"."))),1===n.rank&&1===a.rank){const e=kl(n,[1,-1]),t=kl(a,[-1,1]),r=Tl(e,t);return kl(r,[])}if(1===n.rank&&2===a.rank){const e=kl(n,[1,-1]),t=kl(a,[a.shape[0],a.shape[1]]),r=Tl(e,t);return kl(r,[r.size])}if(2===n.rank&&1===a.rank){const e=kl(a,[-1,1]),t=Tl(n,e);return kl(t,[t.size])}{const e=kl(a,[a.shape[0],a.shape[1]]);return Tl(n,e)}}});const du=lo({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];const r=n.map(((e,t)=>oo(e,"tensors".concat(t),"einsum"))),s={equation:e};return Zs.runKernel(Sn,r,s)}});const pu=lo({elu_:function(e){const t={x:oo(e,"x","elu","float32")};return Zs.runKernel(Nn,t)}});const fu=lo({ensureShape_:function(e,t){const n=oo(e,"x","ensureShape","string_or_numeric");if(!function(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}(n.shape,t))throw new Error("EnsureShape: Shape of tensor ".concat(n.shape," is not compatible with expected shape ").concat(t));return e}});const mu=lo({erf_:function(e){let t=oo(e,"x","erf");We("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ti(t,"float32"));const n={x:t};return Zs.runKernel(Tn,n)}});function gu(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function yu(e,t,n){const a=e.length+t.length,r=[];let s=0,o=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?r.push(e[s++]):r.push(t[o++]);return r}function bu(e,t){const n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function xu(e,t){return yu(e,t.map((e=>1)),t)}function vu(e,t,n){We(gu(t,n),(()=>"".concat(e," supports only inner-most axes for now. ")+"Got axes ".concat(t," and rank-").concat(n," input.")))}function wu(e,t){if(gu(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function ku(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Su(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}const Nu=lo({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:oo(e,"x","max")},r={reductionIndices:t,keepDims:n};return Zs.runKernel(ra,a,r)}});const Iu=lo({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:oo(e,"x","min")},r={axis:t,keepDims:n};return Zs.runKernel(da,a,r)}});const Tu=lo({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=oo(e,"x","sum");"bool"===a.dtype&&(a=Ti(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return Zs.runKernel(rr,r,s)}});function Cu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return Qi(e);if(1!==e.rank&&null===n)return Cu(kl(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Tu(Qi(e),n);if(t===1/0)return Nu(Qi(e),n);if(t===-1/0)return Iu(Qi(e),n);if("euclidean"===t||2===t)return Di(Tu(Ki(Qi(e),zi(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}if(Array.isArray(n)&&2===n.length){if(1===t)return Nu(Tu(Qi(e),n[0]),n[1]-1);if(t===1/0)return Nu(Tu(Qi(e),n[1]),n[0]);if(t===-1/0)return Iu(Tu(Qi(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Di(Tu(Oi(e),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}throw new Error("Error in norm: invalid axis: ".concat(n))}const Eu=lo({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=Cu(e=oo(e,"x","norm"),t,n);let s=r.shape;if(a){const t=Qe(n,e.shape);s=xu(r.shape,t)}return kl(r,s)}});const Ru=lo({euclideanNorm_:function(e){return Eu(e,"euclidean",arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}});const Au=lo({exp_:function(e){const t={x:oo(e,"x","exp")};return Zs.runKernel(En,t)}});const _u=lo({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=oo(e,"x","expandDims","string_or_numeric");We(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},r={dim:t};return Zs.runKernel(Rn,a,r)}});const Fu=lo({expm1_:function(e){const t={x:oo(e,"x","expm1")};return Zs.runKernel(An,t)}});const Du=lo({tile_:function(e,t){const n=oo(e,"x","tile","string_or_numeric");We(n.rank===t.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(t,".")));const a={x:n},r={reps:t};return Zs.runKernel(Sr,a,r)}});const Ou=lo({eye_:function(e,t,n){null==t&&(t=e);const a=Ii([e,t],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),r=e<=t?e:t;for(let o=0;o<r;++o)a.set(1,o,o);const s=kl(a.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return Du(_u(s,0),[n[0],1,1]);if(2===n.length)return Du(_u(_u(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return Du(_u(_u(_u(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});const Mu=lo({floor_:function(e){const t={x:oo(e,"x","floor","float32")};return Zs.runKernel(On,t)}});const Lu=lo({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const r={x:oo(e,"x","gather"),indices:oo(t,"indices","gather","int32")},s={axis:n,batchDims:a};return Zs.runKernel(zn,r,s)}});const zu=lo({greater_:function(e,t){let n=oo(e,"a","greater","string_or_numeric"),a=oo(t,"b","greater","string_or_numeric");[n,a]=Gs(n,a),$i(n.shape,a.shape);const r={a:n,b:a};return Zs.runKernel(Bn,r)}});const Pu=lo({greaterEqual_:function(e,t){let n=oo(e,"a","greaterEqual","string_or_numeric"),a=oo(t,"b","greaterEqual","string_or_numeric");[n,a]=Gs(n,a),$i(n.shape,a.shape);const r={a:n,b:a};return Zs.runKernel(Wn,r)}});const Bu=lo({imag_:function(e){const t={input:oo(e,"input","imag")};return Zs.runKernel(Gn,t)}});const Wu=lo({isFinite_:function(e){const t={x:oo(e,"x","isFinite")};return Zs.runKernel(Hn,t)}});const Vu=lo({isInf_:function(e){const t={x:oo(e,"x","isInf")};return Zs.runKernel(jn,t)}});const Uu=lo({isNaN_:function(e){const t={x:oo(e,"x","isNaN")};return Zs.runKernel(qn,t)}});const Gu=lo({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:oo(e,"x","leakyRelu")},a={alpha:t};return Zs.runKernel(Kn,n,a)}});const Hu=lo({less_:function(e,t){let n=oo(e,"a","less","string_or_numeric"),a=oo(t,"b","less","string_or_numeric");[n,a]=Gs(n,a),$i(n.shape,a.shape);const r={a:n,b:a};return Zs.runKernel(Xn,r)}});const ju=lo({lessEqual_:function(e,t){let n=oo(e,"a","lessEqual","string_or_numeric"),a=oo(t,"b","lessEqual","string_or_numeric");[n,a]=Gs(n,a),$i(n.shape,a.shape);const r={a:n,b:a};return Zs.runKernel(Yn,r)}});function qu(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return Zs.runKernel(Qn,{},a)}const Ku=lo({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const s=oo(e,"x","localResponseNormalization");We(4===s.rank||3===s.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(s.rank,"."))),We(je(t),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(t,".")));let o=s,i=!1;3===s.rank&&(i=!0,o=kl(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const c={x:o},l={depthRadius:t,bias:n,alpha:a,beta:r},u=Zs.runKernel(na,c,l);return i?kl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const Xu=lo({log_:function(e){const t={x:oo(e,"x","log","float32")};return Zs.runKernel(Zn,t)}});const Yu=lo({log1p_:function(e){const t={x:oo(e,"x","log1p")};return Zs.runKernel(Jn,t)}});const Qu=lo({neg_:function(e){const t={x:oo(e,"x","neg")};return Zs.runKernel(ba,t)}});const Zu=lo({softplus_:function(e){const t={x:oo(e,"x","softplus")};return Zs.runKernel(nr,t)}});const Ju=lo({logSigmoid_:function(e){const t=oo(e,"x","logSigmoid");return Li((e=>({value:Qu(Zu(Qu(e))),gradFunc:t=>Fi(t,Cl(Qu(e)))})))(t)}});const $u=lo({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=oo(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(t));const a=Li(((e,n)=>{const a=Nu(e,t,!0),r=Xi(e,a),s=Xi(Ti(r,"float32"),Xu(Tu(Au(r),t,!0)));n([s]);return{value:s,gradFunc:(e,n)=>{const[a]=n,r=Au(a);return Xi(e,Fi(Tu(e,t,!0),r))}}}));return a(n)}});const eh=lo({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a=oo(e,"x","logSumExp"),r=Qe(t,a.shape),s=Nu(a,r,!0),o=Xi(a,s),i=Au(o),c=Tu(i,r),l=Xu(c),u=Ri(kl(s,l.shape),l);if(n){const e=xu(u.shape,r);return kl(u,e)}return u}});const th=lo({logicalAnd_:function(e,t){const n=oo(e,"a","logicalAnd","bool"),a=oo(t,"b","logicalAnd","bool");$i(n.shape,a.shape);const r={a:n,b:a};return Zs.runKernel($n,r)}});const nh=lo({logicalNot_:function(e){const t={x:oo(e,"x","logicalNot","bool")};return Zs.runKernel(ea,t)}});const ah=lo({logicalOr_:function(e,t){const n=oo(e,"a","logicalOr","bool"),a=oo(t,"b","logicalOr","bool");$i(n.shape,a.shape);const r={a:n,b:a};return Zs.runKernel(ta,r)}});const rh=lo({logicalXor_:function(e,t){const n=oo(e,"a","logicalXor","bool"),a=oo(t,"b","logicalXor","bool");return $i(n.shape,a.shape),th(ah(e,t),nh(th(e,t)))}}),sh=2147483648;const oh=lo({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const a=oo(e,"sortedSequence","searchSorted"),r=oo(t,"values","searchSorted"),s=a.shape[a.shape.length-1],o=r.shape[r.shape.length-1],i=kl(a,[-1,s]),c=kl(r,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==c.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Ge(c.shape)>=sh)throw new Error("values tensor size must less than ".concat(sh));if(i.shape[1]>=sh)throw new Error("trailing dim_size must less than ".concat(sh," for int32 output type, was ").concat(i.shape[1]));const l={sortedSequence:i,values:c},u={side:n};return Zs.runKernel(Xa,l,u)}});function ih(e,t){return oh(e,t,"left")}const ch=lo({maxPool_:function(e,t,n,a,r){const s=oo(e,"x","maxPool");let o=s,i=!1;3===s.rank&&(i=!0,o=kl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),We(4===o.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(o.rank,"."))),We(bl(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),wl("maxPool",a,r);const c={x:o},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r},u=Zs.runKernel(oa,c,l);return i?kl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const lh=lo({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=oo(e,"x","maxPool3d");let i=o,c=!1;4===o.rank&&(c=!0,i=kl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),We(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),We("NDHWC"===s,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),wl("maxPool3d",a,r);const l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},h=Zs.runKernel(ca,l,u);return c?kl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const uh=lo({maxPoolWithArgmax_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s={x:oo(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},i=Zs.runKernel(ua,s,o);return{result:i[0],indexes:i[1]}}});const hh=lo({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:oo(e,"x","mean")},r={axis:t,keepDims:n};return Zs.runKernel(ha,a,r)}});function dh(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(pt(e),"complex64"===t){const t=dh(e,"float32"),n=dh(e,"float32");return uo(t,n)}const n=ht(Ge(e),t);return Zs.makeTensor(n,e,t)}function ph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(pt(e),"complex64"===t){const t=ph(e,"float32"),n=dh(e,"float32");return uo(t,n)}const n=ut(Ge(e),t);return Zs.makeTensor(n,e,t)}function fh(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError("".concat(n," is not a valid third argument to meshgrid"));if(void 0===e)return[];let a=oo(e,"x","meshgrid",e instanceof As?e.dtype:"float32");if(void 0===t)return[a];let r=oo(t,"y","meshgrid",t instanceof As?t.dtype:"float32");const s=Ge(a.shape),o=Ge(r.shape);return"xy"===n?(a=kl(a,[1,-1]),r=kl(r,[-1,1]),[Tl(ph([o,1],a.dtype),a),Tl(r,ph([1,s],r.dtype))]):(a=kl(a,[-1,1]),r=kl(r,[1,-1]),[Tl(a,ph([1,o],a.dtype)),Tl(ph([s,1],r.dtype),r)])}const mh=lo({minimum_:function(e,t){let n=oo(e,"a","minimum"),a=oo(t,"b","minimum");[n,a]=Gs(n,a),"bool"===n.dtype&&(n=Ti(n,"int32"),a=Ti(a,"int32")),$i(n.shape,a.shape);const r={a:n,b:a};return Zs.runKernel(pa,r)}});const gh=lo({mirrorPad_:function(e,t,n){We("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const a=oo(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");We(t.length===a.rank,(()=>"Padding doesn't match input. Must be ".concat(a.rank,". ")+"Got ".concat(t.length,".")));const r="reflect"===n?1:0;for(let i=0;i<a.rank;i++)We(2===t[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),We(t[i][0]>=0&&t[i][0]<=a.shape[i]-r&&t[i][1]>=0&&t[i][1]<=a.shape[i]-r,(()=>"Padding in dimension ".concat(i," cannot be greater than or equal ")+"to ".concat(a.shape[i]-r," or less than 0 for input of ")+"shape ".concat(a.shape)));const s={paddings:t,mode:n},o={x:a};return Zs.runKernel(fa,o,s)}});const yh=lo({mod_:function(e,t){let n=oo(e,"a","mod"),a=oo(t,"b","mod");[n,a]=Gs(n,a);const r={a:n,b:a};return Zs.runKernel(ma,r)}});const bh=lo({moments_:function(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=Qe(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,(e=oo(e,"x","moments")).shape),a=hh(e,n,t);let r=a.shape;t||(r=xu(a.shape,n));const s=Oi(Xi(Ti(e,"float32"),kl(a,r)));return{mean:a,variance:hh(s,n,t)}}});const xh=lo({multiRNNCell_:function(e,t,n,a){const r=oo(t,"data","multiRNNCell"),s=io(n,"c","multiRNNCell"),o=io(a,"h","multiRNNCell");let i=r;const c=[];for(let h=0;h<e.length;h++){const t=e[h](i,s[h],o[h]);c.push(t[0]),c.push(t[1]),i=t[1]}const l=[],u=[];for(let h=0;h<c.length;h+=2)l.push(c[h]),u.push(c[h+1]);return[l,u]}});const vh=lo({multinomial_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=oo(e,"logits","multinomial"),s=r.size,o=r.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(s,"."));if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(o));n=n||Math.random();const i={logits:1===o?kl(r,[1,-1]):r},c={numSamples:t,seed:n,normalized:a},l=Zs.runKernel(ga,i,c);return 1===o?kl(l,[l.size]):l}});const wh=lo({notEqual_:function(e,t){let n=oo(e,"a","notEqual","string_or_numeric"),a=oo(t,"b","notEqual","string_or_numeric");[n,a]=Gs(n,a),$i(n.shape,a.shape);const r={a:n,b:a};return Zs.runKernel(xa,r)}});const kh=lo({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(t));const s={indices:oo(e,"indices","oneHot","int32")},o={dtype:r,depth:t,onValue:n,offValue:a};return Zs.runKernel(Na,s,o)}});const Sh=lo({onesLike_:function(e){const t={x:oo(e,"x","onesLike")};return Zs.runKernel(Sa,t)}});const Nh=lo({outerProduct_:function(e,t){const n=oo(e,"v1","outerProduct"),a=oo(t,"v2","outerProduct");We(1===n.rank&&1===a.rank,(()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=kl(n,[-1,1]),s=kl(a,[1,-1]);return Tl(r,s)}});const Ih=lo({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a=oo(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},s={x:a};return Zs.runKernel(Ta,s,r)}});const Th=lo({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return We(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Ih(e,[t],n)}});const Ch=lo({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return We(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Ih(e,t,n)}});const Eh=lo({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return We(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Ih(e,t,n)}});const Rh=lo({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return We(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Ih(e,t,n)}});const Ah=lo({spaceToBatchND_:function(e,t,n){const a=oo(e,"x","spaceToBatchND");We(a.rank>=1+t.length,(()=>"input rank ".concat(a.rank," should be > than [blockShape] ").concat(t.length))),We(n.length===t.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(t.length))),We(a.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>"input spatial dimensions ".concat(a.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(t.toString())));const r={x:a},s={blockShape:t,paddings:n};return Zs.runKernel(sr,r,s)}});const _h=lo({pool_:function(e,t,n,a,r,s,o){null==r&&(r=[1,1]),null==s&&(s=1),0===a&&(a="valid");const i=oo(e,"x","maxPool");let c=i,l=!1;3===i.rank&&(l=!0,c=kl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),We(bl(s,r),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(r,"'")));const u=cl(c.shape,t,s,r,a),h=[u.dilationHeight,u.dilationWidth];let d;d="same"===a?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),a=n.map((e=>e-1)),r=a.map((e=>Math.floor(e/2))),s=a.map(((e,t)=>e-r[t]));return a.map(((e,t)=>[r[t],s[t]]))}([u.filterHeight,u.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const a=n.map((e=>e[0])),r=n.map((e=>e[1])),s=e.concat(a,r),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=r.map(((e,t)=>e+o[t])),c=t.map(((e,t)=>[a[t],i[t]])),l=t.map(((e,t)=>[0,o[t]]));return[c,l]}([u.inHeight,u.inWidth],h,d),g=p?a:"valid",y=p?c:Ah(c,h,f),b=("avg"===n?()=>Sl(y,t,s,g,o):()=>ch(y,t,s,g,o))(),x=p?b:_l(b,h,m);return l?kl(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});const Fh=lo({prelu_:function(e,t){const n={x:oo(e,"x","prelu"),alpha:oo(t,"alpha","prelu")};return Zs.runKernel(Ea,n)}});const Dh=lo({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=oo(e,"x","prod");"bool"===a.dtype&&(a=Ti(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return Zs.runKernel(Ra,r,s)}});const Oh=lo({raggedGather_:function(e,t,n,a){const r={paramsNestedSplits:e.map(((e,t)=>oo(e,"tensors".concat(t),"raggedGather","int32"))),paramsDenseValues:oo(t,"paramsDenseValues","raggedGather"),indices:oo(n,"indices","raggedGather","int32")},s={outputRaggedRank:a},o=Zs.runKernel(Aa,r,s);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}});const Mh=lo({raggedRange_:function(e,t,n){const a=oo(e,"starts","raggedRange"),r={starts:a,limits:oo(t,"limits","raggedRange",a.dtype),deltas:oo(n,"deltas","raggedRange",a.dtype)},s=Zs.runKernel(_a,r);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}});const Lh=lo({raggedTensorToTensor_:function(e,t,n,a,r){const s=oo(e,"shape","raggedTensorToTensor","int32"),o=oo(t,"values","raggedTensorToTensor"),i={shape:s,values:o,defaultValue:oo(n,"defaultValue","raggedTensorToTensor",o.dtype),rowPartitionTensors:a.map(((e,t)=>oo(e,"tensors".concat(t),"raggedTensorToTensor","int32")))},c={rowPartitionTypes:r};return Zs.runKernel(Fa,i,c)}});const zh=lo({rand_:function(e,t,n){pt(e);const a=Ge(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));r=new Uint8Array(a)}for(let s=0;s<a;s++)r[s]=t();return Zs.makeTensor(r,e,n)}});var Ph=n(334);class Bh{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=Ph.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*o,t=this.mean+this.stdDev*r*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Wh{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;const r=a||Math.random();this.randu=Ph.alea(r.toString()),this.randn=new Bh(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,s;for(;;){do{a=this.randn.nextValue(),s=1+this.c*a}while(s<=0);if(s*=s*s,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Vh{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(e," - ").concat(t," <= 1 and dtype is not float"));this.random=Ph.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Uh=lo({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;if(pt(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error("Unsupported data type ".concat(a));const s=new Wh(t,n,a,r),o=Ii(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Gh=lo({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(pt(e),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const s=new Bh(t,n,a,!1,r),o=Ii(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Hh=lo({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error("Unsupported data type ".concat(t));return Gh(e,0,1,t,n)}});const jh=lo({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;pt(e);const s=Ii(e,a),o=new Vh(t,n,null,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const qh=lo({randomUniformInt_:function(e,t,n,a){return jh(e,t,n,"int32",a)}});function Kh(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:a};return Zs.runKernel(Da,{},r)}const Xh=lo({real_:function(e){const t={input:oo(e,"input","real")};return Zs.runKernel(Oa,t)}});const Yh=lo({reciprocal_:function(e){const t={x:oo(e,"x","reciprocal")};return Zs.runKernel(Ma,t)}});const Qh=lo({relu_:function(e){const t={x:oo(e,"x","relu")};return Zs.runKernel(La,t)}});const Zh=lo({relu6_:function(e){const t={x:oo(e,"x","relu6")};return Zs.runKernel(Ua,t)}});const Jh=lo({reverse_:function(e,t){const n={x:oo(e,"x","reverse")},a={dims:t};return Zs.runKernel(Ga,n,a)}});const $h=lo({reverse1d_:function(e){const t=oo(e,"x","reverse");return We(1===t.rank,(()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(t.rank,"."))),Jh(t,0)}});const ed=lo({reverse2d_:function(e,t){const n=oo(e,"x","reverse");return We(2===n.rank,(()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,"."))),Jh(n,t)}});const td=lo({reverse3d_:function(e,t){const n=oo(e,"x","reverse");return We(3===n.rank,(()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,"."))),Jh(n,t)}});const nd=lo({reverse4d_:function(e,t){const n=oo(e,"x","reverse");return We(4===n.rank,(()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,"."))),Jh(n,t)}});const ad=lo({round_:function(e){const t={x:oo(e,"x","round")};return Zs.runKernel(Ha,t)}});const rd=lo({rsqrt_:function(e){const t={x:oo(e,"x","rsqrt","float32")};return Zs.runKernel(ja,t)}});const sd=lo({selu_:function(e){const t={x:oo(e,"x","selu")};return Zs.runKernel(Qa,t)}});const od=lo({separableConv2d_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const i=oo(e,"x","separableConv2d"),c=oo(t,"depthwiseFilter","separableConv2d"),l=oo(n,"pointwiseFilter","separableConv2d");let u=i,h=!1;if(3===i.rank&&(h=!0,u=kl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");We(4===u.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(u.rank,"."))),We(4===c.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),We(4===l.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),We(1===l.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(l.shape[0],"."))),We(1===l.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(l.shape[1],".")));const d=c.shape[2],p=c.shape[3];We(l.shape[2]===d*p,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(d*p,", ")+"but got ".concat(l.shape[2],".")));const f=su(u,c,a,r,o,s),m=ql(f,l,1,"valid",o);return h?kl(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const id=async function(e,t){const n=oo(e,"x","setdiff1d"),a=oo(t,"y","setdiff1d");We(n.dtype===a.dtype,(()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(a.dtype,")."))),We(1===n.rank,(()=>"x should be 1D tensor, but got x (".concat(n.shape,")."))),We(1===a.rank,(()=>"y should be 1D tensor, but got y (".concat(a.shape,").")));const r=await n.data(),s=await a.data(),o=new Set(s);let i=0;for(let u=0;u<r.length;u++)o.has(r[u])||i++;const c=new Ts([i],n.dtype),l=new Ts([i],"int32");for(let u=0,h=0;u<r.length;u++)o.has(r[u])||(c.values[h]=r[u],l.values[h]=u,h++);return[c.toTensor(),l.toTensor()]};const cd=lo({sign_:function(e){const t={x:oo(e,"x","sign")};return Zs.runKernel(er,t)}});const ld=lo({sin_:function(e){const t={x:oo(e,"x","sin","float32")};return Zs.runKernel(Ja,t)}});const ud=lo({sinh_:function(e){const t={x:oo(e,"x","sinh")};return Zs.runKernel($a,t)}});const hd=lo({slice1d_:function(e,t,n){const a=oo(e,"x","slice1d");return We(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),El(a,[t],[n])}});const dd=lo({slice2d_:function(e,t,n){const a=oo(e,"x","slice2d");return We(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),El(a,t,n)}});const pd=lo({slice3d_:function(e,t,n){const a=oo(e,"x","slice3d");return We(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),El(a,t,n)}});const fd=lo({slice4d_:function(e,t,n){const a=oo(e,"x","slice4d");return We(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),El(a,t,n)}});const md=lo({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=oo(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(t));const a={logits:n},r={dim:t};return Zs.runKernel(ir,a,r)}});const gd=lo({fft_:function(e){We("complex64"===e.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return Zs.runKernel(_n,t)}});const yd=lo({ifft_:function(e){We("complex64"===e.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return Zs.runKernel(Un,t)}});const bd=lo({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let a;if(t<=2){const r=kl(e,[n,t]);a=yd(r)}else{const r=[n,2*(t-1)],s=kl(Xh(e),[n,t]),o=kl(Bu(e),[n,t]),i=Jh(El(s,[0,1],[n,t-2]),1),c=Fi(Jh(El(o,[0,1],[n,t-2]),1),zi(-1)),l=Il([s,i],1),u=Il([o,c],1),h=kl(uo(l,u),[r[0],r[1]]);a=yd(h)}if(a=Xh(a),3===e.rank&&0!==e.shape[0]){const t=a,n=e.shape[0];a=kl(a,[n,a.shape[0]/n,a.shape[1]]),t.dispose()}return a}});const xd=lo({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a={x:oo(e,"x","split")},r={numOrSizeSplits:t,axis:n};return Zs.runKernel(or,a,r)}});const vd=lo({rfft_:function(e,t){We("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(e.dtype)));let n=e.shape[e.shape.length-1];const a=e.size/n;let r;if(null!=t&&t<n){const a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,r=El(e,a,s),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,r=Il([e,dh(a)],e.shape.length-1),n=t}else r=e;const s=Mi(r),o=kl(uo(r,s),[a,n]),i=gd(o),c=Math.floor(n/2)+1,l=Xh(i),u=Bu(i),h=xd(l,[c,n-c],l.shape.length-1),d=xd(u,[c,n-c],u.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=c,kl(uo(h[0],d[0]),p)}});const wd=lo({squaredDifference_:function(e,t){let n=oo(e,"a","squaredDifference"),a=oo(t,"b","squaredDifference");[n,a]=Gs(n,a),$i(n.shape,a.shape);const r={a:n,b:a};return Zs.runKernel(pr,r,{})}});const kd=lo({squeeze_:function(e,t){const n=oo(e,"x","squeeze","string_or_numeric");return kl(n,Ze(n.shape,t).newShape)}});const Sd=lo({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=io(e,"tensors","stack","string_or_numeric");We(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&We(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,r={axis:t};return Zs.runKernel(Ia,a,r)}});const Nd=lo({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:oo(e,"x","step")},a={alpha:t};return Zs.runKernel(_r,n,a)}});const Id=lo({stridedSlice_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const l={x:oo(e,"x","stridedSlice","string_or_numeric")},u={begin:t,end:n,strides:a,beginMask:r,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:c};return Zs.runKernel(gr,l,u)}});const Td=lo({tan_:function(e){const t={x:oo(e,"x","tan","float32")};return Zs.runKernel(wr,t)}});function Cd(e,t){Ue(e);const n=ao(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ho(e,null,n,t)}function Ed(e,t,n){if(Ue(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=ao(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ho(e,t,a,n)}function Rd(e,t,n){if(Ue(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=ao(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ho(e,t,a,n)}function Ad(e,t,n){if(Ue(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=ao(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ho(e,t,a,n)}function _d(e,t,n){if(Ue(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=ao(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return ho(e,t=t||a,a,n)}function Fd(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(t.shape,", shape: ").concat(e)+", sliceDim: ".concat(a,", and batchDim: ").concat(r,".");if(n.rank<r)throw new Error(s+" update.rank < ".concat(r,". "));if(e.length<a+(n.rank-r))throw new Error(s+" Output shape length < ".concat(a+(n.rank-r)));if(n.rank!==r+e.length-a)throw new Error(s+" update.rank != ".concat(r+e.length-a));for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(s+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(t.shape[o],")."));for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+a])throw new Error(s+" updates.shape[".concat(o+r,"] (").concat(n.shape[o+r],") != shape[").concat(o+r,"] (").concat(e[o+r],")"))}function Dd(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(t.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: ".concat(t.shape));if(0===e.size)throw new Error("Updates specified for empty output. updates shape: ".concat(e.shape))}Fd(n,t,e)}function Od(e,t,n){const a=t.shape.length,r=a>1?t.shape[a-1]:1,s=n.length;let o=1;for(let c=r;c<s;++c)o*=n[c];const i=r<1?1:r;return{sliceRank:r,numUpdates:Ge(t.shape)/i,sliceSize:o,strides:[...it(n.slice(0,r)),1],outputSize:Ge(n)}}const Md=lo({tensorScatterUpdate_:function(e,t,n){const a=oo(e,"tensor","tensorScatterupdate"),r=oo(t,"indices","tensorScatterupdate","int32"),s=oo(n,"updates","tensorScatterupdate");if(Dd(s,r,a.shape),a.dtype!==s.dtype)throw new Error("tensor and updates must have the same dtype, instead they are ".concat(a.dtype," and ").concat(s.dtype,"."));const o={tensor:a,indices:r,updates:s};return Zs.runKernel(Ka,o,{})}});const Ld=lo({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=oo(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=a.shape[a.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(t));if(t>r)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(r,") ")+"but got ".concat(t));const s={x:a},o={k:t,sorted:n},[i,c]=Zs.runKernel(Nr,s,o);return{values:i,indices:c}}});const zd=lo({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(pt(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const s=new Bh(t,n,a,!0,r),o=Ii(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Pd=lo({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=oo(e,"x","unique","string_or_numeric");We(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},r={axis:t},[s,o]=Zs.runKernel(Cr,a,r);return{values:s,indices:o}}});const Bd=lo({unsortedSegmentSum_:function(e,t,n){const a=oo(e,"x","unsortedSegmentSum"),r=oo(t,"segmentIds","unsortedSegmentSum","int32");We(je(n),(()=>"numSegments must be of dtype int"));const s={x:a,segmentIds:r},o={numSegments:n};return Zs.runKernel(Rr,s,o)}});const Wd=lo({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=oo(e,"x","unstack","string_or_numeric");We(t>=-n.shape.length&&t<n.shape.length,(()=>"Axis = ".concat(t," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const a={value:n},r={axis:t};return Zs.runKernel(Er,a,r)}});function Vd(e,t){return oh(e,t,"right")}function Ud(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return Zs.makeVariable(e,t,n,a)}function Gd(e,t){const n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);const a=Ii(e,"int32"),r=Ii([n.length,e.length],"int32");for(let s=0;s<n.length;s++){const t=a.indexToLoc(n[s]),o=s*e.length;r.values.set(t,o)}return r.toTensor()}const Hd=async function(e){const t=oo(e,"condition","whereAsync","bool"),n=await t.data(),a=Gd(t.shape,n);return e!==t&&t.dispose(),a};const jd=async function(e,t,n){const a=oo(e,"tensor","boolMask"),r=oo(t,"mask","boolMask","bool"),s=null==n?0:n,o=r.rank,i=a.shape;We(o>0,(()=>"mask cannot be scalar")),Ve(i.slice(s,s+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let m=s;m<s+o;m++)c*=i[m];const l=i.slice(0,s).concat([c],i.slice(s+o)),u=kl(a,l),h=kl(r,[-1]),d=await Hd(h),p=kd(d,[1]),f=Lu(u,p,s);return e!==a&&a.dispose(),t!==r&&r.dispose(),p.dispose(),u.dispose(),h.dispose(),d.dispose(),f};const qd=lo({transpose_:function(e,t,n){const a=oo(e,"x","transpose");if(null==t&&(t=a.shape.map(((e,t)=>t)).reverse()),We(a.rank===t.length,(()=>"Error in transpose: rank of input ".concat(a.rank," ")+"must match length of perm ".concat(t,"."))),t.forEach((e=>{We(e>=0&&e<a.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(a.rank-1)+" but got ".concat(t)))})),a.rank<=1)return a.clone();const r={x:a},s={perm:t};return"complex64"===a.dtype?bo((()=>{let e=Xh(a),t=Bu(a);return e=Zs.runKernel(Tr,{x:e},s),t=Zs.runKernel(Tr,{x:t},s),n&&(t=Qu(t)),uo(e,t)})):Zs.runKernel(Tr,r,s)}});const Kd=lo({movingAverage_:function(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const s=oo(e,"v","movingAverage"),o=oo(t,"x","movingAverage"),i=oo(n,"decay","movingAverage");var c,l;l=o,We((c=s).dtype===l.dtype,(()=>"The dtypes of the first(".concat(c.dtype,") and")+" second(".concat(l.dtype,") input must match"))),We(He(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const u=zi(1),h=Xi(u,i);let d=Fi(Xi(o,s),h);if(r){We(null!=a,(()=>"When using zeroDebias: true, step is required."));const e=oo(a,"step","movingAverage");d=_i(d,Xi(u,Ki(i,e)))}return Ri(s,d)}});const Xd=lo({scatterND_:function(e,t,n){pt(n);const a=oo(e,"indices","scatterND","int32"),r=oo(t,"updates","scatterND");Dd(r,a,n);const s={indices:a,updates:r},o={shape:n};return Zs.runKernel(qa,s,o)}});const Yd=lo({sparseToDense_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;pt(n);const r=oo(e,"sparseIndices","sparseToDense","int32"),s=oo(t,"sparseValues","sparseToDense","string_or_numeric"),o=oo(a,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(e.shape,"."));const r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(s,"."));const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==r))throw new Error("sparseValues has incorrect shape "+"".concat(t.shape,", should be [] or [").concat(r,"]"));if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,s,n,o);const i={sparseIndices:r,sparseValues:s,defaultValue:o},c={outputShape:n};return Zs.runKernel(dr,i,c)}});const Qd=lo({gatherND_:function(e,t){const n=oo(t,"indices","gatherND","int32"),a={params:oo(e,"x","gatherND","string_or_numeric"),indices:n};return Zs.runKernel(Pn,a)}});const Zd=lo({dropout_:function(e,t,n,a){const r=oo(e,"x","dropout");if(We("float32"===r.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(r.dtype," tensor instead."))),We(t>=0&&t<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(t,"."))),0===t)return e instanceof As?r.clone():r;const s=function(e,t){if(null==t)return e.shape.slice();if(He(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),o=1-t,i=_i(Mu(Ri(jh(s,0,1,"float32",a),o)),o);return Fi(r,i)}});function Jd(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function $d(e,t,n){const a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(o)}return Cd(r,"float32")}const ep=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const a=oo(e,"predictions","inTopK"),r=oo(t,"targets","inTopK");We(a.rank>1,(()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(a.rank))),We(a.rank-1===r.rank,(()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(a.rank," and targets rank ").concat(r.rank))),Ve(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=a.shape[a.shape.length-1];We(n>0&&n<=s,(()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(s,"), but got ").concat(n)));const o=await a.data(),i=await r.data(),[c,l]=[o.length/s,s],u=Je("bool",c);for(let h=0;h<c;h++){const e=h*l,t=o.subarray(e,e+l),a=[];for(let n=0;n<t.length;n++)a.push({value:t[n],index:n});a.sort(((e,t)=>t.value-e.value)),u[h]=0;for(let r=0;r<n;r++)if(a[r].index===i[h]){u[h]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),po(u,r.shape,"bool")};const tp=lo({conv2DBackpropFilter_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0,i=e;3===e.rank&&(i=kl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=kl(t,[1,t.shape[0],t.shape[1],t.shape[2]])),We(4===i.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(i.shape,"."))),We(4===c.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(c.shape,"."))),We(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const l="NHWC"===s?i.shape[3]:i.shape[1],u="NHWC"===s?c.shape[3]:c.shape[1];We(l===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(l,") must ")+"match input depth in filter (".concat(n[2],"."))),We(u===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(u,") must ")+"match output depth for filter (".concat(n[3],")."))),wl("conv2dDerFilter",r,o);const h={x:i,dy:c},d={strides:a,pad:r,dataFormat:s,dimRoundingMode:o,filterShape:n};return Zs.runKernel(tn,h,d)}});function np(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Fi(e,Nd(t));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function ap(e,t){let n=t;const a=Ji(e.shape,t.shape);return a.length>0&&(n=Tu(n,a)),kl(n,e.shape)}function rp(e,t,n,a){if("linear"===t)return e;if("relu"===t)return Qh(e);if("elu"===t)return pu(e);if("relu6"===t)return Zh(e);if("prelu"===t)return Fh(e,n);if("leakyrelu"===t)return Gu(e,a);if("sigmoid"===t)return Cl(e);throw new Error("Unknown fused activation ".concat(t,"."))}const sp=(e,t)=>!(e>0)||"linear"===t;const op=lo({fusedConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}=e;if(l=l||"linear",!1===sp(Zs.state.gradientDepth,l)){We("NHWC"===s,(()=>"Error in fused conv2d: got dataFormat of ".concat(s," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let e=ql(t,n,a,r,s,o,i);return null!=c&&(e=Ri(e,c)),rp(e,l,u,h)}const d=oo(t,"x","conv2d","float32"),p=oo(n,"filter","conv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=kl(d,[1,d.shape[0],d.shape[1],d.shape[2]])),We(4===f.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(f.rank,"."))),We(4===p.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(p.rank,"."))),wl("fused conv2d",r,i);const g="NHWC"===s?f.shape[3]:f.shape[1];We(p.shape[2]===g,(()=>"Error in conv2d: depth of input (".concat(g,") must match ")+"input depth for filter ".concat(p.shape[2],"."))),We(bl(a,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(o,"'")));const y=ul(f.shape,p.shape,a,o,r,i);let b,x;if(null!=c&&(b=oo(c,"bias","fused conv2d"),[b]=Gs(b,d),"NHWC"===s?$i(y.outShape,b.shape):(We(b.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(b.shape.length,"."))),We(0===b.shape.length||b.shape[0]===y.outChannels||1===b.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(b.shape,") is not ")+"compatible with the number of output channels "+"(".concat(y.outChannels,")"))))),null!=u){const e=u.shape;if(We(e.length<=1||3===e.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(e.length,"."))),1===e.length)We(1===e[0]||e[0]===y.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(e,") is not compatible with the number of output ")+"channels (".concat(y.outChannels,").")));else if(3===e.length)try{$i(e,y.outShape)}catch(S){const t="Error in fused conv2d: PReLU activation weights (".concat(e,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(y.outShape,").");throw Error(t)}x=oo(u,"prelu weights","fused conv2d")}const v=(e,t)=>{We("NHWC"===s,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(s," but only NHWC is currently supported.")));const[n,i,c,u]=t,h=np(e,c,l);We(yl(o),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")));const d=[Xl(i.shape,h,n,a,r),tp(i,h,n.shape,a,r)];if(null!=u){const e=ap(u,h);d.push(e)}return d},w={x:f,filter:p,bias:b,preluActivationWeights:x},k={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:h};if(null==c){const e=Li(((e,t,n)=>{let a=Zs.runKernel(Mr,w,k);return n([t,e,a]),m&&(a=kl(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}}));return e(f,p)}{const e=Li(((e,t,n,a)=>{let r=Zs.runKernel(Mr,w,k);return a([t,e,r,n]),m&&(r=kl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(f,p,b)}}});const ip=lo({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=e;3===e.rank&&(i=kl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=kl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:i,dy:c},u={strides:a,pad:r,dimRoundingMode:o,dilations:s,filterShape:n};return Zs.runKernel(mn,l,u)}});const cp=lo({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=t,c=!1;3===t.rank&&(c=!0,i=kl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:i,filter:n},u={strides:a,pad:r,dimRoundingMode:o,dilations:s,inputShape:e},h=Zs.runKernel(gn,l,u);return c?kl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const lp=lo({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}=e;if(!1===sp(Zs.state.gradientDepth,l)){let e=su(t,n,a,r,s,o,i);return null!=c&&(e=Ri(e,c)),rp(e,l,u,h)}const d=oo(t,"x","depthwiseConv2d","float32"),p=oo(n,"filter","depthwiseConv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=kl(d,[1,d.shape[0],d.shape[1],d.shape[2]])),We(4===f.rank,(()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(f.rank,"."))),We(4===p.rank,(()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(p.rank,"."))),We(f.shape[3]===p.shape[2],(()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(f.shape[3],") must match the inChannels dimension in ")+"filter ".concat(p.shape[2],"."))),null==o&&(o=[1,1]),We(bl(a,o),(()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(o,"'"))),wl("fused depthwiseConv2d",r,i);const g=ul(f.shape,p.shape,a,o,r,i,!0);let y,b;null!=c&&(y=oo(c,"bias","fused conv2d"),[y]=Gs(y,d),$i(g.outShape,y.shape)),null!=u&&(b=oo(u,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{We(yl(o),(()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(o,"'")));const[n,s,c,u]=t,h=np(e,c,l),d=cp(s.shape,h,n,a,r,o,i),p=ip(s,h,n.shape,a,r,o,i);if(null!=u){return[d,p,ap(y,h)]}return[d,p]},v={x:f,filter:p,bias:y,preluActivationWeights:b},w={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:h};if(null==c){const e=Li(((e,t,n)=>{let a=Zs.runKernel(Lr,v,w);return n([t,e,a]),m&&(a=kl(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(f,p)}{const e=Li(((e,t,n,a)=>{let r=Zs.runKernel(Lr,v,w);return a([t,e,r,n]),m&&(r=kl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(f,p,y)}}});const up=lo({fusedMatMul_:function(e){let{a:t,b:n,transposeA:a=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:c=.2}=e;if(!1===sp(Zs.state.gradientDepth,o)){let e=Tl(t,n,a,r);return null!=s&&(e=Ri(e,s)),rp(e,o,i,c)}let l=oo(t,"a","fused matMul"),u=oo(n,"b","fused matMul");[l,u]=Gs(l,u);const h=a?l.shape[l.rank-2]:l.shape[l.rank-1],d=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=a?l.shape[l.rank-1]:l.shape[l.rank-2],f=r?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),g=u.shape.slice(0,-2),y=Ge(m),b=Ge(g);We(h===d,(()=>"Error in fused matMul: inner shapes (".concat(h,") and (")+"".concat(d,") of Tensors with shapes ").concat(l.shape," and ")+"".concat(u.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const x=$i(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,f]),v=kl(l,a?[y,h,p]:[y,p,h]),w=kl(u,r?[b,f,d]:[b,d,f]);let k,S;null!=s&&(k=oo(s,"bias","fused matMul"),[k]=Gs(k,l),$i(x,k.shape)),null!=i&&(S=oo(i,"prelu weights","fused matMul"));const N=(e,t)=>{const[n,i,c,l]=t,u=np(kl(e,c.shape),c,o);let h,d;if(a||r?!a&&r?(h=Tl(u,i,!1,!1),d=Tl(u,n,!0,!1)):a&&!r?(h=Tl(i,u,!1,!0),d=Tl(n,u,!1,!1)):(h=Tl(i,u,!0,!0),d=Tl(u,n,!0,!0)):(h=Tl(u,i,!1,!0),d=Tl(n,u,!0,!1)),null!=s){return[h,d,ap(l,u)]}return[h,d]},I={a:v,b:w,bias:k,preluActivationWeights:S},T={transposeA:a,transposeB:r,activation:o,leakyreluAlpha:c};if(null==s){const e=Li(((e,t,n)=>{const a=Zs.runKernel(Or,I,T);return n([e,t,a]),{value:kl(a,x),gradFunc:N}}));return e(v,w)}{const e=Li(((e,t,n,a)=>{const r=Zs.runKernel(Or,I,T);return a([e,t,r,n]),{value:kl(r,x),gradFunc:N}}));return e(v,w,k)}}});const hp=lo({hammingWindow_:function(e){return $d(e,.54,.46)}});const dp=lo({hannWindow_:function(e){return $d(e,.5,.5)}});const pp=lo({frame_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const o=[];for(;s+t<=e.size;)o.push(El(e,s,t)),s+=n;if(a)for(;s<e.size;){const a=s+t-e.size,i=Il([El(e,s,t-a),ji([a],r)]);o.push(i),s+=n}return 0===o.length?Ed([],[0,t]):kl(Il(o),[o.length,t])}});const fp=lo({stft_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:dp;null==a&&(a=Jd(t));const s=pp(e,t,n),o=Fi(s,r(t));return vd(o,a)}});const mp=lo({cropAndResize_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=oo(e,"image","cropAndResize"),i=oo(t,"boxes","cropAndResize","float32"),c=oo(n,"boxInd","cropAndResize","int32"),l=i.shape[0];We(4===o.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),We(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(l,",4] ")+"but had shape ".concat(i.shape,"."))),We(1===c.rank&&c.shape[0]===l,(()=>"Error in cropAndResize: boxInd must be have size [".concat(l,"] ")+"but had shape ".concat(i.shape,"."))),We(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),We(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),We("bilinear"===r||"nearest"===r,(()=>"method must be bilinear or nearest, but was ".concat(r)));const u={image:o,boxes:i,boxInd:c},h={method:r,extrapolationValue:s,cropSize:a};return Zs.runKernel(hn,u,h)}});const gp=lo({flipLeftRight_:function(e){const t=oo(e,"image","flipLeftRight","float32");We(4===t.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(t.rank,".")));const n={image:t};return Zs.runKernel(Dn,n,{})}});const yp=lo({grayscaleToRGB_:function(e){const t=oo(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];We(t.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),We(1===a,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,".")));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Du(t,r)}});const bp=lo({rgbToGrayscale_:function(e){const t=oo(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];We(t.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),We(3===a,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,".")));const r=t.dtype,s=Ti(t,"float32"),o=Cd([.2989,.587,.114]);let i;switch(t.rank){case 2:i=du("ij,j->i",s,o);break;case 3:i=du("ijk,k->ij",s,o);break;case 4:i=du("ijkl,l->ijk",s,o);break;case 5:i=du("ijklm,m->ijkl",s,o);break;case 6:i=du("ijklmn,n->ijklm",s,o);break;default:throw new Error("Not a valid tensor rank.")}return i=_u(i,-1),Ti(i,r)}});const xp=lo({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=oo(e,"image","rotateWithOffset","float32");We(4===r.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(r.rank,".")));const s={image:r},o={radians:t,fillValue:n,center:a};return Zs.runKernel(Dr,s,o)}});function vp(e,t,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),We(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),We(2===e.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(e.rank,"'"))),We(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(e.shape[1]))),We(1===t.rank,(()=>"scores must be a 1D tensor")),We(t.shape[0]===o,(()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(t.shape[0]))),We(0<=s&&s<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(s,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}const wp=lo({nonMaxSuppression_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=oo(e,"boxes","nonMaxSuppression","float32"),o=oo(t,"scores","nonMaxSuppression","float32"),i=vp(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return Zs.runKernel(va,{boxes:s,scores:o},c)}});function kp(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,s=0,o=!1;for(;a<r;){s=a+(r-a>>>1);const i=n(t,e[s]);i>0?a=s+1:(r=s,o=!i)}return o?a:-a-1}(e,t,n||Sp)}(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function Sp(e,t){return e>t?1:e<t?-1:0}function Np(e,t,n,a,r){return Cp(e,t,n,a,r,0)}function Ip(e,t,n,a,r,s){return Cp(e,t,n,a,r,0,!1,s,!0)}function Tp(e,t,n,a,r,s){return Cp(e,t,n,a,r,s,!0)}function Cp(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const l=[];for(let g=0;g<t.length;g++)t[g]>r&&l.push({score:t[g],boxIndex:g,suppressBeginIndex:0});l.sort(Ap);const u=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=t;if(n<r)break;let i=!1;for(let c=h.length-1;c>=o;--c){const n=Ep(e,s,h[c]);if(n>=a){i=!0;break}if(t.score=t.score*Rp(a,u,n),t.score<=r)break}t.suppressBeginIndex=h.length,i||(t.score===n?(h.push(s),d.push(t.score)):t.score>r&&kp(l,t,Ap))}const p=h.length,f=n-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return o&&(m.selectedScores=d),c&&(m.validOutputs=p),m}function Ep(e,t,n){const a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),o=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),l=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(i-s)*(c-o),f=(h-l)*(d-u);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(o,u),y=Math.min(i,h),b=Math.min(c,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function Rp(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function Ap(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const _p=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=oo(e,"boxes","nonMaxSuppressionAsync"),o=oo(t,"scores","nonMaxSuppressionAsync"),i=vp(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([s.data(),o.data()]),l=c[0],u=c[1],{selectedIndices:h}=Np(l,u,n,a,r);return s!==e&&s.dispose(),o!==t&&o.dispose(),Cd(h,"int32")};const Fp=lo({nonMaxSuppressionWithScore_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=oo(e,"boxes","nonMaxSuppression"),i=oo(t,"scores","nonMaxSuppression"),c=vp(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const l={boxes:o,scores:i},u={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s},h=Zs.runKernel(ka,l,u);return{selectedIndices:h[0],selectedScores:h[1]}}});const Dp=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=oo(e,"boxes","nonMaxSuppressionAsync"),i=oo(t,"scores","nonMaxSuppressionAsync"),c=vp(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Tp(u,h,n,a,r,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Cd(d,"int32"),selectedScores:Cd(p)}};const Op=lo({nonMaxSuppressionPadded_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=oo(e,"boxes","nonMaxSuppression"),i=oo(t,"scores","nonMaxSuppression"),c=vp(o,i,n,a,r,null),l={boxes:o,scores:i},u={maxOutputSize:c.maxOutputSize,iouThreshold:c.iouThreshold,scoreThreshold:c.scoreThreshold,padToMaxOutputSize:s},h=Zs.runKernel(wa,l,u);return{selectedIndices:h[0],validOutputs:h[1]}}});const Mp=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=oo(e,"boxes","nonMaxSuppressionAsync"),i=oo(t,"scores","nonMaxSuppressionAsync"),c=vp(o,i,n,a,r,null),l=c.maxOutputSize,u=c.iouThreshold,h=c.scoreThreshold,[d,p]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Ip(d,p,l,u,h,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Cd(f,"int32"),validOutputs:zi(m,"int32")}};const Lp=lo({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=oo(e,"images","resizeBilinear");We(3===r.rank||4===r.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),We(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(t,"."))),We(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=r,o=!1;3===r.rank&&(o=!0,s=kl(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,i={images:s},c={alignCorners:n,halfPixelCenters:a,size:t},l=Zs.runKernel(Wa,i,c);return o?kl(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const zp=lo({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=oo(e,"images","resizeNearestNeighbor");We(3===r.rank||4===r.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),We(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(t,"."))),We("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),We(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=r,o=!1;3===r.rank&&(o=!0,s=kl(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,i={images:s},c={alignCorners:n,halfPixelCenters:a,size:t},l=Zs.runKernel(Pa,i,c);return o?kl(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const Pp=lo({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=oo(e,"image","threshold"),s=r.shape[0]*r.shape[1];let o,i,c,l,u=Fi(Cd([a]),255);if(We(3===r.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(r.rank,"."))),We(3===r.shape[2]||1===r.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(r.shape[2],"."))),We("int32"===r.dtype||"float32"===r.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(r.dtype,"."))),We("otsu"===t||"binary"===t,(()=>"Method must be binary or otsu, but was ".concat(t))),3===r.shape[2]){[o,i,c]=xd(r,[1,1,1],-1);const e=Fi(o,.2989),t=Fi(i,.587),n=Fi(c,.114);l=Ri(Ri(e,t),n)}else l=e;if("otsu"===t){u=function(e,t){let n,a,r,s,o,i,c=Cd([-1]),l=Cd([0]),u=Cd([0]);for(let h=0;h<e.size-1;h++){n=El(e,0,h+1),a=El(e,h+1),o=_i(Tu(n),t),i=_i(Tu(a),t);const d=Tu(Fi(n,Kh(0,n.size)));r=_i(d,Tu(n));const p=ji(a.shape,n.size),f=Ri(Kh(0,a.size),p),m=Fi(a,f);s=_i(Tu(m),Tu(a));const g=Xi(r,s),y=Xi(r,s),b=Fi(o,i);u=Fi(Fi(b,g),y);const x=zu(u,l);l=lu(x,u,l),c=lu(x,Cd([h]),c)}return c}(Ll(Ti(ad(l),"int32"),po([]),256),s)}const h=n?ju(l,u):zu(l,u);return Ti(Fi(h,255),"int32")}});const Bp=lo({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const o=oo(e,"image","transform","float32"),i=oo(t,"transforms","transform","float32");We(4===o.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),We(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),We(null==s||2===s.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(s,".")));const c={image:o,transforms:i},l={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return Zs.runKernel(Ir,c,l)}});const Wp=lo({bandPart_:function(e,t,n){const a=oo(e,"a","bandPart");We(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const r=a.shape,[s,o]=a.shape.slice(-2);let i,c;"number"===typeof t?(We(t%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(t,"."))),We(t<=s,(()=>"bandPart(): numLower (".concat(t,")")+" must not be greater than the number of rows (".concat(s,")."))),i=oo(t<0?s:t,"numLower","bandPart")):(We("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=lu(Hu(t,0),s,mh(t,s))),"number"===typeof n?(We(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),We(n<=o,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,")."))),c=oo(n<0?o:n,"numUpper","bandPart")):(We("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),c=lu(Hu(n,0),o,mh(n,o)));const l=kl(Kh(0,s,1,"int32"),[-1,1]),u=Kh(0,o,1,"int32"),h=Xi(l,u),d=th(ju(h,i),Pu(h,Qu(c))),p=dh([s,o],a.dtype);return kl(Sd(Wd(kl(a,[-1,s,o])).map((e=>lu(d,e,p)))),r)}});const Vp=lo({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,We(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)We(e[t].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(e[t].shape[0]," vs. ").concat(n,")")))}else t=!0,e=xd(e,e.shape[0],0).map((e=>kd(e,[0])));We(e.length<=e[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(e.length,") exceeds ")+"number of dimensions (".concat(e[0].shape[0],").")));const n=[],a=e;for(let r=0;r<e.length;++r)n.push(Zs.tidy((()=>{let e=a[r];if(r>0)for(let t=0;t<r;++t){const a=Fi(Tu(Fi(n[t],e)),n[t]);e=Xi(e,a)}return _i(e,Eu(e,"euclidean"))})));return t?Sd(n,0):n}});function Up(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Zs.tidy((()=>{We(2===e.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(e.shape.length,"D Tensor.")));const n=e.shape[0],a=e.shape[1];let r=Ou(n),s=Ci(e);const o=Ed([[1]],[1,1]);let i=Ci(o);const c=n>=a?a:n;for(let e=0;e<c;++e){const t=s,c=i,l=r;[i,s,r]=Zs.tidy((()=>{const t=El(s,[e,e],[n-e,1]),c=Eu(t),l=El(s,[e,e],[1,1]),u=lu(zu(l,0),Ed([[-1]]),Ed([[1]])),h=Xi(l,Fi(u,c)),d=_i(t,h);i=1===d.shape[0]?Ci(o):Il([o,El(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Qu(_i(Tl(u,h),c)),f=El(s,[e,0],[n-e,a]),m=Fi(p,i),g=qd(i);if(0===e)s=Xi(f,Tl(m,Tl(g,f)));else{const t=Xi(f,Tl(m,Tl(g,f)));s=Il([El(s,[0,0],[e,a]),t],0)}const y=qd(m),b=El(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=Xi(b,Tl(Tl(b,i),y));else{const t=Xi(b,Tl(Tl(b,i),y));r=Il([El(r,[0,0],[n,e]),t],1)}return[i,s,r]})),xo([t,c,l])}return!t&&n>a&&(r=El(r,[0,0],[n,a]),s=El(s,[0,0],[a,a])),[r,s]}))}const Gp=lo({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(We(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(e.rank))),2===e.rank)return Up(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=Wd(kl(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];a.forEach((e=>{const[n,a]=Up(e,t);r.push(n),s.push(a)}));return[kl(Sd(r,0),e.shape),kl(Sd(s,0),e.shape)]}}});var Hp;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Hp||(Hp={}));const jp=lo({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Hp.SUM_BY_NONZERO_WEIGHTS;const a=oo(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=oo(t,"weights","computeWeightedLoss"));const s=null==r?a:Fi(a,r);if(n===Hp.NONE)return s;if(n===Hp.SUM)return Tu(s);if(n===Hp.MEAN){if(null==r)return hh(s);{const e=a.size/r.size,t=_i(Tu(s),Tu(r));return e>1?_i(t,zi(e)):t}}if(n===Hp.SUM_BY_NONZERO_WEIGHTS){if(null==r)return _i(Tu(s),zi(a.size));{const e=Fi(r,ph(a.shape)),t=Ti(Tu(wh(e,zi(0))),"float32");return _i(Tu(s),t)}}throw Error("Unknown reduction: ".concat(n))}});const qp=lo({absoluteDifference_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Hp.SUM_BY_NONZERO_WEIGHTS;const r=oo(e,"labels","absoluteDifference"),s=oo(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=oo(n,"weights","absoluteDifference")),Ve(r.shape,s.shape,"Error in absoluteDifference: ");const i=Qi(Xi(r,s));return jp(i,o,a)}});const Kp=lo({cosineDistance_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Hp.SUM_BY_NONZERO_WEIGHTS;const s=oo(e,"labels","cosineDistance"),o=oo(t,"predictions","cosineDistance");let i=null;null!=a&&(i=oo(a,"weights","cosineDistance")),Ve(s.shape,o.shape,"Error in cosineDistance: ");const c=zi(1),l=Xi(c,Tu(Fi(s,o),n,!0));return jp(l,i,r)}});const Xp=lo({hingeLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Hp.SUM_BY_NONZERO_WEIGHTS,r=oo(e,"labels","hingeLoss");const s=oo(t,"predictions","hingeLoss");let o=null;null!=n&&(o=oo(n,"weights","hingeLoss")),Ve(r.shape,s.shape,"Error in hingeLoss: ");const i=zi(1);r=Xi(Fi(zi(2),r),i);const c=Qh(Xi(i,Fi(r,s)));return jp(c,o,a)}});const Yp=lo({huberLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Hp.SUM_BY_NONZERO_WEIGHTS;const s=oo(e,"labels","huberLoss"),o=oo(t,"predictions","huberLoss");let i=null;null!=n&&(i=oo(n,"weights","huberLoss")),Ve(s.shape,o.shape,"Error in huberLoss: ");const c=zi(a),l=Qi(Xi(o,s)),u=mh(l,c),h=Xi(l,u),d=Ri(Fi(zi(.5),Oi(u)),Fi(c,h));return jp(d,i,r)}});const Qp=lo({logLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Hp.SUM_BY_NONZERO_WEIGHTS;const s=oo(e,"labels","logLoss"),o=oo(t,"predictions","logLoss");let i=null;null!=n&&(i=oo(n,"weights","logLoss")),Ve(s.shape,o.shape,"Error in logLoss: ");const c=zi(1),l=zi(a),u=Qu(Fi(s,Xu(Ri(o,l)))),h=Fi(Xi(c,s),Xu(Ri(Xi(c,o),l))),d=Xi(u,h);return jp(d,i,r)}});const Zp=lo({meanSquaredError_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Hp.SUM_BY_NONZERO_WEIGHTS;const r=oo(e,"labels","meanSquaredError"),s=oo(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=oo(n,"weights","meanSquaredError")),Ve(r.shape,s.shape,"Error in meanSquaredError: ");const i=wd(r,s);return jp(i,o,a)}});const Jp=lo({sigmoidCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Hp.SUM_BY_NONZERO_WEIGHTS,s=oo(e,"multiClassLabels","sigmoidCrossEntropy");const o=oo(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=oo(n,"weights","sigmoidCrossEntropy")),Ve(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=zi(a),t=zi(1),n=zi(.5);s=Ri(Fi(s,Xi(t,e)),Fi(n,e))}const c=function(e,t){const n=oo(e,"labels","sigmoidCrossEntropyWithLogits"),a=oo(t,"logits","sigmoidCrossEntropyWithLogits");Ve(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Qh(a),s=Fi(a,n),o=Yu(Au(Qu(Qi(a))));return Ri(Xi(r,s),o)}(s,o);return jp(c,i,r)}});const $p=lo({softmaxCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Hp.SUM_BY_NONZERO_WEIGHTS,s=oo(e,"onehotLabels","softmaxCrossEntropy");const o=oo(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=oo(n,"weights","softmaxCrossEntropy")),Ve(s.shape,o.shape,"Error in softmaxCrossEntropy: "),a>0){const e=zi(a),t=zi(1),n=zi(s.shape[1]);s=Ri(Fi(s,Xi(t,e)),_i(e,n))}const c=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(t.rank," ")+"and dim was ".concat(n));const a=Li(((e,t,a)=>{const r=eh(t,[n],!0),s=Xi(Ti(t,"float32"),r);a([e,s]);const o=Qu(Fi(s,e));return{value:Tu(o,[n]),gradFunc:(e,t)=>{const[a,r]=t,s=xu(e.shape,[n]);return[Fi(kl(e,s),Xi(Ti(a,"float32"),Au(r))),Fi(kl(e,s),Xi(Au(r),Ti(a,"float32")))]}}}));return a(e,t)}(s,o);return jp(c,i,r)}});const ef=lo({sparseFillEmptyRows_:function(e,t,n,a){const r=oo(e,"indices","sparseFillEmptyRows","int32"),s=oo(t,"values","sparseFillEmptyRows"),o=oo(n,"denseShape","sparseFillEmptyRows","int32"),i=oo(a,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==r.rank)throw new Error("Indices should be Tensor2D but received shape\n        ".concat(r.shape));if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape ".concat(s.shape));if(1!==o.rank)throw new Error("Dense shape should be Tensor1D but received shape ".concat(o.shape));if(0!==i.rank)throw new Error("Default value should be a scalar but received shape ".concat(i.shape));const c={indices:r,values:s,denseShape:o,defaultValue:i},l=Zs.runKernel(cr,c);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}});const tf=lo({sparseReshape_:function(e,t,n){const a=oo(e,"inputIndices","sparseReshape","int32"),r=oo(t,"inputShape","sparseReshape","int32"),s=oo(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==r.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(r.shape));if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(s.shape));const o={inputIndices:a,inputShape:r,newShape:s},i=Zs.runKernel(lr,o);return{outputIndices:i[0],outputShape:i[1]}}});const nf=lo({sparseSegmentMean_:function(e,t,n){const a=oo(e,"data","sparseSegmentMean"),r=oo(t,"indices","sparseSegmentMean","int32"),s=oo(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n          ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return Zs.runKernel(ur,o)}});const af=lo({sparseSegmentSum_:function(e,t,n){const a=oo(e,"data","sparseSegmentSum"),r=oo(t,"indices","sparseSegmentSum","int32"),s=oo(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n         ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return Zs.runKernel(hr,o)}});const rf=lo({stringNGrams_:function(e,t,n,a,r,s,o,i){const c=oo(e,"data","stringNGrams","string");if("string"!==c.dtype)throw new Error("Data must be of datatype string");if(1!==c.shape.length)throw new Error("Data must be a vector, saw: ".concat(c.shape));const l=oo(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const u={separator:n,nGramWidths:a,leftPad:r,rightPad:s,padWidth:o,preserveShortSequences:i},h={data:c,dataSplits:l},d=Zs.runKernel(yr,h,u);return{nGrams:d[0],nGramsSplits:d[1]}}});const sf=lo({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=oo(e,"input","stringSplit","string"),r=oo(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error("Input should be Tensor1D but received shape ".concat(a.shape));if(0!==r.rank)throw new Error("Delimiter should be a scalar but received shape ".concat(r.shape));const s={skipEmpty:n},o={input:a,delimiter:r},i=Zs.runKernel(br,o,s);return{indices:i[0],values:i[1],shape:i[2]}}});const of=lo({stringToHashBucketFast_:function(e,t){const n=oo(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return Zs.runKernel(xr,r,a)}});const cf=lo({staticRegexReplace_:function(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=oo(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:a};return Zs.runKernel(mr,{x:r},s)}}),lf={fft:gd,ifft:yd,rfft:vd,irfft:bd},uf={hammingWindow:hp,hannWindow:dp,frame:pp,stft:fp},hf={flipLeftRight:gp,grayscaleToRGB:yp,resizeNearestNeighbor:zp,resizeBilinear:Lp,rgbToGrayscale:bp,rotateWithOffset:xp,cropAndResize:mp,nonMaxSuppression:wp,nonMaxSuppressionAsync:_p,nonMaxSuppressionWithScore:Fp,nonMaxSuppressionWithScoreAsync:Dp,nonMaxSuppressionPadded:Op,nonMaxSuppressionPaddedAsync:Mp,threshold:Pp,transform:Bp},df={bandPart:Wp,gramSchmidt:Vp,qr:Gp},pf={absoluteDifference:qp,computeWeightedLoss:jp,cosineDistance:Kp,hingeLoss:Xp,huberLoss:Yp,logLoss:Qp,meanSquaredError:Zp,sigmoidCrossEntropy:Jp,softmaxCrossEntropy:$p},ff={sparseFillEmptyRows:ef,sparseReshape:tf,sparseSegmentMean:nf,sparseSegmentSum:af},mf={stringNGrams:rf,stringSplit:sf,stringToHashBucketFast:of,staticRegexReplace:cf};const gf=class{static sgd(e){return new nc(e)}static momentum(e,t){return new ac(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new rc(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Yi(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Hi(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new tc(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new qi(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},yf="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function bf(){return new Promise((e=>yf((()=>e()))))}function xf(e,t){const n=e[0].length;e.forEach(((e,t)=>{We(e.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(t,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),We(t>=0&&t<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=e[0];e.forEach(((e,r)=>{for(let s=0;s<n;s++)We(s===t||e[s]===a[s],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(r,"] (").concat(e,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(r,".")))}))}function vf(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var wf;function kf(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.rank = ").concat(e+n.length,", but shape.rank = ").concat(a.length));for(let r=1;r<n.length;++r){const s=n[r],o=a[a.length-n.length+r],i=a[o];if(s>=0)if(i>=0){if(i!==s)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.shape[").concat(r+e,"] = ").concat(s," but shape[").concat(r+e,"] = ").concat(i))}else a[o]=s}return a}function Sf(e){const t={FIRST_DIM_SIZE:wf.FIRST_DIM_SIZE,VALUE_ROWIDS:wf.VALUE_ROWIDS,ROW_LENGTHS:wf.ROW_LENGTHS,ROW_SPLITS:wf.ROW_SPLITS,ROW_LIMITS:wf.ROW_LIMITS,ROW_STARTS:wf.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function Nf(e){return 0===e.length?0:e[0]===wf.FIRST_DIM_SIZE?e.length-1:e.length}function If(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error("defaultValue.shape=".concat(e," and ragged tensor flatValues.shape=").concat(t,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let r=0;r<Math.min(n,a-1);++r){const n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(e,", and ragged tensor input flatValues.shape=").concat(t," are incompatible: defaultValue.shape[").concat(r-e.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(r-e.length,"] = ").concat(a))}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(wf||(wf={}));const Tf=30;function Cf(e){return e<=Tf?e:ot(e,Math.floor(Math.sqrt(e)))}function Ef(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function Rf(e,t,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Af(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{const a=[],r=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?r.push(n):a.push(n);n.push(...a),n.push(0),n.push(...r)}return n}function _f(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?a?r.push(t[s-1]*e[s]):r.push(e[s]/t[s-1]):r.push(e[s]);return r}function Ff(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function Df(e,t,n){const a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}function Of(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(t.shape[a-1]," vs. ").concat(n));if(0===Ge(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(e.shape,"."));const r=t.shape,s=r[r.length-1];let o=1;for(let h=0;h<r.length-1;++h)o*=r[h];const i=e.shape,c=r.slice();c.pop();let l=1;for(let h=s;h<n;++h)l*=i[h],c.push(i[h]);const u=[...it(e.shape).map((e=>e/l)),1].slice(0,s);return[c,o,l,u]}const Mf=1.7580993408473768,Lf=1.0507009873554805,zf=.3275911,Pf=.254829592,Bf=-.284496736,Wf=1.421413741,Vf=-1.453152027,Uf=1.061405429;function Gf(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(e.length,", imag: ").concat(t.length,"."));const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function Hf(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function jf(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function qf(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Kf(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Xf(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function Yf(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function Qf(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const Zf="->",Jf=/->/g,$f=",",em="...";function tm(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Jf,"").length)/Zf.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(Zf,'").'));const[a,r]=e.split(Zf);We(-1===a.indexOf(em),(()=>'The ellipsis notation ("'.concat(em,'") is not supported yet.')));const s=a.split($f),o=s.length;if(t!==o)throw new Error("Expected ".concat(o," input tensors, received ").concat(t));if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<r.length;++h){const e=r[h];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error("Output subscripts contain the label ".concat(e," ")+"not present in the input subscripts.");-1===i.indexOf(e)&&i.push(e)}for(let h=0;h<a.length;++h){const e=a[h];-1===i.indexOf(e)&&e!==$f&&i.push(e)}const c=new Array(s.length);for(let h=0;h<o;++h){if(new Set(s[h].split("")).size!==s[h].length)throw new Error("Found duplicate axes in input component ".concat(s[h],". ")+"Support for duplicate axes in input is not implemented yet.");c[h]=[];for(let e=0;e<s[h].length;++e)c[h].push(i.indexOf(s[h][e]))}const l=i.length,u=[];for(let h=r.length;h<l;++h)u.push(h);return{allDims:i,summedDims:u,idDims:c}}function nm(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const a=[];for(let r=0;r<e;++r)-1===n[r]&&a.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function am(e,t,n){const a=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===a[t[r][n]]?a[t[r][n]]=e[n]:We(a[t[r][n]]===e[n],(()=>"Expected dimension ".concat(a[t[r][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(e),", ")+"but got dimension ".concat(e[n])))}}function rm(e,t){const n=e,a=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)a.push([]);const s=[];for(let o=0;o<n.length;++o){const e=om(t,n[o]);for(const t of e)-1===s.indexOf(t)&&(a[o].push(t),s.push(t))}return{path:n,steps:a}}function sm(e){return e.every(((e,t)=>e===t))}function om(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function im(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof t)We(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);We(r<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const a=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-a}We(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function cm(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(e)}function lm(e,t){return"indices(".concat(e,", 0) is invalid: ").concat(t," < 0")}function um(e,t,n){return"indices(".concat(e,", 0) is invalid: ").concat(t," >= ").concat(n)}function hm(e,t){return"only one output dimension may be -1, not both ".concat(e," and ").concat(t)}function dm(e,t){return"size ".concat(e," must be non-negative, not ").concat(t)}function pm(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function fm(e,t){const n=Ge(e),a=Ge(t);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(e," outputShape= ").concat(t)}function mm(e,t){const n=Ge(e),a=Ge(t);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(e," outputShape=").concat(t)}function gm(){return"segment ids must be >= 0"}function ym(){return"segment ids are not increasing"}function bm(e,t){return"Segment id ".concat(e," out of range [0, ").concat(t,"), possibly because segmentIds input is not sorted.")}function xm(e,t,n){return"Bad: indices[".concat(e,"] == ").concat(t," out of range [0, ").concat(n,")")}function vm(e,t){let n,a=!1;for(e<=Tf?(n=e,a=!0):n=ot(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=ot(e,n+1);return n}function wm(e,t,n){const a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function km(e,t,n,a){const r=t.shape.length,s=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error("Expect batchDims in the range of [-".concat(r,", ").concat(r,"], but got ").concat(a));if(a<0&&(a+=r),a>s)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(s,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let h=0;h<a;++h)if(e.shape[h]!==t.shape[h])throw new Error("x.shape[".concat(h,"]: ").concat(e.shape[h]," should be equal to indices.shape[").concat(h,"]: ").concat(t.shape[h],"."));const o=e.shape[n],i=[];let c=1,l=1,u=1;for(let h=0;h<a;++h)i.push(e.shape[h]),c*=e.shape[h];for(let h=a;h<n;h++)i.push(e.shape[h]),l*=e.shape[h];for(let h=a;h<r;h++)i.push(t.shape[h]);for(let h=n+1;h<s;h++)i.push(e.shape[h]),u*=e.shape[h];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:o,outputShape:i}}function Sm(e){try{return e.map((e=>ds(e)))}catch(hV){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(hV))}}function Nm(e){return e.map((e=>hs(e)))}!function(){for(const e of sc)Ui(e)}();const Im={kernelName:It,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fi(e,Nd(Ti(n,"float32"),-1))}}},Tm={kernelName:Tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Oi(Ti(n,"float32")),a=Di(Xi(zi(1),t));return Qu(_i(e,a))}}}},Cm={kernelName:Ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Di(Xi(Oi(Ti(n,"float32")),1));return _i(e,t)}}}},Em={kernelName:Et,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=$i(n.shape,a.shape);return{a:()=>{let t=e;const a=Ji(n.shape,r);return a.length>0&&(t=Tu(t,a)),kl(t,n.shape)},b:()=>{let t=e;const n=Ji(a.shape,r);return n.length>0&&(t=Tu(t,n)),kl(t,a.shape)}}}},Rm={kernelName:Rt,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}},Am={kernelName:Ft,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mi(n)}}},_m={kernelName:Dt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mi(n)}}},Fm={kernelName:Ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_i(e,Di(Xi(zi(1),Oi(Ti(n,"float32")))))}}},Dm={kernelName:Mt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Di(Ri(zi(1),Oi(Ti(n,"float32"))));return _i(e,t)}}}},Om={kernelName:Pt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=$i(n.shape,a.shape);return{a:()=>{const t=Ri(Oi(n),Oi(a));let s=Fi(e,_i(a,t));const o=Ji(n.shape,r);return o.length>0&&(s=Tu(s,o)),kl(s,n.shape)},b:()=>{const t=Ri(Oi(n),Oi(a));let s=Qu(Fi(e,_i(n,t)));const o=Ji(a.shape,r);return o.length>0&&(s=Tu(s,o)),kl(s,a.shape)}}}},Mm={kernelName:Lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_i(e,Ri(Oi(Ti(n,"float32")),1))}}},Lm={kernelName:zt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_i(e,Xi(zi(1),Oi(Ti(n,"float32"))))}}};const zm=lo({avgPool3dGrad_:function(e,t,n,a,r,s){const o=oo(e,"dy","avgPool3dGrad"),i=oo(t,"input","avgPool3dGrad");let c=o,l=i,u=!1;4===i.rank&&(u=!0,c=kl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=kl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),We(5===c.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(c.rank,"."))),We(5===l.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(l.rank,"."))),wl("avgPool3dGrad",r,s);const h={dy:c,input:l},d={filterSize:n,strides:a,pad:r,dimRoundingMode:s},p=Zs.runKernel(Ut,h,d);return u?kl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Pm={kernelName:Vt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o,dimRoundingMode:i}=n;return{x:()=>zm(e,a,r,s,o,i)}}};const Bm=lo({avgPoolGrad_:function(e,t,n,a,r){const s=oo(e,"dy","avgPoolGrad"),o=oo(t,"input","avgPoolGrad");We(o.rank===s.rank,(()=>"Rank of input (".concat(o.rank,") does not match rank of dy (").concat(s.rank,")")));let i=o,c=s,l=!1;3===o.rank&&(l=!0,i=kl(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=kl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),We(4===c.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,"."))),We(4===i.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,".")));const u={dy:c,input:i},h={filterSize:n,strides:a,pad:r},d=Zs.runKernel(Wt,u,h);return l?kl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Wm={kernelName:Bt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o}=n;return{x:()=>Bm(e,a,r,s,o)}}},Vm={kernelName:Gt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,r]=t,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>Tl(e,r,!1,!1),b:()=>Tl(e,a,!0,!1)}:s&&!o?{a:()=>Tl(r,e,!1,!0),b:()=>Tl(a,e,!1,!1)}:{a:()=>Tl(r,e,!0,!0),b:()=>Tl(e,a,!0,!0)}:{a:()=>Tl(e,r,!1,!0),b:()=>Tl(a,e,!0,!1)}}},Um={kernelName:Ht,gradFunc:(e,t,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>Ah(e,a,r)}}},Gm={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const a=n,r=a.inputShape,s=a.shape,o=Array.from(s);for(let c=r.length-1;c>=0;c--)if(r[c]===s[c])o[c]=1;else if(1!==r[c])throw new Error("broadcastTo(): [".concat(r,"] cannot be broadcast to [").concat(s,"]."));const i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>Tu(e,i,!0)}}},Hm={kernelName:Xt,gradFunc:e=>({x:()=>e.clone()})},jm={kernelName:Yt,gradFunc:e=>({x:()=>Mi(e)})},qm={kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>lu(th(Pu(a,r),ju(a,s)),e,Mi(e))}}},Km={kernelName:Jt,inputsToSave:["x"],gradFunc:Im.gradFunc},Xm={kernelName:$t,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map((e=>e.shape)),{axis:r}=n,s=Qe(r,t[0].shape)[0],o=a.map((e=>e[s]));return xd(e,o,s).map((e=>()=>e))}},Ym={kernelName:en,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{dilations:s,strides:o,pad:i,dataFormat:c}=n;return We(yl(s),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'"))),{x:()=>Xl(a.shape,e,r,o,i,c),filter:()=>tp(a,e,r.shape,o,i,c)}}},Qm={kernelName:nn,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{strides:s,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>ql(e,r,s,o,i,1,c),filter:()=>tp(e,a,r.shape,s,o,i,c)}}};const Zm=lo({conv3DBackpropFilter_:function(e,t,n,a,r){let s=e;4===e.rank&&(s=kl(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=kl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),We(5===s.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(s.shape,"."))),We(5===o.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(o.shape,"."))),We(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),We(s.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(s.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),We(o.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(o.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const i={x:s,dy:o},c={strides:a,pad:r,filterShape:n};return Zs.runKernel(rn,i,c)}}),Jm={kernelName:an,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s}=n;We(yl(a),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'")));const[o,i]=t;return{x:()=>Zl(o.shape,e,i,r,s),filter:()=>Zm(o,e,i.shape,r,s)}}},$m={kernelName:on,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fi(Qu(ld(Ti(n,"float32"))),e)}}},eg={kernelName:cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fi(ud(Ti(n,"float32")),e)}}},tg={kernelName:un,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r,exclusive:s,reverse:o}=n;return{x:()=>{const t=wu([r],a.rank);let n=nu(e,r,s,!o);return null!=t&&(n=qd(n,t)),n}}}},ng={kernelName:fn,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:o}=n,i=null==a?[1,1]:a;We(yl(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[c,l]=t;return We(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,"."))),We(4===l.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(l.rank,"."))),We(c.shape[3]===l.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(l.shape[2],"."))),We(bl(r,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(r," and dilations ")+"'".concat(i,"'."))),wl("depthwiseConv2d",s,o),{x:()=>cp(c.shape,e,l,r,s,i,o),filter:()=>ip(c,e,l.shape,r,s,i,o)}}},ag={kernelName:bn,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,s={x:a,filter:r,dy:e},o={x:a,filter:r,dy:e};return{x:()=>Zs.runKernel(xn,s,n),filter:()=>Zs.runKernel(vn,o,n)}}},rg={kernelName:Nn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>Zs.runKernel(In,a)}}},sg={kernelName:Tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=Fi(Au(Qu(Oi(n))),2/Math.sqrt(Math.PI));return{x:()=>Fi(e,a)}}},og={kernelName:En,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fi(e,n)}}},ig={kernelName:Rn,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>kl(e,n.shape)}}},cg={kernelName:An,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fi(e,Au(n))}}},lg={kernelName:On,gradFunc:e=>({x:()=>Mi(e)})},ug={kernelName:Mn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=$i(n.shape,a.shape);return{a:()=>{const t=_i(e,Ti(a,"float32")),s=Ji(n.shape,r);return s.length>0?kl(Tu(t,s),n.shape):t},b:()=>{let t=Fi(e,Ti(n,"float32"));const s=Ji(a.shape,r);s.length>0&&(t=kl(Tu(t,s),a.shape));const o=Oi(a);return Qu(_i(t,Ti(o,"float32")))}}}},hg={kernelName:Ln,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[r,s,o,i]=t,c=null==i?zi(1):i,l=Ji(s.shape,r.shape),u=[];if(1===s.rank){for(let e=0;e<r.shape.length-1;++e)u.push(r.shape[e]);u.push(1)}const h=Xi(r,s),d=Fi(e,c),p=rd(Ri(o,zi(a))),f=Fi(Fi(Fi(p,p),p),zi(-.5));return{x:()=>1===s.rank?kl(Fi(Fi(e,Du(kl(p,[1,1,1,s.shape[0]]),u)),c),r.shape):kl(Fi(Fi(e,p),c),r.shape),mean:()=>{let e=Fi(Fi(p,zi(-1)),d);return 1===s.rank&&(e=Tu(e,l)),kl(e,s.shape)},variance:()=>{let e=Fi(Fi(f,h),d);return 1===s.rank&&(e=Tu(e,l)),kl(e,s.shape)},scale:()=>{const t=Fi(h,p);let n=Fi(e,t);return 1===s.rank&&(n=Tu(n,l)),kl(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Tu(t,l)),kl(t,s.shape)}}}},dg={kernelName:zn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,r]=t,{axis:s,batchDims:o}=n,i=Qe(s,a.shape)[0],c=(e,t,n)=>()=>{const a=e.shape,r=t.size,o=a.slice(0,i),c=o.length,l=a.slice(s,a.length).slice(1),u=l.length,h=pg(0,c),d=pg(c+1,c+1+u),p=fg([o,[r],l]),f=kl(n,p),m=kl(t,[r]),g=fg([[c],h,d]),y=qd(f,g);let b=Bd(y,m,e.shape[i]);const x=ku(g);return b=qd(b,x),b};if(1===o){const t=a.shape[0],n=a.split(t,0);return{x:()=>{const t=Sd(n.map(((t,n)=>c(t,r.slice(n,1),e.slice(n,1))())));return t.reshape(a.shape)},indices:()=>r}}return{x:c(a,r,e),indices:()=>r}}};function pg(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function fg(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const mg={kernelName:Wn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Mi(n),b:()=>Mi(a)}}},gg={kernelName:Vn,gradFunc:e=>({x:()=>Ti(e,"float32")})},yg={kernelName:Hn,gradFunc:e=>({x:()=>Mi(e)})},bg={kernelName:jn,gradFunc:e=>({x:()=>Mi(e)})},xg={kernelName:qn,gradFunc:e=>({x:()=>Mi(e)})},vg={kernelName:Kn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:r}=n,s=zu(a,0);return{x:()=>lu(s,e,Fi(e,r))}}},wg={kernelName:Jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_i(e,Ri(n,1))}}},kg={kernelName:Zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_i(e,Ti(n,"float32"))}}},Sg={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;return{logits:()=>{const t=Au(a);return Xi(e,Fi(Tu(e,r,!0),t))}}}};const Ng=lo({localResponseNormalizationBackprop_:function(e,t,n){const a={x:e,y:t,dy:n},r={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return Zs.runKernel(aa,a,r)}}),Ig={kernelName:na,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{depthRadius:s,bias:o,alpha:i,beta:c}=n;return{x:()=>Ng(a,r,e,s,o,i,c)}}};function Tg(e,t,n,a){return t.rank<n.rank&&(t=kl(t,xu(t.shape,a))),e.rank<n.rank&&(e=kl(e,xu(e.shape,a))),{x:()=>Fi(e,Ti(cu(n,t),e.dtype))}}const Cg={kernelName:ra,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:r}=a,s=t[0],o=Tg(e,t[1],s,Qe(r,s.shape));return{x:()=>o.x()}}},Eg={kernelName:sa,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Fi(e,Ti(Pu(n,a),"float32")),b:()=>Fi(e,Ti(Hu(n,a),"float32"))}}};const Rg=lo({maxPool3dGrad_:function(e,t,n,a,r,s,o){const i=oo(e,"dy","maxPool3dGrad"),c=oo(t,"input","maxPool3dGrad"),l=oo(n,"output","maxPool3dGrad");let u=i,h=c,d=l,p=!1;4===c.rank&&(p=!0,u=kl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=kl(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),d=kl(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),We(5===u.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(u.rank,"."))),We(5===h.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(h.rank,"."))),We(5===d.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(d.rank,"."))),wl("maxPool3dGrad",s,o);const f={dy:u,input:h,output:d},m={filterSize:a,strides:r,pad:s,dimRoundingMode:o},g=Zs.runKernel(la,f,m);return p?kl(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Ag={kernelName:ca,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=n;return{x:()=>Rg(e,a,r,s,o,i,c)}}};const _g=lo({maxPoolGrad_:function(e,t,n,a,r,s,o){const i=oo(e,"dy","maxPoolGrad"),c=oo(t,"input","maxPoolGrad"),l=oo(n,"output","maxPoolGrad");We(c.rank===i.rank,(()=>"Rank of input (".concat(c.rank,") does not match rank of dy ")+"(".concat(i.rank,")"))),We(4===i.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,"."))),We(4===c.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,"."))),wl("maxPoolGrad",s,o);const u={dy:i,input:c,output:l},h={filterSize:a,strides:r,pad:s,dimRoundingMode:o};return Zs.runKernel(ia,u,h)}}),Fg={kernelName:oa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i}=n;return{x:()=>_g(e,a,r,s,o,i)}}},Dg={kernelName:fa,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>El(e,s,a.shape)}}},Og={kernelName:Ta,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>El(e,s,a.shape)}}},Mg={kernelName:Ca,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,r]=t,s=n,o=a,i=$i(s.shape,o.shape);return{a:()=>{const t=Ti(o,"float32");let n=Fi(e,Fi(t,Ki(s,Xi(t,zi(1)))));const a=Ji(s.shape,i);return a.length>0&&(n=Tu(n,a)),kl(n,s.shape)},b:()=>{const t=zu(s,0),n=lu(t,Xu(s),Mi(s));let a=Fi(e,Fi(r,n));const c=Ji(o.shape,i);return c.length>0&&(a=Tu(a,c)),kl(a,o.shape)}}}};function Lg(e,t,n){const a=e.shape.length,r=a-n.length,s=wu(n,a);let o=e;null!=s&&(o=qd(e,s));const i=o.shape.slice(),c=i.splice(a-n.length,n.length).reduce(((e,t)=>e*t),1);i.push(c);let l=function(e,t,n){const a=e.shape.slice();a[n]=1;const r=kl(t,a),s=tu(e,n,!0,!1),o=tu(e,n,!0,!0),i=Fi(s,o);return Fi(r,i)}(o.reshape(i),t,r);if(l=l.reshape(o.shape),null!=s){const e=ku(s);l=qd(l,e)}return l}const zg={kernelName:Qa,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=zu(n,zi(0)),a=zi(Mf),r=zi(Lf),s=Fi(e,r),o=Fi(Fi(e,a),Au(Ti(n,"float32")));return lu(t,s,o)}}}},Pg={kernelName:sr,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>_l(e,a,r)}}},Bg={kernelName:or,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>Il(e,a)}}};const Wg=[Im,Tm,Cm,Em,Rm,Am,_m,Fm,Dm,Om,Mm,Lm,Pm,Wm,Vm,Um,Gm,Hm,jm,qm,Km,Xm,Qm,Ym,Jm,$m,eg,tg,ng,ag,{kernelName:kn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=$i(n.shape,a.shape);return{a:()=>{const t=_i(e,Ti(a,"float32")),s=Ji(n.shape,r);return s.length>0?kl(Tu(t,s),n.shape):t},b:()=>{let t=Fi(e,Ti(n,"float32"));const s=Ji(a.shape,r);s.length>0&&(t=kl(Tu(t,s),a.shape));const o=Oi(a);return Qu(_i(t,Ti(o,"float32")))}}}},rg,sg,og,ig,cg,ug,lg,hg,dg,mg,gg,yg,bg,xg,vg,wg,kg,Sg,Ig,Cg,Cg,Eg,Ag,Fg,{kernelName:ha,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n,s=Qe(r,a.shape),o=Ge(bu(a.shape,s)[1]);return{x:()=>{const t=a.shape.slice();s.forEach((e=>{t[e]=1}));const n=kl(e,t);return _i(Fi(n,ph(a.shape,"float32")),o)}}}},{kernelName:da,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:r}=a,[s,o]=t,i=Tg(e,o,s,Qe(r,s.shape));return{x:()=>i.x()}}},{kernelName:pa,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Fi(e,Ti(ju(n,a),"float32")),b:()=>Fi(e,Ti(zu(n,a),"float32"))}}},Dg,{kernelName:ma,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=$i(n.shape,a.shape);return{a:()=>{const t=Ji(n.shape,r);return t.length>0?kl(Tu(e,t),n.shape):e},b:()=>{const t=Fi(e,Qu(Mu(_i(n,a)))),s=Ji(a.shape,r);return s.length>0?kl(Tu(t,s),a.shape):t}}}},{kernelName:ya,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=$i(n.shape,a.shape);return{a:()=>{const t=Fi(e,Ti(a,"float32")),s=Ji(n.shape,r);return s.length>0?kl(Tu(t,s),n.shape):t},b:()=>{const t=Fi(e,Ti(n,"float32")),s=Ji(a.shape,r);return s.length>0?kl(Tu(t,s),a.shape):t}}}},{kernelName:ba,gradFunc:e=>({x:()=>Qu(e)})},{kernelName:Na,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>dh(n.shape,"float32")}}},{kernelName:Sa,gradFunc:e=>({x:()=>Mi(e)})},{kernelName:Ia,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return Wd(e,a).map((e=>()=>e))}},Og,Og,Mg,{kernelName:Ea,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,r=zu(n,0);return{x:()=>lu(r,e,Fi(e,a)),alpha:()=>{let t=lu(r,Mi(e),Fi(e,n));const s=Ji(a.shape,e.shape);return s.length>0&&(t=Tu(t,s)),kl(t,a.shape)}}}},{kernelName:Ra,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;let s=[];return s=void 0===r||null===r?a.shape.map(((e,t)=>t)):"number"===typeof r?[r]:r,{x:()=>Lg(a,e,s)}}},{kernelName:Ma,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_i(e,Qu(Oi(n)))}}},{kernelName:Ua,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=Fi(ju(n,6),Nd(n));return{x:()=>Fi(e,Ti(a,"float32"))}}},{kernelName:La,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fi(e,Ti(Nd(n),"float32"))}}},{kernelName:za,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kl(e,n.shape)}}},{kernelName:Wa,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>Zs.runKernel(Va,r,n)}}},{kernelName:Pa,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>Zs.runKernel(Ba,r,n)}}},{kernelName:Ga,gradFunc:(e,t,n)=>{const{dims:a}=n,r=Qe(a,e.shape);return{x:()=>Jh(e,r)}}},{kernelName:Ha,gradFunc:e=>({x:()=>Mi(e)})},{kernelName:ja,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qu(_i(e,Fi(Ki(n,1.5),2)))}}},{kernelName:Ya,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ti(Mi(n),"float32"),t:()=>Fi(e,Ti(n,e.dtype)),e:()=>Fi(e,Ti(nh(n),e.dtype))}}},zg,{kernelName:tr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fi(e,Fi(n,Xi(zi(1),n)))}}},{kernelName:er,gradFunc:e=>({x:()=>Mi(e)})},{kernelName:Ja,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fi($l(Ti(n,"float32")),e)}}},{kernelName:$a,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fi(eu(Ti(n,"float32")),e)}}},{kernelName:Za,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:r,size:s}=n,o=a.shape,[i,c]=qc(a,r,s),l=[];for(let u=0;u<e.rank;u++)l.push([i[u],o[u]-i[u]-c[u]]);return{x:()=>Ih(e,l)}}},{kernelName:ir,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:r}=n,s=Fi(e,a);return{logits:()=>Xi(s,Fi(Tu(s,[r],true),a))}}},{kernelName:nr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fi(e,Cl(n))}}},Pg,Pg,Bg,Bg,{kernelName:ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_i(e,Fi(Di(Ti(n,"float32")),2))}}},{kernelName:pr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=zi(2);return{a:()=>Fi(e,Fi(r,Xi(n,a))),b:()=>Fi(e,Fi(r,Xi(a,n)))}}},{kernelName:fr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fi(e,Fi(Ti(n,"float32"),2))}}},{kernelName:_r,gradFunc:e=>({x:()=>Mi(e)})},{kernelName:vr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=$i(n.shape,a.shape);return{a:()=>{let t=e;const a=Ji(n.shape,r);return a.length>0&&(t=Tu(t,a)),kl(t,n.shape)},b:()=>{let t=e;const n=Ji(a.shape,r);return n.length>0&&(t=Tu(t,n)),kl(Qu(t),a.shape)}}}},{kernelName:rr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,r=a.shape.slice(),{axis:s}=n;Qe(s,a.shape).forEach((e=>{r[e]=1}));const o=kl(e,r),i=Fi(o,ph(a.shape,"float32"));return{x:()=>i}}},{kernelName:wr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_i(e,Oi($l(n)))}}},{kernelName:kr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fi(Xi(zi(1),Oi(n)),e)}}},{kernelName:Sr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:r}=n;return{x:()=>{let t=Mi(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=Ri(t,El(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)t=Ri(t,El(e,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)t=Ri(t,El(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)for(let i=0;i<r[3];++i)t=Ri(t,El(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},{kernelName:Tr,gradFunc:(e,t,n)=>{const a=n,{perm:r}=a,s=ku(r);return{x:()=>qd(e,s)}}},{kernelName:Er,gradFunc:(e,t,n)=>{const a=n,{axis:r}=a;return{value:()=>Sd(e,r)}}},{kernelName:Rr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=ec(t,Mi(t)),a=Lu(e,n);let r=Pu(t,zi(0,"int32"));const s=a.rank-r.rank;for(let i=0;i<s;++i)r=_u(r,i+1);r=th(r,ph(a.shape,"bool"));const o=Mi(a);return lu(r,a,o)}(e,n)}}},{kernelName:Ar,gradFunc:e=>({x:()=>Mi(e)})}];for(const n of Wg)jr(n);_s().prototype.abs=function(){return this.throwIfDisposed(),Qi(this)},_s().prototype.acos=function(){return this.throwIfDisposed(),Yc(this)},_s().prototype.acosh=function(){return this.throwIfDisposed(),Qc(this)},_s().prototype.add=function(e){return this.throwIfDisposed(),Ri(this,e)},_s().prototype.all=function(e,t){return this.throwIfDisposed(),Jc(this,e,t)},_s().prototype.any=function(e,t){return this.throwIfDisposed(),$c(this,e,t)},_s().prototype.argMax=function(e){return this.throwIfDisposed(),el(this,e)},_s().prototype.argMin=function(e){return this.throwIfDisposed(),tl(this,e)},_s().prototype.asScalar=function(){return this.throwIfDisposed(),We(1===this.size,(()=>"The array must have only 1 element.")),kl(this,[])},_s().prototype.asType=function(e){return this.throwIfDisposed(),Ti(this,e)},_s().prototype.as1D=function(){return this.throwIfDisposed(),kl(this,[this.size])},_s().prototype.as2D=function(e,t){return this.throwIfDisposed(),kl(this,[e,t])},_s().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),kl(this,[e,t,n])},_s().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),kl(this,[e,t,n,a])},_s().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),kl(this,[e,t,n,a,r])},_s().prototype.asin=function(){return this.throwIfDisposed(),nl(this)},_s().prototype.asinh=function(){return this.throwIfDisposed(),al(this)},_s().prototype.atan=function(){return this.throwIfDisposed(),rl(this)},_s().prototype.atan2=function(e){return this.throwIfDisposed(),sl(this,e)},_s().prototype.atanh=function(){return this.throwIfDisposed(),ol(this)},_s().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),Sl(this,e,t,n,a)},_s().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),_l(this,e,t)},_s().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),Fl(this,e,t,n,a,r)},_s().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Bl(this,e)},_s().prototype.cast=function(e){return this.throwIfDisposed(),Ti(this,e)},_s().prototype.ceil=function(){return this.throwIfDisposed(),Wl(this)},_s().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Vl(this,e,t)},_s().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof As&&(e=[e]),Il([this,...e],t)},_s().prototype.conv1d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Kl(this,e,t,n,a,r,s)},_s().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),Yl(this,e,t,n,a,r)},_s().prototype.conv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),ql(this,e,t,n,a,r,s)},_s().prototype.cos=function(){return this.throwIfDisposed(),$l(this)},_s().prototype.cosh=function(){return this.throwIfDisposed(),eu(this)},_s().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),tu(this,e,t,n)},_s().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),nu(this,e,t,n)},_s().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),ru(this,e,t)},_s().prototype.depthwiseConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),su(this,e,t,n,a,r,s)},_s().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),iu(this,e,t,n,a,r)},_s().prototype.divNoNan=function(e){return this.throwIfDisposed(),uu(this,e)},_s().prototype.div=function(e){return this.throwIfDisposed(),_i(this,e)},_s().prototype.dot=function(e){return this.throwIfDisposed(),hu(this,e)},_s().prototype.elu=function(){return this.throwIfDisposed(),pu(this)},_s().prototype.equal=function(e){return this.throwIfDisposed(),cu(this,e)},_s().prototype.erf=function(){return this.throwIfDisposed(),mu(this)},_s().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Ru(this,e,t)},_s().prototype.exp=function(){return this.throwIfDisposed(),Au(this)},_s().prototype.expandDims=function(e){return this.throwIfDisposed(),_u(this,e)},_s().prototype.expm1=function(){return this.throwIfDisposed(),Fu(this)},_s().prototype.fft=function(){return this.throwIfDisposed(),gd(this)},_s().prototype.flatten=function(){return this.throwIfDisposed(),kl(this,[this.size])},_s().prototype.floor=function(){return this.throwIfDisposed(),Mu(this)},_s().prototype.floorDiv=function(e){return this.throwIfDisposed(),Ai(this,e)},_s().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Lu(this,e,t,n)},_s().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Pu(this,e)},_s().prototype.greater=function(e){return this.throwIfDisposed(),zu(this,e)},_s().prototype.ifft=function(){return this.throwIfDisposed(),yd(this)},_s().prototype.irfft=function(){return this.throwIfDisposed(),bd(this)},_s().prototype.isFinite=function(){return this.throwIfDisposed(),Wu(this)},_s().prototype.isInf=function(){return this.throwIfDisposed(),Vu(this)},_s().prototype.isNaN=function(){return this.throwIfDisposed(),Uu(this)},_s().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Gu(this,e)},_s().prototype.lessEqual=function(e){return this.throwIfDisposed(),ju(this,e)},_s().prototype.less=function(e){return this.throwIfDisposed(),Hu(this,e)},_s().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),Ku(this,e,t,n,a)},_s().prototype.logSigmoid=function(){return this.throwIfDisposed(),Ju(this)},_s().prototype.logSoftmax=function(e){return this.throwIfDisposed(),$u(this,e)},_s().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),eh(this,e,t)},_s().prototype.log=function(){return this.throwIfDisposed(),Xu(this)},_s().prototype.log1p=function(){return this.throwIfDisposed(),Yu(this)},_s().prototype.logicalAnd=function(e){return this.throwIfDisposed(),th(this,e)},_s().prototype.logicalNot=function(){return this.throwIfDisposed(),nh(this)},_s().prototype.logicalOr=function(e){return this.throwIfDisposed(),ah(this,e)},_s().prototype.logicalXor=function(e){return this.throwIfDisposed(),rh(this,e)},_s().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Tl(this,e,t,n)},_s().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),ch(this,e,t,n,a)},_s().prototype.max=function(e,t){return this.throwIfDisposed(),Nu(this,e,t)},_s().prototype.maximum=function(e){return this.throwIfDisposed(),ec(this,e)},_s().prototype.mean=function(e,t){return this.throwIfDisposed(),hh(this,e,t)},_s().prototype.min=function(e,t){return this.throwIfDisposed(),Iu(this,e,t)},_s().prototype.minimum=function(e){return this.throwIfDisposed(),mh(this,e)},_s().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),gh(this,e,t)},_s().prototype.mod=function(e){return this.throwIfDisposed(),yh(this,e)},_s().prototype.mul=function(e){return this.throwIfDisposed(),Fi(this,e)},_s().prototype.neg=function(){return this.throwIfDisposed(),Qu(this)},_s().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Eu(this,e,t,n)},_s().prototype.notEqual=function(e){return this.throwIfDisposed(),wh(this,e)},_s().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),kh(this,e,t,n)},_s().prototype.onesLike=function(){return this.throwIfDisposed(),Sh(this)},_s().prototype.pad=function(e,t){return this.throwIfDisposed(),Ih(this,e,t)},_s().prototype.pool=function(e,t,n,a,r,s){return this.throwIfDisposed(),_h(this,e,t,n,a,r,s)},_s().prototype.pow=function(e){return this.throwIfDisposed(),Ki(this,e)},_s().prototype.prelu=function(e){return this.throwIfDisposed(),Fh(this,e)},_s().prototype.prod=function(e,t){return this.throwIfDisposed(),Dh(this,e,t)},_s().prototype.reciprocal=function(){return this.throwIfDisposed(),Yh(this)},_s().prototype.relu=function(){return this.throwIfDisposed(),Qh(this)},_s().prototype.relu6=function(){return this.throwIfDisposed(),Zh(this)},_s().prototype.reshapeAs=function(e){return this.throwIfDisposed(),kl(this,e.shape)},_s().prototype.reshape=function(e){return this.throwIfDisposed(),kl(this,e)},_s().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Lp(this,e,t,n)},_s().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),zp(this,e,t,n)},_s().prototype.reverse=function(e){return this.throwIfDisposed(),Jh(this,e)},_s().prototype.rfft=function(){return this.throwIfDisposed(),vd(this)},_s().prototype.round=function(){return this.throwIfDisposed(),ad(this)},_s().prototype.rsqrt=function(){return this.throwIfDisposed(),rd(this)},_s().prototype.selu=function(){return this.throwIfDisposed(),sd(this)},_s().prototype.separableConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),od(this,e,t,n,a,r,s)},_s().prototype.sigmoid=function(){return this.throwIfDisposed(),Cl(this)},_s().prototype.sign=function(){return this.throwIfDisposed(),cd(this)},_s().prototype.sin=function(){return this.throwIfDisposed(),ld(this)},_s().prototype.sinh=function(){return this.throwIfDisposed(),ud(this)},_s().prototype.slice=function(e,t){return this.throwIfDisposed(),El(this,e,t)},_s().prototype.softmax=function(e){return this.throwIfDisposed(),md(this,e)},_s().prototype.softplus=function(){return this.throwIfDisposed(),Zu(this)},_s().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Ah(this,e,t)},_s().prototype.split=function(e,t){return this.throwIfDisposed(),xd(this,e,t)},_s().prototype.sqrt=function(){return this.throwIfDisposed(),Di(this)},_s().prototype.square=function(){return this.throwIfDisposed(),Oi(this)},_s().prototype.squaredDifference=function(e){return this.throwIfDisposed(),wd(this,e)},_s().prototype.squeeze=function(e){return this.throwIfDisposed(),kd(this,e)},_s().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof As?[this,e]:[this,...e];return Sd(n,t)},_s().prototype.step=function(e){return this.throwIfDisposed(),Nd(this,e)},_s().prototype.stridedSlice=function(e,t,n,a,r,s,o,i){return this.throwIfDisposed(),Id(this,e,t,n,a,r,s,o,i)},_s().prototype.sub=function(e){return this.throwIfDisposed(),Xi(this,e)},_s().prototype.sum=function(e,t){return this.throwIfDisposed(),Tu(this,e,t)},_s().prototype.tan=function(){return this.throwIfDisposed(),Td(this)},_s().prototype.tanh=function(){return this.throwIfDisposed(),Rl(this)},_s().prototype.tile=function(e){return this.throwIfDisposed(),Du(this,e)},_s().prototype.toBool=function(){return this.throwIfDisposed(),Ti(this,"bool")},_s().prototype.toFloat=function(){return this.throwIfDisposed(),Ti(this,"float32")},_s().prototype.toInt=function(){return this.throwIfDisposed(),Ti(this,"int32")},_s().prototype.topk=function(e,t){return this.throwIfDisposed(),Ld(this,e,t)},_s().prototype.transpose=function(e){return this.throwIfDisposed(),qd(this,e)},_s().prototype.unique=function(e){return this.throwIfDisposed(),Pd(this,e)},_s().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Bd(this,e,t)},_s().prototype.unstack=function(e){return this.throwIfDisposed(),Wd(this,e)},_s().prototype.where=function(e,t){return this.throwIfDisposed(),lu(e,this,t)},_s().prototype.zerosLike=function(){return this.throwIfDisposed(),Mi(this)};class Vg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Vg.prototype)}}class Ug extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ug.prototype)}}class Gg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Gg.prototype)}}class Hg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Hg.prototype)}}class jg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,jg.prototype)}}Error;class qg{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(e,"."));if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Kg(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Xg(e,t){if(!e)throw new jg(t)}function Yg(e,t){let n=0;for(const a of e)a===t&&n++;return n}function Qg(e){return 1===e.length?e[0]:e}function Zg(e){return Array.isArray(e)?e:[e]}function Jg(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function $g(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let ey={};function ty(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function ny(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>ny(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?ny(t):e[n]=t.value)}}}function ay(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const r=e;let s;if(r in n)s=n[r];else if(r in ey)s=ey[r];else if(s=t[r],null==s)throw new Gg("Unknown ".concat(a,": ").concat(e,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return s}{const s=e;if(null==s.className||null==s.config)throw new Gg("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(s),".\n")+"'className' and 'config' must set.");const o=s.className;let i,c;if(o in n?[i,c]=n[o]:o in ey?[i,c]=ey.className:o in t&&([i,c]=t[o]),null==i)throw new Gg("Unknown ".concat(a,": ").concat(o,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const e={};for(const n of Object.keys(ey))e[n]=ey[n];for(const r of Object.keys(n))e[r]=n[r];s.config.customObjects=e;const t=Object.assign({},ey);for(const r of Object.keys(n))ey[r]=n[r];ny(s.config);const a=c(i,s.config,n,r);return ey=Object.assign({},t),a}{const e=Object.assign({},ey);for(const a of Object.keys(n))ey[a]=n[a];const t=new i(s.config);return ey=Object.assign({},e),t}}}function ry(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function sy(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function oy(e){if(null==e)throw new Gg("Invalid value in obj: ".concat(JSON.stringify(e)));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function iy(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Gg("".concat(n," is not a valid ").concat(t,".  Valid values are ").concat(e," or null/undefined."))}function cy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return Xg(n>=0),Xg(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function ly(e,t){Array.isArray(e)?(We(e.length>0,(()=>"".concat(t," is unexpectedly an empty array."))),e.forEach(((e,n)=>ly(e,"element ".concat(n+1," of ").concat(t))))):We(Number.isInteger(e)&&e>0,(()=>"Expected ".concat(t," to be a positive integer, but got ")+"".concat(uy(e),".")))}function uy(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>uy(e))).join(",")+"]":"string"===typeof e?'"'.concat(e,'"'):"".concat(e)}function hy(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let dy=0;function py(){return dy++}const fy={};function my(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in fy||(fy[e]=0),fy[e]+=1,e+fy[e].toString()}const gy=["channelsFirst","channelsLast"],yy=["nearest","bilinear"],by=["valid","same","causal"],xy=["max","avg"],vy=["sum","mul","concat","ave"],wy=new Map;function ky(e){iy(gy,"DataFormat",e)}function Sy(e){iy(by,"PaddingMode",e)}function Ny(e){iy(xy,"PoolMode",e)}const Iy=[],Ty="/";function Cy(e,t){Iy.push(e);try{const e=t();return Iy.pop(),e}catch(n){throw Iy.pop(),n}}function Ey(e){if(!_y(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Iy.length?"":Iy.join(Ty)+Ty)+e}function Ry(e){if(!_y(e))throw new Error("Not a valid tensor name: '"+e+"'");wy.has(e)||wy.set(e,0);const t=wy.get(e);if(wy.set(e,wy.get(e)+1),t>0){const n="".concat(e,"_").concat(t);return wy.set(n,1),n}return e}const Ay=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function _y(e){return!!e.match(Ay)}function Fy(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function Dy(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function Oy(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function My(e,t){if(t<e)throw new Gg("end (".concat(t,") < begin (").concat(e,") is forbidden."));const n=[];for(let a=e;a<t;++a)n.push(a);return n}let Ly;function zy(){return null==Ly&&(Ly=ko().epsilon()),Ly}function Py(e,t){return Ti(e,t)}function By(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),kl(e,n)}function Wy(e,t,n){return bo((()=>{switch(e.rank){case 1:return hd(e,t,n);case 2:return dd(e,[t,0],[n,e.shape[1]]);case 3:return pd(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return fd(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return El(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return El(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Gg("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Vy(e,t,n){return bo((()=>{switch(e.rank){case 1:return hd(e,t,n);case 2:return dd(e,[0,t],[e.shape[0],n]);case 3:return pd(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return fd(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Gg("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Uy(e,t,n,a){return bo((()=>{switch(e.rank){case 1:return hd(e,t,n);case 2:switch(a){case 1:return Wy(e,t,n);case 2:return Vy(e,t,n);default:throw new Gg("The axis is not within the rank of the tensor "+"".concat(a))}case 3:switch(a){case 1:return Wy(e,t,n);case 2:return pd(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Vy(e,t,n);default:throw new Gg("The axis is not within the rank of the tensor "+"".concat(a))}case 4:switch(a){case 1:return Wy(e,t,n);case 2:return fd(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return fd(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Vy(e,t,n);default:throw new Gg("The axis is not within the rank of the tensor "+"".concat(a))}default:throw new Gg("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Gy(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),Il(e,n)}function Hy(e,t){switch(e.rank){case 1:return Ul([e,t]);case 2:return Gl([e,t],0);case 3:return Hl([e,t],0);case 4:return jl([e,t],0);default:throw new Gg("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(e.rank))}}function jy(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Gg("The length of input n (".concat(t.length,") does not match ")+"the number of dimensions in input x (".concat(e.rank,")"));return Du(e,t)}function qy(e){return Gh(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0)}function Ky(e,t,n,a){if(e.rank<2||t.rank<2)throw new Hg("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(e.shape," and y shape = ").concat(t.shape));if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Hg("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(e.shape," and ")+" y shape = ".concat(t.shape))}if(2===e.rank&&2===t.rank){return up({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?Qy(e.rank,a,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),s=r.pop();e=kl(e,[-1,s]);const o=t.shape.slice(),i=o.pop(),c=o.pop(),l=[...o,i],u=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=kl(qd(t,u),[c,-1]);const h=[...r,...l];return kl(up({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?Qy(e.rank,a,"channelsLast"):null,activation:n}),h)}}function Xy(e,t,n){return bo((()=>(t=Array.isArray(t)?Cd(t,"int32"):Ti(t,"int32"),Lu(e,t,n))))}function Yy(e){return Fi(e,e)}function Qy(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new Gg("Unexpected bias dimensions: ".concat(t.rank)+"; expected it to be 1 or ".concat(e));if(5===e){if("channelsFirst"===n)return 1===a.length?kl(t,[1,a[0],1,1,1]):kl(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?kl(t,[1,1,1,1,a[0]]):kl(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?kl(t,[1,a[0],1,1]):kl(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?kl(t,[1,1,1,a[0]]):kl(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?kl(t,[1,a[0],1]):kl(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?kl(t,[1,1,a[0]]):kl(t,[1].concat(a))}else if(e<3)return t;throw new Gg("Unsupported input rank by biasAdd: ".concat(t.rank))}function Zy(e,t,n){return bo((()=>(null==n&&(n="channelsLast"),ky(n),Ri(e,Qy(e.rank,t,n)))))}function Jy(e,t,n,a){return bo((()=>Zd(e,t,n,a)))}function $y(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const eb=["fanIn","fanOut","fanAvg"],tb=["normal","uniform","truncatedNormal"];class nb extends Wi{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ab extends nb{apply(e,t){return dh(e,t)}}ab.className="Zeros",Ui(ab);class rb extends nb{apply(e,t){return ph(e,t)}}rb.className="Ones",Ui(rb);class sb extends nb{constructor(e){if(super(),"object"!==typeof e)throw new Gg("Expected argument of type ConstantConfig but got ".concat(e));if(void 0===e.value)throw new Gg("config must have value set but got ".concat(e));this.value=e.value}apply(e,t){return bo((()=>Fi(zi(this.value),ph(e,t))))}getConfig(){return{value:this.value}}}sb.className="Constant",Ui(sb);class ob extends nb{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return jh(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}ob.className="RandomUniform",Ui(ob);class ib extends nb{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Hg("randomNormal does not support dType ".concat(t,"."));return qy(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ib.className="RandomNormal",Ui(ib);class cb extends nb{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Hg("truncatedNormal does not support dType ".concat(t,"."));return zd(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}cb.className="TruncatedNormal",Ui(cb);class lb extends nb{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return bo((()=>{if(2!==e.length||e[0]!==e[1])throw new Gg("Identity matrix initializer can only be used for 2D square matrices.");return Fi(this.gain,Ou(e[0]))}))}getConfig(){return{gain:this.gain}}}lb.className="Identity",Ui(lb);class ub extends nb{constructor(e){if(super(),e.scale<0)throw new Gg("scale must be a positive float. Got: ".concat(e.scale));var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,iy(eb,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){iy(tb,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(ky(a),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===a){const a=Fy(e,2);t=e[1]*a,n=e[0]*a}else if("channelsLast"===a){const a=Fy(e,0,e.length-2);t=e[e.length-2]*a,n=e[e.length-1]*a}}else{const a=Fy(e);t=Math.sqrt(a),n=Math.sqrt(a)}return[t,n]}(e),a=n[0],r=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,a):"fanOut"===this.mode?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Hg("".concat(this.getClassName()," does not support dType ").concat(t,"."));return zd(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return jh(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ub.className="VarianceScaling",Ui(ub);class hb extends ub{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ub.className}}hb.className="GlorotUniform",Ui(hb);class db extends ub{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ub.className}}db.className="GlorotNormal",Ui(db);class pb extends ub{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ub.className}}pb.className="HeNormal",Ui(pb);class fb extends ub{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ub.className}}fb.className="HeUniform",Ui(fb);class mb extends ub{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ub.className}}mb.className="LeCunNormal",Ui(mb);class gb extends ub{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ub.className}}gb.className="LeCunUniform",Ui(gb);class yb extends nb{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return bo((()=>{if(e.length<2)throw new Hg("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError("Unsupported data type ".concat(t,"."));const n=Ge(e.slice(0,-1)),a=e[e.length-1],r=n*a;r>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(r,") elements: ")+"Slowness may result.");const s=qy([Math.max(a,n),Math.min(a,n)],0,1,t,this.seed),o=df.qr(s,!1);let i=o[0];const c=o[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return i=Fi(i,c.sign()),n<a&&(i=i.transpose()),Fi(zi(this.gain),i.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}yb.className="Orthogonal",Ui(yb);const bb={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function xb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ay(e,Vi.getMap().classNameMap,t,"initializer")}function vb(e){return ty(e)}function wb(e){if("string"===typeof e){const t=e in bb?bb[e]:e;if("GlorotNormal"===t)return new db;if("GlorotUniform"===t)return new hb;if("HeNormal"===t)return new pb;if("HeUniform"===t)return new fb;if("LeCunNormal"===t)return new mb;if("LeCunUniform"===t)return new gb;{const e={};return e.className=t,e.config={},xb(e)}}return e instanceof nb?e:xb(e)}function kb(e){return Array.isArray(e)&&Array.isArray(e[0])}function Sb(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Nb(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Gg("Expected Tensor length to be 1; got ".concat(e.length));t=e[0]}else t=e;return t}function Ib(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Gg("Expected exactly 1 Shape; got ".concat(e.length))}return e}function Tb(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Cb="Variable";class Eb{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Cb,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=py(),n=null==n?Cb:n,this.originalName=Ey(n),this.name=Ry(this.originalName),this.trainable_=a,this.constraint=r,this.val=Ud(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Rb(e){return e.map((e=>e.read()))}function Ab(e){e.forEach((e=>{e[0].write(e[1])}))}class _b{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Fb{constructor(e,t,n,a,r,s,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=o,this.id=py(),null!=s&&(this.originalName=Ey(s),this.name=Ry(this.originalName)),this.rank=t.length}}let Db=0;class Ob{constructor(e,t){this.callArgs=t,this.id=Db++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Mb=0;class Lb extends Wi{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Mb++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Jg(e)+"_"+my(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Ug("The layer has never been called "+"and thus has no defined ".concat(t,"."));if(this.inboundNodes.length<=e)throw new Gg("Asked to get ".concat(t," at node ").concat(e,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[e]}getInputAt(e){return Qg(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Qg(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Vg("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new Vg("Layer ".concat(this.name)+" is not connected, no input to return.");return Qg(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Vg("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new Vg("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return Qg(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Zg(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=Zg(this.inputSpec);if(t.length!==n.length)throw new Gg("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(e));for(let a=0;a<t.length;a++){const e=t[a],r=n[a];if(null==r)continue;const s=e.rank;if(null!=r.ndim&&s!==r.ndim)throw new Gg("Input ".concat(a," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(r.ndim,", found ndim=").concat(s));if(null!=r.maxNDim&&s>r.maxNDim)throw new Gg("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(r.maxNDim,", found ndim=").concat(s));if(null!=r.minNDim&&s<r.minNDim)throw new Gg("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(r.minNDim,", found ndim=").concat(s,"."));if(null!=r.dtype&&e.dtype!==r.dtype)throw new Gg("Input ".concat(a," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(r.dtype,", found dtype=").concat(e.dtype,"."));if(r.axes){const t=e.shape;for(const e in r.axes){const n=Number(e),s=r.axes[e],o=n>=0?t[n]:t[t.length+n];if(null!=s&&-1===[s,null].indexOf(o))throw new Gg("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(s," but got shape ").concat(t,"."))}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const n=r.shape[t],s=e.shape[t];if(null!=n&&null!=s&&n!==s)throw new Gg("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(r.shape,", ")+"found shape=".concat(e.shape,"."))}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Zg(e),a=function(e){let t=!0;for(const n of Zg(e))if(!(n instanceof Fb)){t=!1;break}return t}(e),r=function(e){let t=!0;for(const n of Zg(e))if(n instanceof Fb){t=!1;break}return t}(e);if(a===r)throw new Gg("Arguments to apply() must be all SymbolicTensors or all Tensors");return Cy(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Zg(e))t.push(n.shape);this.build(Qg(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const r=Zg(a),s=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(a=Qg(s),null!=this.activityRegularizer)throw new Hg("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=Zg(e);const t=[];for(const n of e)t.push(n.shape);return Qg(t)}(e),a=this.computeOutputShape(n);let r;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new Fb(s,n,this,Zg(e),t,this.name,a))):new Fb(s,a,this,Zg(e),t,this.name),this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new Hg("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(e),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(e),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Vg("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Vg("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new Ug("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return Tb(this.weights)}build(e){this.built=!0}getWeights(){return Rb(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){bo((()=>{const t=this.weights;if(t.length!==e.length)throw new Gg('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(e.length,", ")+"but the layer was expecting ".concat(t.length," weights. ")+"Provided weights: ".concat(e,"..."));if(0===t.length)return;const n=[],a=Rb(t);for(let r=0;r<a.length;++r){const s=a[r],o=t[r],i=e[r];if(!He(s.shape,i.shape))throw new Gg("Layer weight shape ".concat(s.shape," ")+"not compatible with provided weight shape ".concat(i.shape));n.push([o,i])}Ab(n)}))}addWeight(e,t,n,a,r,s,o,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Gg("Duplicate weight name ".concat(e," for layer ").concat(this.name));this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=i?i():wb("zeros"));const c=a.apply(t,n),l=new Eb(c,n,e,s,o);return c.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Zg(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");t.forEach((e=>{if(null!=e)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const a=this.computeMask(e,n),r=Zg(t),s=Zg(a);if(r.length!==s.length)throw new Error("".concat(this.name," outputs ").concat(r.length," tensors ")+"but ".concat(r.length," masks for those tensors"));for(let o=0;o<r.length;o++)r[o].kerasMask=s[o]}addInboundNode(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=Zg(e);t=Zg(t),n=Zg(n),a=Zg(a),r=Sb(r),s=Sb(s);const c=[],l=[],u=[];for(const h of i)c.push(h.sourceLayer),l.push(h.nodeIndex),u.push(h.tensorIndex);new Ob({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},o);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function zb(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=zb(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class Pb extends Lb{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:my("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Gg("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Gg("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Gg("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new Fb(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Ob({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Gg("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Pb.className="InputLayer",Ui(Pb);class Bb{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Bb)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Gg("Duplicate key: name=".concat(e.name,", id=").concat(e.id));return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ti(t,e.dtype)}catch(hV){throw new Gg("The dtype of the feed (".concat(t.dtype,") can not be cast to the dtype ")+"of the key '".concat(e.name,"' (").concat(e.dtype,")."))}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Fb){if(null==this.id2Value[e.id])throw new Gg("Nonexistent key: ".concat(e.name));return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Gg("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Value[t]}}getMask(e){if(e instanceof Fb){if(null==this.id2Value[e.id])throw new Gg("Nonexistent key: ".concat(e.name));return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Gg("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&xo(this.id2Mask)}}const Wb=new qg,Vb=new qg;function Ub(e,t,n,a){const r=null!=n&&n.training,s=Array.isArray(e),o=s?e:[e],i=o.map((e=>e.name)),c=[],l=t.names();for(const f of i)-1!==l.indexOf(f)?c.push(t.getValue(f)):c.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const u=i.join(",")+"|"+t.names().sort().join(",");let h,d=Wb.get(u);if(null==d){const e=function(e,t){We(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){const r=Hb(e[0],t);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of e){const{sorted:e,recipientMap:o}=Hb(s,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in o)null==a[t]&&(a[t]=new Set),o[t].forEach((e=>a[t].add(e)))}}return{sorted:n,recipientCounts:Gb(a)}}(o,t);d=e.sorted,h=e.recipientCounts,Wb.put(u,d),Vb.put(u,h)}h={},r||Object.assign(h,Vb.get(u));const p=new Bb(t);for(let f=0;f<d.length;++f){if(null!=a){const e=yo().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const e=d[f],s=e.sourceLayer;if(s instanceof Pb)continue;const o=[],l=[],u=[];let m=!1;for(const n of e.inputs){const e=p.getValue(n),a=p.getMask(n);o.push(e),l.push(a),null!=a&&(m=!0),r||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==i.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||u.push(e))}m&&((n=n||{}).mask=l[0]);const g=Zg(s.apply(o,n));let y=null;s.supportsMasking&&(y=s.computeMask(o,l));const b=jb(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){p.hasKey(x[t])||p.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=i.indexOf(x[t].name);-1!==e&&(c[e]=g[t])}r||xo(u)}return p.disposeMasks(),s?c:c[0]}function Gb(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Hb(e,t){const n=new Set,a=[],r={};for(const i of t.names())n.add(i);const s=[],o=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=o[o.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),a.push(e),n.add(e.name),t&&o.pop();else{o.push(s.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:a,recipientMap:r}}function jb(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function qb(e,t){return bo((()=>Di(Tu(Fi(e,e),t,!0))))}vt().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Wb&&Wb.setMaxEntries(e),null!=Vb&&Vb.setMaxEntries(e)}));class Kb extends Wi{getConfig(){return{}}}class Xb extends Kb{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return bo((()=>{const t=qb(e,this.axis),n=Vl(t,0,this.maxValue);return Fi(e,_i(n,Ri(zy(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Xb.className="MaxNorm",Ui(Xb);class Yb extends Kb{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return bo((()=>_i(e,Ri(zy(),qb(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Yb.className="UnitNorm",Ui(Yb);class Qb extends Kb{apply(e){return Qh(e)}}Qb.className="NonNeg",Ui(Qb);class Zb extends Kb{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return bo((()=>{const t=qb(e,this.axis),n=Ri(Fi(this.rate,Vl(t,this.minValue,this.maxValue)),Fi(1-this.rate,t));return Fi(e,_i(n,Ri(zy(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Zb.className="MinMaxNorm",Ui(Zb);const Jb={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function $b(e){return ty(e)}function ex(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ay(e,Vi.getMap().classNameMap,t,"constraint")}function tx(e){if(null==e)return null;if("string"===typeof e){return ex({className:e in Jb?Jb[e]:e,config:{}})}return e instanceof Kb?e:ex(e)}async function nx(e){if(null==e)return;const t=[],n=[],a=[];for(const r in e){const s=e[r];if("number"!==typeof s){const e=s;t.push(e.data()),n.push(r),a.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];xo(a)}}function ax(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var rx;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(rx||(rx={}));class sx{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class ox{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class ix extends sx{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const a in t){const e=t[a];if("number"===typeof e)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+e*n;else{let t;a in this.totals?t=this.totals[a]:this.totals[a]=0;const r=bo((()=>Ri(this.totals[a],Fi(e,n))));this.totals[a]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:bo((()=>{const e=Fi(_i(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),vo(t[n])})))}}class cx extends sx{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!==typeof a[s]){const o=a[s];e.push(o.data()),t.push(r),n.push(s)}}const a=await Promise.all(e);for(let r=0;r<a.length;++r){this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=a[r][0]}}}class lx extends sx{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||bf,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");at(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,r=null!=n?n():us();return function(){const s=null!=n?n():us();return s-r<t||(r=s,a=e(...arguments)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await nx(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await nx(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await nx(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await nx(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await nx(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):at(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await nx(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await nx(e),await this.trainEnd(e))}}function ux(e,t){if(null==e&&(e={}),e instanceof sx)return[e];if(Array.isArray(e)&&e[0]instanceof sx)return e;return Zg(e).map((e=>new lx(e,t)))}class hx{constructor(){}static registerCallbackConstructor(e,t){We(e>=0&&Number.isInteger(e),(()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(e))),hx.checkForDuplicate(t),null==hx.constructors[e]&&(hx.constructors[e]=[]),hx.constructors[e].push(t)}static checkForDuplicate(e){for(const t in hx.constructors){hx.constructors[+t].forEach((t=>{if(t===e)throw new Gg("Duplicate callback constructor.")}))}}static clear(){hx.constructors={}}static createCallbacks(e){const t=[];for(const n in hx.constructors){const a=+n;e>=a&&t.push(...hx.constructors[a])}return t.map((e=>new e))}}function dx(e,t,n,a,r,s,o,i,c){const l=new cx,u=[new ix,...hx.createCallbacks(t)];null!=e&&u.push(...e),u.push(l);const h=new ox(u);return h.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:o,verbose:t,doValidation:i,metrics:c}),{callbackList:h,history:l}}function px(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return ay(e,Vi.getMap().classNameMap,t,"layer",n)}function fx(e,t){return bo((()=>{"float32"!==e.dtype&&(e=Ti(e,"float32"));const n=Tu(Yy(e),t,!0),a=ji(n.shape,zy()),r=Di(ec(n,a));return _i(e,r)}))}function mx(e,t){return bo((()=>hh(Yy(Xi(t,e)),-1)))}function gx(e,t){return bo((()=>hh(Qi(Xi(t,e)),-1)))}function yx(e,t){return bo((()=>{const n=Xi(e,t),a=Vl(Qi(e),zy(),Number.MAX_VALUE),r=Qi(_i(n,a));return Fi(100,hh(r,-1))}))}function bx(e,t){return bo((()=>{const n=Vl(t,zy(),Number.MAX_VALUE),a=Xu(Ri(1,n)),r=Vl(e,zy(),Number.MAX_VALUE),s=Xu(Ri(1,r));return hh(Yy(Xi(a,s)),-1)}))}function xx(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return bo((()=>{if(n)t=md(t);else{const e=Tu(t,t.shape.length-1,!0);t=_i(t,e)}return t=Vl(t,zy(),1-zy()),Qu(Tu(Fi(Ti(e,"float32"),Xu(t)),t.shape.length-1))}))}function vx(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return bo((()=>{const a=Ti(Mu(function(e){const t=[Fy(e.shape)];return kl(e,t)}(e)),"int32"),r=(t=Vl(t,zy(),1-zy())).shape;return xx(kl(kh(a,r[r.length-1]),r),t,n)}))}function wx(e,t){return bo((()=>{let n;return n=Vl(t,zy(),1-zy()),n=Xu(_i(n,Xi(1,n))),hh(function(e,t){if(!He(e.shape,t.shape))throw new Gg("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(e.shape)," and ").concat(JSON.stringify(t.shape)));return bo((()=>{const n=Qh(t),a=Qu(Qi(t));return Ri(Xi(n,Fi(t,e)),Yu(Au(a)))}))}(e,n),-1)}))}function kx(e,t){return bo((()=>{const n=Vl(e,zy(),1),a=Vl(t,zy(),1);return Tu(Fi(e,Xu(_i(n,a))),-1)}))}function Sx(e,t){return bo((()=>{const n=fx(e,-1),a=fx(t,-1),r=Fi(n,a);return Qu(Tu(r,-1))}))}hx.constructors={};const Nx={meanSquaredError:mx,meanAbsoluteError:gx,meanAbsolutePercentageError:yx,meanSquaredLogarithmicError:bx,squaredHinge:function(e,t){return bo((()=>{const n=ec(0,Xi(1,Fi(e,t)));return hh(Yy(n),-1)}))},hinge:function(e,t){return bo((()=>{const n=ec(0,Xi(1,Fi(e,t)));return hh(n,-1)}))},categoricalHinge:function(e,t){return bo((()=>{const n=Tu(Fi(e,t),-1),a=Nu(Fi(Xi(1,e),t),-1);return ec(0,Ri(1,Xi(a,n)))}))},logcosh:function(e,t){return bo((()=>{const n=Math.log(2),a=Xi(t,e),r=Xi(Ri(a,Zu(Fi(-2,a))),n);return hh(r,-1)}))},categoricalCrossentropy:xx,sparseCategoricalCrossentropy:vx,binaryCrossentropy:wx,kullbackLeiblerDivergence:kx,poisson:function(e,t){return bo((()=>{const n=Xu(Ri(zy(),t));return hh(Xi(t,Fi(e,n)),-1)}))},cosineProximity:Sx};function Ix(e){if("string"===typeof e){if(e in Nx)return Nx[e];let t="Unknown loss ".concat(e);throw e.toLowerCase().includes("softmaxcrossentropy")&&(t="Unknown loss ".concat(e,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new Gg(t)}return e}function Tx(e,t){return bo((()=>{const n=Fi(.5,Sh(t)),a=Py(zu(t,n),e.dtype);return hh(cu(e,a),-1)}))}function Cx(e,t){return bo((()=>Py(cu(el(e,-1),el(t,-1)),"float32")))}function Ex(e,t){return bo((()=>Ti(Tu(th(cu(e,1),cu(t,1))),"float32")))}function Rx(e,t){return wx(e,t)}function Ax(e,t){return e.rank===t.rank&&(e=kd(e,[e.rank-1])),(t=el(t,-1)).dtype!==e.dtype&&(t=Ti(t,e.dtype)),Ti(cu(e,t),"float32")}const _x=xx,Fx=vx,Dx={binaryAccuracy:Tx,categoricalAccuracy:Cx,precision:function(e,t){return bo((()=>{const n=Ex(e,t),a=function(e,t){return bo((()=>Ti(Tu(th(cu(e,0),cu(t,1))),"float32")))}(e,t),r=Ri(n,a);return Ti(lu(zu(r,0),_i(n,r),0),"float32")}))},categoricalCrossentropy:_x,sparseCategoricalCrossentropy:Fx,mse:mx,MSE:mx,mae:gx,MAE:gx,mape:yx,MAPE:yx,cosine:Sx};function Ox(e){if("string"===typeof e&&e in Dx)return Dx[e];if("string"!==typeof e&&null!=e)return e;throw new Gg("Unknown metric ".concat(e))}function Mx(e){if(Xg(null!==e,"Unknown LossOrMetricFn ".concat(e)),"string"===typeof e)return e;{let t;for(const n of Object.keys(Nx))if(Nx[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Dx))if(Dx[n]===e){t=n;break}return void 0!==t?t:e.name}}const Lx=1048576;function zx(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Px(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Lx&&console.warn('User-defined metadata of model "'.concat(t,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(Lx,"."))}}function Px(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!Px(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Px(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Bx(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const r=function(e){let t=!0;const n=[],a=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}a.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==a.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){s.push("Receives inputs"),o=[];for(const t in e.nodesByDepth)o.push(...e.nodesByDepth[t])}a("_".repeat(t)),Wx(s,n,a),a("=".repeat(t));const i=e.layers;for(let u=0;u<i.length;++u)r?Vx(i[u],n,a):Ux(i[u],n,o,a),a((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const c=function(e){let t;t=null!=e.collectedTrainableWeights?Tb(e.collectedTrainableWeights):Tb(e.trainableWeights);return t}(e),l=Tb(e.nonTrainableWeights);a("Total params: ".concat(c+l)),a("Trainable params: ".concat(c)),a("Non-trainable params: ".concat(l)),a("_".repeat(t))}function Wx(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a="";for(let r=0;r<e.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=e[r],a=a.slice(0,t[r]),a+=" ".repeat(t[r]-a.length);n(a)}function Vx(e,t,n){let a,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(hV){r="multiple"}try{a=JSON.stringify(e.outputShape)}catch(hV){a="multiple"}const s=e.name,o=e.getClassName();Wx(["".concat(s," (").concat(o,")"),r,a,e.countParams().toString()],t,n)}function Ux(e,t,n,a){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(hV){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(hV){r="multiple"}const o=[];for(const u of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(u)))for(let e=0;e<u.inboundLayers.length;++e){const t=u.inboundLayers[e].name,n=u.nodeIndices[e],a=u.tensorIndices[e];o.push("".concat(t,"[").concat(n,"][").concat(a,"]"))}const i=e.name,c=e.getClassName(),l=0===o.length?"":o[0];Wx(["".concat(i," (").concat(c,")"),s,r,e.countParams().toString(),l],t,a);for(let u=1;u<o.length;++u)Wx(["","","","",o[u]],t,a)}function Gx(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function Hx(e,t){if(null===e)return null;if("string"===typeof e)return $g(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Gx(t,r,a)?n.push(a):n.push(Hx(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"===typeof a)t[n]=a;else{const e=$g(n);t[e]=Hx(a,e)}}return t}}function jx(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return Jg(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Gx(t,r,a)?n.push(a):n.push(jx(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n],r=Jg(n);t[r]="name"!==n&&"className"!==n||"string"!==typeof a?jx(a,n):a}return t}}const qx="4.20.0";class Kx extends Lb{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=my(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],sy(this.inputs).length!==this.inputs.length)throw new Gg("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map((e=>e.name))));sy(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map((e=>e.name)))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;Xg(0===t,"input layer has >1 nodes"),Xg(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof Pb))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(e.inputs,". ")+"Input ".concat(y," (0-based) originates ")+"from layer type ".concat(t.getClassName(),"."));this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},a={},r={},s={},o=[],i=(e,t,n,a,r,c)=>{null!=a&&null!=r&&null!=c||(a=e.sourceLayer,r=e.nodeIndex,c=e.tensorIndex);const l=a.inboundNodes[r];if(-1!==n.indexOf(l))throw new Ug("The tensor ".concat(e.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==t.indexOf(l))return;this.containerNodes.add(Kx.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const u=l.inboundLayers.length;for(let s=0;s<u;s++){const e=l.inputTensors[s],a=l.inboundLayers[s],r=l.nodeIndices[s],o=l.tensorIndices[s];i(e,t,n,a,r,o)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);o.push(l)},c=[],l=[];for(const y of this.outputs)i(y,c,l);const u=o.slice().reverse();for(const y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const s=null==a[y.outboundLayer.id]?0:a[y.outboundLayer.id];e=Math.max(e,s),a[y.outboundLayer.id]=e,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let a=0;a<y.inboundLayers.length;a++){const r=y.inboundLayers[a],s=y.nodeIndices[a],o=r.inboundNodes[s],i=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(e+1,i),n[o.id]=o}}const h={};for(const y in t){const e=t[y];e in h||(h[e]=[]),h[e].push(n[y])}const d={};for(const y in a){const e=a[y];e in d||(d[e]=[]),d[e].push(r[y])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(ry);this.layers=[];for(const y of p){const e=d[y];e.sort(((e,t)=>{const n=s[e.id],a=s[t.id];return n<a?-1:n>a?1:0}));for(const t of e)t instanceof Kx&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(ry);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of h[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Ug("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(t.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(m));for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new Ug('The name "'.concat(y,'" is used ').concat(e," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Ob({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Gg("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let a=0;const r=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);r&&this.parseWeights(e);for(const o of this.layers)for(const[e,t]of o.weights.entries()){const s=r?"".concat(t.name.split("/").slice(0,-1).join("/")+"/").concat(e):t.originalName;if(null!=n[s])throw new Gg("Duplicate weight name: ".concat(s));n[s]=t,a++}const s=[];for(const o in e){let a=o;if(null==n[o]){const e=o.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[o]]);else if(t)throw new Gg("Provided weight data has no target variable: ".concat(o));delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Gg("".concat(e.length," of ").concat(a," weights are not set: ")+"".concat(e))}Ab(s)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),a=["vars","layer_checkpoint_dependencies"],r=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!a.includes(e))).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers ".concat(qx),t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=jx(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return bo((()=>{e=Zg(e);const n=new Bb;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Ub(this.outputs,n,t)}))}computeMask(e,t){return bo((()=>{let n;return e=Zg(e),n=null==t?Kg(null,e.length):Zg(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Sb(e);if(t.length!==this.inputLayers.length)throw new Gg("Invalid inputShape argument ".concat(e,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let o=0;o<t.length;o++){const e=this.inputLayers[o],a=t[o];n[e.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ry);if(a.length>1)for(const o of a){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const a=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],r=t.nodeIndices[o],s=t.tensorIndices[o],i=n["".concat(e.name,"_").concat(r,"_").concat(s)];a.push(i)}const r=Sb(e.computeOutputShape(Qg(a))),s=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){n["".concat(e.name,"_").concat(s,"_").concat(t)]=r[t]}}}const r=[],s=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],t=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],a="".concat(e.name,"_").concat(t,"_").concat(n);s.push(a)}for(let o=0;o<s.length;o++){const e=s[o];Xg(e in n),r.push(n[e])}return Qg(r)}runInternalGraph(e,t){null==t&&(t=Kg(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],r=e[i],s=t[i];n[a.id]=[r,s]}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ry);for(const i of a){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer,a=t.inputTensors,r=t.outputTensors,s=new Array;for(const t of a)t.id in n&&s.push(n[t.id]);if(s.length===a.length){let a,o,i,c,l={};if(null!=t.callArgs&&(l=t.callArgs),1===s.length){const[t,n]=s[0];null==l.mask&&(l.mask=n),i=Zg(e.call(t,l)),c=Zg(e.computeMask(t,n)),a=[t],o=[n]}else a=s.map((e=>e[0])),o=s.map((e=>e[1])),null==l.mask&&(l.mask=o),i=Zg(e.call(a,l)),c=Zg(e.computeMask(a,o));if(e.activityRegularizer)throw new Hg("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],a=i[e],s=c[e];n[t.id]=[a,s]}}}}const r=[],s=[],o=[];for(const i of this.outputs){Xg(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[e,t]=n[i.id];o.push(e.shape),r.push(e),s.push(t)}return[r,s,o]}buildNodeConversionMap(e){const t={};let n;for(const a of this.layers){n=a instanceof Kx?1:0;for(let e=0;e<a.inboundNodes.length;e++){const r=Kx.nodeKey(a,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new Gg("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new Gg("No such layer: ".concat(e))}findLayer(e){if(this.layers.length<=e)throw new Gg("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}calculateLosses(){return bo((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=Kx.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const s of this.layers){const e=s.getClassName(),a=s.getConfig(),r=[];for(let n=0;n<s.inboundNodes.length;n++){const e=s.inboundNodes[n],a=Kx.nodeKey(s,n);let o={};if(this.containerNodes.has(a)){if(e.callArgs)try{JSON.stringify(e.callArgs),o=e.callArgs}catch(hV){console.warn("Layer ".concat(s.name," was passed ")+"non-serializable keyword arguments: "+"".concat(e.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),o={}}if(e.inboundLayers.length>0){const n=[];for(let a=0;a<e.inboundLayers.length;a++){const r=e.inboundLayers[a],s=e.nodeIndices[a],i=e.tensorIndices[a];let c=t[Kx.nodeKey(r,s)];null==c&&(c=0),n.push([r.name,c,i,o])}r.push(n)}}}const o={};o.name=s.name,o.className=e,o.config=a,o.inboundNodes=r,n.push(o)}e.layers=n;const a=[];for(let s=0;s<this.inputLayers.length;s++){const e=this.inputLayers[s],n=this.inputLayersNodeIndices[s],r=Kx.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let o=t[r];null!==o&&void 0!==o||(o=0);const i=this.inputLayersTensorIndices[s];a.push([e.name,o,i])}e.inputLayers=a;const r=[];for(let s=0;s<this.outputLayers.length;s++){const e=this.outputLayers[s],n=this.outputLayersNodeIndices[s],a=Kx.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let o=t[a];null!==o&&void 0!==o||(o=0);const i=this.outputLayersTensorIndices[s];r.push([e.name,o,i])}return e.outputLayers=r,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={},r={};function s(e,t){e.name in r?r[e.name].push(t):r[e.name]=[t]}function o(e,t){const n=[];let r;for(const o of t){const i=o[0],c=o[1],l=o[2];if(r=null==o[3]?{}:o[3],!(i in a))return void s(e,t);const u=a[i];if(u.inboundNodes.length<=c)return void s(e,t);const h=u.inboundNodes[c];n.push(h.outputTensors[l])}n.length>0&&e.apply(Qg(n),r)}function i(e){const r=e.name,o=px(e,null!=t.customObjects?t.customObjects:{});o.setFastWeightInitDuringBuild(n),a[r]=o;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Gg("Corrupted configuration, expected array for nodeData: ".concat(e));s(o,e)}))}const c=t.name,l=t.layers;for(const f of l)i(f);for(;!oy(r);)for(const e of l){const t=a[e.name];if(t.name in r){const e=r[t.name];delete r[t.name];for(const n of e)o(t,n)}}const u=[],h=[],d=t.inputLayers;for(const f of d){const e=f[0],t=f[1],n=f[2];Xg(e in a);const r=a[e].inboundNodes[t].outputTensors;u.push(r[n])}const p=t.outputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];Xg(e in a);const r=a[e].inboundNodes[t].outputTensors;h.push(r[n])}return new e({inputs:u,outputs:h,name:c})}get stateful(){if(this._stateful)throw new Gg("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){bo((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Xx(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(e.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(t," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(e)))}function Yx(e,t){return Xx(e,t,"classWeight")}async function Qx(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=bo((()=>{if(1===e.shape.length)return Ci(e);if(2===e.shape.length){if(e.shape[1]>1){return el(e,1)}if(1===e.shape[1])return kl(e,[e.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(e.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(e.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")})),a=Array.from(await t.data());xo(t);const r=[];return a.forEach((e=>{if(null==n[e])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(e," exists in the data but not in ")+"classWeight");r.push(n[e])})),Cd(r,"float32")}return null}function Zx(e,t){return Fi(e,t)}function Jx(e,t){let n,a;const r=t;n=r.xs,a=r.ys,We(null!=n&&null!=a,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(t)));const s=$x("input",e.inputNames,n),o=$x("output",e.outputNames,a),i=s[0].shape[0];We(s.length===e.inputs.length,(()=>"LayersModel has ".concat(e.inputs.length," inputs, but the dataset ")+"provides ".concat(s.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(e.inputNames),")"))),We(o.length===e.outputs.length,(()=>"LayersModel has ".concat(e.outputs.length," outputs, but the dataset ")+"provides ".concat(o.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(e.outputNames),")")));for(let c=0;c<s.length;c++)We(s[c].shape[0]===i,(()=>"Batch size mismatch: input "+"".concat(e.inputNames[c]," has ").concat(s[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));for(let c=0;c<o.length;c++)We(o[c].shape[0]===i,(()=>"Batch size mismatch: output "+"".concat(e.outputNames[c]," has ").concat(o[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));return{xs:s,ys:o}}function $x(e,t,n){if(n instanceof As)return[n];if(Array.isArray(n))return We(n.length===t.length,(()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(t.length," to match the ").concat(e," keys ").concat(t,"."))),n;{const a=[];for(const r of t){if(null==n[r])throw new Gg("The feature data generated by the dataset lacks the required "+"".concat(e," key '").concat(r,"'."));a.push(n[r])}return a}}async function ev(e,t,n){const a=null!=n.batchesPerEpoch;if(We(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),We(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),We(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs))),We(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch))),We(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let s,o;if(r)if(tv(n.validationData))We(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches)));else{const e=function(e){if(3===e.length)throw new Hg("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,o=e.ys}const i=e.makeTrainFunction(),c=e.getDedupedMetricsNames();let l;l=r?c.slice().concat(c.map((e=>"val_"+e))):c.slice();const u=ux(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=dx(u,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,r,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await d.onEpochBegin(f);let u=0,h=0;for(a||(m=await t.iterator());!a||u<n.batchesPerEpoch;){const t=await m.next();if(a&&t.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(u," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:r}=Jx(e,t.value),s={};s.batch=h,s.size=a[0].shape[0],await d.onBatchBegin(h,s);const o=[];if(null!=n.classWeight){const t=Yx(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await Qx(r[e],null,t[e]))}const l=a.concat(r).concat(o),p=i(l);xo(l);for(let e=0;e<c.length;++e){const t=c[e],n=p[e];s[t]=n,vo(n)}await d.onBatchEnd(h,s),ax(s),h++,u++}if(a?u>=n.batchesPerEpoch:t.done){if(r){let t;t=tv(n.validationData)?Zg(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Zg(e.evaluate(s,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l["val_".concat(e.metricsNames[n])]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function tv(e){return"function"===typeof e.iterator}function nv(e){We(e>0&&Number.isInteger(e),(()=>"batchSize is required to be a positive integer, but got ".concat(e)))}function av(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Wy(e,t,n-t))):Wy(e,t,n-t)}function rv(e,t){return bo((()=>null==e?null:Array.isArray(e)?e.map((e=>rv(e,t))):Xy(e,"int32"===t.dtype?t:Ti(t,"int32"))))}function sv(e,t){const n=[];let a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}function ov(e){const t=[];e instanceof As&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(By(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function iv(e,t){if(null==e)return;const n=[];if(t instanceof As)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const a=[];if(e instanceof As)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&a.push(t)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function cv(e){return Array.isArray(e)}function lv(e){return!function(e){return e instanceof As}(e)&&!cv(e)}function uv(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(cv(e)&&e.length>0)t=!0;else if(lv(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Gg("Error when checking model ".concat(s," expected no data, ")+"but got ".concat(e))}return[]}if(null==e)return t.map((e=>null));if(lv(e)){a=[];for(const n of t){if(null==e[n])throw new Gg('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(t));a.push(e[n])}}else if(cv(e)){if(e.length!==t.length)throw new Gg("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(t.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(e));a=e}else{if(t.length>1)throw new Gg("The model ".concat(s," expects ").concat(t.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(e.shape));a=[e]}if(a=ov(a),null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new Gg("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s). but got array with ")+"shape ".concat(e.shape));for(let t=0;t<n[o].length;++t){if(0===t&&!r)continue;const a=e.shape[t],i=n[o][t];if(null!=i&&i>=0&&a!==i)throw new Gg("".concat(s," expected a batch of elements where each ")+"example has shape [".concat(n[o].slice(1,n[o].length),"] ")+"(i.e.,tensor shape [*,".concat(n[o].slice(1,n[o].length),"])")+" but the ".concat(s," received an input with ").concat(e.shape[0])+" examples, each with shape [".concat(e.shape.slice(1,e.shape.length),"]")+" (tensor shape [".concat(e.shape,"])"))}}return a}function hv(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new Gg("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(t.length," Tensor(s),")+" but instead got ".concat(e.length," Tensors(s)."));a=e}else{if(t.length>1)throw new Gg("The model expects ".concat(t.length," ").concat(s," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(e.shape),"."));a=[e]}if(null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new Gg("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(e.shape)));for(let a=0;a<n[o].length;++a){if(0===a&&!r)continue;const i=e.shape[a],c=n[o][a];if(null!=c&&c!==i)throw new Gg("Error when checking ".concat(s,": expected ")+"".concat(t[o]," to have shape ").concat(JSON.stringify(n[o])," but ")+"got array with shape ".concat(JSON.stringify(e.shape),"."))}}}class dv extends Kx{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new Gg("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Bx(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>gf.adagrad(.01),Adadelta:()=>gf.adadelta(1,.95,zy()),Adam:()=>gf.adam(.001,.9,.999,zy()),Adamax:()=>gf.adamax(.002,.9,.999,zy(),0),RMSProp:()=>gf.rmsprop(.001,.9,0,zy()),SGD:()=>gf.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Gg("Unknown Optimizer ".concat(e))}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Gi))throw new Gg("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Gg("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(e.loss,"."));const n=e.loss;t=n.map((e=>Ix(e)))}else{const n=Ix(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Gg('Unknown entry in loss dictionary: "'.concat(t,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==e.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),t.push(Ix(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const e=this.internalOutputShapes[s],t=this.outputNames[s];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Cy("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(e));n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Cy("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,a,s;for(const o of t){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===wx?-1!==["accuracy","acc"].indexOf(o)?a=Tx:-1!==["crossentropy","ce"].indexOf(o)&&(a=Rx):this.lossFunctions[e]===vx?-1!==["accuracy","acc"].indexOf(o)?a=Ax:-1!==["crossentropy","ce"].indexOf(o)&&(a=Fx):-1!==["accuracy","acc"].indexOf(o)?a=Cx:-1!==["crossentropy","ce"].indexOf(o)&&(a=_x),-1!==["accuracy","acc"].indexOf(o)?r="acc":-1!==["crossentropy","ce"].indexOf(o)&&(r="ce"),s=a,n=""+r}else{const e=Ox(o);s=e,n=""+Mx(o)}let t;Cy(n,(()=>{t=s})),r(e,n,t)}})(a[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=null==n.batchSize?32:n.batchSize;nv(a);const r=this.standardizeUserDataXY(e,t,!0,a);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return Qg(this.testLoop(t,e,a,n.verbose,n.steps))}finally{iv(r[0],e),iv(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,r=e.testFunction;let s=[];if(n.verbose>0)throw new Hg("Verbose mode is not implemented yet.");We(!a||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches))));const o="function"===typeof t.next?t:await t.iterator();let i=0,c=0;for(;!a||c<n.batches;){const t=await o.next();if(s=bo((()=>{if(t.value){const{xs:n,ys:a}=Jx(e,t.value),o=n.concat(a),l=bo((()=>r(o)));if(xo(o),0===c)for(let e=0;e<l.length;++e)s.push(zi(0));const u=o[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=bo((()=>Ri(s[e],Fi(u,t)))),c>0&&xo(n)}xo(l),i+=u,++c}return s})),t.done){a&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let l=0;l<s.length;++l){const e=s[l];s[l]=_i(s[l],i),xo(e)}return Qg(s)}(this,e,t)}checkNumSamples(e,t,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(a=null,null!=t)throw new Gg("If ".concat(r," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(t))}else{if(null==e)throw new Gg("Either the input data should have a defined shape, or "+"".concat(r," shoud be specified."));a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Gg("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),s=new Bb;if(e instanceof As&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Gg("The number of inputs provided (".concat(e.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new Gg("No value is provided for the model's input ".concat(i.name));s.add(i,t)}const o=Ub(r,s);return n?o:o[0]}retrieveSymbolicTensors(e){const t=Kg(null,e.length);let n=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],s=r.map((e=>e.name));for(let a=0;a<e.length;++a){const o=s.indexOf(e[a]);if(-1!==o&&(t[a]=r[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new Gg("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return bo((()=>{const a=this.checkNumSamples(e);if(n)throw new Hg("Verbose predictLoop() is not implemented yet.");const r=sv(a,t),s=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){bo((()=>{const n=r[t][0],a=r[t][1],s=av(e,n,a),o=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)o.push({key:this.inputs[e],value:s[e]});else o.push({key:this.inputs[0],value:s});const i=new Bb(o);return Ub(this.outputs,i)})).forEach(((e,t)=>s[t].push(e)))}return Qg(s.map((e=>Il(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=ov(e);hv(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return nv(e),this.predictLoop(n,e)}finally{iv(n,e)}}predictOnBatch(e){hv(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new Ug("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];this.feedLossFns[r]===vx?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(function(e,t,n){const a=sy(e.map((e=>e.shape[0])));a.sort();const r=sy(t.map((e=>e.shape[0])));if(r.sort(),a.length>1)throw new Gg("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map((e=>e.shape)))));if(r.length>1)throw new Gg("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map((e=>e.shape)))));if(a.length>0&&r.length>0&&!He(a,r))throw new Gg("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(a[0]," input sample(s) and ").concat(r[0]," target ")+"sample(s).")}(e=uv(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=uv(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const a=[mx,wx,xx];for(let r=0;r<e.length;++r){const s=e[r],o=t[r],i=n[r];if(null!=o){if(o===xx&&1===s.shape[s.shape.length-1])throw new Gg("You are passing a target array of shape ".concat(s.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(o)){const e=s.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const a=e[n],r=t[n];if(null!=r&&a!==r)throw new Gg("A target Tensor with shape ".concat(s.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new Gg("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(e[0].shape[0]," sample(s)."));return[e,t]}async standardizeUserData(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0;const[o,i]=this.standardizeUserDataXY(e,t,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=a){const e=Yx(a,this.outputNames);c=[];for(let t=0;t<e.length;++t)c.push(await Qx(i[t],null,e[t]))}return[o,i,c]}testLoop(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4?arguments[4]:void 0;return bo((()=>{const s=this.checkNumSamples(t,n,r,"steps"),o=[];if(a>0)throw new Hg("Verbose mode is not implemented yet.");if(null!=r)throw new Hg("steps mode in testLoop() is not implemented yet");{const a=sv(s,n),r=Cd(My(0,s));for(let n=0;n<a.length;++n){const s=a[n][0],i=a[n][1],c=Wy(r,s,i-s),l=rv(t,c),u=e(l);if(0===n)for(let e=0;e<u.length;++e)o.push(zi(0));for(let e=0;e<u.length;++e){const t=u[e];o[e]=Ri(o[e],Fi(i-s,t))}}for(let e=0;e<o.length;++e)o[e]=_i(o[e],s)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let r=a;if(Yg(e,a)>1){const t=Yg(e.slice(0,n),a);r+="_".concat(t)}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new Bb(e),i=Ub(this.outputs,o,{training:!0});let c;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(a[n],i[n]);null!=r[n]&&(e=Zx(e,r[n]));const s=hh(e);t.push(s),c=0===n?e:Ri(c,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],r=this.metricsTensors[n][1];e=hh(t(a[r],i[r]))}vo(e),s.push(e)}return c=hh(c),this.calculateLosses().forEach((e=>{c=Ri(c,e)})),c}),!0,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>bo((()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:a[e]});const o=new Bb(s),i=Ub(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],s=hh(a(r[e],i[e]));n=0===e?s:Ri(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],s=hh(n(r[a],i[a]));t.push(s)}return t}))}async fit(e,t){let n,a,r,s,o,i,c,l,u,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const d=null==h.batchSize?32:h.batchSize;nv(d);const p=!1,f=await this.standardizeUserData(e,t,h.sampleWeight,h.classWeight,p,d);n=f[0],a=f[1],u=f[2];let m,g=!1;if(null!=h.validationData&&h.validationData.length>0){if(g=!0,2!==h.validationData.length)throw 3===h.validationData.length?new Hg("validationData including sample weights is not supported yet."):new Gg("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(h.validationData," is invalid."));o=h.validationData[0],i=h.validationData[1];const e=!0,t=await this.standardizeUserData(o,i,null,null,e,d);c=t[0],l=t[1],m=c.concat(l)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){g=!0;const e=Math.floor(n[0].shape[0]*(1-h.validationSplit)),t=n[0].shape[0];c=av(n,e,t),r=n,n=av(n,0,e),l=av(a,e,t),s=a,a=av(a,0,e),m=c.concat(l)}else null!=h.validationSteps&&(g=!0);const y=n.concat(a).concat(u);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let v,w;g?(this.makeTestFunction(),v=this.testFunction,w=x.slice().concat(x.map((e=>"val_"+e)))):(v=null,m=[],w=x.slice());const k=ux(h.callbacks,h.yieldEvery);return await this.fitLoop(b,y,x,d,h.epochs,h.verbose,k,v,m,h.shuffle,w,h.initialEpoch,null,null)}finally{this.isTraining=!1,iv(n,e),iv(a,t),iv(r,e),iv(s,t),iv(c,o),iv(l,i),null!=u&&xo(u)}}async fitLoop(e,t,n,a,r,s,o,i,c,l,u,h,d,p){null==a&&(a=32),null==r&&(r=1),null==l&&(l=!0),null==h&&(h=0);let f=!1;if(null!=i&&null!=c&&(f=!0),null!=p&&(f=!0,null==d))throw new Gg("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,a,d,"steps_per_epoch");let g;null!=m&&(g=My(0,m)),null==s&&(s=1);const{callbackList:y,history:b}=dx(o,s,r,h,m,d,a,f,u);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<r;++x){await y.onEpochBegin(x);const r={};if(null!=d)throw new Hg("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new Hg("batch shuffling is not implemneted yet");l&&Le(g);const s=Cd(g),o=sv(m,a);for(let l=0;l<o.length;++l){const u={};if(await y.onBatchBegin(l,u),bo((()=>{const h=o[l][0],d=o[l][1],p=Wy(s,h,d-h);u.batch=l,u.size=d-h;const m=rv(t,p),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],a=g[e];u[t]=a,vo(a)}if(l===o.length-1&&f){const e=this.testLoop(i,c,a);for(let t=0;t<n.length;++t){const a=n[t],s=e[t];vo(s),r["val_"+a]=s}}})),await y.onBatchEnd(l,u),ax(u),this.stopTraining_)break}s.dispose()}if(await y.onEpochEnd(x,r),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return ev(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),o=[];for(const i of s){const e=await i.data();o.push(e[0])}return xo(s),iv(n[0],e),iv(n[1],t),Qg(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||t.push({name:a[s].originalName,tensor:r[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=yo().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-yo().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=Jg(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Jg(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=Jg(n[a])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[Jg(Mx(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Jg(Mx(e))));{const e={};for(const t in this.metrics)e[t]=Jg(Mx(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=px(Hx(e.optimizer_config));let n,a;if("string"===typeof e.loss)n=$g(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>$g(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=$g(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>$g(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=$g(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"===typeof e){const t=Ho(e);if(0===t.length)throw new Gg("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Gg("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Gg("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await No(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat(qx),convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await No(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=Oo([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;zx(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){zx(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}dv.className="Model",Ui(dv);class pv extends dv{}pv.className="Functional",Ui(pv);class fv extends dv{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:my("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Gg("Negative dimension size caused by adding layer "+"".concat(e.name," with input shape [")+"".concat(e.inboundNodes[0].inputTensors[0].shape,"]"))}add(e){const t=e instanceof fv||e instanceof dv;let n;if(t){if(n=e,1!==n.outputs.length)throw new Gg("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Gg("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Gg("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Gg("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Pb({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Gg("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(e.name," ")+"which has ".concat(e.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==e.inboundNodes[0].outputTensors.length)throw new Gg("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=zb(this.outputs[0])}this.inboundNodes=[],new Ob({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Kg(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Ib(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new dv({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Ug("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Ug("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Ug("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Ug("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Gg("Legacy serialization format not supported yet.");n=t}else We(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,r=t;const s=new e(r);if(!(s instanceof fv))throw new Hg("Sequential.fromConfig called on non-Sequential input: ".concat(s));for(const o of n){const e=px(o,void 0,a);a&&e.setFastWeightInitDuringBuild(!0),s.add(e)}return s}set stopTraining(e){if(null==this.model)throw new Gg("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Gg("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}fv.className="Sequential",Ui(fv);class mv extends Wi{getConfig(){return{}}}class gv extends mv{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new Hg("Support for alpha values other than 1 (".concat(t,") is not implemented ")+"yet.");return pu(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}gv.className="elu",Ui(gv);class yv extends mv{apply(e){return sd(e)}}yv.className="selu",Ui(yv);class bv extends mv{apply(e){return Qh(e)}}bv.className="relu",Ui(bv);class xv extends mv{apply(e){return bo((()=>mh(6,Qh(e))))}}xv.className="relu6",Ui(xv);class vv extends mv{apply(e){return e}}vv.className="linear",Ui(vv);class wv extends mv{apply(e){return Cl(e)}}wv.className="sigmoid",Ui(wv);class kv extends mv{apply(e){return function(e){return bo((()=>{const t=Ri(.5,Fi(.2,e));return Vl(t,0,1)}))}(e)}}kv.className="hardSigmoid",Ui(kv);class Sv extends mv{apply(e){return Zu(e)}}Sv.className="softplus",Ui(Sv);class Nv extends mv{apply(e){return function(e){return bo((()=>_i(e,Ri(Qi(e),1))))}(e)}}Nv.className="softsign",Ui(Nv);class Iv extends mv{apply(e){return Rl(e)}}Iv.className="tanh",Ui(Iv);class Tv extends mv{apply(e){return md(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Tv.className="softmax",Ui(Tv);class Cv extends mv{apply(e){return $u(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Cv.className="logSoftmax",Ui(Cv);class Ev extends mv{apply(e){return bo((()=>bo((()=>{const t=Math.sqrt(2),n=Fi(.5,Ri(1,mu(_i(e,t))));return Fi(e,n)}))))}}Ev.className="gelu",Ui(Ev);class Rv extends mv{apply(e){return bo((()=>Fi(.5,Fi(e,Ri(1,Rl(Fi(Di(_i(2,Math.PI)),Ri(e,Fi(.044715,Ki(e,3))))))))))}}Rv.className="gelu_new",Ui(Rv);class Av extends mv{apply(e){return bo((()=>Fi(e,Rl(Zu(e)))))}}Av.className="mish",Ui(Av);class _v extends mv{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return bo((()=>Fi(Cl(Fi(e,t)),e)))}}function Fv(e){return e.getClassName()}function Dv(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ay(e,Vi.getMap().classNameMap,t,"activation")}function Ov(e){if(null==e){const e={className:"linear",config:{}};return Dv(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},Dv(t)}return e instanceof mv?e:Dv(e)}function Mv(e){if(null!=e&&"object"!==typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(e))}_v.className="swish",Ui(_v);class Lv extends Wi{}class zv extends Lv{constructor(e){super(),Mv(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return bo((()=>{let t=dh([1]);return this.hasL1&&(t=Ri(t,Tu(Fi(this.l1,Qi(e))))),this.hasL2&&(t=Ri(t,Tu(Fi(this.l2,Yy(e))))),kl(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}zv.className="L1L2",Ui(zv);const Pv={l1l2:"L1L2"};function Bv(e){return ty(e)}function Wv(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ay(e,Vi.getMap().classNameMap,t,"regularizer")}function Vv(e){if(null==e)return null;if("string"===typeof e){return Wv({className:e in Pv?Pv[e]:e,config:{}})}return e instanceof Lv?e:Wv(e)}class Uv extends Lb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Nb(e);let n=Qh(e);return null!=this.maxValue&&(n=Vl(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Uv.className="ReLU",Ui(Uv);class Gv extends Lb{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Nb(e);return Gu(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Gv.className="LeakyReLU",Ui(Gv);class Hv extends Lb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=wb(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Vv(e.alphaRegularizer),this.alphaConstraint=tx(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new Gg("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(e.sharedAxes));this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Ib(e)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<e.length;++a)n[a]=e[a];this.inputSpec=[new _b({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Nb(e),Fh(e,this.alpha.read())}getConfig(){const e={alphaInitializer:vb(this.alphaInitializer),alphaRegularizer:Bv(this.alphaRegularizer),alphaConstraint:$b(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Hv.className="PReLU",Ui(Hv);class jv extends Lb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Hg("Non-default alpha value (".concat(e.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Nb(e);return pu(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}jv.className="ELU",Ui(jv);class qv extends Lb{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Nb(e);return Fi(n,Ti(zu(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}qv.className="ThresholdedReLU",Ui(qv);class Kv extends Lb{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Tv).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return bo((()=>{let n=Nb(e);const a=t.mask;if(null!=a){const e=Fi(Xi(ph(n.shape),Ti(a,n.dtype)),zi(-1e9));n=Ri(n,e)}return this.axis instanceof Array?this.axis.length>1?Au(Xi(n,eh(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Xv(e,t,n){if("number"===typeof e)return Kg(e,t);if(e.length!==t)throw new Gg("The ".concat(n," argument must be an integer or tuple of ").concat(t," integers.")+" Received: ".concat(e.length," elements."));for(let r=0;r<t;++r){const s=e[r];if((a=s)!==parseInt(a.toString(),10))throw new Gg("The ".concat(n," argument must be an integer or tuple of ").concat(t)+" integers. Received: ".concat(JSON.stringify(e)," including a")+" non-integer number ".concat(s))}return e;var a}function Yv(e,t,n,a){if(null==e)return e;let r;return r="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((r+a-1)/a)}function Qv(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+Oy([n-t,0]);else{if("same"!==a)throw new Gg("Unsupport padding mode: ".concat(a,"."));e*=t}return e}function Zv(e,t){return bo((()=>(ky(t),"channelsFirst"===t?qd(e,[0,2,3,1]):e)))}function Jv(e,t){return bo((()=>(ky(t),"channelsFirst"===t?qd(e,[0,2,3,4,1]):e)))}function $v(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return bo((()=>{if(null==s&&(s="channelsLast"),ky(s),3!==e.shape.length)throw new Gg("The input of a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead."));if(3!==t.shape.length)throw new Gg("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new Gg("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(n.shape.length," instead"));if("channelsFirst"===s&&(e=qd(e,[0,2,1])),"causal"===r)throw new Hg("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Kl(e,t,a,"same"===r?"same":"valid","NWC",o);return null!=n&&(i=Zy(i,n)),i}))}function ew(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return bo((()=>{if(null==s&&(s="channelsLast"),ky(s),3!==e.rank&&4!==e.rank)throw new Gg("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));if(3!==t.rank&&4!==t.rank)throw new Gg("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));let c=Zv(e,s);if("causal"===r)throw new Hg("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=op({x:c,filter:t,strides:a,pad:"same"===r?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===s&&(c=qd(c,[0,3,1,2])),c}))}function tw(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0;return bo((()=>{if(null==s&&(s="channelsLast"),ky(s),4!==e.rank&&5!==e.rank)throw new Gg("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(e.rank,"."));if(4!==t.rank&&5!==t.rank)throw new Gg("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(e.rank,"."));let i=Jv(e,s);if("causal"===r)throw new Hg("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Ql(i,t,a,"same"===r?"same":"valid","NDHWC",o),null!=n&&(i=Zy(i,n)),"channelsFirst"===s&&(i=qd(i,[0,4,1,2,3])),i}))}Kv.className="Softmax",Ui(Kv);class nw extends Lb{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",nw.verifyArgs(t),this.rank=e,ly(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Hg("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=Xv(t.kernelSize,e,"kernelSize"),this.strides=Xv(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Sy(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,ky(this.dataFormat),this.activation=Ov(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=wb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=tx(t.biasConstraint),this.biasRegularizer=Vv(t.biasRegularizer),this.activityRegularizer=Vv(t.activityRegularizer),this.dilationRate=Xv(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Gg("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Gg("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Gg("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(e){if(Xg("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!cy(e.kernelSize,"number",1,3))throw new Gg("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(e.kernelSize),"."))}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Fv(this.activation),useBias:this.useBias,biasInitializer:vb(this.biasInitializer),biasRegularizer:Bv(this.biasRegularizer),activityRegularizer:Bv(this.activityRegularizer),biasConstraint:$b(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class aw extends nw{constructor(e,t){super(e,t),this.kernel=null,aw.verifyArgs(t),this.filters=t.filters,ly(this.filters,"filters"),this.kernelInitializer=wb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=tx(t.kernelConstraint),this.kernelRegularizer=Vv(t.kernelRegularizer)}build(e){e=Ib(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Gg("The channel dimension of the input should be defined. "+"Found ".concat(e[t]));const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return bo((()=>{let t;e=Nb(e);const n=null==this.bias?null:this.bias.read(),a=hy(this.activation.getClassName());if(null!=a&&2===this.rank)t=ew(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=$v(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=ew(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Hg("convolutions greater than 3D are not implemented yet.");t=tw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Ib(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=Yv(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:vb(this.kernelInitializer),kernelRegularizer:Bv(this.kernelRegularizer),kernelConstraint:$b(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new Gg("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(e.filters)))}}class rw extends aw{constructor(e){super(2,e),rw.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!cy(e.kernelSize,"number",1,2))throw new Gg("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(e.kernelSize),"."))}}rw.className="Conv2D",Ui(rw);class sw extends aw{constructor(e){super(3,e),sw.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Gg("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(e.kernelSize),"."))}}sw.className="Conv3D",Ui(sw);class ow extends rw{constructor(e){if(super(e),this.inputSpec=[new _b({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Gg("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(4!==(e=Ib(e)).length)throw new Gg("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Gg("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new _b({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return bo((()=>{let t=Nb(e);if(4!==t.shape.length)throw new Gg("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const o=n[r],i=n[s],c=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],h=this.strides[1],d=[a,Qv(o,u,c,this.padding),Qv(i,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=qd(t,[0,2,3,1]));let p=Yl(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=qd(p,[0,3,1,2])),null!=this.bias&&(p=Zy(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Ib(e)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const s=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return t[n]=this.filters,t[a]=Qv(t[a],i,s,this.padding),t[r]=Qv(t[r],c,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}ow.className="Conv2DTranspose",Ui(ow);class iw extends sw{constructor(e){if(super(e),this.inputSpec=[new _b({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Gg("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(5!==(e=Ib(e)).length)throw new Gg("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Gg("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new _b({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return bo((()=>{let t=Nb(e);if(5!==t.shape.length)throw new Gg("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,s,o;"channelsFirst"===this.dataFormat?(o=2,r=3,s=4):(o=1,r=2,s=3);const i=n[o],c=n[r],l=n[s],u=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[a,Qv(i,p,u,this.padding),Qv(c,f,h,this.padding),Qv(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=qd(t,[0,2,3,4,1]));let y=Jl(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=qd(y,[0,4,1,2,3])),null!==this.bias&&(y=Zy(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=Ib(e)).slice();let n,a,r,s;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,s=4):(n=4,a=1,r=2,s=3);const o=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],u=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[a]=Qv(t[a],l,o,this.padding),t[r]=Qv(t[r],u,i,this.padding),t[s]=Qv(t[s],h,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}iw.className="Conv3DTranspose",Ui(iw);class cw extends aw{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Gg("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Gg("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Gg("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(t.padding)));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=wb(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Vv(t.depthwiseRegularizer),this.depthwiseConstraint=tx(t.depthwiseConstraint),this.pointwiseInitializer=wb(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Vv(t.pointwiseRegularizer),this.pointwiseConstraint=tx(t.pointwiseConstraint)}build(e){if((e=Ib(e)).length<this.rank+2)throw new Gg("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(e)));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Gg("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(e[t])));const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new _b({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return bo((()=>{let t;if(e=Nb(e),1===this.rank)throw new Hg("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=qd(e,[0,2,3,1])),t=od(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Zy(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=qd(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=vb(this.depthwiseInitializer),e.pointwiseInitializer=vb(this.pointwiseInitializer),e.depthwiseRegularizer=Bv(this.depthwiseRegularizer),e.pointwiseRegularizer=Bv(this.pointwiseRegularizer),e.depthwiseConstraint=$b(this.depthwiseConstraint),e.pointwiseConstraint=$b(this.pointwiseConstraint),e}}cw.className="SeparableConv";class lw extends cw{constructor(e){super(2,e)}}lw.className="SeparableConv2D",Ui(lw);class uw extends aw{constructor(e){super(1,e),uw.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!cy(e.kernelSize,"number",1,1))throw new Gg("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(e.kernelSize),"."))}}uw.className="Conv1D",Ui(uw);class hw extends Lb{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return bo((()=>{if(e=Nb(e),"channelsLast"===this.dataFormat){const t=Uy(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Uy(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Uy(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Uy(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}hw.className="Cropping2D",Ui(hw);class dw extends Lb{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ky(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,iy(yy,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return bo((()=>{let t=Nb(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=qd(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?hf.resizeNearestNeighbor(t,[e,a]):hf.resizeBilinear(t,[e,a]);return qd(r,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?hf.resizeNearestNeighbor(t,[e,a]):hf.resizeBilinear(t,[e,a])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}dw.className="UpSampling2D",Ui(dw);class pw extends nw{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=wb(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=tx(e.depthwiseConstraint),this.depthwiseRegularizer=Vv(e.depthwiseRegularizer)}build(e){if((e=Ib(e)).length<4)throw new Gg("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(e),"."));const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Gg("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(e[t],")."));const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return bo((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return bo((()=>{null==r&&(r="channelsLast"),ky(r);let o=Zv(e,r);if(4!==e.rank)throw new Gg("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));if(4!==t.rank)throw new Gg("depthwiseKernel is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));return o=su(o,t,n,"same"===a?"same":"valid","NHWC",s),"channelsFirst"===r&&(o=qd(o,[0,3,1,2])),o}))}(e=Nb(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Zy(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Ib(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Yv(t,this.kernelSize[0],this.padding,this.strides[0]),s=Yv(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=vb(this.depthwiseInitializer),e.depthwiseRegularizer=Bv(this.depthwiseRegularizer),e.depthwiseConstraint=$b(this.depthwiseRegularizer),e}}function fw(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new Gg("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function mw(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return bo((()=>{const c=t.shape.length;if(c<3)throw new Gg("Input should be at least 3D, but is ".concat(c,"D."));const l=[1,0].concat(My(2,c));if(t=qd(t,l),null!=s)throw new Hg("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=Ti(Ti(r,"bool"),"float32"),r.rank===c-1&&(r=_u(r,-1)),r=qd(r,l)),a&&(t=Jh(t,0),null!=r&&(r=Jh(r,0)));const u=[];let h,d=n;const p=t.shape[0],f=Wd(t);let m,g;null!=r&&(m=Wd(r));for(let t=0;t<p;++t){const n=f[t],a=bo((()=>e(n,d)));if(null==r)h=a[0],d=a[1];else{const e=bo((()=>{const e=m[t],n=Xi(Sh(e),e);return{output:Ri(Fi(a[0],e),Fi(d[0],n)),newStates:d.map(((t,r)=>Ri(Fi(a[1][r],e),Fi(t,n))))}}));h=e.output,d=e.newStates}i&&u.push(h)}if(i){g=Sd(u,1)}return[h,g,d]}))}pw.className="DepthwiseConv2D",Ui(pw);class gw extends Lb{constructor(e){let t;if(super(e),null==e.cell)throw new Gg("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Nw({cells:e.cell}):e.cell,null==t.stateSize)throw new Gg("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new _b({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return My(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){kb(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return bo((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Hg("Constants support is not implemented in RNN yet.");kb(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new _b({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!He(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new Gg("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=r.map((e=>new _b({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];bo((()=>{if(!this.stateful)throw new Vg("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Gg("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>dh([n,e]))):this.states_=[dh([n,this.cell.stateSize])];else if(null==e)xo(this.states_),null!=this.keptStates&&(xo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>dh([n,e]))):this.states_[0]=dh([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Gg("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));!0===t?this.keptStates.push(this.states_.slice()):xo(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,r];if(!He(a.shape,s))throw new Gg("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(s,", received shape=").concat(a.shape));this.states_[t]=a}}this.states_=this.states_.map((e=>vo(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=fw(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],o=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new _b({shape:e.shape}));o=o.concat(this.stateSpec)}null!=a&&(t.constants=a,s=s.concat(a),this.numConstants=a.length);if(s[0]instanceof Fb){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return bo((()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let r=null==t?null:t.initialState;e=Nb(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new Gg("RNN Layer has ".concat(s," state(s) but was passed ")+"".concat(r.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},i=mw(((e,t)=>{const n=this.cell.call([e].concat(t),o);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],u=i[2];this.stateful&&this.resetStates(u,a);const h=this.returnSequences?l:c;return this.returnState?[h].concat(u):h}))}getInitialState(e){return bo((()=>{let t=dh(e.shape);return t=Tu(t,[1,2]),t=By(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?jy(t,[1,e]):t)):this.cell.stateSize>1?[jy(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===gw.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=px(t.cell,n);return new e(Object.assign(t,{cell:a}))}}gw.className="RNN",Ui(gw);class yw extends Lb{}class bw extends yw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ly(this.units,"units"),this.activation=Ov(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=wb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Vv(e.kernelRegularizer),this.recurrentRegularizer=Vv(e.recurrentRegularizer),this.biasRegularizer=Vv(e.biasRegularizer),this.kernelConstraint=tx(e.kernelConstraint),this.recurrentConstraint=tx(e.recurrentConstraint),this.biasConstraint=tx(e.biasConstraint),this.dropout=Dy([1,Oy([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Dy([1,Oy([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ib(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return bo((()=>{if(2!==e.length)throw new Gg("SimpleRNNCell expects 2 input Tensors, got ".concat(e.length,"."));let n=e[1];e=e[0];const a=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Iw({ones:()=>Sh(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Iw({ones:()=>Sh(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;r=Ky(null!=s?Fi(e,s):e,this.kernel.read()),null!=this.bias&&(r=Zy(r,this.bias.read())),null!=o&&(n=Fi(n,o));let i=Ri(r,Ky(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Fv(this.activation),useBias:this.useBias,kernelInitializer:vb(this.kernelInitializer),recurrentInitializer:vb(this.recurrentInitializer),biasInitializer:vb(this.biasInitializer),kernelRegularizer:Bv(this.kernelRegularizer),recurrentRegularizer:Bv(this.recurrentRegularizer),biasRegularizer:Bv(this.biasRegularizer),activityRegularizer:Bv(this.activityRegularizer),kernelConstraint:$b(this.kernelConstraint),recurrentConstraint:$b(this.recurrentConstraint),biasConstraint:$b(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}bw.className="SimpleRNNCell",Ui(bw);class xw extends gw{constructor(e){e.cell=new bw(e),super(e)}call(e,t){return bo((()=>{null!=this.cell.dropoutMask&&(xo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return new e(t)}}xw.className="SimpleRNN",Ui(xw);class vw extends yw{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Gg("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ly(this.units,"units"),this.activation=Ov(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ov(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=wb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Vv(e.kernelRegularizer),this.recurrentRegularizer=Vv(e.recurrentRegularizer),this.biasRegularizer=Vv(e.biasRegularizer),this.kernelConstraint=tx(e.kernelConstraint),this.recurrentConstraint=tx(e.recurrentConstraint),this.biasConstraint=tx(e.biasConstraint),this.dropout=Dy([1,Oy([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Dy([1,Oy([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Ib(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return bo((()=>{if(2!==e.length)throw new Gg("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Iw({ones:()=>Sh(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Iw({ones:()=>Sh(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,s=this.recurrentDropoutMask;let o,i,c;0<this.dropout&&this.dropout<1&&(e=Fi(e,r[0]));let l=Ky(e,this.kernel.read());this.useBias&&(l=Zy(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=Fi(a,s[0]));const u=this.recurrentKernel.read(),[h,d]=xd(u,[2*this.units,this.units],u.rank-1),p=Ky(a,h),[f,m,g]=xd(l,3,l.rank-1),[y,b]=xd(p,2,p.rank-1);o=this.recurrentActivation.apply(Ri(f,y)),i=this.recurrentActivation.apply(Ri(m,b));const x=Ky(Fi(i,a),d);c=this.activation.apply(Ri(g,x));const v=Ri(Fi(o,a),Fi(Ri(1,Qu(o)),c));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Fv(this.activation),recurrentActivation:Fv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:vb(this.kernelInitializer),recurrentInitializer:vb(this.recurrentInitializer),biasInitializer:vb(this.biasInitializer),kernelRegularizer:Bv(this.kernelRegularizer),recurrentRegularizer:Bv(this.recurrentRegularizer),biasRegularizer:Bv(this.biasRegularizer),activityRegularizer:Bv(this.activityRegularizer),kernelConstraint:$b(this.kernelConstraint),recurrentConstraint:$b(this.recurrentConstraint),biasConstraint:$b(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}vw.className="GRUCell",Ui(vw);class ww extends gw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new vw(e),super(e)}call(e,t){return bo((()=>{null!=this.cell.dropoutMask&&(xo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}ww.className="GRU",Ui(ww);class kw extends yw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ly(this.units,"units"),this.activation=Ov(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ov(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=wb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Vv(e.kernelRegularizer),this.recurrentRegularizer=Vv(e.recurrentRegularizer),this.biasRegularizer=Vv(e.biasRegularizer),this.kernelConstraint=tx(e.kernelConstraint),this.recurrentConstraint=tx(e.recurrentConstraint),this.biasConstraint=tx(e.biasConstraint),this.dropout=Dy([1,Oy([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Dy([1,Oy([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Ib(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends nb{apply(t,a){const r=e.apply([n]),s=(new rb).apply([n]),o=e.apply([2*n]);return Hy(Hy(r,s),o)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return bo((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Gg("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Iw({ones:()=>Sh(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Iw({ones:()=>Sh(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;let i,c,l,u;0<this.dropout&&this.dropout<1&&(e=Fi(e,s[0]));let h=Ky(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=Fi(a,o[0])),h=Ri(h,Ky(a,this.recurrentKernel.read())),this.useBias&&(h=Zy(h,this.bias.read()));const[d,p,f,m]=xd(h,4,h.rank-1);i=this.recurrentActivation.apply(d),c=this.recurrentActivation.apply(p),l=Ri(Fi(c,r),Fi(i,this.activation.apply(f))),u=this.recurrentActivation.apply(m);const g=Fi(u,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Fv(this.activation),recurrentActivation:Fv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:vb(this.kernelInitializer),recurrentInitializer:vb(this.recurrentInitializer),biasInitializer:vb(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Bv(this.kernelRegularizer),recurrentRegularizer:Bv(this.recurrentRegularizer),biasRegularizer:Bv(this.biasRegularizer),activityRegularizer:Bv(this.activityRegularizer),kernelConstraint:$b(this.kernelConstraint),recurrentConstraint:$b(this.recurrentConstraint),biasConstraint:$b(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}kw.className="LSTMCell",Ui(kw);class Sw extends gw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new kw(e),super(e)}call(e,t){return bo((()=>{null!=this.cell.dropoutMask&&(xo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Sw.className="LSTM",Ui(Sw);class Nw extends yw{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return bo((()=>{let n=e.slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let s;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=a[o],s=0===o?[e[0]].concat(n):[s[0]].concat(n),s=i.call(s,t),r.push(s.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;kb(e)&&(e=e[0]),this.cells.forEach(((n,a)=>{Cy("RNNCell_".concat(a),(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[];for(const r of t.cells)a.push(px(r,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Rb(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Ab(t)}}function Iw(e){const{ones:t,rate:n,training:a=!1,count:r=1,dropoutFunc:s}=e,o=()=>null!=s?s(t(),n):Jy(t(),n),i=()=>$y(o,t,a);if(!r||r<=1)return vo(i().clone());return Array(r).fill(void 0).map(i).map((e=>vo(e.clone())))}Nw.className="StackedRNNCells",Ui(Nw);var Tw=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n};class Cw extends gw{constructor(e){if(e.unroll)throw new Hg("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Hg("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new _b({ndim:5})]}call(e,t){return bo((()=>{if(null!=this.cell.dropoutMask&&(xo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Gg("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return bo((()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=dh([a[0],...a.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];bo((()=>{if(!this.stateful)throw new Vg("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new Gg("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>dh(r))):this.states_=[dh(r)];else if(null==e)xo(this.states_),null!=this.keptStates&&(xo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>dh(r))):this.states_[0]=dh(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Gg("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));t?this.keptStates.push(this.states_.slice()):xo(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=r;if(!He(n.shape,a))throw new Gg("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(a,", received shape=").concat(n.shape));this.states_[t]=n}}this.states_=this.states_.map((e=>vo(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:o}=this.cell,i="channelsFirst"===t,c=e[i?3:2],l=e[i?4:3],u=Yv(c,a[0],r,s[0],o[0]),h=Yv(l,a[1],r,s[1],o[1]);return[...e.slice(0,2),...i?[n,u,h]:[u,h,n]]}}Cw.className="ConvRNN2D";class Ew extends kw{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,ly(this.filters,"filters"),this.kernelSize=Xv(n,2,"kernelSize"),this.kernelSize.forEach((e=>ly(e,"kernelSize"))),this.strides=Xv(a||1,2,"strides"),this.strides.forEach((e=>ly(e,"strides"))),this.padding=r||"valid",Sy(this.padding),this.dataFormat=s||"channelsLast",ky(this.dataFormat),this.dilationRate=Xv(o||1,2,"dilationRate"),this.dilationRate.forEach((e=>ly(e,"dilationRate")))}build(e){var t;e=Ib(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Gg("The channel dimension of the input should be defined. "+"Found ".concat(e[n]));const a=e[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends nb{apply(e,t){return Gy([n.apply([a]),ph([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return bo((()=>{if(3!==e.length)throw new Gg("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=t.training||!1,a=e[0],r=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Iw({ones:()=>Sh(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=(e,t,n)=>t&&t[n]?Fi(t[n],e):e;let c=i(a,o,0),l=i(a,o,1),u=i(a,o,2),h=i(a,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Iw({ones:()=>Sh(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=i(r,d,0),f=i(r,d,1),m=i(r,d,2),g=i(r,d,3);const[y,b,x,v]=xd(this.kernel.read(),4,3),[w,k,S,N]=this.useBias?xd(this.bias.read(),4):[null,null,null,null];c=this.inputConv(c,y,w,this.padding),l=this.inputConv(l,b,k,this.padding),u=this.inputConv(u,x,S,this.padding),h=this.inputConv(h,v,N,this.padding);const[I,T,C,E]=xd(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,I),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E);const R=this.recurrentActivation.apply(Ri(c,p)),A=this.recurrentActivation.apply(Ri(l,f)),_=Ri(Fi(A,s),Fi(R,this.activation.apply(Ri(u,m)))),F=Fi(this.recurrentActivation.apply(Ri(h,g)),this.activation.apply(_));return[F,F,_]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=Tw(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(e,t,n,a){const r=ql(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Zy(r,n,this.dataFormat):r}recurrentConv(e,t){return ql(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Ew.className="ConvLSTM2DCell",Ui(Ew);class Rw extends Cw{constructor(e){const t=new Ew(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Rw.className="ConvLSTM2D",Ui(Rw);class Aw extends Lb{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?t[a]:this.noiseShape[a]);return n}call(e,t){return bo((()=>{this.invokeCallHook(e,t);const n=Nb(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return $y((()=>Jy(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Aw.className="Dropout",Ui(Aw);class _w extends Aw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}_w.className="SpatialDropout1D",Ui(_w);class Fw extends Lb{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,ly(this.units,"units"),this.activation=Ov(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=wb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=wb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=tx(e.kernelConstraint),this.biasConstraint=tx(e.biasConstraint),this.kernelRegularizer=Vv(e.kernelRegularizer),this.biasRegularizer=Vv(e.biasRegularizer),this.activityRegularizer=Vv(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Ib(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Ib(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return bo((()=>{this.invokeCallHook(e,t);const n=Nb(e),a=hy(this.activation.getClassName());let r;return null!=a?r=Ky(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=Ky(n,this.kernel.read()),null!=this.bias&&(r=Zy(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:Fv(this.activation),useBias:this.useBias,kernelInitializer:vb(this.kernelInitializer),biasInitializer:vb(this.biasInitializer),kernelRegularizer:Bv(this.kernelRegularizer),biasRegularizer:Bv(this.biasRegularizer),activityRegularizer:Bv(this.activityRegularizer),kernelConstraint:$b(this.kernelConstraint),biasConstraint:$b(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Fw.className="Dense",Ui(Fw);class Dw extends Lb{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ib(e);for(const t of e.slice(1))if(null==t)throw new Gg('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(e.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[e[0],Fy(e,1)]}call(e,t){return bo((()=>{this.invokeCallHook(e,t);let n=Nb(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=qd(n,e)}return function(e){if(e.rank<=1)throw new Gg("batchFlatten requires a minimum rank of 2. Got rank: ".concat(e.rank,"."));const t=[e.shape[0],Fy(e.shape,1)];return kl(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Dw.className="Flatten",Ui(Dw);class Ow extends Lb{constructor(e){super(e),this.supportsMasking=!0,this.activation=Ov(e.activation)}call(e,t){return bo((()=>{this.invokeCallHook(e,t);const n=Nb(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Fv(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Ow.className="Activation",Ui(Ow);class Mw extends Lb{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return bo((()=>{return e=Nb(e),t=e,n=this.n,bo((()=>{if(2!==t.shape.length)throw new Gg("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(t.shape.length," tensor."));return jy(By(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Mw.className="RepeatVector",Ui(Mw);class Lw extends Lb{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let r=1,s=null;for(let i=0;i<a.length;++i){const e=a[i];if(this.isUnknown(e)){if(null!==s)throw new Gg("Can only specifiy one unknown dimension.");s=i}else r*=e}const o=Fy(e);if(null!==s){if(0===r||o%r!==0)throw new Gg(n);a[s]=o/r}else if(o!==r)throw new Gg(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return bo((()=>{this.invokeCallHook(e,t);const n=Nb(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return kl(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Lw.className="Reshape",Ui(Lw);class zw extends Lb{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(e.dims," instead."));const t=My(1,e.dims.length+1);if(!He(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new _b({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Ib(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return qd(Nb(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}zw.className="Permute",Ui(zw);class Pw extends Lb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Nb(e);return $c(wh(n,this.maskValue),-1)}call(e,t){return bo((()=>{this.invokeCallHook(e,t);const n=Nb(e),a=$c(wh(n,this.maskValue),-1,!0);return Fi(n,Ti(a,n.dtype))}))}}Pw.className="Masking",Ui(Pw);class Bw extends Lb{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Zg(e.inputLength))}this.inputDim=e.inputDim,ly(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ly(this.outputDim,"outputDim"),this.embeddingsInitializer=wb(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Vv(e.embeddingsRegularizer),this.activityRegularizer=Vv(e.activityRegularizer),this.embeddingsConstraint=tx(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return bo((()=>this.maskZero?(e=Nb(e),wh(e,Mi(e))):null))}computeOutputShape(e){if(e=Ib(e),null==this.inputLength)return[...e,this.outputDim];const t=Zg(this.inputLength);if(t.length!==e.length-1)throw new Gg('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));{let n=0;for(let a=0;a<t.length;++a){const r=t[a],s=e[a+1];if(null!=r&&null!=s&&r!==s)throw new Gg('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));null==r&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return bo((()=>{this.invokeCallHook(e,t);let n=Nb(e);"int32"!==n.dtype&&(n=Py(n,"int32"));const a=Xy(this.embeddings.read(),kl(n,[n.size]));return kl(a,Ib(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:vb(this.embeddingsInitializer),embeddingsRegularizer:Bv(this.embeddingsRegularizer),activityRegularizer:Bv(this.activityRegularizer),embeddingsConstraint:$b(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Bw.className="Embedding",Ui(Bw);class Ww extends Lb{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Hg}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const r=e[e.length-t.length+a],s=t[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new Gg("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ib(e)]),e.length<2)throw new Gg("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(e.length," input(s)."));let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=sy(t),t.length>1)throw new Gg("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(e),"."));let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const a=e.map((e=>e.length));-1===e.indexOf(null)&&1===sy(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return bo((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const a=Oy(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=By(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,a=e[0],r=e.slice(1).concat([a]);let o=kl(s,[a].concat(Fy(e.slice(1))));o=qd(o,[1,0]),o=kl(o,r),t.push(o),n=!0}else if(e>1){const a=My(1,e).concat([0]);t.push(qd(s,a)),n=!0}else t.push(s)}let a=this.mergeFunction(t);const r=a.rank;if(n)if(null==r){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=kl(qd(kl(a,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(My(0,r-1));a=qd(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const n=null==e[a]?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const a of e)null!=a&&null!==a[0]&&n.push(a[0]);return n=sy(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return bo((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Gg("`mask` should be an Array");if(!Array.isArray(e))throw new Gg("`inputs` should be an Array");if(t.length!==e.length)throw new Gg("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(e.length," vs ").concat(t.length,")"));if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:_u(e,0))))[0];for(let e=1;e<t.length-1;++e)n=th(n,t[e]);return n}))}}class Vw extends Ww{constructor(e){super(e)}mergeFunction(e){return bo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ri(t,e[n]);return t}))}}Vw.className="Add",Ui(Vw);class Uw extends Ww{constructor(e){super(e)}mergeFunction(e){return bo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Fi(t,e[n]);return t}))}}Uw.className="Multiply",Ui(Uw);class Gw extends Ww{constructor(e){super(e)}mergeFunction(e){return bo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ri(t,e[n]);return Fi(1/e.length,t)}))}}Gw.className="Average",Ui(Gw);class Hw extends Ww{constructor(e){super(e)}mergeFunction(e){return bo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ec(t,e[n]);return t}))}}Hw.className="Maximum",Ui(Hw);class jw extends Ww{constructor(e){super(e)}mergeFunction(e){return bo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=mh(t,e[n]);return t}))}}jw.className="Minimum",Ui(jw);class qw extends Ww{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Gg("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const a of e)if(null!=a){t=!1;break}if(t)return;const n=[];for(let a=0;a<e.length;++a){const t=e[a].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(He(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new Gg("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return bo((()=>Gy(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Gg("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[a]||null==r[a]){n[a]=null;break}n[a]+=r[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Gg("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Gg("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Gg("Mismatch in the length of mask (".concat(t.length,") ")+"and the legnth of inputs (".concat(e.length,")"));return bo((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const a=[];for(let s=0;s<e.length;++s)null==t[s]?a.push(Ti(Sh(e[s]),"bool")):t[s].rank<e[s].rank?a.push(_u(t[s],-1)):a.push(t[s]);const r=Il(a,this.axis);return Jc(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Kw(e,t){for(;e<0;)e+=t;return e}qw.className="Concatenate",Ui(qw);class Xw extends Ww{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){We(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Hg("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new Gg("Dimension incompatibility: "+"".concat(t[a[0]]," !== ").concat(n[a[1]]))}mergeFunction(e){if(2!==e.length)throw new Gg("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(e.length," input(s)."));let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Kw(t,e[n].shape.length))):[Kw(this.axes,n.shape.length),Kw(this.axes,a.shape.length)],this.normalize&&(n=fx(n,t[0]),a=fx(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Hg("batchDot is not implemented for tensors of 4D or higher rank yet");if(We(e.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(e.shape.length))),We(e.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(t.shape.length))),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Hg("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,r=t.shape.length;null==n&&(n=[a-1,r-2]);const s=n;return bo((()=>{let n,o;if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=kl(t,t.shape.concat(e))}else if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=kl(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=s[0]===s[1]?Tu(Fi(e,t),s[0]):Tu(Fi(qd(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,a=s[1]===t.shape.length-1;o=Tl(e,t,n,a)}if(n>0){let e;e=a>r?a+r-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);o=kd(o,t)}return 1===o.shape.length&&(o=_u(o,1)),o}))}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Kw(this.axes,e.length),Kw(this.axes,t.length)],n}computeOutputShape(e){We(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Hg("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Xw.className="Dot",Ui(Xw);class Yw extends Lb{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return bo((()=>{this.invokeCallHook(e,t);const n=Nb(e);return $y((()=>Ri(qy(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Yw.className="GaussianNoise",Ui(Yw);class Qw extends Lb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return bo((()=>{this.invokeCallHook(e,t);const n=Nb(e);if(this.rate>0&&this.rate<1){return $y((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Fi(n,qy(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}Qw.className="GaussianDropout",Ui(Qw);class Zw extends Lb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Nb(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return bo((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),a=()=>{const t=Nb(e),a=-1.7580993408473766;let r=Pu(jh(n),this.rate);r=Py(r,"float32");const s=((1-this.rate)*(1+this.rate*a**2))**-.5,o=-s*a*this.rate,i=Ri(Fi(t,r),Fi(Ri(r,-1),a));return Ri(Fi(i,s),o)};return $y(a,(()=>Nb(e)),t.training||!1)}return e}))}}function Jw(e,t,n,a,r){let s,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)s=Dl(e,t,n,a,r,o);else if(3===e.rank)s=Ol(e,t,n,a,r,o);else{if(4!==e.rank)throw new Hg("batchNormalization is not implemented for array of rank ".concat(e.rank," ")+"yet");s=Ml(e,t,n,a,r,o)}return s}function $w(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return He(a.slice().sort(),My(0,e.rank-1))?function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return bo((()=>{const s=bh(e,a),o=s.mean,i=s.variance;return[Jw(e,o,i,n,t,r),o,i]}))}(e,t,n,a,r):function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return bo((()=>{const s=bh(e,a),o=s.mean,i=s.variance,c=[];for(const t of My(0,e.rank))-1!==a.indexOf(t)?c.push(1):c.push(e.shape[t]);const l=kl(o,c),u=kl(i,c),h=null==t?null:kl(t,c),d=null==n?null:kl(n,c);return[Jw(e,l,u,d,h,r),o,i]}))}(e,t,n,a,r)}Zw.className="AlphaDropout",Ui(Zw);class ek extends Lb{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=wb(e.betaInitializer||"zeros"),this.gammaInitializer=wb(e.gammaInitializer||"ones"),this.movingMeanInitializer=wb(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=wb(e.movingVarianceInitializer||"ones"),this.betaConstraint=tx(e.betaConstraint),this.gammaConstraint=tx(e.gammaConstraint),this.betaRegularizer=Vv(e.betaRegularizer),this.gammaRegularizer=Vv(e.gammaRegularizer)}build(e){e=Ib(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Gg("Axis ".concat(t," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(e),"."));this.inputSpec=[new _b({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return bo((()=>{const n=null!=t.training&&t.training,a=Nb(e),r=a.shape,s=r.length,o=My(0,s),i=this.axis>=0?this.axis:this.axis+s;o.splice(i,1);const c=Kg(1,s);c[i]=r[i];const l=o.slice();l.sort();const u=!He(l,My(0,s).slice(0,s-1));if(!n)return(()=>{if(u){const e=kl(this.movingMean.read(),c),t=kl(this.movingVariance.read(),c),n=this.center?kl(this.beta.read(),c):null,r=this.scale?kl(this.gamma.read(),c):null;return Jw(a,e,t,n,r,this.epsilon)}return Jw(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=$w(a,this.gamma.read(),this.beta.read(),o,this.epsilon),f=(e,t,n)=>{bo((()=>{const a=1-n,r=e.read(),s=Fi(Xi(r,t),a);e.write(Xi(r,s))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:vb(this.betaInitializer),gammaInitializer:vb(this.gammaInitializer),movingMeanInitializer:vb(this.movingMeanInitializer),movingVarianceInitializer:vb(this.movingVarianceInitializer),betaRegularizer:Bv(this.betaRegularizer),gammaRegularizer:Bv(this.gammaRegularizer),betaConstraint:$b(this.betaConstraint),gammaConstraint:$b(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ek.className="BatchNormalization",Ui(ek);class tk extends Lb{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=wb(e.betaInitializer||"zeros"),this.gammaInitializer=wb(e.gammaInitializer||"ones"),this.betaRegularizer=Vv(e.betaRegularizer),this.gammaRegularizer=Vv(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Ib(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error("Invalid axis: ".concat(r));if(this.axis.length!==sy(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map((t=>e[t])),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,t){const n=Nb(e),a=n.shape,r=a.length;return bo((()=>{let{mean:e,variance:t}=bh(n,this.axis,!0);const s=Kg(1,r);for(const n of this.axis)s[n]=a[n];const o=e=>null!=e&&e.shape.length!==r?kl(e,s):e;let i=this.scale?o(this.gamma.read()):null,c=this.center?o(this.beta.read()):null;const l=[],u=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(l.push(a[n]),u.push(1)):(l.push(1),u.push(a[n]));return e=Du(e,l),t=Du(t,l),null!=i&&(i=Du(i,u)),null!=c&&(c=Du(c,u)),Jw(n,e,t,c,i,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:vb(this.betaInitializer),gammaInitializer:vb(this.gammaInitializer),betaRegularizer:Bv(this.betaRegularizer),gammaRegularizer:Bv(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}tk.className="LayerNormalization",Ui(tk);class nk extends Lb{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Gg("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(e.padding.length," array."));let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Gg("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(e.padding[0].length," array."));if(t=e.padding[0],2!==e.padding[1].length)throw new Gg("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(e.padding[1].length," array."));n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new _b({ndim:4})]}computeOutputShape(e){let t,n;return e=Ib(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return bo((()=>{return t=Nb(e),n=this.padding,a=this.dataFormat,bo((()=>{if(4!==t.rank)throw new Gg("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(t.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Gg("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new Gg("Unknown data format: ".concat(a,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Ih(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function ak(e,t,n,a,r,s){return bo((()=>{let o;ky(r),Ny(s),Sy(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=Zv(e,r);const i="same"===a?"same":"valid";return o="max"===s?ch(e,t,n,i):Sl(e,t,n,i),"channelsFirst"===r&&(o=qd(o,[0,3,1,2])),o}))}function rk(e,t,n,a,r,s){return bo((()=>{let o;ky(r),Ny(s),Sy(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=Jv(e,r);const i="same"===a?"same":"valid";return o="max"===s?lh(e,t,n,i):Nl(e,t,n,i),"channelsFirst"===r&&(o=qd(o,[0,4,1,2,3])),o}))}nk.className="ZeroPadding2D",Ui(nk);class sk extends Lb{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new Gg("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.poolSize)));this.poolSize=e.poolSize}if(ly(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new Gg("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.strides)));this.strides=e.strides}ly(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Sy(this.padding),this.inputSpec=[new _b({ndim:3})]}computeOutputShape(e){const t=Yv((e=Ib(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return bo((()=>{this.invokeCallHook(e,t),e=By(Nb(e),2);const n=this.poolingFunction(Nb(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return kd(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class ok extends sk{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return ky(r),Sy(a),ak(e,t,n,a,r,"max")}}ok.className="MaxPooling1D",Ui(ok);class ik extends sk{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return ky(r),Sy(a),ak(e,t,n,a,r,"avg")}}ik.className="AveragePooling1D",Ui(ik);class ck extends Lb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Gg("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides];ly(this.poolSize,"poolSize"),ly(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ky(this.dataFormat),Sy(this.padding),this.inputSpec=[new _b({ndim:4})]}computeOutputShape(e){e=Ib(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Yv(t,this.poolSize[0],this.padding,this.strides[0]),n=Yv(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return bo((()=>(this.invokeCallHook(e,t),this.poolingFunction(Nb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class lk extends ck{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return ky(r),Sy(a),ak(e,t,n,a,r,"max")}}lk.className="MaxPooling2D",Ui(lk);class uk extends ck{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return ky(r),Sy(a),ak(e,t,n,a,r,"avg")}}uk.className="AveragePooling2D",Ui(uk);class hk extends Lb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Gg("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ly(this.poolSize,"poolSize"),ly(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ky(this.dataFormat),Sy(this.padding),this.inputSpec=[new _b({ndim:5})]}computeOutputShape(e){e=Ib(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Yv(t,this.poolSize[0],this.padding,this.strides[0]),n=Yv(n,this.poolSize[1],this.padding,this.strides[1]),a=Yv(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return bo((()=>(this.invokeCallHook(e,t),this.poolingFunction(Nb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class dk extends hk{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return ky(r),Sy(a),rk(e,t,n,a,r,"max")}}dk.className="MaxPooling3D",Ui(dk);class pk extends hk{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return ky(r),Sy(a),rk(e,t,n,a,r,"avg")}}pk.className="AveragePooling3D",Ui(pk);class fk extends Lb{constructor(e){super(e),this.inputSpec=[new _b({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Hg}}class mk extends fk{constructor(e){super(e||{})}call(e,t){return bo((()=>{const t=Nb(e);return hh(t,1)}))}}mk.className="GlobalAveragePooling1D",Ui(mk);class gk extends fk{constructor(e){super(e||{})}call(e,t){return bo((()=>{const t=Nb(e);return Nu(t,1)}))}}gk.className="GlobalMaxPooling1D",Ui(gk);class yk extends Lb{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ky(this.dataFormat),this.inputSpec=[new _b({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Hg}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class bk extends yk{call(e,t){return bo((()=>{const t=Nb(e);return"channelsLast"===this.dataFormat?hh(t,[1,2]):hh(t,[2,3])}))}}bk.className="GlobalAveragePooling2D",Ui(bk);class xk extends yk{call(e,t){return bo((()=>{const t=Nb(e);return"channelsLast"===this.dataFormat?Nu(t,[1,2]):Nu(t,[2,3])}))}}xk.className="GlobalMaxPooling2D",Ui(xk);class vk extends Lb{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=px(t.layer,n);delete t.layer;const r={layer:a};return Object.assign(r,t),new e(r)}}class wk extends vk{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Ib(e)).length<3)throw new Gg("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(e)));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Ib(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return bo((()=>mw(((e,n)=>[Nb(this.layer.call(e,t)),[]]),e=Nb(e),[],!1,null,null,!1,!0)[1]))}}wk.className="TimeDistributed",Ui(wk);class kk extends vk{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=px(n),t.goBackwards=!0!==t.goBackwards;const a={};var r;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=px(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,iy(vy,"BidirectionalMergeMode",r),e.weights)throw new Hg("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(a=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):Qg(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=fw(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const s=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new Gg("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const a=n.map((e=>new _b({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),o.push(...a)}if(null!=a)throw new Hg("Support for constants in Bidirectional layers is not implemented yet.");const i=s[0]instanceof Fb;for(const c of s)if(c instanceof Fb!==i)throw new Gg("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return bo((()=>{const n=t.initialState;let a,r,s,o;if(null==n)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),o=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(a)&&(s=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=Jh(r,1)),"concat"===this.mergeMode?o=Gy([a,r]):"sum"===this.mergeMode?o=Ri(a,r):"ave"===this.mergeMode?o=Fi(.5,Ri(a,r)):"mul"===this.mergeMode?o=Fi(a,r):null==this.mergeMode&&(o=[a,r]),this.returnState?null==this.mergeMode?o.concat(s):[o].concat(s):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Cy(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Cy(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=px(t.layer);if(delete t.layer,null!=t.numConstants)throw new Hg("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}kk.className="Bidirectional",Ui(kk);class Sk extends Lb{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return bo((()=>("float32"!==(e=Nb(e)).dtype&&(e=Py(e,"float32")),Ri(Fi(e,this.scale),this.offset))))}}Sk.className="Rescaling",Ui(Sk);const{resizeBilinear:Nk,cropAndResize:Ik}=hf;class Tk extends Lb{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,r,s,o,i){return bo((()=>{let c,l=!1;const u=[t/s,n/o,(a+t)/s,(r+n)/o],h=[];3===e.rank?(l=!0,c=Sd([e])):c=e;for(let e=0;e<c.shape[0];e++)h.push(u);const d=po(h,[h.length,4]),p=Kh(0,h.length,1,"int32"),f=Ik(c,d,p,[a,r],"nearest");return Py(l?Nb(Wd(f)):f,i)}))}upsize(e,t,n,a){return bo((()=>Py(Nk(e,[t,n]),a)))}call(e,t){return bo((()=>{const t=Nb(e),n=t.dtype,a=t.shape,r=a[a.length-3],s=a[a.length-2];let o=0;r!==this.height&&(o=Math.floor((r-this.height)/2));let i=0;return s!==this.width&&(i=Math.floor((s-this.width)/2),0===i&&(i=1)),o>=0&&i>=0?this.centerCrop(t,o,i,this.height,this.width,r,s,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Ib(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Tk.className="CenterCrop",Ui(Tk);class Ck extends Lb{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Ib(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return bo((()=>{let n;if("int32"!==(e=Nb(e)).dtype&&(e=Py(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new Gg("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(t.countWeights));n=Nb(t.countWeights)}const a=Nu(e),r=Iu(e),s=zu(this.numTokens,a).bufferSync().get(0),o=Pu(r,0).bufferSync().get(0);if(!s||!o)throw new Gg("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));return function(e,t,n,a){let r=Nb(e);if("int32"!==r.dtype&&(r=Py(r,"int32")),"int"===t)return r;const s=r.shape;if(0===r.rank&&(r=_u(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=_u(r,-1)),r.rank>2)throw new Gg("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(t," and input shape ").concat(s)+" which would result in output rank ".concat(r.rank,"."));const o=["multiHot","oneHot"].includes(t),i=r;let c;if(c=au(i,"undefined"!==typeof a&&"count"===t?a:[],n,o),"tfIdf"!==t)return c;if(a)return Fi(c,a);throw new Gg("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Ck.className="CategoryEncoding",Ui(Ck);const Ek=new Set(["bilinear","nearest"]);class Rk extends Lb{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Ek.has(e.interpolation))throw new Gg("Invalid interpolation parameter: ".concat(e.interpolation," is not implemented"));this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Ib(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return bo((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return hf.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return hf.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...Ek]," are supported"))}))}}Rk.className="Resizing",Ui(Rk);class Ak{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}Ak.className="RandomSeed";class _k extends Lb{constructor(e){super(e),this.randomGenerator=new Ak(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}_k.className="BaseRandomLayer";const Fk=new Set(["bilinear","nearest"]);class Dk extends _k{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Gg("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Gg("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new Gg("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!Fk.has(n))throw new Gg("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Ib(e))[2];return[this.imgHeight,-1,t]}call(e,t){return bo((()=>{const t=Nb(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=jh([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const r=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return hf.resizeBilinear(e,r);case"nearest":return hf.resizeNearestNeighbor(e,r);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([...Fk]," are supported"))}}))}}Dk.className="RandomWidth",Ui(Dk);var Ok,Mk;vt().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Ok||(Ok={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Mk||(Mk={}));const Lk={};function zk(e){return Lk[e]}function Pk(e,t,n,a,r){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return Bk(t.inputNames[i],n,a,r);if("tensors"===s.type){const s=t.inputs.slice(e,o);return t.inputNames.slice(e,o).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>Bk(e,n,a,r)))}const c=Bk(t.inputNames[i],n,a,r),l=c.dataSync();return"number"===s.type?l[0]:lt(c.shape,l)}const o=t.attrParams[e];return o&&o.value}function Bk(e,t,n,a){const[r,s]=Gk(e,n);if(null!=a){const e=a.getHashTableHandleByName(r);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[Uk(r,e)]));return void 0!==o?t[Uk(r,o)][s]:void 0}function Wk(e,t,n){return t[Uk(e,n.currentContextId)]}function Vk(e,t){const[n,a,r]=Gk(e,t);return[Uk(n,t&&t.currentContextId),a,r]}function Uk(e,t){return t?"".concat(e,"-").concat(t):e}function Gk(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const a=e.split(":");let r;if(1===a.length)r=[e,0,void 0];else{const e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function Hk(e,t,n){let a=Pk("pad",e,t,n);if("explicit"===a){a=Pk("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function jk(e){return e.kept?e:Ci(e)}const qk=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Kk=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Xk=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Yk=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Qk=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Zk=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Jk=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],$k=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],eS=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],tS=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],nS=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],aS=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],rS=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],sS=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],oS=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],iS=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],cS=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],lS=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],uS=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class hS{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[o,i,c,l,u,h,d,p,f,m,g,y,b,x,v,w,k,S,N].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,a=[],r=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const c=[];let l={},u={};null!=t&&(l=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));const h=Object.keys(o);h.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[a,,r]=Vk(e),s=o[a];if(null!=s.outputs){const e=s.outputs.indexOf(r);if(-1!==e){const r="".concat(a,":").concat(e);t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(u).length?h.forEach((e=>{const t=o[e];0===t.children.length&&c.push(t)})):Object.keys(u).forEach((e=>{const[t]=Vk(e),n=o[t];null!=n&&(n.signatureKey=u[e],c.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=Vk(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=a;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:o,inputs:i,outputs:c,weights:r,placeholders:a,signature:t,functions:d};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=zk(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const a=n.type;let r;switch(n.type){case"string":r=pS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=pS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=SS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=SS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=mS(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=mS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=kS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=kS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=fS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=IS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=IS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=wS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=wS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=NS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=NS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=bS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=bS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=xS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=xS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=yS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=yS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(e.op))}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=Vk(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:gS(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n}));Object.keys(a).forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=Vk(e),o=a[r];if(null!=o.outputs){const e=o.outputs.indexOf(s);if(-1!==e){const a="".concat(r,":").concat(e);t.inputNames[n]=a}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Vk(o[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,s.push(r))}));const i=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function dS(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=vt().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function pS(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return null!=r?dS(r.s,a):n}function fS(e,t,n){const a=e[t];return a?a.b:n}function mS(e,t,n){const a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function gS(e){switch("string"===typeof e&&(e=Ok[e]),e){case Ok.DT_FLOAT:case Ok.DT_HALF:return"float32";case Ok.DT_INT32:case Ok.DT_INT64:case Ok.DT_INT8:case Ok.DT_UINT8:return"int32";case Ok.DT_BOOL:return"bool";case Ok.DT_DOUBLE:return"float32";case Ok.DT_STRING:return"string";case Ok.DT_COMPLEX64:case Ok.DT_COMPLEX128:return"complex64";default:return null}}function yS(e,t,n){const a=e[t];return a&&a.func?a.func.name:n}function bS(e,t,n){const a=e[t];return a&&a.type?gS(a.type):n}function xS(e,t,n){const a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>gS(e))):n}function vS(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function wS(e,t,n){const a=e[t];return a&&a.shape?vS(a.shape):n}function kS(e,t,n){const a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function SS(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>dS(e,a))):n}function NS(e,t,n){const a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>vS(e))):n}function IS(e,t,n){const a=e[t];return a&&a.list&&a.list.b?a.list.b:n}class TS{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Bk(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Bk(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return mS(this.node.rawAttrs,e,t);if(null!=n.s)return pS(this.node.rawAttrs,e,t);if(null!=n.b)return fS(this.node.rawAttrs,e,t);if(null!=n.shape)return wS(this.node.rawAttrs,e,t);if(null!=n.type)return bS(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return kS(this.node.rawAttrs,e,t);if(null!=n.list.s)return SS(this.node.rawAttrs,e,t);if(null!=n.list.shape)return NS(this.node.rawAttrs,e,t);if(null!=n.list.b)return IS(this.node.rawAttrs,e,t);if(null!=n.list.type)return xS(this.node.rawAttrs,e,t)}return t}}function CS(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){We(e.length===t.length,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")));for(let a=0;a<e.length;a++){const r=e[a],s=t[a];We(r<0||s<0||r===s,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}}}function ES(e){return"number"!==typeof e&&!e.some((e=>e<0))}function RS(e,t,n){let a=AS(e,n);const r=!ES(a);if(r&&0===t.length)throw new Error("Tried to calculate elements of an empty list"+" with non-fully-defined elementShape: ".concat(a));if(r&&t.forEach((e=>{a=AS(e.shape,a)})),!ES(a))throw new Error("Non-fully-defined elementShape: ".concat(a));return a}function AS(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error("Incompatible ranks during merge: ".concat(e," vs. ").concat(t));const n=[];for(let a=0;a<e.length;++a){const r=e[a],s=t[a];if(r>=0&&s>=0&&r!==s)throw new Error("Incompatible shape during merge: ".concat(e," vs. ").concat(t));n[a]=r>=0?r:s}return n}class _S{constructor(e,t,n,a,r,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=zi(0),vo(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||e>=this.size())throw new Error("Tried to read from index ".concat(e,", but array size is: ").concat(this.size()));const t=this.tensors[e];if(t.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(e," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index ".concat(e,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,",\n          because the value dtype is ").concat(t.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),CS(this.elementShape,t.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been written."));n.tensor=t,vo(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(e.length," is not the same as tensors size: ").concat(t.length,"."));e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(t));if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return po([],[0].concat(this.elementShape));const n=this.readMany(e);return CS(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Sd(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(e));if(0===this.size())return po([],[0].concat(this.elementShape));const t=[];for(let a=0;a<this.size();a++)t.push(a);const n=this.readMany(t);return CS(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),Il(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(e,Wd(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));let n=0;const a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(t.shape));if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(e.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const r=0===n?0:t.size/n,s=[];bo((()=>{t=kl(t,[1,n,r]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:a[n-1],0],i=[1,e[n],r];s[n]=kl(El(t,o,i),this.elementShape)}return s}));const o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,s)}}class FS{get id(){return this.idTensor.id}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(e.dtype));CS(t,e.shape,"TensorList shape mismatch: "),vo(e)})),this.idTensor=zi(0),this.maxNumElements=a,vo(this.idTensor)}copy(){return new FS([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));CS(e,this.elementShape,"TensorList shape mismatch: ");const a=RS(this.elementShape,this.tensors,e);return bo((()=>{const e=this.tensors.map((e=>kl(e,a)));return Sd(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=RS(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,CS(a.shape,e,"TensorList shape mismatch: "),kl(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(CS(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");vo(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(e));if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error("TensorListResize input size ".concat(e," is greater maxNumElement ").concat(this.maxNumElements,"."));const t=new FS([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(e<0||e>this.tensors.length)throw new Error("Trying to access element ".concat(e," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[e])throw new Error("element at index ".concat(e," is null."));CS(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=RS(this.elementShape,this.tensors,t);return kl(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error("Trying to set element ".concat(e," in a list with max ").concat(this.maxNumElements," elements."));CS(this.elementShape,t.shape,"TensorList shape mismatch: "),vo(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));CS(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=RS(this.elementShape,this.tensors,n);return 0===e.length?po([],[0].concat(a)):bo((()=>{const t=e.map((e=>kl(this.tensors[e],a)));return Sd(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(e));CS(this.elementShape,t,"TensorList shape mismatch: ");const n=RS(this.elementShape,this.tensors,t);return 0===this.size()?po([],[0].concat(n)):bo((()=>{const e=this.tensors.map((e=>kl(e,n)));return Il(e,0)}))}}const DS=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const a=Pk("thenBranch",e,t,n),r=Pk("elseBranch",e,t,n),s=Pk("cond",e,t,n),o=Pk("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=Pk("body",e,t,n),r=Pk("cond",e,t,n),s=Pk("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let c=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=s;for(;c[0];){const e=l;l=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[jk(Pk("pred",e,t,n))];case"Switch":{const a=Pk("pred",e,t,n);let r=Pk("data",e,t,n);return r.kept||(r=jk(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=e.inputNames.find((e=>void 0!==Bk(e,t,n)));if(a){return[jk(Bk(a,t,n))]}return}case"Enter":{const a=Pk("frameName",e,t,n),r=Pk("tensor",e,t,n);return n.enterFrame(a),[jk(r)]}case"Exit":{const a=Pk("tensor",e,t,n);return n.exitFrame(),[jk(a)]}case"NextIteration":{const a=Pk("tensor",e,t,n);return n.nextIteration(),[jk(a)]}case"TensorArrayV3":{const a=Pk("size",e,t,n),r=Pk("dtype",e,t,n),s=Pk("elementShape",e,t,n),o=Pk("dynamicSize",e,t,n),i=Pk("clearAfterRead",e,t,n),c=Pk("identicalElementShapes",e,t,n),l=Pk("name",e,t,n),u=new _S(l,r,a,s,c,o,i);return n.addTensorArray(u),[u.idTensor,zi(1)]}case"TensorArrayWriteV3":{const a=Pk("tensorArrayId",e,t,n),r=Pk("index",e,t,n),s=Pk("tensor",e,t,n),o=n.getTensorArray(a.id);return o.write(r,s),[o.idTensor]}case"TensorArrayReadV3":{const a=Pk("tensorArrayId",e,t,n),r=Pk("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=Pk("tensorArrayId",e,t,n),r=Pk("indices",e,t,n),s=Pk("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{const a=Pk("tensorArrayId",e,t,n),r=Pk("indices",e,t,n),s=Pk("tensor",e,t,n),o=n.getTensorArray(a.id);return o.scatter(r,s),[o.idTensor]}case"TensorArrayConcatV3":{const a=Pk("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=Pk("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{const a=Pk("tensorArrayId",e,t,n),r=Pk("tensor",e,t,n),s=Pk("lengths",e,t,n),o=n.getTensorArray(a.id);return o.split(s,r),[o.idTensor]}case"TensorArraySizeV3":{const a=Pk("tensorArrayId",e,t,n);return[zi(n.getTensorArray(a.id).size(),"int32")]}case"TensorArrayCloseV3":{const a=Pk("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=Pk("tensorListId",e,t,n),r=Pk("index",e,t,n),s=Pk("tensor",e,t,n),o=n.getTensorList(a.id);return o.setItem(r,s),[o.idTensor]}case"TensorListGetItem":{const a=Pk("tensorListId",e,t,n),r=Pk("index",e,t,n),s=Pk("elementShape",e,t,n),o=Pk("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const a=Pk("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error("Max index must be < array size (".concat(r,"  vs. ").concat(a,")"));const s=new FS([],n,e.dtype,a),o=Wd(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}(Pk("tensor",e,t,n),a,Pk("elementShape",e,t,n),Pk("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=Pk("elementShape",e,t,n),r=Pk("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=Pk(s,e,t,n),i=function(e,t,n,a){return new FS([],e,t,a)}(a,r,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const a=Pk("tensorListId",e,t,n),r=Pk("indices",e,t,n),s=Pk("elementShape",e,t,n),o=Pk("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,o,s)]}case"TensorListStack":{const a=Pk("tensorListId",e,t,n),r=Pk("elementShape",e,t,n),s=Pk("elementDType",e,t,n),o=Pk("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,o)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(e.shape));if(e.dtype!==n)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(n));CS(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=Wd(e);return new FS(r,t,a)}(Pk("tensor",e,t,n),Pk("elementShape",e,t,n),Pk("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const a=Pk("tensorListId",e,t,n),r=n.getTensorList(a.id),s=Pk("dtype",e,t,n),o=Pk("elementShape",e,t,n);return[r.concat(s,o)]}case"TensorListPushBack":{const a=Pk("tensorListId",e,t,n),r=Pk("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{const a=Pk("tensorListId",e,t,n),r=Pk("elementShape",e,t,n),s=Pk("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{const a=Pk("tensor",e,t,n),r=Pk("elementShape",e,t,n),s=function(e,t,n){let a=0;const r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(e.shape));const s=AS(e.shape.slice(1),n),o=0===a?0:e.size/a,i=bo((()=>{const n=[];e=kl(e,[1,a,o]);for(let a=0;a<t.length;++a){const i=[0,0===a?0:r[a-1],0],c=[1,t[a],o];n[a]=kl(El(e,i,c),s)}return e.dispose(),n})),c=new FS([],n,e.dtype,t.length);for(let l=0;l<i.length;l++)c.setItem(l,i[l]);return c}(a,Pk("lengths",e,t,n),r);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const a=Pk("tensorListId",e,t,n);return[zi(n.getTensorList(a.id).size(),"int32")]}case"TensorListResize":{const a=Pk("tensorListId",e,t,n),r=Pk("size",e,t,n),s=n.getTensorList(a.id).resize(r);return n.addTensorList(s),[s.idTensor]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function OS(e,t,n){const[a,r]=Pk("fusedOps",e,t,n),s="biasadd"===a,o=!s,i="prelu"===r,c="fusedbatchnorm"===a,l=Pk("numArgs",e,t,n);if(s){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=Pk("strides",e,t,n),h=Hk(e,t,n),d=Pk("dataFormat",e,t,n).toUpperCase(),p=Pk("dilations",e,t,n);let[f,m]=Pk("args",e,t,n);o&&(m=f,f=void 0);return{stride:u,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:Pk("leakyreluAlpha",e,t,n)}}function MS(e,t,n){return{boxes:Pk("boxes",e,t,n),scores:Pk("scores",e,t,n),maxOutputSize:Pk("maxOutputSize",e,t,n),iouThreshold:Pk("iouThreshold",e,t,n),scoreThreshold:Pk("scoreThreshold",e,t,n),softNmsSigma:Pk("softNmsSigma",e,t,n)}}class LS{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=zi(0),this.tensorMap=new Map,vo(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return zi(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),bo((()=>{const e=Wd(t),a=n.length,r=e.length;We(a===r,(()=>"The number of elements doesn't match, keys has "+"".concat(a," elements, the values has ").concat(r," ")+"elements."));for(let t=0;t<a;t++){const a=n[t],r=e[t];vo(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return bo((()=>{const e=[];for(let a=0;a<n.length;a++){const r=n[a],s=this.findWithDefault(r,t);e.push(s)}return Sd(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(e.dtype));if(t.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(t.dtype))}}function zS(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:bo;const s=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(Pk("a",e,t,n),Pk("b",e,t,n))];case"AddN":return[a.addN(Pk("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(Pk("a",e,t,n),Pk("b",e,t,n))];case"Mul":return[a.mul(Pk("a",e,t,n),Pk("b",e,t,n))];case"RealDiv":case"Div":return[a.div(Pk("a",e,t,n),Pk("b",e,t,n))];case"DivNoNan":return[a.divNoNan(Pk("a",e,t,n),Pk("b",e,t,n))];case"FloorDiv":return[a.floorDiv(Pk("a",e,t,n),Pk("b",e,t,n))];case"Sub":return[a.sub(Pk("a",e,t,n),Pk("b",e,t,n))];case"Minimum":return[a.minimum(Pk("a",e,t,n),Pk("b",e,t,n))];case"Maximum":return[a.maximum(Pk("a",e,t,n),Pk("b",e,t,n))];case"Pow":return[a.pow(Pk("a",e,t,n),Pk("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(Pk("a",e,t,n),Pk("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"basic_math":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(Pk("x",e,t,n))];case"Acos":return[a.acos(Pk("x",e,t,n))];case"Acosh":return[a.acosh(Pk("x",e,t,n))];case"Asin":return[a.asin(Pk("x",e,t,n))];case"Asinh":return[a.asinh(Pk("x",e,t,n))];case"Atan":return[a.atan(Pk("x",e,t,n))];case"Atan2":return[a.atan2(Pk("x",e,t,n),Pk("y",e,t,n))];case"Atanh":return[a.atanh(Pk("x",e,t,n))];case"Ceil":return[a.ceil(Pk("x",e,t,n))];case"Complex":return[a.complex(Pk("real",e,t,n),Pk("imag",e,t,n))];case"Cos":return[a.cos(Pk("x",e,t,n))];case"Cosh":return[a.cosh(Pk("x",e,t,n))];case"Elu":return[a.elu(Pk("x",e,t,n))];case"Erf":return[a.erf(Pk("x",e,t,n))];case"Exp":return[a.exp(Pk("x",e,t,n))];case"Expm1":return[a.expm1(Pk("x",e,t,n))];case"Floor":return[a.floor(Pk("x",e,t,n))];case"Log":return[a.log(Pk("x",e,t,n))];case"Log1p":return[a.log1p(Pk("x",e,t,n))];case"Imag":return[a.imag(Pk("x",e,t,n))];case"Neg":return[a.neg(Pk("x",e,t,n))];case"Reciprocal":return[a.reciprocal(Pk("x",e,t,n))];case"Real":return[a.real(Pk("x",e,t,n))];case"Relu":return[a.relu(Pk("x",e,t,n))];case"Round":return[a.round(Pk("x",e,t,n))];case"Selu":return[a.selu(Pk("x",e,t,n))];case"Sigmoid":return[a.sigmoid(Pk("x",e,t,n))];case"Sin":return[a.sin(Pk("x",e,t,n))];case"Sign":return[a.sign(Pk("x",e,t,n))];case"Sinh":return[a.sinh(Pk("x",e,t,n))];case"Softplus":return[a.softplus(Pk("x",e,t,n))];case"Sqrt":return[a.sqrt(Pk("x",e,t,n))];case"Square":return[a.square(Pk("x",e,t,n))];case"Tanh":return[a.tanh(Pk("x",e,t,n))];case"Tan":return[a.tan(Pk("x",e,t,n))];case"ClipByValue":return[a.clipByValue(Pk("x",e,t,n),Pk("clipValueMin",e,t,n),Pk("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(Pk("x",e,t,n))];case"Rsqrt":return[a.rsqrt(Bk(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu(Pk("x",e,t,n),Pk("alpha",e,t,n))];case"Prelu":return[a.prelu(Pk("x",e,t,n),Pk("alpha",e,t,n))];case"IsNan":return[a.isNaN(Bk(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(Bk(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(Bk(e.inputNames[0],t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"control":return DS(e,t,n);case"convolution":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Conv1D":{const r=Pk("stride",e,t,n),s=Pk("pad",e,t,n),o=Pk("dataFormat",e,t,n).toUpperCase(),i=Pk("dilation",e,t,n);return[a.conv1d(Pk("x",e,t,n),Pk("filter",e,t,n),r,s,o,i)]}case"Conv2D":{const r=Pk("strides",e,t,n),s=Hk(e,t,n),o=Pk("dataFormat",e,t,n).toUpperCase(),i=Pk("dilations",e,t,n);return[a.conv2d(Pk("x",e,t,n),Pk("filter",e,t,n),[r[1],r[2]],s,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:h}=OS(e,t,n);return[a.fused.conv2d({x:Pk("x",e,t,n),filter:Pk("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:h}=OS(e,t,n);return[a.fused.depthwiseConv2d({x:Pk("x",e,t,n),filter:Pk("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Pk("outputShape",e,t,n),s=Pk("strides",e,t,n),o=Hk(e,t,n);return[a.conv2dTranspose(Pk("x",e,t,n),Pk("filter",e,t,n),r,[s[1],s[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Pk("strides",e,t,n),s=Hk(e,t,n),o=Pk("dilations",e,t,n),i=Pk("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(Pk("input",e,t,n),Pk("filter",e,t,n),[r[1],r[2]],s,i,[o[1],o[2]])]}case"Conv3D":{const r=Pk("strides",e,t,n),s=Pk("pad",e,t,n),o=Pk("dataFormat",e,t,n).toUpperCase(),i=Pk("dilations",e,t,n);return[a.conv3d(Pk("x",e,t,n),Pk("filter",e,t,n),[r[1],r[2],r[3]],s,o,[i[1],i[2],i[3]])]}case"AvgPool":{const r=Pk("strides",e,t,n),s=Pk("pad",e,t,n),o=Pk("kernelSize",e,t,n);return[a.avgPool(Pk("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=Pk("strides",e,t,n),s=Pk("pad",e,t,n),o=Pk("kernelSize",e,t,n);return[a.maxPool(Pk("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=Pk("strides",e,t,n),s=Pk("pad",e,t,n),o=Pk("kernelSize",e,t,n),i=Pk("includeBatchInIndex",e,t,n),{result:c,indexes:l}=a.maxPoolWithArgmax(Pk("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s,i);return[c,l]}case"AvgPool3D":{const r=Pk("strides",e,t,n),s=Pk("pad",e,t,n),o=Pk("kernelSize",e,t,n);return[a.avgPool3d(Pk("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=Pk("strides",e,t,n),s=Pk("pad",e,t,n),o=Pk("kernelSize",e,t,n);return[a.maxPool3d(Pk("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=Pk("strides",e,t,n),s=Pk("pad",e,t,n),o=Pk("dilations",e,t,n),i=r[1],c=r[2],l=o[1],u=o[2];return[a.dilation2d(Pk("x",e,t,n),Pk("filter",e,t,n),[i,c],s,[l,u],"NHWC")]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"creation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Fill":{const r=Pk("shape",e,t,n),s=Pk("dtype",e,t,n),o=Pk("value",e,t,n);return[a.fill(r,o,s)]}case"LinSpace":{const r=Pk("start",e,t,n),s=Pk("stop",e,t,n),o=Pk("num",e,t,n);return[a.linspace(r,s,o)]}case"Multinomial":{const r=Pk("logits",e,t,n),s=Pk("numSamples",e,t,n),o=Pk("seed",e,t,n);return[a.multinomial(r,s,o)]}case"OneHot":{const r=Pk("indices",e,t,n),s=Pk("depth",e,t,n),o=Pk("onValue",e,t,n),i=Pk("offValue",e,t,n),c=Pk("dtype",e,t,n);return[a.oneHot(r,s,o,i,c)]}case"Ones":return[a.ones(Pk("shape",e,t,n),Pk("dtype",e,t,n))];case"OnesLike":return[a.onesLike(Pk("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(Pk("shape",e,t,n),Pk("dtype",e,t,n),Pk("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(Pk("shape",e,t,n),Pk("minval",e,t,n),Pk("maxval",e,t,n),Pk("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt(Pk("shape",e,t,n),Pk("minval",e,t,n),Pk("maxval",e,t,n),Pk("seed",e,t,n))];case"Range":{const r=Pk("start",e,t,n),s=Pk("stop",e,t,n),o=Pk("step",e,t,n);return[a.range(r,s,o,Pk("dtype",e,t,n))]}case"TruncatedNormal":{const r=Pk("shape",e,t,n),s=Pk("mean",e,t,n),o=Pk("stdDev",e,t,n),i=Pk("seed",e,t,n);return[a.truncatedNormal(r,s,o,Pk("dtype",e,t,n),i)]}case"Zeros":return[a.zeros(Pk("shape",e,t,n),Pk("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(Pk("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"dynamic":return async function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:I;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=MS(e,t,n),u=await r.image.nonMaxSuppressionWithScoreAsync(a,s,o,i,c,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=MS(e,t,n),l=Pk("padToMaxOutputSize",e,t,n),u=await r.image.nonMaxSuppressionPaddedAsync(a,s,o,i,c,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=MS(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,s,o,i,c)]}case"Where":{const a=r.cast(Pk("condition",e,t,n),"bool"),s=[await r.whereAsync(a)];return a.dispose(),s}case"ListDiff":return r.setdiff1dAsync(Pk("x",e,t,n),Pk("y",e,t,n));default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n);case"evaluation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"LowerBound":{const r=Pk("sortedSequence",e,t,n),s=Pk("values",e,t,n);return[a.lowerBound(r,s)]}case"TopKV2":{const r=Pk("x",e,t,n),s=Pk("k",e,t,n),o=Pk("sorted",e,t,n),i=a.topk(r,s,o);return[i.values,i.indices]}case"UpperBound":{const r=Pk("sortedSequence",e,t,n),s=Pk("values",e,t,n);return[a.upperBound(r,s)]}case"Unique":{const r=Pk("x",e,t,n),s=a.unique(r);return[s.values,s.indices]}case"UniqueV2":{const r=Pk("x",e,t,n),s=Pk("axis",e,t,n),o=a.unique(r,s);return[o.values,o.indices]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"image":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"ResizeBilinear":{const r=Pk("images",e,t,n),s=Pk("size",e,t,n),o=Pk("alignCorners",e,t,n),i=Pk("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[s[0],s[1]],o,i)]}case"ResizeNearestNeighbor":{const r=Pk("images",e,t,n),s=Pk("size",e,t,n),o=Pk("alignCorners",e,t,n),i=Pk("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[s[0],s[1]],o,i)]}case"CropAndResize":{const r=Pk("image",e,t,n),s=Pk("boxes",e,t,n),o=Pk("boxInd",e,t,n),i=Pk("cropSize",e,t,n),c=Pk("method",e,t,n),l=Pk("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,s,o,i,c,l)]}case"ImageProjectiveTransformV3":{const r=Pk("images",e,t,n),s=Pk("transforms",e,t,n),o=Pk("outputShape",e,t,n),i=Pk("fillValue",e,t,n),c=Pk("interpolation",e,t,n),l=Pk("fillMode",e,t,n);return[a.image.transform(r,s,c.toLowerCase(),l.toLowerCase(),i,o)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"graph":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Pk("default",e,t,n);return[Bk(e.name,t,n)||r];case"Placeholder":return[Bk(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[jk(Pk("x",e,t,n))];case"IdentityN":return Pk("x",e,t,n).map((e=>jk(e)));case"Shape":return[a.tensor1d(Pk("x",e,t,n).shape,"int32")];case"ShapeN":return Pk("x",e,t,n).map((e=>a.tensor1d(e.shape)));case"Size":return[a.scalar(Pk("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(Pk("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const s=Pk("x",e,t,n),o=Pk("data",e,t,n),i=Pk("message",e,t,n),c=Pk("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,c));return[s];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"logical":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Equal":return[a.equal(Pk("a",e,t,n),Pk("b",e,t,n))];case"NotEqual":return[a.notEqual(Pk("a",e,t,n),Pk("b",e,t,n))];case"Greater":return[a.greater(Pk("a",e,t,n),Pk("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(Pk("a",e,t,n),Pk("b",e,t,n))];case"Less":return[a.less(Pk("a",e,t,n),Pk("b",e,t,n))];case"LessEqual":return[a.lessEqual(Pk("a",e,t,n),Pk("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(Pk("a",e,t,n),Pk("b",e,t,n))];case"LogicalNot":return[a.logicalNot(Pk("a",e,t,n))];case"LogicalOr":return[a.logicalOr(Pk("a",e,t,n),Pk("b",e,t,n))];case"Select":case"SelectV2":return[a.where(Pk("condition",e,t,n),Pk("a",e,t,n),Pk("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd(Pk("a",e,t,n),Pk("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"matrices":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(Pk("a",e,t,n),Pk("b",e,t,n),Pk("transposeA",e,t,n),Pk("transposeB",e,t,n))];case"Einsum":return[a.einsum(Pk("equation",e,t,n),...Pk("tensors",e,t,n))];case"Transpose":return[a.transpose(Pk("x",e,t,n),Pk("perm",e,t,n))];case"_FusedMatMul":const[r,s]=Pk("fusedOps",e,t,n),o="biasadd"===r,i="prelu"===s,c=Pk("numArgs",e,t,n),l=Pk("leakyreluAlpha",e,t,n);if(o){if(i&&2!==c)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==c)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,h]=Pk("args",e,t,n);return[a.fused.matMul({a:Pk("a",e,t,n),b:Pk("b",e,t,n),transposeA:Pk("transposeA",e,t,n),transposeB:Pk("transposeB",e,t,n),bias:u,activation:s,preluActivationWeights:h,leakyreluAlpha:l})];case"MatrixBandPart":return[a.linalg.bandPart(Pk("a",e,t,n),Pk("numLower",e,t,n),Pk("numUpper",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"normalization":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(Pk("x",e,t,n),Pk("axis",e,t,n),Pk("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(Pk("x",e,t,n),Pk("mean",e,t,n),Pk("variance",e,t,n),Pk("offset",e,t,n),Pk("scale",e,t,n),Pk("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(Pk("x",e,t,n),Pk("radius",e,t,n),Pk("bias",e,t,n),Pk("alpha",e,t,n),Pk("beta",e,t,n))];case"Softmax":return[a.softmax(Pk("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(Pk("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"ragged":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:s}=a.raggedGather(Pk("paramsNestedSplits",e,t,n),Pk("paramsDenseValues",e,t,n),Pk("indices",e,t,n),Pk("outputRaggedRank",e,t,n));return r.concat(s)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:s}=a.raggedRange(Pk("starts",e,t,n),Pk("limits",e,t,n),Pk("splits",e,t,n));return[r,s]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(Pk("shape",e,t,n),Pk("values",e,t,n),Pk("defaultValue",e,t,n),Pk("rowPartitionTensors",e,t,n),Pk("rowPartitionTypes",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"reduction":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Max":{const r=Pk("axis",e,t,n),s=Pk("keepDims",e,t,n);return[a.max(Pk("x",e,t,n),r,s)]}case"Mean":{const r=Pk("axis",e,t,n),s=Pk("keepDims",e,t,n);return[a.mean(Pk("x",e,t,n),r,s)]}case"Min":{const r=Pk("axis",e,t,n),s=Pk("keepDims",e,t,n);return[a.min(Pk("x",e,t,n),r,s)]}case"Sum":{const r=Pk("axis",e,t,n),s=Pk("keepDims",e,t,n);return[a.sum(Pk("x",e,t,n),r,s)]}case"All":{const r=Pk("axis",e,t,n),s=Pk("keepDims",e,t,n);return[a.all(Pk("x",e,t,n),r,s)]}case"Any":{const r=Pk("axis",e,t,n),s=Pk("keepDims",e,t,n);return[a.any(Pk("x",e,t,n),r,s)]}case"ArgMax":{const r=Pk("axis",e,t,n);return[a.argMax(Pk("x",e,t,n),r)]}case"ArgMin":{const r=Pk("axis",e,t,n);return[a.argMin(Pk("x",e,t,n),r)]}case"Prod":{const r=Pk("axis",e,t,n),s=Pk("keepDims",e,t,n);return[a.prod(Pk("x",e,t,n),r,s)]}case"Cumprod":{const r=Pk("axis",e,t,n),s=Pk("exclusive",e,t,n),o=Pk("reverse",e,t,n);return[a.cumprod(Pk("x",e,t,n),r,s,o)]}case"Cumsum":{const r=Pk("axis",e,t,n),s=Pk("exclusive",e,t,n),o=Pk("reverse",e,t,n);return[a.cumsum(Pk("x",e,t,n),r,s,o)]}case"Bincount":const r=Pk("x",e,t,n),s=Pk("weights",e,t,n),o=Pk("size",e,t,n);return[a.bincount(r,s,o)];case"DenseBincount":{const r=Pk("x",e,t,n),s=Pk("weights",e,t,n),o=Pk("size",e,t,n),i=Pk("binaryOutput",e,t,n);return[a.denseBincount(r,s,o,i)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"slice_join":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"ConcatV2":case"Concat":{const r=Pk("n",e,t,n),s=Pk("axis",e,t,n);let o=Pk("tensors",e,t,n);return o=o.slice(0,r),[a.concat(o,s)]}case"Gather":{const r=Pk("x",e,t,n),s=Pk("indices",e,t,n);return[a.gather(r,a.cast(s,"int32"),0)]}case"GatherV2":{const r=Pk("axis",e,t,n),s=Pk("batchDims",e,t,n),o=Pk("x",e,t,n),i=Pk("indices",e,t,n);return[a.gather(o,a.cast(i,"int32"),r,s)]}case"Reverse":{const r=Pk("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);const o=Pk("x",e,t,n);return[a.reverse(o,s)]}case"ReverseV2":{const r=Pk("axis",e,t,n),s=Pk("x",e,t,n);return[a.reverse(s,r)]}case"Slice":{const r=Pk("begin",e,t,n),s=Pk("size",e,t,n);return[a.slice(Pk("x",e,t,n),r,s)]}case"StridedSlice":{const r=Pk("begin",e,t,n),s=Pk("end",e,t,n),o=Pk("strides",e,t,n),i=Pk("beginMask",e,t,n),c=Pk("endMask",e,t,n),l=Pk("ellipsisMask",e,t,n),u=Pk("newAxisMask",e,t,n),h=Pk("shrinkAxisMask",e,t,n),d=Pk("x",e,t,n);return[a.stridedSlice(d,r,s,o,i,c,l,u,h)]}case"Pack":return bo((()=>{const r=Pk("axis",e,t,n),s=Pk("tensors",e,t,n),o=s[0].shape,i=a.squeeze(s[0]).shape,c=s.map((e=>{const t=He(e.shape,o);if(!t&&!He(a.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,o)}));return[a.stack(c,r)]}));case"Unpack":{const r=Pk("axis",e,t,n),s=Pk("tensor",e,t,n);return a.unstack(s,r)}case"Tile":{const r=Pk("reps",e,t,n);return[a.tile(Pk("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Pk("axis",e,t,n),s=Pk("numOrSizeSplits",e,t,n),o=Pk("x",e,t,n);return a.split(o,s,r)}case"ScatterNd":{const r=Pk("indices",e,t,n),s=Pk("values",e,t,n),o=Pk("shape",e,t,n);return[a.scatterND(r,s,o)]}case"GatherNd":{const r=Pk("x",e,t,n),s=Pk("indices",e,t,n);return[a.gatherND(r,s)]}case"SparseToDense":{const r=Pk("sparseIndices",e,t,n),s=Pk("outputShape",e,t,n),o=Pk("sparseValues",e,t,n),i=Pk("defaultValue",e,t,n);return[a.sparseToDense(r,o,s,o.dtype===i.dtype?i:a.cast(i,o.dtype))]}case"TensorScatterUpdate":{const r=Pk("indices",e,t,n),s=Pk("values",e,t,n),o=Pk("tensor",e,t,n);return[a.tensorScatterUpdate(o,r,s)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"sparse":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:s,emptyRowIndicator:o,reverseIndexMap:i}=a.sparse.sparseFillEmptyRows(Pk("indices",e,t,n),Pk("values",e,t,n),Pk("denseShape",e,t,n),Pk("defaultValue",e,t,n));return[r,s,o,i]}case"SparseReshape":{const{outputIndices:r,outputShape:s}=a.sparse.sparseReshape(Pk("inputIndices",e,t,n),Pk("inputShape",e,t,n),Pk("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(Pk("data",e,t,n),Pk("indices",e,t,n),Pk("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(Pk("data",e,t,n),Pk("indices",e,t,n),Pk("segmentIds",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"spectral":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"FFT":return[a.fft(Pk("x",e,t,n))];case"IFFT":return[a.ifft(Pk("x",e,t,n))];case"RFFT":return[a.rfft(Pk("x",e,t,n))];case"IRFFT":return[a.irfft(Pk("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"string":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(Pk("input",e,t,n),Pk("pattern",e,t,n),Pk("rewrite",e,t,n),Pk("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:s}=a.string.stringNGrams(Pk("data",e,t,n),Pk("dataSplits",e,t,n),Pk("separator",e,t,n),Pk("nGramWidths",e,t,n),Pk("leftPad",e,t,n),Pk("rightPad",e,t,n),Pk("padWidth",e,t,n),Pk("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{const{indices:r,values:s,shape:o}=a.string.stringSplit(Pk("input",e,t,n),Pk("delimiter",e,t,n),Pk("skipEmpty",e,t,n));return[r,s,o]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(Pk("input",e,t,n),Pk("numBuckets",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"transformation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Cast":return[a.cast(Pk("x",e,t,n),Pk("dtype",e,t,n))];case"ExpandDims":{const r=Pk("axis",e,t,n);return[a.expandDims(Pk("x",e,t,n),r)]}case"Squeeze":{const r=Pk("axis",e,t,n);return[a.squeeze(Pk("x",e,t,n),r)]}case"Reshape":return[a.reshape(Pk("x",e,t,n),Pk("shape",e,t,n))];case"EnsureShape":return[a.ensureShape(Pk("x",e,t,n),Pk("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(Pk("x",e,t,n),Pk("padding",e,t,n),Pk("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(Pk("x",e,t,n),Pk("padding",e,t,n),Pk("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Pk("blockShape",e,t,n),s=Pk("paddings",e,t,n);return[a.spaceToBatchND(Pk("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=Pk("blockShape",e,t,n),s=Pk("crops",e,t,n);return[a.batchToSpaceND(Pk("x",e,t,n),r,s)]}case"DepthToSpace":{const r=Pk("blockSize",e,t,n),s=Pk("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(Pk("x",e,t,n),r,s)]}case"BroadcastTo":return[a.broadcastTo(Pk("x",e,t,n),Pk("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(Pk("s0",e,t,n),Pk("s1",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"hash_table":return(async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{const r=Pk("keyDType",e,t,n),s=Pk("valueDType",e,t,n),o=new LS(r,s);return a.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=Pk("tableHandle",e,t,n,a),s=Pk("keys",e,t,n),o=Pk("values",e,t,n),i=a.getHashTableById(r.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const r=Pk("tableHandle",e,t,n,a),s=Pk("keys",e,t,n),o=Pk("defaultValue",e,t,n),i=a.getHashTableById(r.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=Pk("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}})(e,t,n,a);case"custom":const s=zk(e.op);if(s&&s.customExecutor)return s.customExecutor(new TS(e,t,n));throw TypeError("Custom op ".concat(e.op," is not registered."));default:throw TypeError("Unknown op '".concat(e.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(e,t,n);return gt(s)?s.then((e=>[].concat(e))):[].concat(s)}class PS{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":"".concat(e.frameName,"-").concat(e.iterationId))).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function BS(e,t,n,a){const r=new Set,s=[];let o=null,i=null;const c=new Set,l=new Set(Object.keys(e).map((e=>Gk(e)[0])));a=a||[];const u=new Set(a.map((e=>Gk(e.name)[0]))),h=[...t];for(;h.length>0;){const e=h.pop();(jS(e)||qS(e)||KS(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&(l.has(e.name)||u.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{c.has(e.name)||(c.add(e.name),h.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:o,syncInputs:i}}function WS(e,t){const{usedNodes:n,inputs:a}=t,r=Object.keys(a).map((e=>Gk(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],o=e=>n.has("string"===typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const c=i([...r,...e.weights,...s]).filter(o),l=i([...c,...Object.values(e.nodes)]).filter(o),u=new Map(l.map((e=>[e.name,e]))),h={};for(const m of l){h[m.name]=h[m.name]||0;for(const e of m.children)o(e)||(h[e.name]=Number.POSITIVE_INFINITY),h[e.name]=(h[e.name]||0)+1}const d=Object.entries(h).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),p=[...d];for(;d.length>0;){const e=d.pop(),t=u.get(e);for(const n of t.children.filter(o))0===--h[n.name]&&(p.push(n.name),d.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),a=t.map((e=>e.name)),r=new Set(a);for(;a.length>0;){const e=a.pop(),t=n.get(e);for(const s of t.children)n.has(s.name)&&!r.has(s.name)&&(r.add(s.name),a.push(s.name))}const s=e.filter((e=>r.has(e.name)));return s}(p.map((e=>u.get(e))),c);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),a=new Set(t.map((e=>e.name))),r=e=>a.has("string"===typeof e?e:e.name),s=new Set(e.map((e=>e.name))),o=e=>s.has("string"===typeof e?e:e.name);for(const i of e){for(const e of i.children.filter(o)){if(!n.has(e.name))throw new VS("Child ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(i.name)>n.get(e.name))throw new VS("Node ".concat(i.name," is scheduled to run after its child ").concat(e.name,"."))}if(!r(i))for(const e of i.inputs){if(!n.has(e.name))throw new VS("Input ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(e.name)>n.get(i.name))throw new VS("Node ".concat(i.name," is scheduled to run before its input ").concat(e.name,"."))}}}(f,c),f}class VS extends Error{constructor(e){super("NodesExecutionOrderError: ".concat(e))}}const US=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),GS=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),HS=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function jS(e){return US.has(e.op)}function qS(e){return GS.has(e.op)}function KS(e){return HS.has(e.op)}class XS{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?"".concat(t,":").concat(e.defaultOutput):t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new XS(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){const n=BS(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error("This execution contains the node '".concat(r.name,"', which has ")+"the dynamic op '".concat(r.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(s,"]"));if(a.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(r,"]. Missing the following inputs: [").concat(a,"]"))}const o=WS(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,a=e.map(((e,t)=>jS(e)?n:t)),r=e=>{const n=a[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(r).reduce(((e,t)=>Math.max(e,t)),a[t]))),o=new Map;for(let i=0;i<e.length;++i){const t=s[i];if(t===n)continue;const a=e[i],r=e[t];o.has(r.name)||o.set(r.name,[]),o.get(r.name).push(a)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return vo(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map((e=>this.graph.nodes[Gk(e)[0]])),r=t.map((e=>Gk(e)[0])),s=new Set(r);let o=r.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const i=this.getCompilationKey(a,o);let c=this.compiledMap.get(i);null==c&&(c=this.compile(e,o),this.compiledMap.set(i,c));try{this.keepIntermediateTensors=vt().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const l={},u={};return bo((()=>{const n=new PS(this.weightMap,l,u,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[r,s]=Gk(t,n),o=[];o[s]=e[t],a[r]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(o))}));const r=this.getFrozenTensorIds(a),{orderedNodes:o,nodeLiveUntilMap:i}=c;for(const e of o){if(a[e.name])continue;const t=zS(e,a,n,this._resourceManager);if(gt(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,n,r,s,i.get(e.name))}return null==this.parent&&n.dispose(r),t.map((e=>Bk(e,a,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,o){if(!jS(t)&&!s.has(e)){for(const a of n[e])null!=a&&(o[a.id]=(o[a.id]||0)+t.children.length);for(const e of t.inputs){if(jS(e))continue;const t=Wk(e.name,n,a);if(null!=t)for(const e of t){if(!e||e.kept||r.has(e.id))continue;const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,a,r,s){function o(e){return jS(e)||r.has(e.name)}if(!jS(e)&&null!=s)for(const i of s){if(o(i))continue;const e=Wk(i.name,t,n);for(const t of e)!t||t.kept||a.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=vt().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const s=new PS(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,s,t,n),i=t.map((e=>Bk(e,o,s))),c=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),u=new Set([...c,...l,...this.weightIds]);return Object.values(o).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||u.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(u),i}async executeFunctionAsync(e,t,n){const a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){const r=Object.keys(e),s=r.map((e=>this.graph.nodes[Gk(e)[0]])),o=n.map((e=>Gk(e)[0])),i=new Set(o);let c=o.map((e=>this.graph.nodes[e]));0===c.length&&(c=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:h,syncInputs:d}=BS(e,c,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=Gk(t),r=[];r[a]=e[t],f[n]=r}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(s,p,t,f,y,g,i,m,l);await Promise.all(e)}null!=h||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=c.filter((e=>!jS(e)&&!Bk(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=h&&(e="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(d,"]")),new Error("Cannot compute the outputs [".concat(b,"] from the provided ")+"inputs [".concat(r,"]. Consider providing the following inputs: ")+"[".concat(u,"]. ").concat(e))}return f}processStack(e,t,n,a,r,s,o,i,c){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let u="";if("Enter"===e.node.op&&Pk("isConstant",e.node,a,n)&&([u]=Vk(e.node.name,n)),null==a[e.node.name]){const h=zS(e.node,a,n,this._resourceManager);u||([u]=Vk(e.node.name,n));const d=n.currentContext;gt(h)?l.push(h.then((l=>(a[u]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(l)),n.currentContext=d,this.checkTensorForDisposal(u,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,c),l)))):(a[u]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(h)),this.checkTensorForDisposal(u,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,c))}else this.processChildNodes(e.node,t,n,a,r,c)}return l}processChildNodes(e,t,n,a,r,s){e.children.forEach((e=>{const[o]=Vk(e.name,n);!r[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Bk(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Bk(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[a]=Gk(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value;We(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>"The shape of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be [".concat(e,"], but was ")+"[".concat(n.shape,"]")))}r.attrParams.dtype&&r.attrParams.dtype.value&&We(n.dtype===r.attrParams.dtype.value,(()=>"The dtype of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(r.attrParams.dtype.value,", but was ").concat(n.dtype)))}))}mapInputs(e){var t,n;const a={};for(const r in e){const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=s?a[s.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Gk(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(t,"] that are not part of graph"))}mapOutputs(e){return e.map((e=>{var t,n;const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Gk(e);if(!this.graph.nodes[t])throw new Error("The output '".concat(e,"' is not found in the graph"))}))}}class YS{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const QS="?tfjs-format=file",ZS="model.json";class JS{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;this.modelUrl=t,this.loadOptions=n,this.version="n/a",this.io=a,null==n&&(this.loadOptions={}),this.resourceManager=new YS}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one (".concat(t.length,") load handlers for ")+"URL '".concat([e],"'"));this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return gt(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await Ao(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(a=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=a,this.version="".concat(n.versions.producer,".").concat(n.versions.minConsumer),this.executor=new XS(hS.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=hS.Instance.transformGraph(e.modelInitializer);this.initializer=new XS(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Error("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof As?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof As)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error("Input tensor count mismatch, the graph model has ".concat(this.inputNodes.length-n," non-resource placeholders, while there are ").concat(e.length," input tensors provided."));let a=0;return this.inputNodes.reduce(((t,n)=>{var r,s,o;const i=null===(o=null===(s=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===s?void 0:s[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[a++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){const r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&xo(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function $S(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==n&&(n={}),n.fromTFHub&&"string"===typeof t&&(t=function(e){e.endsWith("/")||(e+="/");return"".concat(e).concat(ZS).concat(QS)}(t));const r=new JS(t,n,a);return await r.load(),r}function eN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(rN(e)){const r=Array.isArray(e)?[]:{};a.add(e);for(const s in e){const o=eN(e[s],t,n,a);r[s]=o}return a.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error("Can't recurse into non-iterable type: ".concat(e))}return n.set(e,r.value),r.value}function tN(e){return nN(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:aN)}function nN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(rN(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const s in a){const a=nN(e.map((e=>e[s])),t,n);r[s]=a}return n.delete(a),r}throw new Error("Can't recurse into non-iterable type: ".concat(a))}return r.value}function aN(e){return null===e?null:rN(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function rN(e){let t=!1;if(vt().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:a}=n(551);t=e instanceof a}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof As)&&!(e instanceof Promise)&&!t)}function sN(e){return function(e,t){return eN(e,t)}(e,oN)}function oN(e){return e instanceof As?{value:e.clone(),recurse:!1}:rN(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class iN{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class cN extends iN{constructor(){super(cN.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let a=0;a<n;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function lN(e){return new pN(e)}function uN(e,t){return new NN(e,t)}cN.INITIAL_CAPACITY=32;class hN{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new vN(this,e)}filter(e){return new bN(this,e)}map(e){return new xN(this,e)}mapAsync(e){return new wN(this,e)}serialMapAsync(e){return new wN(this,e).serial()}flatmap(e){return new SN(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new yN(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:aN;return this.rowMajorBatch(e,t).map((e=>tN(e,n)))}concatenate(e,t){return new NN(new dN([this,e]),t)}take(e){return e<0||null==e?this:new gN(this,e)}skip(e){return e<0||null==e?this:new mN(this,e)}prefetch(e){return new TN(this,e)}shuffle(e,t){return new CN(this,e,t)}serial(){return new fN(this)}}class dN extends hN{constructor(e){super(),this.items=e,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:sN(e),done:!1}}}class pN extends hN{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: ".concat(e.message),e}}}class fN extends hN{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class mN extends hN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;xo(e.value)}return this.upstream.next()}}class gN extends hN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class yN extends hN{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class bN extends hN{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;xo(e.value)}}}class xN extends hN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=js(e.value),n=this.transform(e.value),a=js(n);for(const r of t)Hs(r,a)||r.dispose();return{value:n,done:!1}}}class vN extends hN{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class wN extends hN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=js(e.value),n=await this.transform(e.value),a=js(n);for(const r of t)Hs(r,a)||r.dispose();return{value:n,done:!1}}}class kN extends hN{constructor(){super(),this.outputQueue=new cN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class SN extends kN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=js(e.value),n=this.transform(e.value),a=js(n);this.outputQueue.pushAll(n);for(const r of t)Hs(r,a)||r.dispose();return!0}}class NN extends hN{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var IN;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(IN||(IN={}));class TN extends hN{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new iN(t)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class CN extends TN{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Ph.alea(n||us().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class EN{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let a;return We(e>0,(()=>"batchSize needs to be positive, but it is\n      ".concat(e))),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),RN((async()=>(await n.iterator()).columnMajorBatch(e,t,AN)),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,RN((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,RN((async()=>(await t.iterator()).filter((t=>bo((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return RN((async()=>(await t.iterator()).map((t=>bo((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return RN((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return RN((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,RN((async()=>uN(lN((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,RN((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const a=this,r=Ph.alea(t||us().toString());return RN((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,RN((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function RN(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends EN{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function AN(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof As||ps(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof As?Sd(e):po(e)}(e),recurse:!1}}return{value:null,recurse:!0}}EN.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function _N(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&We("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors in the CPU backend.")))}))}const FN=Gd;class DN extends Oe{nextDataId(){return DN.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new De(this,go())}write(e,t,n){this.firstUse&&(this.firstUse=!1,vt().get("IS_NODE")&&zr("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&nt(n[0])){const r=n.map((e=>hs(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return Gf(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype ".concat(t))}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>ds(e)));return Ii(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ii(e.shape,e.dtype,t)}makeOutput(e,t,n){return go().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=us();e();return{kernelMs:us()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){_N([e],"where");const t=this.readSync(e.dataId);return FN(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}DN.nextDataId=0;function ON(e){return(t,n,a)=>{const r=$e(n,t.length);for(let s=0;s<t.length;++s)r[s]=e(t[s],a);return r}}function MN(e,t,n){return LN(e,ON(t),n)}function LN(e,t,n){return a=>{let{inputs:r,attrs:s,backend:o}=a;const{x:i}=r;_N(i,e);const c=o,l=c.data.get(i.dataId).values;let u;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Sm(l)}else u=l;const h=n||i.dtype,d=t(u,h,s);return c.makeTensorInfo(i.shape,h,d)}}wo("cpu",(()=>new DN),1);const zN=MN(Nn,(e=>e>=0?e:Math.exp(e)-1)),PN={kernelName:Nn,backendName:"cpu",kernelFunc:zN};function BN(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const WN={kernelName:Vn,backendName:"cpu",kernelFunc:BN};function VN(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a;_N([r],"leakyRelu");const o=Ge(r.shape),i=n.data.get(r.dataId).values,c=Je("float32",o);for(let l=0;l<i.length;l++)c[l]=i[l]<0?s*i[l]:i[l];return n.makeTensorInfo(r.shape,"float32",c)}const UN={kernelName:Kn,backendName:"cpu",kernelFunc:VN};function GN(e){return(t,n,a,r,s)=>{const o=$i(t,n),i=o.length,c=it(o),l=Je(s,Ge(o)),u=t.length,h=n.length,d=it(t),p=it(n),f=Zi(t,o),m=Zi(n,o);if(f.length+m.length===0)for(let g=0;g<l.length;++g)l[g]=e(a[g%a.length],r[g%r.length]);else for(let g=0;g<l.length;++g){const t=mt(g,i,c),n=t.slice(-u);f.forEach((e=>n[e]=0));const s=ft(n,u,d),o=t.slice(-h);m.forEach((e=>o[e]=0));const y=ft(o,h,p);l[g]=e(a[s],r[y])}return[l,o]}}const HN=GN(((e,t)=>e<0?t*e:e));function jN(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t;_N([a,r],"prelu");const s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,[i,c]=HN(a.shape,r.shape,s,o,"float32");return n.makeTensorInfo(c,"float32",i)}const qN={kernelName:Ea,backendName:"cpu",kernelFunc:jN},KN=MN(La,(e=>Math.max(0,e))),XN={kernelName:La,backendName:"cpu",kernelFunc:KN},YN=MN(Ua,(e=>Math.min(Math.max(0,e),6))),QN={kernelName:Ua,backendName:"cpu",kernelFunc:YN},ZN=ON((e=>1/(1+Math.exp(-e)))),JN=MN(tr,(e=>1/(1+Math.exp(-e)))),$N={kernelName:tr,backendName:"cpu",kernelFunc:JN};function eI(e,t,n,a,r){if("linear"===n)return BN({inputs:{x:t},backend:e});if("relu"===n)return KN({inputs:{x:t},backend:e});if("elu"===n)return zN({inputs:{x:t},backend:e});if("relu6"===n)return YN({inputs:{x:t},backend:e});if("prelu"===n)return jN({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return VN({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return JN({inputs:{x:t},backend:e});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function tI(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",o)},i}const nI={kernelName:Zt,backendName:"cpu",kernelFunc:tI};function aI(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return tI({inputs:{real:aI(e,t,"float32"),imag:aI(e,t,"float32")},backend:e})}const a=ht(Ge(t),n);return e.makeTensorInfo(t,n,a)}function rI(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const sI={kernelName:Oa,backendName:"cpu",kernelFunc:rI};function oI(e,t,n,a){if("int32"===a){return[t,"int32",Int32Array.from(e)]}if("bool"===a){const a=ls([0],n),[r,s]=GN(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[s,"bool",r]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(a))}function iI(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if("complex64"===s){if("complex64"===r.dtype)return BN({inputs:{x:r},backend:n});const e=aI(n,r.shape,r.dtype),t=iI({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=tI({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){const e=rI({inputs:{input:r},backend:n}),t=iI({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!et(r.dtype,s)){const e=BN({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}const o=n.data.get(r.dataId).values,[i,c,l]=oI(o,r.shape,r.dtype,s);return n.makeTensorInfo(i,c,l)}const cI={kernelName:Xt,backendName:"cpu",kernelFunc:iI};function lI(e,t,n,a){return null==n?n=>{let{inputs:r,backend:s}=n;const{a:o,b:i}=r,c=s;_N([o,i],e);const l=c.data.get(o.dataId).values,u=c.data.get(i.dataId).values,h="string"===o.dtype?Sm(l):l,d="string"===o.dtype?Sm(u):u,p=a||o.dtype,[f,m]=t(o.shape,i.shape,h,d,p);return c.makeTensorInfo(m,p,f)}:e=>{let{inputs:r,backend:s}=e;const{a:o,b:i}=r,c=s;if("complex64"===o.dtype||"complex64"===i.dtype){const e=iI({inputs:{x:o},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,s=c.data.get(a.dataId).values,l=c.data.get(r.dataId).values,u=iI({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),h=c.data.get(u.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=c.data.get(d.dataId).values,m=c.data.get(p.dataId).values,[g,y,b]=n(o.shape,i.shape,s,l,f,m),x=c.makeTensorInfo(b,"float32",g),v=c.makeTensorInfo(b,"float32",y),w=tI({inputs:{real:x,imag:v},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(x),c.disposeIntermediateTensorInfo(v),w}{const e=c.data.get(o.dataId).values,n=c.data.get(i.dataId).values,r=a||o.dtype,[s,l]=t(o.shape,i.shape,e,n,r);return c.makeTensorInfo(l,r,s)}}}function uI(e){return(t,n,a,r,s,o)=>{const i=$i(t,n),c=Ge(i),l=i.length,u=it(i),h=Je("float32",c),d=Je("float32",c),p=Zi(t,i),f=Zi(n,i),m=Gf(a,r),g=Gf(s,o),y=t.length,b=it(t),x=n.length,v=it(n);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const t=w%m.length,n=w%g.length,a=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);h[w]=a.real,d[w]=a.imag}else for(let w=0;w<h.length;w++){const t=mt(w,l,u),n=t.slice(-y);p.forEach((e=>n[e]=0));const a=ft(n,y,b),r=t.slice(-x);f.forEach((e=>r[e]=0));const s=ft(r,x,v),o=e(m[2*a],m[2*a+1],g[2*s],g[2*s+1]);h[w]=o.real,d[w]=o.imag}return[h,d,i]}}const hI=GN(((e,t)=>e+t)),dI=uI(((e,t,n,a)=>({real:e+n,imag:t+a}))),pI=lI(Et,hI,dI),fI={kernelName:Et,backendName:"cpu",kernelFunc:pI};function mI(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,o=Ge(r.shape),i=Ye(s,o),c=Ge(i);We(o===c,(()=>"The new shape (".concat(i,") has ").concat(c," elements and the old ")+"shape (".concat(r.shape,") has ").concat(o," elements. The new shape and old ")+"shape must have the same number of elements.")),n.incRef(r.dataId);const l=n.data.get(r.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const gI={kernelName:za,backendName:"cpu",kernelFunc:mI};function yI(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:i}=a;_N([r,s],"matMul");const c=r.shape.length,l=s.shape.length,u=o?r.shape[c-2]:r.shape[c-1],h=i?s.shape[l-1]:s.shape[l-2],d=o?r.shape[c-1]:r.shape[c-2],p=i?s.shape[l-2]:s.shape[l-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=Ge(f),y=Ge(m),b=$i(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,p]);We(u===h,(()=>"Error in matMul: inner shapes (".concat(u,") and (")+"".concat(h,") of Tensors with shapes ").concat(r.shape," and ")+"".concat(s.shape," and transposeA=").concat(o)+" and transposeB=".concat(i," must match.")));const x=i?[y,p,h]:[y,h,p],v=mI({inputs:{x:r},backend:n,attrs:{shape:o?[g,u,d]:[g,d,u]}}),w=mI({inputs:{x:s},backend:n,attrs:{shape:x}}),k=o?v.shape[1]:v.shape[2],S=o?v.shape[2]:v.shape[1],N=i?w.shape[1]:w.shape[2],I=Math.max(g,y),T=n.data.get(v.dataId).values,C=n.data.get(w.dataId).values,E=it(v.shape),R=it(w.shape),[A,_,F]=o?[E[0],1,E[1]]:[E[0],E[1],1],[D,O,M]=i?[1,R[1],R[0]]:[R[1],1,R[0]],L=S*N,z=Ii([I,S,N],v.dtype),P=z.values,B=n.blockSize;for(let W=0;W<I;W++){const e=W%g,t=W%y;for(let n=0;n<S;n+=B){const a=Math.min(n+B,S);for(let r=0;r<N;r+=B){const s=Math.min(r+B,N);for(let o=0;o<k;o+=B){const i=Math.min(o+B,k);for(let c=n;c<a;c++)for(let n=r;n<s;n++){let a=0;for(let r=o;r<i;r++){a+=T[e*A+c*_+r*F]*C[r*D+n*O+t*M]}P[W*L+(c*N+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,z.dtype,z.values)}const bI={kernelName:Gt,backendName:"cpu",kernelFunc:yI};const xI={kernelName:Or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;let d,p,f;const m=[];d=yI({inputs:{a:r,b:s},attrs:{transposeA:c,transposeB:l},backend:n}),o&&(p=pI({inputs:{a:d,b:o},backend:n}),m.push(d),d=p),u&&(f=eI(n,d,u,i,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}};function vI(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const wI={kernelName:It,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;_N(t,"abs");let a=new Float32Array(Ge(t.shape));return a=vI(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},kI=MN(Tt,(e=>Math.acos(e))),SI={kernelName:Tt,backendName:"cpu",kernelFunc:kI},NI=MN(Ct,(e=>Math.acosh(e))),II={kernelName:Ct,backendName:"cpu",kernelFunc:NI};const TI={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;_N(t,"addN");const r=a.map((e=>n.data.get(e.dataId).values)),s=Ii(a[0].shape,a[0].dtype),o=s.values;for(let i=0;i<a.length;i++){const e=r[i];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function CI(e,t,n,a,r){const s=t.length,o=Ge(t),i=it(t),c=it(r),l=Je(n,Ge(r));for(let u=0;u<o;++u){const t=mt(u,s,i),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];l[ft(n,s,c)]=e[u]}return l}function EI(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;_N(r,"transpose");const o=r.shape.length,i=new Array(o);for(let l=0;l<i.length;l++)i[l]=r.shape[s[l]];const c=CI(a.data.get(r.dataId).values,r.shape,r.dtype,s,i);return{dataId:a.write(c,i,r.dtype),shape:i,dtype:r.dtype}}const RI={kernelName:Tr,backendName:"cpu",kernelFunc:EI};const AI={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;_N(r,"all");const i=Qe(s,r.shape);let c=i;const l=wu(c,r.shape.length);let u=r;null!=l&&(u=EI({inputs:{x:r},backend:n,attrs:{perm:l}}),c=Su(c.length,r.shape.length)),vu("all",c,u.shape.length);const[h,d]=bu(u.shape,c),p=Ge(d),f=ht(Ge(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];t=t&&a}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(o){const e=mI({inputs:{x:g},backend:n,attrs:{shape:xu(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const _I={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;_N(r,"any");const i=Qe(s,r.shape);let c=i;const l=wu(c,r.shape.length);let u=r;null!=l&&(u=EI({inputs:{x:r},backend:n,attrs:{perm:l}}),c=Su(c.length,r.shape.length)),vu("any",c,u.shape.length);const[h,d]=bu(u.shape,c),p=Ge(d),f=ht(Ge(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];t=t||a}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(o){const e=mI({inputs:{x:g},backend:n,attrs:{shape:xu(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const FI={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;_N(r,"argMax");let o=Qe(s,r.shape);const i=wu(o,r.shape.length);let c=r;const l=[];null!=i&&(c=EI({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=Su(o.length,c.shape.length)),o=[o[0]],vu("argMax",o,c.shape.length);const[u,h]=bu(c.shape,o),d=ht(Ge(u),"int32"),p=Ge(h),f=n.data.get(c.dataId).values;for(let m=0;m<d.length;++m){const e=m*p;let t=f[e],n=0;for(let a=0;a<p;++a){const r=f[e+a];r>t&&(t=r,n=a)}d[m]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u,"int32",d)}};const DI={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;_N(r,"argMin");let o=Qe(s,r.shape);const i=wu(o,r.shape.length);let c=r;const l=[];null!=i&&(c=EI({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=Su(o.length,c.shape.length)),o=[o[0]],vu("argMin",o,c.shape.length);const[u,h]=bu(c.shape,o),d=ht(Ge(u),"int32"),p=Ge(h),f=n.data.get(c.dataId).values;for(let m=0;m<d.length;++m){const e=m*p;let t=f[e],n=0;for(let a=0;a<p;++a){const r=f[e+a];r<t&&(t=r,n=a)}d[m]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u,"int32",d)}},OI=MN(Ot,(e=>Math.asin(e))),MI={kernelName:Ot,backendName:"cpu",kernelFunc:OI},LI=MN(Mt,(e=>Math.asinh(e))),zI={kernelName:Mt,backendName:"cpu",kernelFunc:LI},PI=MN(Lt,(e=>Math.atan(e))),BI={kernelName:Lt,backendName:"cpu",kernelFunc:PI},WI=GN(((e,t)=>Math.atan2(e,t))),VI=lI(Pt,WI),UI={kernelName:Pt,backendName:"cpu",kernelFunc:VI},GI=MN(zt,(e=>Math.atanh(e))),HI={kernelName:zt,backendName:"cpu",kernelFunc:GI};function jI(e,t,n,a,r,s){const o=r.strideHeight,i=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,u=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ii(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let v=0;v<r.batchSize;++v){const t=v*y,n=v*a[0];for(let m=0;m<r.inChannels;++m)for(let y=0;y<r.outHeight;++y){const v=y*o-d,w=Math.max(0,v),k=Math.min(r.inHeight,u+v),S=t+y*b;for(let t=0;t<r.outWidth;++t){const o=t*i-p,u=Math.max(0,o),d=Math.min(r.inWidth,h+o);let y=f,b=0,v=0;for(let t=w;t<k;t+=c){const r=n+t*a[1];for(let t=u;t<d;t+=l){const n=e[r+t*a[2]+m];"max"===s&&n>y?y=n:"avg"===s&&(b+=n,v++)}if(isNaN(y))break}g[S+t*x+m]="avg"===s?b/v:y}}}return m}function qI(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=Ii(a.outShape,"int32"),i=a.strideHeight,c=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,h=a.effectiveFilterHeight,d=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m=Ii(t,n,e);for(let g=0;g<a.batchSize;++g)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*i-p;let y=n;for(;y<0;)y+=l;const b=Math.min(a.inHeight,h+n);for(let i=0;i<a.outWidth;++i){const h=i*c-f;let p=h;for(;p<0;)p+=u;const x=Math.min(a.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=l){const o=t-n;for(let n=p;n<x;n+=u){const i=n-h,c=m.get(g,t,n,e);c>v&&(v=c,w=r?s?((g*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:o*d+i)}}o.set(w,g,t,i,e)}}return o}function KI(e,t,n,a,r,s){const o=r.strideDepth,i=r.strideHeight,c=r.strideWidth,l=r.dilationDepth,u=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ii(r.outShape,n),v=x.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[3]*r.outShape[4],N=r.outShape[4];for(let I=0;I<r.batchSize;++I){const t=I*w,n=I*a[0];for(let x=0;x<r.inChannels;++x)for(let w=0;w<r.outDepth;++w){const I=w*o-m;let T=I;for(;T<0;)T+=l;const C=Math.min(r.inDepth,d+I),E=t+w*k;for(let t=0;t<r.outHeight;++t){const o=t*i-g;let d=o;for(;d<0;)d+=u;const m=Math.min(r.inHeight,p+o),w=E+t*S;for(let t=0;t<r.outWidth;++t){const o=t*c-y;let i=o;for(;i<0;)i+=h;const p=Math.min(r.inWidth,f+o),g=w+t*N;let k=b,S=0,I=0;for(let t=T;t<C;t+=l){const r=n+t*a[1];for(let t=d;t<m;t+=u){const n=r+t*a[2];for(let t=i;t<p;t+=h){const r=e[n+t*a[3]+x];if("max"===s&&r>k?k=r:"avg"===s&&(S+=r,I++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+x]="avg"===s?S/Math.max(I,1):k}}}}return x}const XI={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;_N(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;We(bl(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=cl(r.shape,s,o,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&He(l.inShape,l.outShape))u=BN({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=it(r.shape),a=jI(e,r.shape,r.dtype,t,l,"avg");u=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return u}};const YI={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a;_N(r,"avgPool3d");const u=ll(r.shape,s,o,1,i,c,l),h=KI(n.data.get(r.dataId).values,r.shape,r.dtype,it(r.shape),u,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const QI={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;_N([r,s],"avgPool3DGrad");const u=ll(s.shape,o,i,1,c,l),h=u.strideDepth,d=u.strideHeight,p=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,b=u.dilationHeight,x=u.dilationWidth,v=u.effectiveFilterDepth,w=u.effectiveFilterHeight,k=u.effectiveFilterWidth,S=v-1-u.padInfo.front,N=k-1-u.padInfo.left,I=w-1-u.padInfo.top,T=Ii(s.shape,"float32"),C=1/(f*m*g),E=n.bufferSync(r);for(let R=0;R<u.batchSize;++R)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inDepth;++t)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const r=t-S,s=n-I,o=a-N;let i=0;for(let t=0;t<v;t+=y){const n=(r+t)/h;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=b){const a=(s+t)/d;if(!(a<0||a>=u.outHeight||Math.floor(a)!==a))for(let t=0;t<k;t+=x){const r=(o+t)/p;if(r<0||r>=u.outWidth||Math.floor(r)!==r)continue;i+=E.get(R,n,a,r,e)}}}T.set(i*C,R,t,n,a,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const ZI={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s;_N([r,s],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=cl(o.shape,i,c,1,l),h=u.strideHeight,d=u.strideWidth,p=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,x=b-1-u.padInfo.left,v=y-1-u.padInfo.top,w=Ii(o.shape,"float32"),k=1/(p*f),S=n.data.get(r.dataId).values,N=Ii(r.shape,"float32",S);for(let I=0;I<u.batchSize;++I)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inHeight;++t)for(let n=0;n<u.inWidth;++n){const a=t-v,r=n-x;let s=0;for(let t=0;t<y;t+=m){const n=(a+t)/h;if(!(n<0||n>=u.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const a=(r+t)/d;if(a<0||a>=u.outWidth||Math.floor(a)!==a)continue;s+=N.get(I,n,a,e)}}w.set(s*k,I,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const JI={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,scale:s,offset:o,mean:i,variance:c}=t;We(i.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),We(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),We(null==s||i.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),_N([r,i,c,s,o],"batchNorm");let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=n.data.get(c.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,y=p.length,b=d.length,x=h.length;let v=0,w=0,k=0,S=0;for(let N=0;N<u.length;++N)m[N]=f[v++]+(u[N]-h[w++])*p[k++]/Math.sqrt(d[S++]+l),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),S>=b&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function $I(e,t,n,a,r){const s=Hc(a,t,n),o=Ge(n),i=it(a);if(s){const n=jc(t,i);return"string"===r?e.slice(n,n+o):e.subarray(n,n+o)}const c=Ii(a,r,"string"===r?Sm(e):e),l=Ii(n,r);for(let u=0;u<l.size;++u){const e=l.indexToLoc(u),n=e.map(((e,n)=>e+t[n]));l.set(c.get(...n),...e)}return"string"===r?Nm(l.values):l.values}function eT(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:o}=a;_N(r,"slice");const[i,c]=qc(r,s,o);Fc(r,i,c);const l=$I(n.data.get(r.dataId).values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,l)}const tT={kernelName:Za,backendName:"cpu",kernelFunc:eT};const nT={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:o}=a;_N([r],"batchToSpaceND");const i=s.reduce(((e,t)=>e*t)),c=Rf(r.shape,s,i),l=Af(c.length,s.length),u=_f(r.shape,s,i),h=Ff(o,s.length),d=Df(u,o,s.length),p=mI({inputs:{x:r},backend:n,attrs:{shape:c}}),f=EI({inputs:{x:p},backend:n,attrs:{perm:l}}),m=mI({inputs:{x:f},backend:n,attrs:{shape:u}}),g=eT({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function aT(e,t,n,a,r){const s=Ge(a),o=ht(r,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(o[n]+=s>0?t[i]:1)}return o}function rT(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e.shape[0],s=e.shape[1],o=Ii([r,n],t.dtype);for(let i=0;i<r;i++)for(let r=0;r<s;r++){const s=e.get(i,r);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?o.set(1,i,s):t.size>0?o.set(o.get(i,s)+t.get(i,r),i,s):o.set(o.get(i,s)+1,i,s))}return o}const sT={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=aT(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,i)}},oT=GN(((e,t)=>e&t)),iT=lI(qt,oT),cT={kernelName:qt,backendName:"cpu",kernelFunc:iT};const lT={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=$i(Array.from(s),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},uT=ON((e=>Math.ceil(e))),hT=LN(Yt,uT),dT={kernelName:Yt,backendName:"cpu",kernelFunc:hT},pT=MN(Qt,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),fT={kernelName:Qt,backendName:"cpu",kernelFunc:pT},mT={kernelName:Jt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(Ge(t.shape)),r=n.data.get(t.dataId),s=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values;for(let l=0;l<i.length;l++){const e=i[l],t=c[l];a[l]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")}};function gT(e,t,n,a){const r=$e(n,Ge(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=Ge(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const s="string"===n?Sm(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[i+t]=s[o++]}a+=e.shape[1]}))}return r}function yT(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const bT={kernelName:Gn,backendName:"cpu",kernelFunc:yT};function xT(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=Qe(r,t[0].shape)[0];xf(t.map((e=>e.shape)),s);let o=vf(t.map((e=>e.shape)),s);if(0===Ge(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>Ge(e.shape)>0));if(1===i.length)return BN({inputs:{x:i[0]},backend:n});if("complex64"===i[0].dtype){const e=i.map((e=>rI({inputs:{input:e},backend:n}))),t=i.map((e=>yT({inputs:{input:e},backend:n}))),a=xT({inputs:e,backend:n,attrs:{axis:s}}),r=xT({inputs:t,backend:n,attrs:{axis:s}}),o=tI({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),o}const c=i.map((e=>{const t=Ge(e.shape.slice(s));return mI({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=c.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=vf(c.map((e=>e.shape)),1);const u=1===c[0].shape[0],h=gT(l,o,t[0].dtype,u),d=vf(i.map((e=>e.shape)),s),p=n.makeTensorInfo(d,t[0].dtype,h);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const vT={kernelName:$t,backendName:"cpu",kernelFunc:xT};function wT(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a;_N([r,s],"conv2d");const h=vl(c),d=ul(r.shape,s.shape,o,l,i,u,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new Ts(d.outShape,r.dtype),w=it(r.shape),k=it(s.shape),S=w[0],N=x?w[1]:w[2],I=x?w[2]:1,T=x?1:w[1],C=v.strides[0],E=x?v.strides[1]:v.strides[2],R=x?v.strides[2]:1,A=x?1:v.strides[1],_=n.data.get(r.dataId).values,F=n.data.get(s.dataId).values,D=v.values;for(let O=0;O<d.batchSize;++O){const e=O*S,t=O*C;for(let n=0;n<d.outHeight;++n){const a=t+n*E,r=n*d.strideHeight-b;for(let t=0;t<p;++t){const n=r+t*m;if(n<0||n>=d.inHeight)continue;const s=t*k[0],o=e+n*N;for(let e=0;e<d.outWidth;++e){const t=a+e*R,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const a=n+e*g;if(a<0||a>=d.inWidth)continue;const r=o+a*I;let i=s+e*k[1];for(let e=0;e<d.inChannels;++e){const n=_[r+e*T];for(let e=0;e<d.outChannels;++e)D[t+e*A]+=n*F[i+e];i+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,D)}const kT={kernelName:en,backendName:"cpu",kernelFunc:wT};const ST={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a;_N([r,s],"conv2dBackpropFilter");const h=vl(c),d=ul(r.shape,u,o,1,i,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new Ts(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,S=new Ts(r.shape,r.dtype,w),N=new Ts(s.shape,s.dtype,k);for(let I=0;I<m;++I){const e=Math.max(0,Math.ceil((v-I)/p)),t=Math.min(d.outHeight,(d.inHeight+v-I)/p);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((x-n)/f)),r=Math.min(d.outWidth,(d.inWidth+x-n)/f);for(let s=0;s<d.inChannels;++s)for(let o=0;o<d.outChannels;++o){let i=0;for(let c=0;c<d.batchSize;++c)for(let l=e;l<t;++l){const e=I+l*p-v;for(let t=a;t<r;++t){const a=n+t*f-x;i+=y?S.get(c,e,a,s)*N.get(c,l,t,o):S.get(c,s,e,a)*N.get(c,o,l,t)}}b.set(i,I,n,s,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const NT={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a;_N([r,s],"conv2dBackpropInput");const h=it(s.shape),d=it(r.shape);let p=vl(l);const f=ul(o,s.shape,i,1,c,u,!1,p),m=new Ts(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:S,filterWidth:N,inChannels:I,inHeight:T,inWidth:C,outChannels:E,outHeight:R,outWidth:A,strideHeight:_,strideWidth:F}=f;p=f.dataFormat;const D=S-1-f.padInfo.top,O=N-1-f.padInfo.left,M="channelsLast"===p,L=m.strides[0],z=M?m.strides[1]:m.strides[2],P=M?m.strides[2]:1,B=M?1:m.strides[1],W=d[0],V=M?d[1]:d[2],U=M?d[2]:1,G=M?1:d[1];for(let H=0;H<k;++H)for(let e=0;e<I;++e)for(let t=0;t<T;++t){const n=t-D,a=Math.max(0,Math.ceil(n/_)),r=Math.min(R,(S+n)/_);for(let s=0;s<C;++s){const o=s-O,i=Math.max(0,Math.ceil(o/F)),c=Math.min(A,(N+o)/F);let l=0;for(let t=a;t<r;++t){const a=t*_-n;for(let n=i;n<c;++n){const r=W*H+V*t+U*n,s=x*(S-1-a)+v*(N-1-(n*F-o))+w*e;for(let e=0;e<E;++e){l+=y[r+G*e]*b[s+e]}}}g[L*H+z*t+P*s+B*e]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const IT={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a;_N([r,s],"conv3d");const l=hl(r.shape,s.shape,o,c,i),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,v=new Ts(l.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,S=v.values,N=it(r.shape),I=it(s.shape);for(let T=0;T<l.batchSize;++T){const e=T*N[0],t=T*v.strides[0];for(let n=0;n<l.outDepth;++n){const a=t+n*v.strides[1],r=n*l.strideDepth-y;for(let t=0;t<u;++t){const n=r+t*p;if(n<0||n>=l.inDepth)continue;const s=t*I[0],o=e+n*N[1];for(let e=0;e<l.outHeight;++e){const t=a+e*v.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const a=n+e*f;if(a<0||a>=l.inHeight)continue;const r=s+e*I[1],i=o+a*N[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,a=e*l.strideWidth-b;for(let e=0;e<d;++e){const t=a+e*m;if(t<0||t>=l.inWidth)continue;const s=r+e*I[2],o=i+t*l.inChannels;let c=s;for(let e=0;e<l.inChannels;++e){const t=w[o+e];for(let e=0;e<l.outChannels;++e)S[n+e]+=t*k[c+e];c+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const TT={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,filterShape:c}=a;_N([r,s],"conv3dBackpropFilterV2");const l=it(r.shape),u=it(s.shape),h=hl(r.shape,c,o,1,i),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Ts(h.filterShape,"float32"),x=b.values,[v,w,k,S]=b.strides,N=n.data.get(s.dataId).values,[I,T,C,E]=u,R=n.data.get(r.dataId).values,[A,_,F,D]=l,O=h.padInfo.front,M=h.padInfo.left,L=h.padInfo.top;for(let z=0;z<m;++z){const e=Math.max(0,Math.ceil((O-z)/d)),t=Math.min(h.outDepth,(h.inDepth+O-z)/d),n=z*v;for(let a=0;a<g;++a){const r=Math.max(0,Math.ceil((L-a)/p)),s=Math.min(h.outHeight,(h.inHeight+L-a)/p),o=a*w+n;for(let n=0;n<y;++n){const i=Math.max(0,Math.ceil((M-n)/f)),c=Math.min(h.outWidth,(h.inWidth+M-n)/f),l=n*k+o;for(let o=0;o<h.inChannels;++o){const u=o*S+l;for(let l=0;l<h.outChannels;++l){let m=0;for(let u=0;u<h.batchSize;++u){const h=u*A,g=u*I;for(let u=e;u<t;++u){const e=(z+u*d-O)*_+h,t=u*T+g;for(let u=r;u<s;++u){const r=(a+u*p-L)*F+e,s=u*C+t;for(let e=i;e<c;++e){const t=e*E+s;m+=R[(n+e*f-M)*D+r+o]*N[t+l]}}}}x[u+l]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const CT={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:o,strides:i,inputShape:c}=a;_N([r],"conv3dBackpropInputV2");const l=it(r.shape),u=it(s.shape),h=hl(c,s.shape,i,1,o),d=new Ts(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(r.dataId).values,[x,v,w,k]=l,S=n.data.get(s.dataId).values,[N,I,T,C]=u,{batchSize:E,filterDepth:R,filterHeight:A,filterWidth:_,inChannels:F,inDepth:D,inHeight:O,inWidth:M,outChannels:L,outDepth:z,outHeight:P,outWidth:B,strideDepth:W,strideHeight:V,strideWidth:U}=h,G=R-1-h.padInfo.front,H=A-1-h.padInfo.top,j=_-1-h.padInfo.left;for(let q=0;q<E;++q)for(let e=0;e<F;++e)for(let t=0;t<D;++t){const n=t-G,a=Math.max(0,Math.ceil(n/W)),r=Math.min(z,(R+n)/W);for(let s=0;s<O;++s){const o=s-H,i=Math.max(0,Math.ceil(o/V)),c=Math.min(P,(A+o)/V);for(let l=0;l<M;++l){const u=l-j,h=Math.max(0,Math.ceil(u/U)),d=Math.min(B,(_+u)/U);let E=0;for(let t=a;t<r;++t){const a=t*W-n;for(let n=i;n<c;++n){const r=n*V-o;for(let s=h;s<d;++s){const o=x*q+v*t+w*n+k*s,i=N*(R-1-a)+I*(A-1-r)+T*(_-1-(s*U-u))+C*e;for(let e=0;e<L;++e){E+=b[o+e]*S[i+e]}}}}p[f*q+m*t+g*s+y*l+e]=E}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},ET=MN(on,(e=>Math.cos(e))),RT={kernelName:on,backendName:"cpu",kernelFunc:ET},AT=MN(cn,(e=>Math.cosh(e))),_T={kernelName:cn,backendName:"cpu",kernelFunc:AT};const FT={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:l}=a,[u,h,d,p]=r.shape,f=s.shape[0],[m,g]=i,y=Ii([f,m,g,p],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(o.dataId).values,v=n.data.get(r.dataId).values,w=it(r.shape),k=it(y.shape);for(let S=0;S<f;S++){const e=4*S,t=b[e],n=b[e+1],a=b[e+2],r=b[e+3],s=x[S];if(s>=u)continue;const o=m>1?(a-t)*(h-1)/(m-1):0,i=g>1?(r-n)*(d-1)/(g-1):0;for(let u=0;u<m;u++){const e=m>1?t*(h-1)+u*o:.5*(t+a)*(h-1);if(e<0||e>h-1)for(let t=0;t<g;t++)for(let e=0;e<p;e++){const n=e+t*k[2]+u*k[1]+S*k[0];y.values[n]=l}else if("bilinear"===c){const t=Math.floor(e),a=Math.ceil(e),o=e-t;for(let e=0;e<g;e++){const c=g>1?n*(d-1)+e*i:.5*(n+r)*(d-1);if(c<0||c>d-1){for(let t=0;t<p;t++){const n=t+e*k[2]+u*k[1]+S*k[0];y.values[n]=l}continue}const h=Math.floor(c),f=Math.ceil(c),m=c-h;for(let n=0;n<p;n++){let r=n+h*w[2]+t*w[1]+s*w[0];const i=v[r];r=n+f*w[2]+t*w[1]+s*w[0];const c=v[r];r=n+h*w[2]+a*w[1]+s*w[0];const l=v[r];r=n+f*w[2]+a*w[1]+s*w[0];const d=i+(c-i)*m,p=l+(v[r]-l)*m;r=n+e*k[2]+u*k[1]+S*k[0],y.values[r]=d+(p-d)*o}}}else for(let t=0;t<g;++t){const a=g>1?n*(d-1)+t*i:.5*(n+r)*(d-1);if(a<0||a>d-1){for(let e=0;e<p;e++){const n=e+t*k[2]+u*k[1]+S*k[0];y.values[n]=l}continue}const o=Math.round(a),c=Math.round(e);for(let e=0;e<p;e++){const n=e+o*w[2]+c*w[1]+s*w[0],a=e+t*k[2]+u*k[1]+S*k[0];y.values[a]=v[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const DT={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;_N(r,"cumprod");const c=wu([s],r.shape.length);let l=r;null!=c&&(l=EI({inputs:{x:r},backend:n,attrs:{perm:c}}));const u=Su(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const h=Bs(l.dtype,"int32"),d=ut(Ge(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=o?1:p[t];else{const n=m(y,e-1);d[t]=o?p[n]*d[n]:p[t]*d[n]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=c){const e=EI({inputs:{x:g},backend:n,attrs:{perm:ku(c)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};const OT={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;_N(r,"cumsum");const c=wu([s],r.shape.length);let l=r;null!=c&&(l=EI({inputs:{x:r},backend:n,attrs:{perm:c}}));const u=Su(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const h=Bs(l.dtype,"int32"),d=ht(Ge(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=o?0:p[t];else{const n=m(y,e-1);d[t]=o?p[n]+d[n]:p[t]+d[n]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=c){const e=EI({inputs:{x:g},backend:n,attrs:{perm:ku(c)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};const MT={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=aT(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,e)}if(2===r.shape.length){const e=rT(n.bufferSync(r),n.bufferSync(s),o,i);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};const LT={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a;We("NHWC"===o,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(o)));const i=r.shape[0],c=r.shape[1],l=r.shape[2],u=r.shape[3],h=c*s,d=l*s,p=u/(s*s),f=n.data.get(r.dataId).values,m=new Float32Array(i*h*d*p);let g=0;for(let y=0;y<i;++y)for(let e=0;e<h;++e){const t=Math.floor(e/s),n=e%s;for(let e=0;e<d;++e){const a=Math.floor(e/s),r=(n*s+e%s)*p;for(let e=0;e<p;++e){const n=e+r+u*(a+l*(t+c*y));m[g++]=f[n]}}}return n.makeTensorInfo([i,h,d,p],r.dtype,m)}};function zT(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=a;_N([r,s],"depthwiseConv2DNative");const u=it(r.shape),h=it(s.shape);let d=c;null==d&&(d=[1,1]),We(bl(o,d),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(d,"'")));const p=ul(r.shape,s.shape,o,d,i,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,v=b.top,w=p.outChannels/p.inChannels,k=new Ts(p.outShape,r.dtype),S=n.data.get(r.dataId).values,N=n.data.get(s.dataId).values,I=k.values;for(let T=0;T<p.batchSize;++T){const e=T*u[0],t=T*k.strides[0];for(let n=0;n<p.outHeight;++n){const a=t+n*k.strides[1],r=n*p.strideHeight-v;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=p.inHeight)continue;const s=t*h[0],o=e+n*u[1];for(let e=0;e<p.outWidth;++e){const t=a+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const a=n+e*y;if(a<0||a>=p.inWidth)continue;const r=s+e*h[1],i=o+a*p.inChannels;let c=t,l=r;for(let e=0;e<p.inChannels;++e){const t=S[i+e];for(let e=0;e<w;++e)I[c+e]+=t*N[l+e];c+=w,l+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const PT={kernelName:fn,backendName:"cpu",kernelFunc:zT};const BT={kernelName:mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a;_N([r,s],"depthwiseConv2dNativeBackpropFilter");const h=ul(r.shape,u,o,i,c,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Ts(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(r.dataId).values,w=new Ts(r.shape,r.dtype,v),k=n.data.get(s.dataId).values,S=new Ts(s.shape,s.dtype,k);for(let N=0;N<f;++N){const e=Math.max(0,Math.ceil((b-N)/d)),t=Math.min(h.outHeight,(h.inHeight+b-N)/d);for(let n=0;n<m;++n){const a=Math.max(0,Math.ceil((y-n)/p)),r=Math.min(h.outWidth,(h.inWidth+y-n)/p);for(let s=0;s<h.outChannels;++s){const o=Math.trunc(s/x),i=s%x;let c=0;for(let l=0;l<h.batchSize;++l)for(let i=e;i<t;++i){const e=N+i*d-b;for(let t=a;t<r;++t){const a=n+t*p-y;c+=w.get(l,e,a,o)*S.get(l,i,t,s)}}g.set(c,N,n,o,i)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const WT={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a;_N([r,s],"depthwiseConv2DNativeBackpropInput");const h=it(r.shape),d=it(s.shape),p=ul(u,s.shape,o,i,c,l,!0),f=new Ts(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(r.dataId).values,[v,w,k]=h,S=n.data.get(s.dataId).values,[N,I,T]=d,{batchSize:C,filterHeight:E,filterWidth:R,inChannels:A,inHeight:_,inWidth:F,outChannels:D,outHeight:O,outWidth:M,strideHeight:L,strideWidth:z}=p,P=E-1-p.padInfo.top,B=R-1-p.padInfo.left,W=D/A;for(let V=0;V<C;++V)for(let e=0;e<A;++e)for(let t=0;t<_;++t){const n=t-P,a=Math.max(0,Math.ceil(n/L)),r=Math.min(O,(E+n)/L);for(let s=0;s<F;++s){const o=s-B,i=Math.max(0,Math.ceil(o/z)),c=Math.min(M,(R+o)/z);let l=0;for(let t=a;t<r;++t){const a=t*L-n;for(let n=i;n<c;++n){const r=v*V+w*t+k*n,s=N*(E-1-a)+I*(R-1-(n*z-o))+T*e;for(let t=0;t<W;++t){l+=x[r+(e*W+t)]*S[s+t]}}}m[g*V+y*t+b*s+e]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const VT={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=Ge(a.shape),s=n.data.get(a.dataId).values,o=Ii([r,r],a.dtype),i=o.values;for(let l=0;l<s.length;l++)i[l*r+l]=s[l];const c=[...a.shape,...a.shape];return n.makeTensorInfo(c,o.dtype,o.values)}},UT={kernelName:bn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a,l=n,u=l.data.get(r.dataId).values,h=r.shape.length,d=l.data.get(s.dataId).values,p=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:N,dilationHeight:I,dilationWidth:T,outShape:C}=il(r.shape,s.shape,o,i,"NHWC",c),E=Ge(C),R=C.length,A=$e(r.dtype,E);for(let _=0;_<f;++_)for(let e=0;e<b;++e){const t=e*w-v.top;for(let n=0;n<x;++n){const a=n*k-v.left;for(let o=0;o<y;++o){let i=Number.MIN_SAFE_INTEGER;for(let e=0;e<S;++e){const n=t+e*I;if(n>=0&&n<m)for(let t=0;t<N;++t){const c=a+t*T;if(c>=0&&c<g){const a=ft([_,n,c,o],h,it(r.shape)),l=ft([e,t,o],p,it(s.shape)),f=u[a]+d[l];f>i&&(i=f)}}}A[ft([_,e,n,o],R,it(C))]=i}}}return{dataId:l.write(ls(A,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},GT={kernelName:vn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:o}=t,{strides:i,pad:c,dilations:l}=a,u=n,h=lt(r.shape,u.data.get(r.dataId).values),d=lt(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:N,dilationWidth:I,outShape:T}=il(r.shape,s.shape,i,c,"NHWC",l);We(o.rank===T.length,(()=>"Error in ".concat(vn,", dy ")+"must have the same rank as output ".concat(T.length,", but got ")+"".concat(o.rank)));const C=lt(T,u.data.get(o.dataId).values),E=dt(s.shape,s.dtype);for(let R=0;R<p;++R)for(let e=0;e<y;++e){const t=e*v-x.top;for(let n=0;n<b;++n){const a=n*w-x.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,o=0,i=0;for(let e=0;e<k;++e){const n=t+e*N;if(n>=0&&n<f)for(let t=0;t<S;++t){const c=a+t*I;if(c>=0&&c<m){const a=h[R][n][c][r]+d[e][t][r];a>s&&(s=a,o=e,i=t)}}}E[o][i][r]+=C[R][e][n][r]}}}return{dataId:u.write(ls(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},HT={kernelName:xn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:o}=t,{strides:i,pad:c,dilations:l}=a,u=n,h=lt(r.shape,u.data.get(r.dataId).values),d=lt(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:N,dilationWidth:I,outShape:T}=il(r.shape,s.shape,i,c,"NHWC",l);We(o.rank===T.length,(()=>"Error in ".concat(xn,", dy ")+"must have the same rank as output ".concat(T.length,", but got ")+"".concat(o.rank)));const C=lt(T,u.data.get(o.dataId).values),E=dt(r.shape,r.dtype);for(let R=0;R<p;++R)for(let e=0;e<y;++e){const t=e*v-x.top;for(let n=0;n<b;++n){const a=n*w-x.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,o=t<0?0:t,i=a<0?0:a;for(let e=0;e<k;++e){const n=t+e*N;if(n>=0&&n<f)for(let t=0;t<S;++t){const c=a+t*I;if(c>=0&&c<m){const a=h[R][n][c][r]+d[e][t][r];a>s&&(s=a,o=n,i=c)}}}E[R][o][i][r]+=C[R][e][n][r]}}}return{dataId:u.write(ls(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const jT={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:s,options:o}=a,{contextOptions:i,imageOptions:c}=o||{},l=(null===c||void 0===c?void 0:c.alpha)||1,u=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==u)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const h=s.getContext(u,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==h)throw new Error("Could not get the context with ".concat(u," type."));const[d,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,y=new Uint8ClampedArray(p*d*4);for(let x=0;x<d*p;++x){const e=[0,0,0,255*l];for(let n=0;n<f;n++){const t=m[x*f+n];if("float32"===r.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===r.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*x;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}s.width=p,s.height=d;const b=new ImageData(y,p,d);return h.putImageData(b,0,0),r}},qT=GN(((e,t)=>e*t)),KT=uI(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),XT=lI(ya,qT,KT),YT={kernelName:ya,backendName:"cpu",kernelFunc:XT};function QT(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;let i;_N(r,"sum"),i="bool"===r.dtype?iI({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):BN({inputs:{x:r},backend:n});const c=i.shape.length,l=Qe(s,i.shape),u=wu(l,c);let h=l,d=i;null!=u&&(d=EI({inputs:{x:i},backend:n,attrs:{perm:u}}),h=Su(h.length,c)),vu("sum",h,d.shape.length);const[p,f]=bu(d.shape,h);let m=aI(n,p,Bs(d.dtype,"int32"));const g=Ge(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let x=0;x<y.length;++x){const e=x*g;let t=0;for(let n=0;n<g;++n)t+=b[e+n];y[x]=t}if(o){const e=m;m=mI({inputs:{x:m},backend:n,attrs:{shape:xu(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(i),null!=u&&n.disposeIntermediateTensorInfo(d),m}const ZT={kernelName:rr,backendName:"cpu",kernelFunc:QT};const JT={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:o,summedDims:i,idDims:c}=tm(r,s.length);am(o.length,c,s);const{path:l,steps:u}=rm(i,c),h=u.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const e of u[m]){const{permutationIndices:t,expandDims:a}=nm(p,c[e]);let r;sm(t)?r=s[e]:(r=EI({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(r));const o=r.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);He(r.shape,o)||(r=mI({inputs:{x:r},backend:n,attrs:{shape:o}}),f.push(r)),null===d?d=r:(d=XT({inputs:{a:r,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=QT({inputs:{x:d},backend:n,attrs:{axis:l[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}};const $T={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:r}=t;_N([a,r],"eluGrad");const s=new Float32Array(Ge(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values;for(let c=0;c<o.length;++c){const e=o[c];s[c]=e>=0?i[c]:i[c]*(e+1)}return n.makeTensorInfo(r.shape,"float32",s)}},eC=GN(((e,t)=>e===t?1:0)),tC=lI(Cn,eC,null,"bool"),nC={kernelName:Cn,backendName:"cpu",kernelFunc:tC},aC=zf,rC=Pf,sC=Bf,oC=Wf,iC=Vf,cC=Uf,lC=MN(Tn,(e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+aC*n);return t*(1-((((cC*a+iC)*a+oC)*a+sC)*a+rC)*a*Math.exp(-n*n))})),uC={kernelName:Tn,backendName:"cpu",kernelFunc:lC},hC=ON((e=>Math.exp(e))),dC=LN(En,hC,"float32"),pC={kernelName:En,backendName:"cpu",kernelFunc:dC};function fC(e){const{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:s}=a,o=r.shape.length,i=r.shape.slice();let c=s;return s<0&&(We(-(o+1)<=s,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),c=o+s+1),i.splice(c,0,1),mI({inputs:{x:r},backend:n,attrs:{shape:i}})}const mC={kernelName:Rn,backendName:"cpu",kernelFunc:fC},gC=ON((e=>Math.expm1(e))),yC=LN(An,gC),bC={kernelName:An,backendName:"cpu",kernelFunc:yC},xC=GN(((e,t)=>e/t)),vC=lI(kn,xC),wC={kernelName:kn,backendName:"cpu",kernelFunc:vC},kC=GN(((e,t)=>e-t)),SC=uI(((e,t,n,a)=>({real:e-n,imag:t-a}))),NC=lI(vr,kC,SC),IC={kernelName:vr,backendName:"cpu",kernelFunc:NC};function TC(e,t,n){const a=e.shape,r=a[0],s=a[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,c=o.complexTensorInfos.imag,l=[r,s],u=Ge(l),h=Je("float32",u),d=Je("float32",u);for(let g=0;g<r;g++){const e=eT({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=eT({inputs:{x:c},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=tI({inputs:{real:e,imag:a},backend:n}),{real:o,imag:l}=CC(r,t,n),u=Gf(o,l);for(let t=0;t<s;t++){const e=Kf(u,t);h[g*s+t]=e.real,d[g*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=tI({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function CC(e,t,n){const a=Ge(e.shape),r=n.data.get(e.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((i=a)&i-1)){const r=EC(s,o,a,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",r.real),t=n.makeTensorInfo(i,"float32",r.imag),s=n.makeTensorInfo([],"float32",cs(a,"float32")),o=BN({inputs:{x:s},backend:n}),c=wC.kernelFunc({inputs:{a:e,b:s},backend:n}),l=wC.kernelFunc({inputs:{a:t,b:o},backend:n}),u=n.data.get(c.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:u,imag:h}}return r}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let r=0;r<t;r++){let s=0,o=0;for(let a=0;a<t;a++){const i=Qf(r*a,t,n),c=Kf(e,a);s+=c.real*i.real-c.imag*i.imag,o+=c.real*i.imag+c.imag*i.real}n&&(s/=t,o/=t),Xf(a,s,o,r)}return a}(Gf(s,o),a,t);return Hf(e)}var i}function EC(e,t,n,a,r){if(1===n)return{real:e,imag:t};const s=Gf(e,t),o=n/2,i=jf(s),c=i.real,l=i.imag,u=[c.length],h=r.makeTensorInfo(u,"float32",c),d=r.makeTensorInfo(u,"float32",l),p=tI({inputs:{real:h,imag:d},backend:r}),f=qf(s),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),v=tI({inputs:{real:b,imag:x},backend:r}),w=EC(c,l,o,a,r),k=w.real,S=w.imag,N=[k.length],I=r.makeTensorInfo(N,"float32",k),T=r.makeTensorInfo(N,"float32",S),C=tI({inputs:{real:I,imag:T},backend:r}),E=EC(m,g,o,a,r),R=E.real,A=E.imag,_=[R.length],F=r.makeTensorInfo(_,"float32",R),D=r.makeTensorInfo(_,"float32",A),O=tI({inputs:{real:F,imag:D},backend:r}),M=Yf(n,a),L=[M.real.length],z=r.makeTensorInfo(L,"float32",M.real),P=r.makeTensorInfo(L,"float32",M.imag),B=tI({inputs:{real:z,imag:P},backend:r}),W=XT({inputs:{a:B,b:O},backend:r}),V=pI({inputs:{a:C,b:W},backend:r}),U=NC({inputs:{a:C,b:W},backend:r}),G=rI({inputs:{input:V},backend:r}),H=rI({inputs:{input:U},backend:r}),j=yT({inputs:{input:V},backend:r}),q=yT({inputs:{input:U},backend:r}),K=xT({inputs:[G,H],backend:r,attrs:{axis:0}}),X=xT({inputs:[j,q],backend:r,attrs:{axis:0}}),Y=r.data.get(K.dataId).values,Q=r.data.get(X.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(I),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(X),{real:Y,imag:Q}}const RC={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=Ge(a.shape),s=a.shape[a.shape.length-1],o=mI({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=TC(o,!1,n),c=mI({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}};function AC(e){const{backend:t,attrs:n}=e,{shape:a,value:r,dtype:s}=n,o=s||rt(r),i=$e(o,Ge(a));return function(e,t,n){e.fill(t)}(i,r),t.makeTensorInfo(a,o,i)}const _C={kernelName:Fn,backendName:"cpu",kernelFunc:AC};const FC={kernelName:Dn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,s=a,o=Je(r.dtype,Ge(r.shape)),[i,c,l,u]=r.shape,h=s.data.get(r.dataId).values;for(let d=0;d<i;d++){const e=d*l*c*u;for(let t=0;t<c;t++){const n=t*(l*u);for(let t=0;t<l;t++){const a=t*u;for(let r=0;r<u;r++){const s=Math.round(l-t-1),i=e+n+a+r;let c=h[i];if(s>=0&&s<l){c=h[e+n+s*u+r]}o[i]=c}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},DC=ON((e=>Math.floor(e))),OC=LN(On,DC),MC={kernelName:On,backendName:"cpu",kernelFunc:OC},LC=GN(((e,t)=>Math.floor(e/t))),zC=lI(Mn,LC,null,"int32"),PC={kernelName:Mn,backendName:"cpu",kernelFunc:zC};const BC={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=wT({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const e=m;if("NCHW"===u&&1===o.shape.length&&1!==o.shape[0]){const e=mI({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=pI({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=pI({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===u&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const e=mI({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=eI(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=eI(n,m,p,i,f);n.disposeIntermediateTensorInfo(e)}return m}};const WC={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=zT({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const e=m;m=pI({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=eI(n,m,p,i,f),n.disposeIntermediateTensorInfo(e)}return m}};function VC(e,t,n,a,r,s,o,i,c){const l=Ii([a,s],n);for(let u=0;u<a;u++){const n=[];let a=0;for(let t=0;t<r;t++){const s=e[u*r+t];a+=s*o[t],n.push(s)}if(a<0||a>=c/s)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(i));for(let e=0;e<s;e++)l.values[u*s+e]=t.get(...t.indexToLoc(a*s+e))}return l}const UC={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=Ge(a.shape),o=r.shape,i=o[o.length-1],[c,l,u,h]=Of(a,r);if(0===l)return n.makeTensorInfo(c,a.dtype,[]);const d=VC(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,l,i,u,h,a.shape,s);return n.makeTensorInfo(c,a.dtype,d.values)}};function GC(e,t,n){const a=Ii(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=n[0],o=n[2],i=t.locToIndex([s,o]);n[2]=t.values[i];const c=e.locToIndex(n);0<=c&&c<e.values.length&&(a.values[r]=e.values[c])}return a}const HC={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:o,batchDims:i}=a;_N([r,s],"gatherV2");const c=Qe(o,r.shape)[0],l=n.data.get(s.dataId).values,u=r.shape[c];for(let x=0;x<l.length;++x){const e=l[x];We(e<=u-1&&e>=0,(()=>"GatherV2: the index value ".concat(e," is not in [0, ").concat(u-1,"]")))}let h=i;null==i&&(h=0);const d=Ge(s.shape),p=km(r,s,c,h),f=mI({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=mI({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=GC(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},jC=GN(((e,t)=>e>t?1:0)),qC=lI(Bn,jC,null,"bool"),KC={kernelName:Bn,backendName:"cpu",kernelFunc:qC},XC=GN(((e,t)=>e>=t?1:0)),YC=lI(Wn,XC,null,"bool"),QC={kernelName:Wn,backendName:"cpu",kernelFunc:YC};const ZC={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=Ge(a.shape),s=a.shape[a.shape.length-1],o=mI({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=TC(o,!0,n),c=mI({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}},JC=MN(Hn,(e=>Number.isFinite(e)?1:0),"bool"),$C={kernelName:Hn,backendName:"cpu",kernelFunc:JC},eE=MN(jn,(e=>Math.abs(e)===1/0?1:0),"bool"),tE={kernelName:jn,backendName:"cpu",kernelFunc:eE},nE=MN(qn,(e=>Number.isNaN(e)?1:0),"bool"),aE={kernelName:qn,backendName:"cpu",kernelFunc:nE},rE=GN(((e,t)=>e<t?1:0)),sE=lI(Xn,rE,null,"bool"),oE={kernelName:Xn,backendName:"cpu",kernelFunc:sE},iE=GN(((e,t)=>e<=t?1:0)),cE=lI(Yn,iE,null,"bool"),lE={kernelName:Yn,backendName:"cpu",kernelFunc:cE};function uE(e,t,n){const a=(t-e)/(n-1),r=ht(n,"float32");r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+a;return r}const hE={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=uE(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},dE=ON((e=>Math.log(e))),pE=LN(Zn,dE),fE={kernelName:Zn,backendName:"cpu",kernelFunc:pE},mE=MN(Jn,(e=>Math.log1p(e))),gE={kernelName:Jn,backendName:"cpu",kernelFunc:mE},yE=GN(((e,t)=>e&&t)),bE=lI($n,yE,null,"bool"),xE={kernelName:$n,backendName:"cpu",kernelFunc:bE},vE=MN(ea,(e=>e?0:1),"bool"),wE={kernelName:ea,backendName:"cpu",kernelFunc:vE},kE=GN(((e,t)=>e||t)),SE=lI(ta,kE,null,"bool"),NE={kernelName:ta,backendName:"cpu",kernelFunc:SE};const IE={kernelName:na,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:o,alpha:i,beta:c}=a;_N(r,"LRN");const l=r.shape[3],u=l-1,h=n.data.get(r.dataId).values,d=Ge(r.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-s);const a=e-t+Math.min(t+s,u);let r=0;for(;n<=a;n++){const e=h[n];r+=e*e}return r}for(let m=0;m<d;m++){const e=f(m),t=h[m]*Math.pow(o+i*e,-c);p[m]=t}return n.makeTensorInfo(r.shape,r.dtype,p)}};const TE={kernelName:aa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a;_N(o,"LRNGrad");const h=Ge(o.shape),d=o.shape[3],p=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const e=b%d,t=b-e+Math.max(0,e-i),n=b-e+Math.min(d,e+i+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(f[r],2);a=l*a+c;for(let r=t;r<n;r++){let e=-2*l*u*f[r]*m[b]/a;b===r&&(e+=Math.pow(a,-u)),e*=p[b],g[r]+=e}}return n.makeTensorInfo(o.shape,r.dtype,g)}};function CE(e,t,n,a){const r=Je(a,Ge(n));for(let s=0;s<r.length;++s){const n=s*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}r[s]=a}return r}function EE(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:o}=a,i=n;let c=r.shape;const l=c.length,u=Qe(s,c);let h=u;const d=wu(h,l);let p=i.data.get(r.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=c[d[t]];p=CI(p,c,r.dtype,d,e),h=Su(h.length,l),c=e}_N(r,"max"),vu("max",h,l);const[f,m]=bu(c,h),g=CE(p,Ge(m),f,r.dtype),y=i.write(g,f,r.dtype);let b=f;if(o){b=xu(f,u)}return{dataId:y,shape:b,dtype:r.dtype}}const RE={kernelName:ra,backendName:"cpu",kernelFunc:EE},AE=GN(((e,t)=>Math.max(e,t))),_E=lI(sa,AE),FE={kernelName:sa,backendName:"cpu",kernelFunc:_E};const DE={kernelName:oa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;_N(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;We(bl(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=cl(r.shape,s,o,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&He(l.inShape,l.outShape))u=BN({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=it(r.shape),a=jI(e,r.shape,r.dtype,t,l,"max");u=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return u}};const OE={kernelName:ca,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a;_N(r,"maxPool3d");const u=ll(r.shape,s,o,1,i,c,l),h=KI(n.data.get(r.dataId).values,r.shape,r.dtype,it(r.shape),u,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const ME={kernelName:la,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;_N([r,s],"maxPool3DGrad");const u=ll(s.shape,o,i,1,c,l),h=function(e,t){const n=Ii(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,s=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*a-d;let x=b;for(;x<0;)x+=o;const v=Math.min(t.inDepth,l+b);for(let a=0;a<t.outHeight;++a){const l=a*r-p;let d=l;for(;d<0;)d+=i;const w=Math.min(t.inHeight,u+l);for(let r=0;r<t.outWidth;++r){const p=r*s-f;let k=p;for(;k<0;)k+=c;const S=Math.min(t.inWidth,h+p);let N=Number.NEGATIVE_INFINITY,I=-1;for(let t=x;t<v;t+=o){const n=t-b;for(let a=d;a<w;a+=i){const r=a-l;for(let s=k;s<S;s+=c){const o=s-p,i=e.get(m,t,a,s,g);i>=N&&(N=i,I=n*u*h+r*u+o)}}}n.set(I,m,y,a,r,g)}}}return n}(n.bufferSync(s),u),d=u.strideDepth,p=u.strideHeight,f=u.strideWidth,m=u.dilationDepth,g=u.dilationHeight,y=u.dilationWidth,b=u.effectiveFilterDepth,x=u.effectiveFilterHeight,v=u.effectiveFilterWidth,w=b-1-u.padInfo.front,k=v-1-u.padInfo.left,S=x-1-u.padInfo.top,N=Ii(s.shape,"float32"),I=n.bufferSync(r);for(let T=0;T<u.batchSize;++T)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inDepth;++t)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const r=t-w,s=n-S,o=a-k;let i=0;for(let t=0;t<b;t+=m){const n=(r+t)/d;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let a=0;a<x;a+=g){const r=(s+a)/p;if(!(r<0||r>=u.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=y){const c=(o+s)/f;if(c<0||c>=u.outWidth||Math.floor(c)!==c)continue;const l=b*x*v-1-h.get(T,n,r,c,e)===t*x*v+a*v+s?1:0;if(0===l)continue;i+=I.get(T,n,r,c,e)*l}}}N.set(i,T,t,n,a,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const LE={kernelName:ia,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:o}=t,i=s;_N([s,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=cl(i.shape,c,l,1,u,h),p=n.data.get(i.dataId).values,f=Ii(d.outShape,i.dtype,qI(p,i.shape,i.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,S=Ii(i.shape,"float32"),N=n.data.get(r.dataId).values,I=Ii(r.shape,"float32",N);for(let T=0;T<d.batchSize;++T)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const a=t-k,r=n-w;let s=0;for(let t=0;t<x;t+=y){const n=(a+t)/m;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let a=0;a<v;a+=b){const o=(r+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const i=x*v-1-f.get(T,n,o,e)===t*v+a?1:0;if(0===i)continue;s+=I.get(T,n,o,e)*i}}S.set(s,T,t,n,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const zE={kernelName:ua,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:c}=n,l=a;_N(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,h=cl(r.shape,s,o,[1,1],i),[d,p]=function(e,t,n,a,r){const s=jI(e,0,n,it(t),r,"max"),o=qI(e,t,n,r,!0,a);return[s.values,o.values]}(u,r.shape,r.dtype,c,h),f=l.write(d,h.outShape,r.dtype),m=l.write(p,h.outShape,r.dtype);return[{dataId:f,shape:h.outShape,dtype:r.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}};const PE={kernelName:ha,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=Qe(s,r.shape),c=Ge(bu(r.shape,i)[1]),l=[],u=n.makeTensorInfo([],"float32",new Float32Array([c]));l.push(u);const h=iI({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});l.push(h);const d=vC({inputs:{a:h,b:u},backend:n});l.push(d);const p=QT({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:o}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const BE={kernelName:da,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;_N(r,"min");const i=Qe(s,r.shape);let c=i;const l=wu(c,r.shape.length);let u=r;null!=l&&(u=EI({inputs:{x:r},backend:n,attrs:{perm:l}}),c=Su(c.length,r.shape.length)),vu("min",c,u.shape.length);const[h,d]=bu(u.shape,c),p=Ge(d),f=ht(Ge(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];(Number.isNaN(a)||a<t)&&(t=a)}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(o){const e=mI({inputs:{x:g},backend:n,attrs:{shape:xu(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}},WE=GN(((e,t)=>Math.min(e,t))),VE=lI(pa,WE),UE={kernelName:pa,backendName:"cpu",kernelFunc:VE};const GE={kernelName:fa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,mode:o}=a;_N(r,"mirrorPad");const i=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),c=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+r.shape[t])),u="reflect"===o?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=it(r.shape),f=Ge(i),m=i.length,g=it(i),y=Je(r.dtype,f);for(let b=0;b<f;b++){let e=mt(b,m,g);for(let n=0;n<m;n++)e[n]<c[n]?e[n]=2*c[n]-e[n]-u:e[n]>=l[n]&&(e[n]=2*(l[n]-1)-e[n]+u);e=e.map(((e,t)=>e-c[t]));const t=ft(e,d,p);y[b]=h[t]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}},HE=GN(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),jE=lI(ma,HE),qE={kernelName:ma,backendName:"cpu",kernelFunc:jE};function KE(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,o=r.shape.length;let i=s;if(-1===i&&(i=o-1),i!==o-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(o," and dim was ").concat(i));const c=Qe([i],r.shape),l=EE({inputs:{x:r},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),u=xu(l.shape,c),h=mI({inputs:{x:l},backend:n,attrs:{shape:u}}),d=NC({inputs:{a:r,b:h},backend:n}),p=dC({inputs:{x:d},backend:n}),f=QT({inputs:{x:p},backend:n,attrs:{axis:c,keepDims:!1}}),m=mI({inputs:{x:f},backend:n,attrs:{shape:u}}),g=vC({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const XE={kernelName:ir,backendName:"cpu",kernelFunc:KE};const YE={kernelName:ga,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:i}=a;_N(r,"multinomial");const c=i?r:KE({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=c.shape[0],u=c.shape[1],h=n.data.get(c.dataId).values,d=[l,s],p=ht(Ge(d),"int32");for(let f=0;f<l;++f){const e=f*u,t=new Float32Array(u-1);t[0]=h[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+h[e+r];const n=Ph.alea(o.toString()),a=f*s;for(let r=0;r<s;++r){const e=n();p[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){p[a+r]=n;break}}}return i||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(d,"int32",p)}};function QE(e,t,n){const a=cs(-1,n);return qT([],t,a,e,n)}const ZE={kernelName:ba,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;_N(a,"neg");const r=n.data.get(a.dataId).values,[s,o]=QE(r,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,s)}},JE=Np;const $E={kernelName:va,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a;_N(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,{selectedIndices:h}=JE(l,u,o,i,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},eR=Ip;const tR={kernelName:wa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a;_N(r,"NonMaxSuppressionPadded");const u=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=eR(u,h,o,i,c,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},nR=Tp;const aR={kernelName:ka,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a;_N(r,"NonMaxSuppressionWithScore");const u=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,d=o,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=nR(u,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},rR=GN(((e,t)=>e!==t?1:0)),sR=lI(xa,rR,null,"bool"),oR={kernelName:xa,backendName:"cpu",kernelFunc:sR};const iR={kernelName:Na,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:o,onValue:i,offValue:c}=a;_N(r,"oneHot");const l=Ge(r.shape),u=new Float32Array(l*o);u.fill(c);const h=n.data.get(r.dataId).values;for(let d=0;d<l;++d)h[d]>=0&&h[d]<o&&(u[d*o+h[d]]=i);return n.makeTensorInfo([...r.shape,o],s,u)}};function cR(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=rI({inputs:{input:a},backend:n}),t=cR({inputs:{x:e},backend:n}),r=yT({inputs:{input:a},backend:n}),s=cR({inputs:{x:r},backend:n}),o=tI({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return AC({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const lR={kernelName:Ar,backendName:"cpu",kernelFunc:cR};const uR={kernelName:Sa,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=rI({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=yT({inputs:{input:r},backend:a}),o=cR({inputs:{x:s},backend:a}),i=tI({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return AC({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function hR(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return fC({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{Ve(s,e.shape,"All tensors passed to stack must have matching shapes"),We(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=xT({inputs:t.map((e=>{const t=fC({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const dR={kernelName:Ia,backendName:"cpu",kernelFunc:hR};const pR={kernelName:Ta,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:o}=a;_N(r,"pad");const i=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),c=s.map((e=>e[0])),l=n.data.get(r.dataId).values,u=Ge(r.shape),h=r.shape.length,d=it(r.shape),p=Ge(i),f=i.length,m=it(i),g=Je(r.dtype,p);0!==o&&g.fill(o);for(let y=0;y<u;y++){g[ft(mt(y,h,d).map(((e,t)=>e+c[t])),f,m)]=l[y]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}},fR=GN(((e,t)=>Math.pow(e,t))),mR=lI(Ca,fR),gR={kernelName:Ca,backendName:"cpu",kernelFunc:mR};function yR(e,t,n,a){const[r,s]=bu(e,a),o=Bs(t,"int32"),i=ht(Ge(r),o),c=Ge(s);for(let l=0;l<i.length;++l){const e=l*c;let t=1;for(let a=0;a<c;++a)t*=n[e+a];i[l]=t}return{outVals:i,outShape:r,outDtype:o}}const bR={kernelName:Ra,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;_N(r,"prod");const i=r.shape.length,c=Qe(s,r.shape),l=wu(c,i);let u=c,h=r;const d=[];null!=l&&(h=EI({inputs:{x:r},backend:n,attrs:{perm:l}}),d.push(h),u=Su(u.length,i));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=yR(h.shape,h.dtype,p,u);let y=m;return o&&(y=xu(m,c)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function xR(e,t,n,a){const r=[];let s=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let c=1;for(let l=0;l<t.length-1;++l){c*=t[l];const e=t[l+1];for(let t=1;t<c+1;++t)i[l].push(t*e)}for(let l=0;l<e.length;++l){let a=e[l],o=e[l]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=i[s],t=e[e.length-1]-r[a];for(let n=a;n<o;++n)i[s].push(r[n+1]+t)}a=r[a],o=r[o]}o!==a&&(r.push([a,o]),s+=o-a)}return{outSplits:i,valueSlices:r,numValues:s}}function vR(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function wR(e,t,n,a,r){const s=t.slice();s[0]=r;const o=$e(n,Ge(s)),i=e.length;return function(e,t,n,a,r,s){const o=vR(t,2)[1],i=vR(s,2)[1];let c=0;for(const l of n)for(let t=l[0];t<l[1];++t){for(let n=0;n<a;++n)r[c*i+n]=e[t*o+n];++c}}(e,t,a,0===i?0:i/t[0],o,s),[o,s]}function kR(e,t,n,a,r,s,o,i){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){const r=mt(a,t.length,it(t)).join(",");throw new Error("indices[".concat(r,"] = ").concat(e," is not in [0, ").concat(n,")"))}}))}(s,o,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const c=a[0],{outSplits:l,valueSlices:u,numValues:h}=xR(s,o,e,c),d=function(e){const t=[];for(let n=0;n<e.length;++n){const a=$e("int32",e[n].length);t.push(a),e[n].forEach(((e,t)=>a[t]=e))}return t}(l),p=wR(n,a,r,u,h);return[d,p[0],p[1]]}const SR={kernelName:Aa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.data.get(e.dataId).values)),l=r.map((e=>e.shape)),u=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,[d,p,f]=kR(c,l,u,s.shape,s.dtype,h,o.shape),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}},NR=2147483647;function IR(e,t,n,a,r,s,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const i=0===t.length,c=0===r.length,l=0===o.length,u=[];i||u.push(t[0]),c||u.push(r[0]),l||u.push(o[0]);for(let m=1;m<u.length;++m)if(u[m]!==u[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===u.length?1:u[0],d=$e("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const t=i?e[0]:e[m],n=c?a[0]:a[m],r=l?s[0]:s[m];if(0===r)throw new Error("Requires delta != 0");let o;if(r>0&&n<t||r<0&&n>t)o=0;else if(o=Math.ceil(Math.abs((n-t)/r)),o>NR)throw new Error("Requires ((limit - start) / delta) <= ".concat(NR));d[m+1]=d[m]+o}const p=$e(n,d[h]);let f=0;for(let m=0;m<h;++m){const t=d[m+1]-d[m];let n=i?e[0]:e[m];const a=l?s[0]:s[m];for(let e=0;e<t;++e)p[f++]=n,n+=a}return[d,p]}const TR={kernelName:_a,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=IR(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};var CR=wf;class ER{constructor(e,t,n,a,r,s,o,i,c,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=s,this.defaultValueShape=o,this.rowPartitionValues=i,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=Sf(l),this.raggedRank=Nf(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===CR.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===CR.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case CR.VALUE_ROWIDS:return ER.getMaxWidthValueRowID(t);case CR.ROW_SPLITS:return ER.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type ".concat(CR[this.getRowPartitionTypeByDimension(e-1)]))}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let s=1;s<t;++s){const t=e[s];t!==a&&(a=t,r=Math.max(s-n,r),n=s)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return AR(e,n)}calculateOutputSize(e){const t=this.valuesShape;If(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=kf(this.raggedRank,n,t);a[0]<0&&(a[0]=e);for(let r=1;r<=this.raggedRank;++r)a[r]<0&&(a[r]=this.getMaxWidth(r));return a}calculateFirstParentOutputIndex(e,t,n){const a=Math.min(e,n),r=[];let s=0;for(let o=0;o<a;++o,s+=t)r.push(s);for(let o=a;o<e;++o)r.push(-1);return We(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,a){const r=e.length,s=[];for(let o=0;o<r-1;++o){const r=e[o+1]-e[o];let i=Math.min(a,r),c=t[o];-1===c&&(i=0);for(let e=0;e<i;++e)s.push(c),c+=n;for(let e=0;e<r-i;++e)s.push(-1)}if(r>0&&s.length!==e[r-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,a){const r=e.length,s=[];if(0===r)return[];let o=0,i=e[0];if(i>=t.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(t.length));let c=t[i];s.push(c);for(let l=1;l<r;++l){const r=e[l];if(r===i)c>=0&&(++o,o<a?c+=n:c=-1);else{if(o=0,i=r,r>=t.length)throw new Error("Got nextValueRowId=".concat(r," which is not less than ").concat(t.length));c=t[r]}s.push(c)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,a){const r=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case CR.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case CR.ROW_SPLITS:if(r.length-1>t.length)throw new Error("Row partition size is greater than output size: ".concat(r.length-1," > ").concat(t.length));return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error("Unsupported partition type: ".concat(CR[s]))}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case CR.FIRST_DIM_SIZE:return e[0];case CR.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case CR.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(CR[t]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];const a=AR(t,!1),r=$e(this.valuesDType,Ge(a));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){s=this.calculateOutputIndex(e-1,s,n[e],t[e])}this.setOutput(this.raggedRank,s,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;const r=this.values,s=n;let o=a.slice();o=o.slice(e+1);const i=Ge(o),c=t.length;let l=this.defaultValue;if(l.length!==i&&1!==l.length){const e=this.defaultValueShape;bo((()=>{const t=kl(l,e),n=Bl(t,o);l=n.dataSync()}))}let u=0,h=0,d=0;for(let p=0;p<=c;++p){let e=p<c?t[p]:-1;if(e!==d){if(h<d){const e=r.subarray(u*i);RR(s.subarray(h*i),e,(d-h)*i)}if(p>=c){const t=n.length;e=Math.floor(t/i)}if(e>d)if(1===this.defaultValue.length)s.subarray(d*i,e*i).fill(this.defaultValue[0]),d=e;else for(;e>d;){RR(s.slice(d*i),l,i),++d}e<0?(u=p+1,h=d):(u=p,h=d,d=h+1)}else++d}}}function RR(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function AR(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function _R(e,t,n,a,r,s,o,i,c,l){return new ER(e,t,n,a,r,s,o,i,c,l).compute()}const FR={kernelName:Fa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=i.map((e=>n.data.get(e.dataId).values)),p=i.map((e=>e.shape)),[f,m]=_R(l,r.shape,u,s.shape,s.dtype,h,o.shape,d,p,c);return n.makeTensorInfo(f,s.dtype,m)}};function DR(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return ht(0,a);const r=ht(Math.abs(Math.ceil((t-e)/n)),a);t<e&&1===n&&(n=-1),r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+n;return r}const OR={kernelName:Da,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:o}=n,i=DR(a,r,o,s);return t.makeTensorInfo([i.length],s,i)}},MR=MN(Ma,(e=>1/e)),LR={kernelName:Ma,backendName:"cpu",kernelFunc:MR};const zR={kernelName:Wa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a;_N(r,"resizeBilinear");const c=it(r.shape),[l,u]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(Ge([h,l,u,f])),y=[s&&l>1?d-1:d,s&&u>1?p-1:p],b=[s&&l>1?l-1:l,s&&u>1?u-1:u];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let k=0;k<h;k++)for(let e=0;e<l;e++){let t;t=o?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),a=t-n,r=Math.min(d-1,Math.ceil(t)),s=k*c[0]+n*c[1],i=k*c[0]+r*c[1];for(let e=0;e<u;e++){let t;t=o?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,l=Math.min(p-1,Math.ceil(t)),u=s+n*c[2],h=i+n*c[2],d=s+l*c[2],y=i+l*c[2];for(let e=0;e<f;e++){const t=m[u+e],n=m[h+e],s=t+(m[d+e]-t)*r,o=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=o}}}return n.makeTensorInfo([h,l,u,f],"float32",g)}};const PR={kernelName:Va,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a;_N([s,r],"resizeBilinearGrad");const i=it(r.shape),[c,l,u,h]=r.shape,[,d,p]=s.shape,f=new Float32Array(c*l*u*h),m=[o&&d>1?l-1:l,o&&p>1?u-1:u],g=[o&&d>1?d-1:d,o&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values;let v=0;for(let w=0;w<c;w++){const e=w*i[0];for(let t=0;t<d;t++){const n=t*y,a=Math.floor(n),r=Math.min(Math.ceil(n),l-1),s=e+a*i[1],o=e+r*i[1],c=n-a,d=1-c;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),a=Math.min(Math.ceil(t),u-1),r=t-n,l=1-r,p=s+n*i[2],m=s+a*i[2],g=o+n*i[2],y=o+a*i[2],w=d*l,k=d*r,S=c*l,N=c*r;for(let e=0;e<h;e++){const t=x[v++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*S,f[y+e]+=t*N}}}}return n.makeTensorInfo([c,u,l,h],"float32",f)}};const BR={kernelName:Pa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a;_N(r,"resizeNearestNeighbor");const c=it(r.shape),[l,u]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*l*u*f),y=[s&&l>1?d-1:d,s&&u>1?p-1:p],b=[s&&l>1?l-1:l,s&&u>1?u-1:u],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let k=0;k<h;k++){const e=k*c[0];for(let t=0;t<l;t++){const n=o?x*(t+.5):x*t;let a=Math.min(d-1,s?Math.round(n):Math.floor(n));o&&(a=Math.max(0,a));const r=e+a*c[1];for(let e=0;e<u;e++){const t=o?v*(e+.5):v*e;let n=Math.min(p-1,s?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const a=r+n*c[2];for(let e=0;e<f;e++){const t=m[a+e];g[w++]=t}}}}return n.makeTensorInfo([h,l,u,f],r.dtype,g)}};const WR={kernelName:Ba,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a;_N([s,r],"resizeNearestNeighborGrad");const i=it(r.shape),c=it(s.shape),[l,u,h,d]=r.shape,[,p,f]=s.shape,m=new Float32Array(l*u*h*d),g=n.data.get(s.dataId).values,y=[o&&p>1?u-1:u,o&&f>1?h-1:h],b=[o&&p>1?p-1:p,o&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,S=2*Math.ceil(w)+2,N=2*Math.ceil(k)+2;for(let I=0;I<l;I++){const e=I*i[0];for(let t=0;t<u;t++){const n=e+t*i[1],a=Math.floor(t*w),r=Math.floor(a-S/2);for(let s=0;s<h;s++){const a=n+s*i[2],l=Math.floor(s*k),y=Math.floor(l-N/2);for(let n=0;n<d;n++){let i=0;for(let a=0;a<S;a++){const l=a+r;if(l<0||l>=p)continue;const d=e+l*c[1],m=l*x;if(t===Math.min(u-1,o?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){const t=e+y;if(t<0||t>=f)continue;const a=d+t*c[2],r=t*v;s===Math.min(h-1,o?Math.round(r):Math.floor(r))&&(i+=g[a+n])}}m[a+n]=i}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}};const VR={kernelName:Ga,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a;_N(r,"reverse");const o=r.shape.length,i=Qe(s,r.shape);if(0===o)return BN({inputs:{x:r},backend:n});const c=new Ts(r.shape,r.dtype),l=n.bufferSync(r);for(let u=0;u<c.size;u++){const e=c.indexToLoc(u),t=e.slice();i.forEach((e=>t[e]=r.shape[e]-1-t[e])),c.set(l.get(...t),...e)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},UR={kernelName:Dr,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:o,center:i}=n,c=a,l=Je(r.dtype,Ge(r.shape)),[u,h,d,p]=r.shape,[f,m]=Ef(i,h,d),g=Math.sin(s),y=Math.cos(s),b=c.data.get(r.dataId).values;for(let x=0;x<u;x++){const e=x*d*h*p;for(let t=0;t<h;t++){const n=t*(d*p);for(let a=0;a<d;a++){const r=a*p;for(let s=0;s<p;s++){const i=[u,t,a,s],c=i[2],x=i[1];let v=(c-f)*y-(x-m)*g,w=(c-f)*g+(x-m)*y;v=Math.round(v+f),w=Math.round(w+m);let k=o;if("number"!==typeof o&&(k=3===s?255:o[s]),v>=0&&v<d&&w>=0&&w<h){k=b[e+w*(d*p)+v*p+s]}l[e+n+r+s]=k}}}}return{dataId:c.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},GR=MN(Ha,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),HR={kernelName:Ha,backendName:"cpu",kernelFunc:GR},jR=ON((e=>1/Math.sqrt(e))),qR=LN(ja,jR),KR={kernelName:ja,backendName:"cpu",kernelFunc:qR};function XR(e,t,n,a,r,s,o,i,c,l){const u=[a/r,r],h=e.values,d=t.values;if(0===a)return Ii(n,t.dtype);const p=c instanceof Ts?c:Ii(u,t.dtype);"string"===typeof c||"number"===typeof c?p.values.fill(c):"boolean"===typeof c&&p.values.fill(+c);for(let f=0;f<s;f++){const e=[];let s=0;for(let t=0;t<o;t++){const n=h[f*o+t];e.push(n),s+=n*i[t]}if(s<0||s>=a/r)throw new Error("Invalid indices: ".concat(e," does not index into ").concat(n));for(let n=0;n<r;n++)l?p.values[s*r+n]+=d[f*r+n]:p.values[s*r+n]=0===t.rank?d[0]:d[f*r+n]}return p}const YR={kernelName:qa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:o}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Od(0,r,o),d=XR(n.bufferSync(r),n.bufferSync(s),o,h,l,c,i,u,0,!0);return n.makeTensorInfo(o,d.dtype,d.values)}};function QR(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function ZR(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}const JR={kernelName:Xa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,i=function(e,t,n,a,r,s){const o=$e("int32",n*r);for(let i=0;i<n;++i){const n=e.slice(i*a,(i+1)*a),c=i*r;for(let e=0;e<r;++e)o[c+e]="left"===s?QR(n,t[e+c]):ZR(n,t[e+c])}return o}(n.data.get(r.dataId).values,n.data.get(s.dataId).values,r.shape[0],r.shape[1],s.shape[1],o);return n.makeTensorInfo(s.shape,"int32",i)}};const $R={kernelName:Ya,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t;_N([a,r,s],"select");const o=a.shape.length,i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=Bs(r.dtype,s.dtype),h=ht(Ge(r.shape),u);let d=0;const p=0===o||o>1||1===r.shape.length?1:Ge(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let e=0;e<p;e++)1===i[f]?h[d++]=c[f]:h[d++]=l[f];return n.makeTensorInfo(r.shape,u,h)}},eA=Mf,tA=Lf,nA=MN(Qa,(e=>e>=0?tA*e:eA*(Math.exp(e)-1))),aA={kernelName:Qa,backendName:"cpu",kernelFunc:nA},rA=MN(er,(e=>e<0?-1:e>0?1:0)),sA={kernelName:er,backendName:"cpu",kernelFunc:rA},oA=MN(Ja,(e=>Math.sin(e))),iA={kernelName:Ja,backendName:"cpu",kernelFunc:oA},cA=MN($a,(e=>Math.sinh(e))),lA={kernelName:$a,backendName:"cpu",kernelFunc:cA},uA=Math.log(1.1920928955078125e-7)+2,hA=MN(nr,(e=>{const t=e>-uA,n=e<uA,a=Math.exp(e);let r;return r=n?a:t?e:Math.log(1+a),r})),dA={kernelName:nr,backendName:"cpu",kernelFunc:hA};const pA={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:o}=a;_N([r],"spaceToBatchND");const i=Ge(s),c=[[0,0]];c.push(...o);for(let g=1+s.length;g<r.shape.length;++g)c.push([0,0]);const l=pR.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),u=Rf(l.shape,s,i,!1),h=Af(u.length,s.length,!1),d=_f(l.shape,s,i,!1),p=mI({inputs:{x:l},backend:n,attrs:{shape:u}}),f=EI({inputs:{x:p},backend:n,attrs:{perm:h}}),m=mI({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function fA(e,t,n,a,r,s,o){const i=t[0],c=s[0],l=new Array(c),u=new Array(i),h=t[1];if(0===c){if(0!==i)throw new Error(cm(i));return[$e(n,0),[0,h],$e(r,0),l,u]}let d=!0,p=0;const f=new Array(c).fill(0);for(let g=0;g<i;++g){const t=e[g*h];if(t<0)throw new Error(lm(g,t));if(t>=c)throw new Error(um(g,t,c));++f[t],d=d&&t>=p,p=t}let m=!0;for(let g=0;g<c;++g){const e=0===f[g];l[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const t=e,n=a;for(let e=0;e<i;++e)u[e]=e;return[t,[i,h],n,l,u]}{const t=f[c-1],s=$e(n,t*h),d=$e(r,t),p=new Array(c).fill(0);for(let n=0;n<i;++n){const t=e[n*h],r=p[t],o=(0===t?0:f[t-1])+r;p[t]++;for(let a=0;a<h;++a)s[o*h+a]=e[n*h+a];d[o]=a[n],u[n]=o}for(let e=0;e<c;++e){if(0===p[e]){const t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;d[t]=o}}return[s,[t,h],d,l,u]}}const mA={kernelName:cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values[0],[h,d,p,f,m]=fA(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};function gA(e,t,n,a,r){const s=Ge(a),o=t[0],i=r.length,c=[];let l=1,u=-1;for(let m=0;m<i;++m){const e=r[m];if(-1===e){if(-1!==u)throw new Error(hm(u,m));u=m,c.push(1)}else{if(e<0)throw new Error(dm(m,e));l*=e,c.push(e)}}if(-1!==u){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/l);if(l*e!==s)throw new Error(fm(a,c));c[u]=e}if(Ge(c)!==s)throw new Error(mm(a,c));const h=a.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*a[e+1]}const p=[];if(i>0){p[i-1]=1;for(let e=i-2;e>=0;--e)p[e]=p[e+1]*c[e+1]}const f=$e(n,o*i);for(let m=0;m<o;++m){let t=0;for(let n=0;n<h;++n)t+=e[m*h+n]*d[n];for(let e=0;e<i;++e)f[m*i+e]=Math.trunc(t/p[e]),t%=p[e]}return[f,[o,i],c]}const yA={kernelName:lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.data.get(r.dataId).values),i=n.data.get(a.dataId).values,c=Array.from(n.data.get(s.dataId).values),[l,u,h]=gA(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};function bA(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const i=a.length,c=[t[0],e.length/t[0]],l=c[1],u=i>0?r[i-1]+1:0;if(u<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=u;const d=$e(n,h.reduce(((e,t)=>e*t),1));if(0===i)return u>0&&d.fill(o),[d,h];if(u<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=r[p];for(;;){let t=0;if(f<i){if(t=r[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=u)throw new Error(bm(g,u));g>m&&d.fill(o,m*l,g*l);for(let n=p;n<f;++n){const t=a[n];if(t<0||t>=c[0])throw new Error(xm(n,a[n],c[0]));for(let n=0;n<l;n++)d[g*l+n]+=e[t*l+n]}if(s)for(let e=0;e<l;e++)d[g*l+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>i)break}return m<u&&d.fill(o,m*l,u*l),[d,h]}const xA={kernelName:ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=bA(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const vA={kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=bA(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const wA={kernelName:dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:o}=t,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=Od(0,r,i),p=!1,f=n.bufferSync(r);let m;switch(s.dtype){case"bool":m=XR(f,n.bufferSync(s),i,d,u,l,c,h,Boolean(n.data.get(o.dataId).values[0]),p);break;case"float32":m=XR(f,n.bufferSync(s),i,d,u,l,c,h,n.data.get(o.dataId).values[0],p);break;case"int32":m=XR(f,n.bufferSync(s),i,d,u,l,c,h,n.data.get(o.dataId).values[0],p);break;case"string":m=XR(f,n.bufferSync(s),i,d,u,l,c,h,ds(n.data.get(o.dataId).values[0]),p);break;default:throw new Error("Unsupported type ".concat(s.dtype))}return n.makeTensorInfo(i,m.dtype,m.values)}};const kA={kernelName:or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:o}=a,i=Qe(o,r.shape)[0],c=im(r,s,i),l=new Array(r.shape.length).fill(0),u=r.shape.slice();return c.map((e=>{const t=[...u];t[i]=e;const a=eT({inputs:{x:r},backend:n,attrs:{begin:l,size:t}});return l[i]+=e,a}))}},SA=ON((e=>Math.sqrt(e))),NA=MN(ar,(e=>Math.sqrt(e))),IA={kernelName:ar,backendName:"cpu",kernelFunc:NA},TA={kernelName:fr,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:a}=t,r=n;_N(a,"square");const s=r.data.get(a.dataId).values,o=new Float32Array(s.length);for(let i=0;i<s.length;++i){const e=s[i];o[i]=e*e}return{dataId:r.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},CA=GN(((e,t)=>{const n=e-t;return n*n})),EA=lI(pr,CA),RA={kernelName:pr,backendName:"cpu",kernelFunc:EA},AA=ON(((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)})),_A=LN(mr,AA),FA={kernelName:mr,backendName:"cpu",kernelFunc:_A},DA=MN(_r,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),OA={kernelName:_r,backendName:"cpu",kernelFunc:DA};function MA(e,t,n,a){const r=Ii(e,t.dtype);for(let s=0;s<r.size;s++){const e=r.indexToLoc(s),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+a[t];r.set(t.get(...o),...e)}return r}const LA={kernelName:gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=a;_N(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Kc(r.shape,s,o,i,c,l,u,h,d);let w;if(m)w=mI({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){We(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=Oc(b,x,v),t=eT({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=mI({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=MA(p,n.bufferSync(r),v,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};class zA{constructor(e,t,n,a,r,s){this.separator=hs(e),this.nGramWidths=t,this.leftPad=hs(n),this.rightPad=hs(a),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,s){for(let o=0;o<r;++o){const i=this.getPadWidth(s),c=Math.max(0,i-o),l=Math.max(0,i-(r-(o+1))),u=s-(c+l),h=t+(c>0?0:o-i);let d=0;d+=c*this.leftPad.length;for(let t=0;t<u;++t)d+=e[h+t].length;d+=l*this.rightPad.length;d+=(c+l+u-1)*this.separator.length,n[a+o]=new Uint8Array(d);const p=n[a+o];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<c;++e)m(this.leftPad),m(this.separator);for(let t=0;t<u-1;++t)m(e[h+t]),m(this.separator);if(u>0){m(e[h+u-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got ".concat(e));for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error("Invalid split value ".concat(t[r],", must be in [").concat(e,", ").concat(n,"]"));e=t[r]}if(e!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(e))}const r=a-1,s=$e("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=r;++t)s[t]=0;return[e,s]}s[0]=0;for(let i=1;i<=r;++i){const e=t[i]-t[i-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),s[i]=s[i-1]+n}const o=new Array(s[r]);for(let i=0;i<r;++i){const n=t[i];let a=s[i];if(this.nGramWidths.forEach((r=>{const s=t[i+1]-t[i],c=this.getNumNGrams(s,r);this.createNGrams(e,n,o,a,c,r),a+=c})),this.preserveShort&&a===s[i]){const r=t[i+1]-t[i];if(0===r)continue;const s=r+2*this.padWidth,c=1;this.createNGrams(e,n,o,a,c,s)}}return[o,s]}}function PA(e,t,n,a,r,s,o,i){return new zA(n,a,r,s,o,i).compute(e,t)}const BA={kernelName:yr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:h}=t,d=n.data.get(u.dataId).values,p=n.data.get(h.dataId).values,[f,m]=PA(d,p,r,s,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function WA(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return void(n&&0===e.length||a.push(e))}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(r,s);n&&0===t.length||a.push(t),r=s+1}}function VA(e,t,n){const a=e.length,r=[];let s=0,o=0;const i=new Array(a);for(let d=0;d<a;++d){const a=r.length;WA(e[d],t,n,r);const c=r.length-a;i[d]=c,s+=c,o=Math.max(o,c)}const c=$e("int32",2*s),l=new Array(s),u=[a,o];let h=0;for(let d=0;d<a;++d)for(let e=0;e<i[d];++e)c[2*h]=d,c[2*h+1]=e,l[h]=r[h],++h;return[c,l,u]}const UA={kernelName:br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values[0],[l,u,h]=VA(i,c,r),d=u.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function GA(e,t){const n=$e("int32",e.length);for(let a=0;a<e.length;++a)n[a]=is(e[a]).modulo(t).getLowBitsUnsigned();return n}const HA={kernelName:xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=GA(n.data.get(s.dataId).values,r);return n.makeTensorInfo(s.shape,"int32",o)}},jA=MN(wr,(e=>Math.tan(e))),qA={kernelName:wr,backendName:"cpu",kernelFunc:jA},KA=MN(kr,(e=>Math.tanh(e)));const XA={kernelName:Ka,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:s}=t,{sliceRank:o,numUpdates:i,sliceSize:c,strides:l,outputSize:u}=Od(0,r,a.shape),h=n.bufferSync(r),d=n.bufferSync(s),p=n.bufferSync(a),f=XR(h,d,a.shape,u,c,i,o,l,p,!1);return n.makeTensorInfo(a.shape,f.dtype,f.values)}};function YA(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=Ii(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];const s=e.locToIndex(n);a.values[r]=e.values[s]}return a}const QA={kernelName:Sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;_N(r,"tile");const o=YA(n.bufferSync(r),s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},ZA=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function JA(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;a>n;){if(a-n>600){const r=a-n+1,s=t-n+1,o=Math.log(r),i=.5*Math.exp(2*o/3),c=.5*Math.sqrt(o*i*(r-i)/r)*Math.sign(s-r/2);JA(e,t,Math.max(n,Math.floor(t-s*i/r+c)),Math.min(a,Math.floor(t+(r-s)*i/r+c)))}const r=e[t];let s=n,o=a;for(Be(e,n,t),ZA(e[a],r)>0&&Be(e,n,a);s<o;){for(Be(e,s,o),s++,o--;ZA(e[s],r)<0;)s+=1;for(;ZA(e[o],r)>0;)o-=1}0===ZA(e[n],r)?Be(e,n,o):(o+=1,Be(e,o,a)),o<=t&&(n=o+1),t<=o&&(a=o-1)}}function $A(e,t,n,a,r){const s=t[t.length-1],[o,i]=[e.length/s,s],c=Je(n,o*a),l=Je("int32",o*a);for(let h=0;h<o;h++){const t=h*i,n=e.subarray(t,t+i);let s=new Array(n.length);n.forEach(((e,t)=>s[t]={value:e,index:t})),a<s.length&&(JA(s,a),s=s.slice(0,a)),r&&s.sort(ZA);const o=h*a,u=c.subarray(o,o+a),d=l.subarray(o,o+a);for(let e=0;e<a;e++)u[e]=s[e].value,d[e]=s[e].index}const u=t.slice();return u[u.length-1]=a,[Ii(u,n,c),Ii(u,"int32",l)]}const e_={kernelName:Nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a;_N(r,"topk");const i=n.data.get(r.dataId).values,[c,l]=$A(i,r.shape,r.dtype,s,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const t_={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=n,[u,h,d,p]=r.shape,[f,m]=null!=l?l:[h,d],g=[u,f,m,p],y=it(r.shape),b=y[0],x=y[1],v=y[2],w=it(g),k=w[0],S=w[1],N=w[2],I=Je(r.dtype,Ge(g));I.fill(c);const T=a.data.get(r.dataId).values,C=a.data.get(s.dataId).values;for(let E=0;E<u;++E){const e=1===s.shape[0]?C:C.subarray(8*E,8*E+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let a=0;a<p;++a){let r;const s=e[6]*n+e[7]*t+1;if(0===s)continue;const l=(e[0]*n+e[1]*t+e[2])/s,u=(e[3]*n+e[4]*t+e[5])/s,p=n_(l,d,i),f=n_(u,h,i);switch(o){case"nearest":r=r_(T,h,d,b,x,v,E,f,p,a,c);break;case"bilinear":r=s_(T,h,d,b,x,v,E,f,p,a,c);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(o))}I[E*k+t*S+n*N+a]=r}return a.makeTensorInfo(g,r.dtype,I)}return{dataId:a.write(I,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function n_(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return ze(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return ze(0,n,t-1)}(e,t);case"nearest":return function(e,t){return ze(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function a_(e,t,n,a,r,s,o,i,c,l,u){return 0<=i&&i<t&&0<=c&&c<n?e[o*a+i*r+c*s+l]:u}function r_(e,t,n,a,r,s,o,i,c,l,u){return a_(e,t,n,a,r,s,o,Math.round(i),Math.round(c),l,u)}function s_(e,t,n,a,r,s,o,i,c,l,u){const h=Math.floor(i),d=Math.floor(c),p=h+1,f=d+1;return(p-i)*((f-c)*a_(e,t,n,a,r,s,o,h,d,l,u)+(c-d)*a_(e,t,n,a,r,s,o,h,f,l,u))+(i-h)*((f-c)*a_(e,t,n,a,r,s,o,p,d,l,u)+(c-d)*a_(e,t,n,a,r,s,o,p,f,l,u))}function o_(e,t,n,a){const r=Qe(t,n)[0],s=[1,n[0],1];for(let f=0;f<r;f++)s[0]*=n[f];s[1]=n[r];for(let f=r+1;f<n.length;f++)s[2]*=n[f];const o=new Map,i=new Int32Array(n[r]),c=new Ts(s,a,e),l=[],u=1===s[0]&&1===s[2];for(let f=0;f<n[r];f++){let t;if(u)t=e[f].toString();else{const e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(c.get(t,f,n));t=e.join(",")}const n=o.get(t);if(null!=n)i[f]=n;else{const e=o.size;o.set(t,e),i[f]=e,l.push(f)}}const h=s.slice();h[1]=o.size;const d=new Ts(h,a);l.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)d.set(c.get(n,e,a),n,t,a)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:i}}const i_={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;_N(s,"unique");const o=a.data.get(s.dataId).values,{outputValues:i,outputShape:c,indices:l}=o_(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const c_={kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r.shape.length,i=r.shape[s],c=new Array(o-1);let l=0;for(let p=0;p<o;p++)p!==s&&(c[l++]=r.shape[p]);const u=new Array(o).fill(0),h=r.shape.slice();h[s]=1;const d=new Array(i);for(let p=0;p<d.length;p++){u[s]=p;const e=eT({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});d[p]=mI({inputs:{x:e},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(e)}return d}};const l_={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:o}=a;_N(r,"unsortedSegmentSum");const i=[],c=[],l=r.shape.length-s.shape.length;let u=s;for(let d=0;d<l;++d){const e=fC({inputs:{input:u},backend:n,attrs:{dim:d+1}});u=e,c.push(e)}for(let d=0;d<o;++d){const e=cs(d,"int32"),t=n.makeTensorInfo([],"int32",e),a=tC({inputs:{a:t,b:u},backend:n}),s=iI({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),o=XT({inputs:{a:s,b:r},backend:n}),l=QT({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});i.push(l),c.push(t),c.push(a),c.push(s),c.push(o),c.push(l)}const h=hR({inputs:i,backend:n,attrs:{axis:0}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},u_=[xI,wI,SI,II,fI,TI,AI,_I,FI,DI,MI,zI,BI,UI,HI,XI,YI,QI,ZI,bI,JI,nT,sT,cT,lT,cI,dT,fT,nI,mT,vT,kT,ST,NT,IT,TT,CT,RT,_T,FT,DT,OT,MT,LT,PT,BT,WT,VT,UT,GT,HT,jT,JT,PN,$T,nC,uC,pC,mC,bC,RC,_C,FC,MC,PC,BC,WC,UC,HC,KC,QC,WN,ZC,bT,$C,tE,aE,UN,oE,lE,hE,fE,gE,xE,wE,NE,IE,TE,RE,FE,DE,OE,ME,LE,zE,PE,BE,UE,GE,qE,YE,YT,ZE,$E,tR,aR,oR,iR,uR,dR,pR,gR,qN,bR,SR,TR,FR,OR,sI,wC,LR,XN,QN,gI,zR,PR,BR,WR,VR,UR,HR,KR,YR,JR,$R,aA,$N,sA,iA,lA,tT,XE,dA,pA,mA,yA,xA,vA,wA,kA,IA,TA,RA,FA,OA,LA,BA,UA,HA,IC,ZT,qA,{kernelName:kr,backendName:"cpu",kernelFunc:KA},XA,QA,e_,t_,RI,i_,c_,l_,lR];for(const n of u_)Hr(n);const h_={},d_={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function p_(e,t){if(!(e in h_)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(vt().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete h_[e]}),!1),vt().getBool("SOFTWARE_WEBGL_ENABLED")&&(d_.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",d_)||n.getContext("experimental-webgl",d_);return n.getContext("webgl2",d_)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;h_[e]=n}const n=h_[e];return null==n||n.isContextLost()?(delete h_[e],p_(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),h_[e])}var f_,m_,g_;function y_(e,t){return[t,e]}function b_(e){const t=Ge(e);return qe(Math.ceil(t/4))}function x_(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function v_(e,t){const n=e;let a,r,s,o,i,c,l,u,h,d;return 2===vt().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,s=n.RGBA16F,o=n.RGBA32F,i=n.RED,l=4,u=1,h=n.HALF_FLOAT,d=n.FLOAT,c=n.RGBA8):(a=e.RGBA,r=e.RGBA,s=e.RGBA,o=n.RGBA,i=e.RGBA,l=4,u=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,c=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}function w_(e,t){const n=t();return vt().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(t)}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(f_||(f_={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(m_||(m_={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(g_||(g_={}));function k_(e){return!!(vt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function S_(e,t){return F_(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const N_=/ERROR: [0-9]+:([0-9]+):/g;function I_(e,t){const n=N_.exec(t);if(null==n)return console.log("Couldn't parse line number in error: ".concat(t)),void console.log(e);const a=+n[1],r=e.split("\n"),s=r.length.toString().length+2,o=r.map(((e,t)=>Ke((t+1).toString(),s)+e));let i=0;for(let h=0;h<o.length;h++)i=Math.max(o[h].length,i);const c=o.slice(0,a-1),l=o.slice(a-1,a),u=o.slice(a);console.log(c.join("\n")),console.log(t.split("\n")[0]),console.log("%c ".concat(Ke(l[0],i)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join("\n"))}function T_(e,t){if(w_(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function C_(e,t,n,a,r,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(w_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),w_(e,(()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,s,o))),w_(e,(()=>e.enableVertexAttribArray(i))),!0)}function E_(e,t,n,a){w_(e,(()=>function(e,t,n){D_(e,n),w_(e,(()=>e.activeTexture(e.TEXTURE0+n))),w_(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),w_(e,(()=>e.uniform1i(n,a)))}function R_(e,t,n){w_(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),w_(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function A_(e,t){w_(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),w_(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function __(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(t)}}(e,t))}function F_(e,t,n){const a=w_(e,(()=>t()));if(null==a)throw new Error(n);return a}function D_(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){const e="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(e,"."))}}function O_(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return Ge(e.slice(0,e.length-t))}function M_(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function L_(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[O_(e),...M_(e)]),t}function z_(e){return e%2===0}function P_(e,t){if(He(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if(z_(n)&&z_(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&z_(e[0])&&z_(t[0])}let B_,W_;function V_(e,t){return null!=e.getExtension(t)}function U_(e){try{if(null!=p_(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function G_(e){if(0===e)return!1;const t=p_(e);if(1!==e){if(V_(t,"EXT_color_buffer_float"))return H_(t);const e="EXT_color_buffer_half_float";if(V_(t,e)){const n=t.getExtension(e);return function(e,t){const n=v_(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);const r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!V_(t,"OES_texture_float"))return!1;if(!V_(t,"WEBGL_color_buffer_float"))return!1;return H_(t)}function H_(e){const t=v_(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function j_(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&We("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors ")+"in the WebGL backend."))}))}const q_=vt();function K_(){let e,t,n,a,r,s,o,i,c,l;return 2===vt().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",o="out vec4 outputColor;",i=vt().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:c,defineRound:l}}function X_(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=it(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(t),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(t):"index -= ".concat(e[r]," * ").concat(t);return"".concat(s,"; ").concat(o,";")})).join("")}function Y_(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=it(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / outShapeStrides[").concat(r,"]"),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * outShapeStrides[").concat(r,"]"):"index -= ".concat(e[r]," * outShapeStrides[").concat(r,"]");return"".concat(s,"; ").concat(o,";")})).join("")}function Q_(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=function(e,t){const n=e.length,a=e.map((e=>"".concat(t,"[").concat(e,"]"))),r=new Array(n-1);r[n-2]=a[n-1];for(let s=n-3;s>=0;--s)r[s]="(".concat(r[s+1]," * ").concat(a[s+1],")");return r}(e.map(((e,t)=>t)),t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(a[r]),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(a[r]):"index -= ".concat(e[r]," * ").concat(a[r]);return"".concat(s,"; ").concat(o,";")})).join("")}function Z_(e){const t=it(e).map((e=>e.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(t[0]," + coords.y * ").concat(t[1]," + coords.z;\n  }\n")}q_.registerFlag("HAS_WEBGL",(()=>q_.getNumber("WEBGL_VERSION")>0)),q_.registerFlag("WEBGL_VERSION",(()=>U_(2)?2:U_(1)?1:0)),q_.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),q_.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===q_.get("WEBGL_VERSION"))),q_.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),q_.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),q_.registerFlag("WEBGL_PACK",(()=>q_.getBool("HAS_WEBGL"))),q_.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>q_.getBool("WEBGL_PACK"))),q_.registerFlag("WEBGL_PACK_CLIP",(()=>q_.getBool("WEBGL_PACK"))),q_.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>q_.getBool("WEBGL_PACK"))),q_.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>q_.getBool("WEBGL_PACK"))),q_.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>q_.getBool("WEBGL_PACK"))),q_.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>q_.getBool("WEBGL_PACK"))),q_.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>q_.getBool("WEBGL_PACK"))),q_.registerFlag("WEBGL_PACK_REDUCE",(()=>q_.getBool("WEBGL_PACK"))),q_.registerFlag("WEBGL_LAZILY_UNPACK",(()=>q_.getBool("WEBGL_PACK"))),q_.registerFlag("WEBGL_CONV_IM2COL",(()=>q_.getBool("WEBGL_PACK"))),q_.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>q_.getBool("WEBGL_PACK"))),q_.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==B_){const t=p_(e);B_=t.getParameter(t.MAX_TEXTURE_SIZE)}return B_}(q_.getNumber("WEBGL_VERSION")))),q_.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==W_){const t=p_(e);W_=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,W_)}(q_.getNumber("WEBGL_VERSION")))),q_.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=q_.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=p_(e);return t=V_(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:V_(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),q_.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>q_.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!eo())),q_.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=p_(e);if(1===e){if(!V_(t,"OES_texture_float"))return!1}else if(!V_(t,"EXT_color_buffer_float"))return!1;return H_(t)}(q_.getNumber("WEBGL_VERSION")))),q_.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!q_.getBool("WEBGL_FORCE_F16_TEXTURES")&&q_.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),q_.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>G_(q_.getNumber("WEBGL_VERSION")))),q_.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=q_.getNumber("WEBGL_VERSION"))&&null!=p_(e).fenceSync;var e})),q_.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>q_.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),q_.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(e,"."))})),q_.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>eo()?1:-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(e,"."))})),q_.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),q_.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),q_.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),q_.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),q_.registerFlag("WEBGL_EXP_CONV",(()=>!1)),q_.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>q_.getBool("IS_TEST"))),q_.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),q_.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),q_.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),q_.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const J_="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:$_}=s;function eF(e,t,n){const a=[];if(e.forEach((e=>{const t=Ge(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push("uniform float ".concat(e.name).concat(t>1?"[".concat(t,"]"):"",";")):(a.push("uniform sampler2D ".concat(e.name,";")),a.push("uniform int offset".concat(e.name,";"))),n.enableShapeUniforms){const{uniformShape:t}=uF(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push("uniform int ".concat(e.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(e.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(e.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(e.name,"Shape;"))}a.push("uniform ivec2 ".concat(e.name,"TexShape;"))}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push("uniform ".concat(e.type," ").concat(e.name).concat(e.arrayIndex?"[".concat(e.arrayIndex,"]"):"",";"))}));const r=a.join("\n"),s=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?nF(e,a):tF(e,a);const s=e.shapeInfo.logicalShape,o=t.logicalShape;s.length<=o.length&&(r+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=$_(e.shapeInfo.logicalShape,t.logicalShape),c=lF(o),l=o-s;let u;const h=["x","y","z","w","u","v"];u=0===s?"":o<2&&i.length>=1?"coords = 0;":i.map((e=>"coords.".concat(h[e+l]," = 0;"))).join("\n");let d="";d=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(h[t+l]))).join(", ");let p="return outputValue;";const f=1===Ge(e.shapeInfo.logicalShape),m=Ge(t.logicalShape),g=1===m;if(1!==s||f||g){if(f&&!g)p=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=s-2,t=s-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?p="return vec4(outputValue.x);":i.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(r,"() {\n      ").concat(c," coords = getOutputCoords();\n      ").concat(u,"\n      vec4 outputValue = get").concat(a,"(").concat(d,");\n      ").concat(p,"\n    }\n  ")}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===c&&null==e.shapeInfo.flatOffset&&He(o,s))return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const l=lF(c),u=$_(e.shapeInfo.logicalShape,t.logicalShape),h=c-i;let d;const p=["x","y","z","w","u","v"];d=0===i?"":c<2&&u.length>=1?"coords = 0;":u.map((e=>"coords.".concat(p[e+h]," = 0;"))).join("\n");let f="";f=c<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(p[t+h]))).join(", ");return"\n    float ".concat(r,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(d,"\n      return get").concat(a,"(").concat(f,");\n    }\n  ")}(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,i=K_(),c=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(e.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(i);let l,u,h=function(e){const t="".concat(e.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(e.varyingFs," vec2 resultUV;\n    ").concat(e.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(e.defineSpecialNaN,"\n    ").concat(e.defineSpecialInf,"\n    ").concat(e.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(aF,"\n    ").concat(rF,"\n    ").concat(sF,"\n  ");return t}(i);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(He(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let o=s,i="",c="b, r, c";for(let l=2;l<e.length-1;l++)o*=e[e.length-l-1],i="\n      int b".concat(l," = index / ").concat(o,";\n      index -= b").concat(l," * ").concat(o,";\n    ")+i,c="b".concat(l,", ")+c;return"\n    ivec".concat(e.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec").concat(e.length,"(").concat(c,");\n    }\n  ")}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),u=function(e){return"\n    void setOutput(vec4 val) {\n      ".concat(e.output," = val;\n    }\n  ")}(i)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(t[1],".0);\n      }\n    ");if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(t[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      return resTexRC.x * ").concat(t[1]," + resTexRC.y;\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){if(He(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(t[0],", ").concat(t[1],"));\n      }\n    ");if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      int r = index / ").concat(e[1],";\n      int c = index - r * ").concat(e[1],";\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n){const t=Y_(["r","c","d"],e);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(t,"\n    return ivec3(r, c, d);\n  }\n")}const a=X_(["r","c","d"],e);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,t,n);case 4:return function(e,t,n){if(n){const t=Y_(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(t,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=X_(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(e,t,n);case 5:return function(e,t){const n=X_(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(t[0],",\n                             ").concat(t[1],"));\n\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(e,t);case 6:return function(e,t){const n=X_(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(e,t);default:throw new Error("".concat(e.length,"-D output sampling is not yet supported"))}}(t.logicalShape,o,n.enableShapeUniforms),u=function(e){return"\n    void setOutput(float val) {\n      ".concat(e.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(i)),n.packedInputs&&(h+=oF);return[h,c,u,r,l,s,n.userCode].join("\n")}function tF(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const o=iF(n);if(t)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=e.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(cF(e),"\n      }\n    ");const r=e.shapeInfo.texShape,s=r[0],o=r[1];if(1===o&&1===s)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=iF(n);if(1===o)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(s,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===s)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(t)return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(s,", ").concat(o,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape;if(null!=s&&He(n,s)){if(t)return"\n      float ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const e=s[0],n=s[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(e,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:o,keptDims:i}=Ze(n),c=o;if(c.length<n.length){const n=hF(e,c),a=["row","col"];return"\n      ".concat(tF(n,t),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(dF(a,i),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(cF(e),"\n      }\n    ");const l=s[0],u=s[1],h=iF(a);if(1===u)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(l,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(1===l)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(u,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(t)return"\n      float ".concat(r,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(h,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");return"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(h,";\n    vec2 uv = uvFromFlat(").concat(l,", ").concat(u,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],o=n[2],{newShape:i,keptDims:c}=Ze(n),l=i;if(l.length<n.length){const n=hF(e,l),a=["row","col","depth"];return"\n        ".concat(tF(n,t),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(dF(a,c),");\n        }\n      ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(s,", ").concat(o,", 1)));\n        ").concat(cF(e),"\n      }\n    ");const u=e.shapeInfo.texShape,h=u[0],d=u[1],p=e.shapeInfo.flatOffset;if(d===s&&null==p)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(o,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(d,".0, ").concat(h,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(d===o&&null==p)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(d,".0, ").concat(h,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const f=iF(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    ");return"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(s," + col * ").concat(o," + depth + ").concat(f,";\n        vec2 uv = uvFromFlat(").concat(h,", ").concat(d,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],o=n[2]*s,i=n[1]*o,{newShape:c,keptDims:l}=Ze(n);if(c.length<n.length){const n=hF(e,c),a=["row","col","depth","depth2"];return"\n      ".concat(tF(n,t),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(dF(a,l),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(i,", ").concat(o,", ").concat(s,", 1)));\n        ").concat(cF(e),"\n      }\n    ");const u=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f="int stride2 = ".concat(a,"Shape[3];"),m="int stride1 = ".concat(a,"Shape[2] * stride2;"),g="int stride0 = ".concat(a,"Shape[1] * stride1;");if(p===i&&null==u)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        ").concat(f,"\n        ").concat(m,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(o,", ").concat(s,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(p===s&&null==u)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const y=iF(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(f,"\n      ").concat(m,"\n      ").concat(g,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," +\n          depth * ").concat(s," + depth2;\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,o=t[2]*s,i=t[1]*o,{newShape:c,keptDims:l}=Ze(t);if(c.length<t.length){const t=hF(e,c),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(tF(t),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(dF(n,l),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(i,", ").concat(o,", ").concat(s,", ").concat(r,")) +\n          depth3;\n        ").concat(cF(e),"\n      }\n    ");const u=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(o,", ").concat(s,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(p===r&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3],",\n               ").concat(t[2]*t[3],", ").concat(t[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const f=iF(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," + depth * ").concat(s," +\n          depth2 * ").concat(r," + depth3 + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=Ze(t);if(r.length<t.length){const t=hF(e,r),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(tF(t),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(dF(n,s),");\n      }\n    ")}const o=t[5],i=t[4]*o,c=t[3]*i,l=t[2]*c,u=t[1]*l;if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(u,", ").concat(l,", ").concat(c,", ").concat(i,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(o,", 1)));\n        ").concat(cF(e),"\n      }\n    ");const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===u&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(l,", ").concat(c,", ").concat(i,", ").concat(o,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===o&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3]*t[4],",\n               ").concat(t[2]*t[3]*t[4],",\n               ").concat(t[3]*t[4],",\n               ").concat(t[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=iF(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(u," + col * ").concat(l," + depth * ").concat(c," +\n          depth2 * ").concat(i," + depth3 * ").concat(o," + depth4 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function nF(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=K_();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(t,", halfCR);\n    }\n  ")}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=K_();if(t)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(o[0],", ").concat(o[1],", index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=s[0],i=s[1],c=K_();if(null!=s&&He(n,s))return t?"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(i,".0, ").concat(o,".0);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    ");if(t)return"\n    vec4 ".concat(r,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ");const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],u=Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(u,", ").concat(l[0],", ").concat(l[1],", row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const a=[1,2],s=hF(e,n.slice(1)),o=["b","row","col"];return"\n        ".concat(nF(s,t),"\n        vec4 ").concat(r,"(int b, int row, int col) {\n          return ").concat(r,"(").concat(dF(o,a),");\n        }\n      ")}const i=K_();if(t)return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=o[0],l=o[1],u=Math.ceil(n[2]/2),h=u*Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(l,", ").concat(h,", ").concat(u,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=K_();if(t)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const s=e.shapeInfo.logicalShape,o=s.length,i=e.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],h=Math.ceil(s[o-1]/2);let d=h*Math.ceil(s[o-2]/2),p="int b, int row, int col",f="b * ".concat(d," + (row / 2) * ").concat(h," + (col / 2)");for(let m=2;m<o-1;m++)p="int b".concat(m,", ")+p,d*=s[o-m-1],f="b".concat(m," * ").concat(d," + ")+f;return"\n    vec4 ".concat(a,"(").concat(p,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(u,";\n      int texC = index - texR * ").concat(u,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(u,", ").concat(l,");\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t)}}const aF="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",rF="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",sF="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",oF="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function iF(e){return"offset".concat(e)}function cF(e){const t=e.name,n=Ge(e.shapeInfo.logicalShape);return n<2?"return ".concat(t,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(t,"[i];\n      }\n    }\n  ")}function lF(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function uF(e,t,n){const{newShape:a,keptDims:r}=Ze(t),s=t.length,o=e&&3===s&&1===t[0],i=o?t.slice(1):a,c=!e&&s>1&&!He(t,n)&&a.length<s||o;return{useSqueezeShape:c,uniformShape:c?i:t,keptDims:r}}function hF(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function dF(e,t){return t.map((t=>e[t])).join(", ")}function pF(e,t,n,a){const r=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),s=r.map((e=>e.shapeInfo)),o={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},i=eF(r,o,t),c=function(e,t){const n=F_(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(w_(e,(()=>e.shaderSource(n,t))),w_(e,(()=>e.compileShader(n))),vt().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw I_(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,i),l=e.createProgram(c);return vt().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:o},fF(e,t,l)))}function fF(e,t,n){const a=[],r=[];let s,o,i,c=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===vt().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const u=!1;for(const h of t.variableNames){const r={name:h,uniform:e.getUniformLocation(n,h,u),offset:e.getUniformLocation(n,"offset".concat(h),u)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,"".concat(h,"Shape"),u),r.texShape=e.getUniformLocation(n,"".concat(h,"TexShape"),u)),a.push(r)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",u),i=e.getUniformLocation(n,"outShapeStrides",u),o=e.getUniformLocation(n,"outTexShape",u)),t.customUniforms)for(const h of t.customUniforms)r.push(e.getUniformLocation(n,h.name,u));return{variablesLocations:a,customUniformLocations:r,infLoc:c,nanLoc:l,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}}function mF(e,t){if(e.length!==t.length)throw Error("Binary was compiled with ".concat(e.length," inputs, but ")+"was executed with ".concat(t.length," inputs"));e.forEach(((e,n)=>{const a=e.logicalShape,r=t[n],s=r.shape;if(!He(a,s))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(s," must match"));if(e.isUniform&&r.isUniform)return;const o=e.texShape,i=r.isUniform?null:r.texData.texShape;if(!He(o,i))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(o," and ").concat(i," must match"))}))}function gF(e){return vt().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class yF{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=f_.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=K_();this.outputShape=e,this.enableShapeUniforms=gF(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?Y_(["r","c","d"],e):X_(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class bF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=f_.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=K_();this.outputShape=e,this.enableShapeUniforms=gF(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?Y_(["r","c","d"],e):X_(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class xF{constructor(e){this.variableNames=["A"],this.outTexUsage=m_.DOWNLOAD;const t=K_();this.outputShape=e,this.userCode="\n      ".concat(J_,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}class vF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=m_.DOWNLOAD;const t=K_();this.outputShape=e,this.userCode="\n      ".concat(J_,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}const wF={R:0,G:1,B:2,A:3};class kF{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=K_();this.outputShape=e,this.enableShapeUniforms=gF(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let s="";for(let o=0;o<n.length;o++){const e=n[o];s+="\n          if(offset == ".concat(o,") {\n            result = values[").concat(wF[e],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Z_(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(s,"\n        }\n        ").concat(a.output," = vec4(").concat(r,", 0., 0., 0.);\n      }\n    ")}}class SF{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=K_();this.outputShape=e,this.enableShapeUniforms=gF(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const r=2*s+t;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(t," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(e[2]),") {\n          localCoords[2] += ").concat(t,";\n          if (localCoords[1] + ").concat(s," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(e[1]),") {\n            localCoords[1] += ").concat(s,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(r,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(r,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(r,"] = values[2];\n            } else {\n              result[").concat(r,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Z_(e),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(r,";\n        }\n    ")}}function NF(e){const t=K_();return function(e,t){const n=F_(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(w_(e,(()=>e.shaderSource(n,t))),w_(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,"".concat(t.version,"\n    precision highp float;\n    ").concat(t.attribute," vec3 clipSpacePos;\n    ").concat(t.attribute," vec2 uv;\n    ").concat(t.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function IF(e){return function(e,t){const n=F_(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return w_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),w_(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function TF(e){return function(e,t){const n=F_(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return w_(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),w_(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function CF(e,t,n,a,r,s){!function(e,t){const n=vt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n="[".concat(e,"x").concat(t,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const a="[".concat(e,"x").concat(t,"]"),r="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}(t,n);const o=function(e){return F_(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),i=e.TEXTURE_2D;return w_(e,(()=>e.bindTexture(i,o))),w_(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),w_(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),w_(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),w_(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===vt().getNumber("WEBGL_VERSION")?w_(e,(()=>e.texImage2D(i,0,a,t,n,0,r,s,null))):w_(e,(()=>e.texStorage2D(i,1,a,t,n))),w_(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function EF(e){return e.internalFormatFloat}function RF(e){return e.internalFormatHalfFloat}function AF(e){return e.downloadTextureFormat}function _F(e){return e.internalFormatPackedFloat}function FF(e){return e.internalFormatPackedHalfFloat}function DF(e,t,n,a,r,s,o,i){const c=e,l=new Float32Array(function(e,t){const[n,a]=x_(e,t);return n*a*4}(s,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}class OF{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=vt().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){h_[e]=t}(t,e)):this.gl=p_(t),e=this.gl,2===vt().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>w_(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>w_(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>w_(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>w_(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>w_(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>w_(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>w_(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>w_(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===vt().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=S_(this.gl,e),V_(this.gl,t))this.textureHalfFloatExtension=S_(this.gl,t);else if(vt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),V_(this.gl,a))this.colorBufferHalfFloatExtension=S_(this.gl,a);else if(vt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",V_(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!V_(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=IF(this.gl),this.indexBuffer=TF(this.gl),this.framebuffer=function(e){return F_(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=v_(this.gl,this.textureHalfFloatExtension)}get debug(){return vt().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;w_(e,(()=>e.finish())),w_(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),w_(e,(()=>e.deleteFramebuffer(this.framebuffer))),w_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),w_(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),w_(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=y_(t,n);return CF(e,r,s,EF(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=y_(t,n);return CF(e,r,s,RF(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=y_(t,n);return CF(e,r,s,AF(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){w_(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===vt().getNumber("WEBGL_VERSION")?w_(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):w_(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===vt().getNumber("WEBGL_VERSION")?w_(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):w_(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),w_(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,r,s){let o,i,c;w_(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(o=new Uint8Array(n*a*4),i=e.UNSIGNED_BYTE,c=e.RGBA):(o=new Float32Array(n*a*4),i=e.FLOAT,c=s.internalFormatPackedFloat),o.set(r),2===vt().getNumber("WEBGL_VERSION")?w_(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,i,o))):w_(e,(()=>e.texImage2D(e.TEXTURE_2D,0,c,n,a,0,e.RGBA,i,o))),w_(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=x_(t,n);return CF(e,r,s,FF(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=x_(t,n);return CF(e,r,s,_F(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(A_(this.gl,this.framebuffer),this.outputTexture=null),w_(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[r,s]=y_(t,n),o=new Uint8Array(t*n*4);return w_(e,(()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return DF(this.gl,e,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n,a){const r=e.createBuffer();w_(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const s=16*t*n;return w_(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),w_(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),w_(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(vt().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return w_(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=NF(t));const n=function(e){return F_(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);w_(t,(()=>t.attachShader(n,this.vertexShader))),w_(t,(()=>t.attachShader(n,e))),function(e,t){if(w_(e,(()=>e.linkProgram(t))),!vt().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&T_(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;w_(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){w_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),C_(e,t,"clipSpacePos",n,3,20,0)&&C_(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(w_(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&T_(this.gl,this.program),w_(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return F_(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),w_(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),E_(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,r]=x_(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&T_(this.gl,this.program),__(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}w_(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),w_(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=S_(this.gl,2===vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Xe((()=>this.disposed||this.isQueryAvailable(e,vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in vt().platform&&(n=vt().platform.setTimeoutCustom.bind(vt().platform)),Xe((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),R_(this.gl,e,this.framebuffer),this.debug&&__(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(R_(this.gl,this.outputTexture,this.framebuffer),this.debug&&__(this.gl)):A_(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;R_(a,e,this.framebuffer),this.debug&&__(a),this.outputTexture=e,w_(a,(()=>a.viewport(0,0,t,n))),w_(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),w_(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:MF,XI:LF,Nk:zF,f6:PF,ct:BF,YG:WF,hH:VF,z3:UF,sG:GF,uM:HF,vS:jF,qB:qF,GG:KF,rq:XF,lg:YF,WR:QF,cu:ZF,GE:JF,px:$F,jC:eD,He:tD,hE:nD,BF:aD,Dk:rD,cl:sD,_B:oD,ub:iD,_f:cD,Ku:lD,qy:uD,Zy:hD,bu:dD,zv:pD,dH:fD,HS:mD,yH:gD,l3:yD,z9:bD,x6:xD,_m:vD,eW:wD,GK:kD,SP:SD,yr:ND,dl:ID,Dw:TD,xT:CD,_X:ED,wz:RD}=T;function AD(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>"".concat(e,".").concat(t)))}function _D(e,t){return 1===t?[e]:AD(e,t)}class FD{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=gF(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=_D("rc",this.rank),t=lF(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode="\n        void main() {\n          ".concat(t," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(r,"));\n          }\n        }\n      ")}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let t=2;t<this.rank;t++)r="".concat(e[e.length-1-t],",")+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+="".concat(e[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(t[0],";\n      int c = ").concat(t[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(e," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(t[0],"),\n            cEdge ? 0. : getA(").concat(t[1],"),\n            rEdge ? 0. : getA(").concat(t[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(t[3],")")}}class DD{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=gF(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+="\n        ".concat(e,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(e,t){const n=t?Q_(["r","c","d"],"inputShape"):X_(["r","c","d"],e);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Z_(e),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":e[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":e[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class OD{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=LD(t,n),r=zD(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const s=MD(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let o;return a===g_.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===g_.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===g_.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===g_.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===g_.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const r=LD(n,a),s=zD(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);const o=MD(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),i=vt().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const c=this.usedTextures[s],l=c&&c.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[l]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(e,")"));const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*t),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function MD(e,t,n,a,r){const s=function(e,t){switch(e){case g_.PACKED_2X2_FLOAT32:return _F(t);case g_.PACKED_2X2_FLOAT16:return FF(t);case g_.UNPACKED_FLOAT32:return EF(t);case g_.UNPACKED_FLOAT16:return RF(t);case g_.PACKED_4X1_UNSIGNED_BYTE:return AF(t);default:throw new Error("Unknown physical texture type ".concat(e))}}(t,a);let o;if(r){const[t,n]=x_(e[0],e[1]);o=t*n}else{const[t,n]=y_(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(t))}(n,s);return o*i}function LD(e,t){if(e===m_.UPLOAD)return g_.PACKED_2X2_FLOAT32;if(e===m_.RENDER||null==e)return function(e){return vt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?g_.PACKED_2X2_FLOAT32:g_.UNPACKED_FLOAT32:e?g_.PACKED_2X2_FLOAT16:g_.UNPACKED_FLOAT16}(t);if(e===m_.DOWNLOAD||e===m_.PIXELS)return g_.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(e))}function zD(e,t,n){return"".concat(e[0],"_").concat(e[1],"_").concat(t,"_").concat(n)}class PD{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=gF(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const BD="if (isnan(x)) return x;",WD="return x;",VD="return abs(x);";const UD="return (x >= 0.0) ? x : (exp(x) - 1.0);",GD=BD+"\n  return (x < 0.0) ? 0.0 : x;\n",HD=BD+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",jD="return x;",qD="return 1.0 / (1.0 + exp(-1.0 * x));",KD="return x;",XD="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",YD="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",QD="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",ZD="return 1.0 / (1.0 + exp(-1.0 * x));";class JD{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=gF(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class $D{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=gF(this.outputShape.length);const t=e.length,n=_D("rc",t),a=lF(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":"vec2(".concat(s.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(r,");\n\n        setOutput(getChannel(packedInput, ").concat(o,"));\n      }\n    ")}}const eO=Gd,tO={};const nO=vt().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class aO extends Oe{nextDataId(){return aO.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!vt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof OF)t=e;else{const n=p_(vt().getNumber("WEBGL_VERSION"),e);t=new OF(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=p_(vt().getNumber("WEBGL_VERSION"));t=new OF(e),this.binaryCache=((n=vt().getNumber("WEBGL_VERSION"))in tO||(tO[n]={}),tO[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new OD(this.gpgpu),this.numMBBeforeWarning=null==vt().global.screen?1024:vt().global.screen.height*vt().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new De(this,go())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,s){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[a,r]},i.texShape=[a,r];const c=L_(t),l=new kF(c,!1,s),u=this.runWebGLProgram(l,[o],n,[[a,r]]);return u.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),u.dataId}write(e,t,n){if((vt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||vt().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:m_.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,r){if(vt().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:m_.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:o,isPacked:i}=t;if(null!=s){let t;t=i?new JD(o,jD):new PD(o,jD);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const c=null!=this.activeTimers;let l,u;if(c&&(l=us()),"complex64"===a){u=Gf(this.readSync(r.real.dataId),this.readSync(r.imag.dataId))}else u=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=us()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:o,isPacked:i}=t;if(null!=r){let t;t=i?new JD(a,jD):new PD(a,jD);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(vt().getBool("DEBUG")&&!vt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===vt().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,u=null;if("complex64"!==s&&vt().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const t=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(t.texture.texture,...b_(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);l=Gf(e[0],e[1])}else if(null==u)l=this.getValuesFromTexture(e);else{const e=Ge(a);l=this.gpgpu.downloadFloat32MatrixFromBuffer(u,e)}if(null!=c&&this.disposeIntermediateTensorInfo(c),null!=u){const e=this.gpgpu.gl;w_(e,(()=>e.deleteBuffer(u)))}const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&go().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:a,shape:r,slice:s,dtype:o,isPacked:i,texture:c}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=i?new JD(r,jD):new PD(r,jD);const a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:o}],o),s=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),s}if(null==c)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),u=go().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:u},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>ds(e)));return Ii(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ii(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!k_(n)){if(vt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=Ge(t);if(vt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...b_(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}const s=vt().getBool("WEBGL_PACK")&&!0===a,o=s?L_(t):t,i=s?new vF(o):new xF(o),c=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),l=this.texData.get(c.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),u}timerAvailable(){return vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=fs(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=fs(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);o.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>"".concat(e.name,": ").concat(e.ms))).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:us(),endMs:null}}endTimer(e){return vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=us(),e)}async getQueryTime(e){if(vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:nO;return vt().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&Ge(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){zr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return eO(e.shape,t)}packedUnaryOp(e,t,n){const a=new JD(e.shape,t),r=this.compileAndRun(a,[e],n);return go().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=fD(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(vt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,VD,e.dtype);const t=new PD(e.shape,VD),n=this.compileAndRun(t,[e]);return go().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&nt(n[0])){const r=n.map((e=>hs(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return go().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new $D(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new FD(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[O_(e.shape),...M_(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[O_(t),...M_(t)],s=new DD(r,n),o=[n],i=this.runWebGLProgram(s,[a],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:r,dtype:s}=n;if(null!=t){We(Ge(r)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=L_(r);let i;i=a?new bF(o):new yF(o);const c=[null!=t?t:b_(o)];return{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,c,!0,t).dataId}}runWebGLProgram(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0;const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===f_.DENSE){const t=null!=s?s:b_(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===Ge(o.shape))return i.values=Je(o.dtype,0),o;const c=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&Ge(t.shape)<=vt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),c.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!P_(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),c.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const u={shape:o.shape,texData:i,isUniform:!1},h=function(e,t,n){let a="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:o,uniformShape:i,keptDims:c}=uF(e.packedInputs,t.shape,s);let l="",u="",h="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l="".concat(e[0]>1,"_").concat(e[1]>1)}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=it(i);h="".concat(e[0]===s[1],"_").concat(e[e.length-1]===s[1])}}else u="".concat(i[0]>1,"_").concat(i[1]>1);const d=t.shape.length,p=2===i.length&&He(t.shape,s),f=1===Ge(t.shape),m=Zi(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&He(s,n.texData.texShape),y=e.packedInputs||i.length>2?"":"".concat(s[0]>1,"_").concat(s[1]>1);a+="".concat(d,"_").concat(g,"_").concat(o?c:"","_").concat(i.length,"_").concat(f,"_").concat(m,"_").concat(p,"_").concat(l,"_").concat(u,"_").concat(h,"_").concat(y,"_").concat(r)}else{const e=t.isUniform?"uniform":t.texData.texShape;a+="".concat(t.shape,"_").concat(e,"_").concat(r)}}));const r=e.userCode;let s=e.constructor.name;return s+="_"+a+"_"+r+"".concat(vt().getNumber("WEBGL_VERSION")),s}(e,l,u),d=this.getAndSaveBinary(h,(()=>pF(this.gpgpu,e,l,u))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),vt().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(mF(t.inShapeInfos,n),mF([t.outShapeInfo],[a]));const s=a.texData.texture,o=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,o[0],o[1]):e.setOutputMatrixTexture(s.texture,o[0],o[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===vt().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let c=0;c<n.length;++c){const a=n[c],{uniform:r,offset:s,shape:o,texShape:i}=t.variablesLocations[c];if(o){const{uniformShape:n}=uF(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(i&&e.gl.uniform2i(i,a.texData.texShape[0],a.texData.texShape[1]),null!=r)if(a.isUniform)if(Ge(a.shape)<2)e.gl.uniform1f(r,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=a.texData.slice&&null!=s&&e.gl.uniform1i(s,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,r,c)}const i=t.outShapeLocation;if(i)switch(a.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=it(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let c=0;c<t.program.customUniforms.length;++c){const n=t.program.customUniforms[c],a=t.customUniformLocations[c],s=r[c];if("float"===n.type)e.gl.uniform1fv(a,s);else if("vec2"===n.type)e.gl.uniform2fv(a,s);else if("vec3"===n.type)e.gl.uniform3fv(a,s);else if("vec4"===n.type)e.gl.uniform4fv(a,s);else if("int"===n.type)e.gl.uniform1iv(a,s);else if("ivec2"===n.type)e.gl.uniform2iv(a,s);else if("ivec3"===n.type)e.gl.uniform3iv(a,s);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));e.gl.uniform4iv(a,s)}}e.executeProgram()}(this.gpgpu,d,l,u,a),c.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=vt().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=us();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!vt().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===r){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!vt().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=bo((()=>{if(!vt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=vt().getBool("DEBUG");vt().set("DEBUG",!1);const t=this.abs(zi(1e-8)).dataSync()[0];if(vt().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:o,isPacked:i}=t;if(null!=s)return;const c=null!=this.activeTimers;let l;c&&(l=us());let u=t.texShape;if(null==u&&(u=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=vt().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=vt().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&vt().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?Pe(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=Ze(e);e=t.newShape}let r=Ge(e),s=null;e.length<=1&&r<=n?s=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);const o=null!=s&&Math.max(...s)>a&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||o)if(t){const t=O_(e);let n=2,a=2;e.length&&([n,a]=M_(e)),r=t*(n/2)*(a/2),s=qe(r).map((e=>2*e))}else s=qe(r);return s}(n,i),t.texShape=u),null!=r){const e=L_(n);let s,o=u[1],h=u[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!i&&d||([o,h]=x_(u[0],u[1])),s=i?new SF(e,d):new kF(e,d);const p=d?[h,o]:u,f=this.makeTensorInfo(p,a),m=this.texData.get(f.dataId);m.usage=d?m_.PIXELS:m_.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,h,r);const g=[[h,o]],y=!0,b=this.runWebGLProgram(s,[f],a,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,vt().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),c&&(this.uploadWaitMs+=us()-l)}else{const e=this.acquireTexture(u,o,a,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype ".concat(t))}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(e," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*tt(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await bf(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw I_(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}=fF(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=s,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:s,channels:o}=e,i=go().backend;if(!i.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=i.writeTexture(a,t,n,r,s,o);return go().makeTensorFromDataId(c,t,n,i)}}aO.nextDataId=0;to()&&wo("webgl",(()=>new aO),2);const rO="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class sO{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=$i(t,n),this.enableShapeUniforms=gF(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const oO="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class iO{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=$i(t,n);const r=this.outputShape.length;this.enableShapeUniforms=gF(r);let s="";if(a)if(0===r||1===Ge(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=lF(r);if(s="\n          ".concat(e," coords = getOutputCoords();\n        "),1===r)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const e=_D("coords",r);this.enableShapeUniforms?s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= outShape[").concat(r," - 2];\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= outShape[").concat(r," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= ").concat(this.outputShape[r-2],";\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= ").concat(this.outputShape[r-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(s,"\n\n        setOutput(result);\n      }\n    ")}}function cO(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const lO={kernelName:Vn,backendName:"webgl",kernelFunc:cO};function uO(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),o=n.texData.get(s.dataId),i=cO({inputs:{x:a},backend:n}),c=cO({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:c},s}const hO={kernelName:Zt,backendName:"webgl",kernelFunc:uO},dO="return (a < 0.) ? b * a : a;",pO="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const fO={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,o=n.makeTensorInfo([],"float32",cs(s,"float32")),i=vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new iO(pO,r.shape,o.shape):new sO(dO,r.shape,o.shape),c=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),c}},mO="return (a < 0.) ? b * a : a;",gO="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const yO={kernelName:Ea,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new iO(gO,a.shape,r.shape):new sO(mO,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],"float32")}},bO="if (isnan(x)) return x;";function xO(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=e;return e=>{let{inputs:s,backend:o}=e;const{x:i}=s,c=o,l=r||i.dtype;if(c.shouldExecuteOnCPU([i])&&null!=a){const e=c.texData.get(i.dataId),t=a(e.values,l);return c.makeTensorInfo(i.shape,l,t)}let u;return u=vt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new JD(i.shape,n):new PD(i.shape,t),c.runWebGLProgram(u,[i],l)}}function vO(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}=e;return e=>{let{inputs:i,backend:c}=e;const{a:l,b:u}=i,h=c;if(r&&"complex64"===l.dtype){const e=h.texData.get(l.dataId),n=h.texData.get(u.dataId),[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:a.dataId,dtype:a.dtype,shape:u.shape},o=new sO(t,l.shape,u.shape);return h.runWebGLProgram(o,[r,s],Bs(n.dtype,a.dtype))})),s=uO({inputs:{real:a,imag:r},backend:h});return h.disposeIntermediateTensorInfo(a),h.disposeIntermediateTensorInfo(r),s}const d=o||Bs(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||h.shouldExecuteOnCPU([l,u]))&&null!=s){const e=h.texData.get(l.dataId).values,t=h.texData.get(u.dataId).values,n="string"===l.dtype?Sm(e):e,a="string"===l.dtype?Sm(t):t,[r,o]=s(l.shape,u.shape,n,a,d),i=h.makeTensorInfo(o,d);return h.texData.get(i.dataId).values=r,i}let p;return p=vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new iO(n,l.shape,u.shape,a):new sO(t,l.shape,u.shape),h.runWebGLProgram(p,[l,u],d)}}function wO(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return t?KD:WD;if("relu"===e)return t?YD:GD;if("elu"===e)return t?XD:UD;if("relu6"===e)return t?QD:HD;if("prelu"===e)return t?gO:mO;if("leakyrelu"===e)return t?pO:dO;if("sigmoid"===e)return t?ZD:qD;throw new Error("Activation ".concat(e," has not been implemented for the WebGL backend."))}class kO{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=gF(this.outputShape.length);const l=a?e[1]:e[2],u=Math.ceil(l/2),h=a?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(o,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(o,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(o,"\n        }"),g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b="imod(rc.x, ".concat(e[0],")"):t[0]<e[0]&&(x="imod(rc.x, ".concat(t[0],")")),this.userCode="\n      ".concat(m,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(u,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(b,";\n        int batchB = ").concat(x,";\n        for (int i = 0; i < ").concat(u,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(h,");\n          vec4 b = getMatrixB(batchB, ").concat(d,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(y,"\n\n        ").concat(g,"\n\n        setOutput(result);\n      }\n    ")}}const SO={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class NO{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=$i(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const IO="return a * b;";function TO(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=Bs(a.dtype,r.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),s=new NO(SO.REAL,a.shape,r.shape),o=new NO(SO.IMAG,a.shape,r.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],c=n.runWebGLProgram(s,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),u=uO({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([a,r])){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),[o,i]=aD(a.shape,r.shape,e.values,t.values,s),c=n.makeTensorInfo(i,s);return n.texData.get(c.dataId).values=o,c}let o;return o=vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new iO(IO,a.shape,r.shape):new sO(IO,a.shape,r.shape),n.runWebGLProgram(o,[a,r],s)}const CO={kernelName:ya,backendName:"webgl",kernelFunc:TO};function EO(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,o=n,i=Ge(r.shape),c=Ye(s,i),l=Ge(c);We(i===l,(()=>"The new shape (".concat(c,") has ").concat(l," elements and the old ")+"shape (".concat(r.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."));const u=o.texData.get(r.dataId);return!u.isPacked||P_(r.shape,c)||null!==u.texture&&P_(u.shape,c)?(o.incRef(r.dataId),{dataId:r.dataId,shape:c,dtype:r.dtype}):function(e,t,n){const a=[O_(e.shape),...M_(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[O_(t),...M_(t)],o=new DD(s,a),i=[a],c=n.runWebGLProgram(o,[r],e.dtype,i,!0);return{dataId:c.dataId,shape:t,dtype:c.dtype}}(r,c,o)}const RO={kernelName:za,backendName:"webgl",kernelFunc:EO};class AO{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];const o=4*Math.floor(n/4),i=n%4;let c="sumValue += dot(values, ones);";if(null!=t){const e=1/t;c="sumValue += dot(values * ".concat(je(e)?e.toPrecision(2):e,", ones);")}let l="";r%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(o,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(c,"\n        }\n\n        int inIdx = inOffset + ").concat(o,";\n        if (").concat(1===i,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(2===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(3===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(c,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class _O{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let c="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?c="sumValue":"prod"===t?c="prodValue":"all"===t?c="allValue":"any"===t&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let h="\n      if (".concat("sum"===t,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===t,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===t," || ").concat("max"===t,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),d="vec4";"all"===t?(o="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(o="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(o,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(o,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(h,"\n        }\n\n        int inIdx = inOffset + ").concat(l,";\n        if (").concat(1===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(2===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(3===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(h,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function FO(e,t,n,a){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=Cf(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let s=e;for(let o=0;o<r.length;o++){const{inSize:i,windowSize:c,outSize:l}=r[o];let u,h;u="mean"===n?0===o?new AO({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},i):new AO({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l}):new _O({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},n),h=s,s=a.runWebGLProgram(u,[s],t),h.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(h)}return s}class DO{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const a=lF(this.rank),r=function(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}(t);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(r,"));\n    }\n    ")}}class OO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=lF(this.rank),r=AD("rc",this.rank),s=new Array(this.rank);for(let l=0;l<t.length;l++)s[t[l]]=r[l];const o="vec2(".concat(s.slice(-2).join(),")"),i="++".concat(r[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(s.join(),"), ").concat(o,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(r[this.rank-1],";\n      if(++").concat(r[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function MO(e,t,n){const a=vt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new OO(e.shape,t):new DO(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function LO(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;return function(e,t,n,a){const r=t,s=e.shape.length,o=Qe(r,e.shape);let i=o;const c=wu(i,s),l=null!=c;let u=e;l&&(u=MO(e,c,a),i=Su(i.length,s)),vu("sum",i,s);const[h,d]=bu(u.shape,i);let p=h;n&&(p=xu(h,o));const f=Ge(d),m=EO({inputs:{x:u},attrs:{shape:[Ge(e.shape)/f,f]},backend:a}),g=FO(m,Ws(e.dtype),"sum",a),y=EO({inputs:{x:g},attrs:{shape:p},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),l&&a.disposeIntermediateTensorInfo(u),y}(r,s,o,n)}const zO={kernelName:rr,backendName:"webgl",kernelFunc:LO};function PO(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,o=n,i=r.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=r.shape[s[u]];let l;if(o.shouldExecuteOnCPU([r])){const e=o.texData.get(r.dataId).values,t=ED(e,r.shape,r.dtype,s,c);l=o.makeTensorInfo(c,r.dtype);o.texData.get(l.dataId).values=t}else l=MO(r,s,o);return l}const BO={kernelName:Tr,backendName:"webgl",kernelFunc:PO},WO=1e3;function VO(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=e;const u=t.shape.length,h=n.shape.length,d=a?t.shape[u-2]:t.shape[u-1],p=r?n.shape[h-1]:n.shape[h-2],f=a?t.shape[u-1]:t.shape[u-2],m=r?n.shape[h-2]:n.shape[h-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=Ge(g),x=Ge(y),v=$i(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);We(d===p,(()=>"Error in matMul: inner shapes (".concat(d,") and (")+"".concat(p,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const w=a?[b,d,f]:[b,f,d],k=r?[x,m,p]:[x,p,m],S=EO({inputs:{x:t},backend:s,attrs:{shape:w}}),N=EO({inputs:{x:n},backend:s,attrs:{shape:k}}),I=[S,N],T=Math.max(b,x),C=a?S.shape[1]:S.shape[2],E=null!=o,R=null!=i,A="leakyrelu"===l,_=null!=l?wO(l,!0):null;let F;if((1===f||1===m)&&C>WO&&!1===(E||R||A||null!=_)){let e=S,t=N;a&&(e=PO({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),I.push(e)),r&&(t=PO({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),I.push(t));const n=1===m;let o=e;1!==m&&(o=EO({inputs:{x:e},backend:s,attrs:{shape:[T,C,1]}}),I.push(o));const i=1===m?2:1;let c=t;n&&(c=EO({inputs:{x:t},backend:s,attrs:{shape:[T,1,C]}}),I.push(c));const l=TO({inputs:{a:o,b:c},backend:s});F=LO({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),I.push(l)}else{const e=Bs(t.dtype,n.dtype),l=new kO(w,k,[T,f,m],a,r,E,_,R,A),u=[S,N];if(null!=o&&u.push(o),R&&u.push(i),A){const e=s.makeTensorInfo([],"float32",cs(c,"float32"));u.push(e),I.push(e)}F=s.runWebGLProgram(l,u,e)}const D=EO({inputs:{x:F},backend:s,attrs:{shape:v}});I.push(F);for(const O of I)s.disposeIntermediateTensorInfo(O);return D}const UO={kernelName:Or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;return VO({a:r,b:s,transposeA:c,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:u})}},GO="return abs(x);";const HO={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=fD(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let r;return r=vt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new JD(a.shape,GO):new PD(a.shape,GO),n.runWebGLProgram(r,[a],a.dtype)}},jO=xO({opSnippet:BD+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),qO={kernelName:Tt,backendName:"webgl",kernelFunc:jO},KO=xO({opSnippet:BD+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),XO={kernelName:Ct,backendName:"webgl",kernelFunc:KO},YO="return a + b;",QO=vO({opSnippet:YO,packedOpSnippet:YO,supportsComplex:!0,cpuKernelImpl:MF}),ZO={kernelName:Et,backendName:"webgl",kernelFunc:QO};class JO{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("float v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class $O{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("vec4 v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const eM={kernelName:Rt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,r=n;if(1===r.length)return cO({inputs:{x:r[0]},backend:a});if(r.length>vt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),s=e({inputs:r.slice(t),backend:a});return e({inputs:[n,s],backend:a})}const s=r.map((e=>e.dtype)).reduce(((e,t)=>Bs(e,t))),o=r.map((e=>e.shape)),i=vt().getBool("WEBGL_PACK")?new $O(r[0].shape,o):new JO(r[0].shape,o);return a.runWebGLProgram(i,r,s)}};const tM={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=Qe(s,r.shape);let l=c;const u=wu(l,i);let h=r;null!=u&&(h=PO({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Su(l.length,i)),vu("all",l,i);const[d,p]=bu(h.shape,l),f=EO({inputs:{x:h},backend:n,attrs:{shape:[-1,Ge(p)]}}),m=FO(f,f.dtype,"all",n);let g;if(o){g=EO({inputs:{x:m},backend:n,attrs:{shape:xu(d,c)}})}else g=EO({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}};const nM={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=Qe(s,r.shape);let l=c;const u=wu(l,i);let h=r;null!=u&&(h=PO({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Su(l.length,i)),vu("any",l,i);const[d,p]=bu(h.shape,l),f=EO({inputs:{x:h},backend:n,attrs:{shape:[-1,Ge(p)]}}),m=FO(f,f.dtype,"any",n);let g;if(o){g=EO({inputs:{x:m},backend:n,attrs:{shape:xu(d,c)}})}else g=EO({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}};class aM{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(o," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class rM{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,We(e.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,c=lF(i),l=_D("coords",i);let u,h;if(1===s){h=i+1;const e=lF(h);u="\n        ".concat(e," sourceLocR = ").concat(e,"(").concat(l.join(),", 0);\n        ++").concat(l[i-1],";\n        ").concat(e," sourceLocG = ").concat(e,"(").concat(l.join(),", 0);\n        ++").concat(l[i-2],";\n        ").concat(e," sourceLocA = ").concat(e,"(").concat(l.join(),", 0);\n        --").concat(l[i-1],";\n        ").concat(e," sourceLocB = ").concat(e,"(").concat(l.join(),", 0);\n        --").concat(l[i-2],";")}else h=i,u="\n        ".concat(c," sourceLocR = coords;\n        ++").concat(l[i-1],";\n        ").concat(c," sourceLocG = coords;\n        ++").concat(l[i-2],";\n        ").concat(c," sourceLocA = coords;\n        --").concat(l[i-1],";\n        ").concat(c," sourceLocB = coords;\n        --").concat(l[i-2],";");const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=_D("sourceLocR",h-1).concat("inIdx.r"),g=_D("sourceLocG",h-1).concat("inIdx.g"),y=_D("sourceLocB",h-1).concat("inIdx.b"),b=_D("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(m.join(),"),\n                             getBestIndicesAChannel(").concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),")));"),w="vec4(\n            getAChannel(".concat(m.join(),"),\n            hasNextCol ? getAChannel(").concat(g.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(b.join(),") : 0.)"),k=a?"":"\n      float getBestIndicesAChannel(".concat(f.join(),") {\n        return getChannel(getBestIndicesA(").concat(d.join(),"),\n                                          vec2(").concat(d.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(f.join(),") {\n        return getChannel(getA(").concat(d.join(),"),\n                               vec2(").concat(d.slice(-2).join(),"));\n      }\n      ").concat(k,"\n      void main() {\n        ").concat(c," coords = getOutputCoords();\n        bool hasNextCol = ").concat(l[i-1]," < ").concat(o[i-1]-1,";\n        bool hasNextRow = ").concat(l[i-2]," < ").concat(o[i-2]-1,";\n        ").concat(u,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(p,", sourceLocG").concat(p,",\n          sourceLocB").concat(p,", sourceLocA").concat(p,") * ").concat(t,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(w,";\n\n        for (int i = 0; i < ").concat(t,"; i++) {\n          inIdx = srcIdx;\n          ").concat(v,"\n          vec4 candidate = ").concat(w,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(x,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function sM(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=t.shape[0],s=t.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);const o=Cf(s),i={windowSize:o,inSize:s,batchSize:r,outSize:Math.ceil(s/o)},c=new aM(i,n,null==a),l=[t];null!=a&&l.push(a);const u=e.runWebGLProgram(c,l,"int32");if(1===u.shape[1])return u;const h=sM(e,t,n,u);return e.disposeIntermediateTensorInfo(u),h}function oM(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:t.shape,s=Cf(r[r.length-1]),o=new rM(r,s,n,null==a),i=null==a?[t]:[t,a],c=e.runWebGLProgram(o,i,"int32");if(c.shape.length===t.shape.length){const a=oM(e,t,n,c);return e.disposeIntermediateTensorInfo(c),a}return c}function iM(e,t,n,a){const r=[n];if(vu("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!vt().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let o=t;null!==s&&s.isPacked&&(o=e.unpackTensor(t),n.push(o));const[i,c]=bu(o.shape,r),l=Ge(c),u=EO({inputs:{x:o},backend:e,attrs:{shape:[-1,l]}});n.push(u);const h=sM(e,u,a);n.push(h);const d=EO({inputs:{x:h},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return oM(e,t,a)}const cM={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let o=Qe(s,r.shape);const i=wu(o,r.shape.length);let c=r;const l=[];null!=i&&(c=PO({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=Su(o.length,c.shape.length)),vu("argMax",[o[0]],c.shape.length);const u=iM(n,c,o[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};const lM={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let o=Qe(s,r.shape);const i=wu(o,r.shape.length);let c=r;const l=[];null!=i&&(c=PO({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=Su(o.length,c.shape.length)),vu("argMin",[o[0]],c.shape.length);const u=iM(n,c,o[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}},uM=xO({opSnippet:BD+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),hM={kernelName:Ot,backendName:"webgl",kernelFunc:uM},dM=xO({opSnippet:BD+"return log(x + sqrt(x * x + 1.0));"}),pM={kernelName:Mt,backendName:"webgl",kernelFunc:dM},fM=xO({opSnippet:BD+"\n  return atan(x);\n"}),mM={kernelName:Lt,backendName:"webgl",kernelFunc:fM},gM=vO({opSnippet:rO+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+oO+"\n  return result;\n"}),yM={kernelName:Pt,backendName:"webgl",kernelFunc:gM},bM=xO({opSnippet:BD+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),xM={kernelName:zt,backendName:"webgl",kernelFunc:bM};class vM{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m="((batch  * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),g="(xR * ".concat(e.inWidth," + xC) * ").concat(e.inChannels," + d");let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(l,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(t," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?r?m:g:"wR * ".concat(h," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let b="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(s/4),v=s%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(u,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(x,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              getValue(batch, xR, xC + 3 * ").concat(l,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(x,";\n          if (").concat(1===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(b,");\n      }\n    ")}}class wM{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(d,";\n              wD += ").concat(l,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(u,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(h,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(t," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?r?"(((batch * ".concat(e.inDepth," + xD) * ").concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"((xD * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let v="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(s/4),k=s%4,S="\n      if (".concat(b,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n      const float initializationValue = ").concat(x,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(x,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(d,";\n            wD += ").concat(l,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(h,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(h,", ch)\n              );\n\n              ").concat(S,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(2===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(3===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                initializationValue\n              );\n\n              ").concat(S,"\n            }\n          }\n        }\n        setOutput(").concat(v,");\n      }\n    ")}}const kM={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;j_(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;We(bl(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=cl(r.shape,s,o,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&He(l.inShape,l.outShape))return cO({inputs:{x:r},backend:n});const u=new vM(l,"avg",!1);return n.runWebGLProgram(u,[r],"float32")}};const SM={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a,u=ll(r.shape,s,o,[1,1,1],i,c,l),h=new wM(u,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class NM{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.top,u=c-1-e.padInfo.left,h=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(l,", ").concat(u,");\n      const float avgMultiplier = float(").concat(h,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(s,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(o,") {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class IM{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=u-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(g,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(r,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(h,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(l,") {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const TM={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,h=ll(o.shape,i,c,[1,1,1],l,u),d=new IM(h);return n.runWebGLProgram(d,[r],o.dtype)}};const CM={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s;j_([r,s],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=cl(o.shape,i,c,1,l),h=new NM(u);return n.runWebGLProgram(h,[r],o.dtype)}};const EM={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:i}=a;return VO({a:r,b:s,transposeA:o,transposeB:i,backend:n})}};class RM{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],$i(e,t),$i(e,n);let o="0.0";null!=a&&($i(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=r&&($i(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(o,";\n        float scale = ").concat(i,";\n        float inv = scale * inversesqrt(variance + float(").concat(s,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class AM{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],$i(e,t),$i(e,n);let o="vec4(0.0)";null!=a&&($i(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=r&&($i(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = ".concat(o,";\n        vec4 scale = ").concat(i,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(s,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const _M={kernelName:Ln,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,mean:s,variance:o,offset:i,scale:c}=t;We(s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),We(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),We(null==c||s.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=[r,s,o];let h=null;null!=i&&(h=i.shape,u.push(i));let d=null;null!=c&&(d=c.shape,u.push(c));const p=vt().getBool("WEBGL_PACK_NORMALIZATION")?new AM(r.shape,s.shape,o.shape,h,d,l):new RM(r.shape,s.shape,o.shape,h,d,l);return n.runWebGLProgram(p,u,u[0].dtype)}};class FM{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=lF(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return DM.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let a;const r=e.map(((e,t)=>"sourceLoc.".concat(DM[t]," = start[").concat(t,"] + coords.").concat(DM[t],";")));a="\n        ".concat(t," sourceLoc;\n        ").concat(t," coords = getOutputCoords();\n        ").concat(r.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const DM=["x","y","z","w","u","v"];class OM{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=lF(this.rank),n=_D("coords",this.rank),a=_D("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),s="getChannel(getSource(".concat(a.join(),"), ").concat(r,")"),o="\n      result.x = ".concat(s,";\n      if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(s,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(e[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(s,";\n        if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(s,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(t,"(").concat(e.map(((e,t)=>"start[".concat(t,"]"))).join(),");"):e.map(((e,t)=>"".concat(a[t]," = ").concat(n[t]," + start[").concat(t,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(t," coords = getOutputCoords();\n        ").concat(t," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(o,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function MM(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:o}=a,[i,c]=qc(r,s,o);if(Fc(r,i,c),0===Ge(c))return n.makeTensorInfo(c,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=mD(e.values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,t)}const{isPacked:l}=n.texData.get(r.dataId),u=Hc(r.shape,i,c);if(l||!u){const e=vt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new OM(c):new FM(c),t=[i];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){const r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),o=a.texData.get(s.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=jc(t,it(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};const c=a.dataRefCount.get(o.slice.origDataId)||1;return a.dataRefCount.set(o.slice.origDataId,c+1),s}(r,i,c,n)}const LM={kernelName:Za,backendName:"webgl",kernelFunc:MM},zM={kernelName:Ht,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:o}=a;We(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((e,t)=>e*t)),c=Rf(r.shape,s,i),l=Af(c.length,s.length),u=_f(r.shape,s,i),h=Ff(o,s.length),d=Df(u,o,s.length),p=[],f=EO({inputs:{x:r},backend:n,attrs:{shape:c}}),m=PO({inputs:{x:f},backend:n,attrs:{perm:l}}),g=EO({inputs:{x:m},backend:n,attrs:{shape:u}}),y=MM({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const PM={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=n.readSync(r.dataId),c=n.readSync(s.dataId),l=LF(i,c,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,l)}};const BM={kernelName:qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=vt().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=vt().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===o){const e=n.texData.get(a.dataId).values,t=n.texData.get(r.dataId).values,[s,o]=PF(a.shape,r.shape,e,t,a.dtype),i=n.makeTensorInfo(o,a.dtype);return n.texData.get(i.dataId).values=s,i}let i;return i=s?new iO("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new sO("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(i,[a,r],a.dtype)}};const WM={kernelName:Kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.readSync(a.dataId),o=n.readSync(r.dataId),i=$i(Array.from(s),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},VM=vO({opSnippet:"return float(a != b);",cpuKernelImpl:sD,dtype:"bool"}),UM={kernelName:xa,backendName:"webgl",kernelFunc:VM};function GM(e){const{inputs:t,backend:n}=e,{input:a}=t;return cO({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const HM={kernelName:Oa,backendName:"webgl",kernelFunc:GM},jM="return float(int(x));";const qM={kernelName:Xt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:o}=r;if("complex64"===o){if("complex64"===s.dtype)return cO({inputs:{x:s},backend:a});const t=dh(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=uO({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){const t=GM({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:o}});return a.disposeIntermediateTensorInfo(t),n}if(!et(s.dtype,o)){const e=cO({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId).values,[t,n,r]=BF(e,s.shape,s.dtype,o);return a.makeTensorInfo(t,n,r)}if("int32"===o)return function(e,t){const n=new PD(e.shape,jM),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===o){const e=a.makeTensorInfo([],"bool",Je("bool",1)),t=VM({inputs:{a:s,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error("Error in Cast: failed to cast ".concat(s.dtype," to ").concat(o))}},KM="return ceil(x);",XM=xO({opSnippet:KM,packedOpSnippet:KM,cpuKernelImpl:WF}),YM={kernelName:Yt,backendName:"webgl",kernelFunc:XM};class QM{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class ZM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const JM={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:o}=a;let i;i=vt().getBool("WEBGL_PACK_CLIP")?new ZM(r.shape):new QM(r.shape);const c=[[s],[o]];return n.runWebGLProgram(i,[r],r.dtype,c)}};class $M{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function eL(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const tL={kernelName:Jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new $M(a.shape),o=[eL(a,r.complexTensorInfos.real),eL(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class nL{constructor(e){this.outputShape=[],this.outputShape=vf(e,1),this.variableNames=e.map(((e,t)=>"T".concat(t)));const t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];const n=["if (yC < ".concat(t[0],") setOutput(getT0(yR, yC));")];for(let s=1;s<t.length;s++){const e=t[s-1];n.push("else if (yC < ".concat(t[s],") ")+"setOutput(getT".concat(s,"(yR, yC-").concat(e,"));"))}const a=t.length,r=t[t.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(r,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class aL{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=vf(e,t);const n=this.outputShape,a=n.length,r=lF(a),s=_D("coords",a),o=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>"T".concat(t)));const i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];const c=o[t],l=o.slice(-2),u=o.join();let h="if (".concat(c," < ").concat(i[0],") {\n        return getChannel(\n            getT0(").concat(u,"), vec2(").concat(l.join(),"));\n        }");for(let f=1;f<i.length;f++){const e=i[f-1];h+="\n        if (".concat(c," < ").concat(i[f],"  && ").concat(c," >= ").concat(i[f-1],") {\n          return getChannel(\n            getT").concat(f,"(").concat(rL(o,c,e),"),\n            vec2(").concat(rL(l,c,e),"));\n        }")}const d=i.length,p=i[i.length-1];h+="\n        return getChannel(\n          getT".concat(d,"(").concat(rL(o,c,p),"),\n          vec2(").concat(rL(l,c,p),"));"),this.userCode="\n      float getValue(".concat(o.map((e=>"int "+e)),") {\n        ").concat(h,"\n      }\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(s,"), 0., 0., 0.);\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," + 1;\n        if (").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-2]," = ").concat(s[a-2]," + 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," - 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2]," &&\n            ").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(s,");\n        }\n        setOutput(result);\n      }\n    ")}}function rL(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?"".concat(e," - ").concat(n):e)).join()}function sL(e){const{inputs:t,backend:n}=e,{input:a}=t;return cO({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const oL={kernelName:Gn,backendName:"webgl",kernelFunc:sL};function iL(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>GM({inputs:{input:e},backend:n}))),r=e.map((e=>sL({inputs:{input:e},backend:n}))),s=iL(a,t,n),o=iL(r,t,n),i=uO({inputs:{real:s,imag:o},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=Ge(e.shape.slice(t));return EO({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=vf(r.map((e=>e.shape)),1),i=1===r[0].shape[0],c=VF(s,o,a,i),l=vf(e.map((e=>e.shape)),t),u=n.makeTensorInfo(l,a,c);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const s=e.filter((e=>Ge(e.shape)>0)),o=vt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){const t=o?new PD(e[0].shape,jD):new JD(e[0].shape,jD);return n.runWebGLProgram(t,e,a)}const i=vt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>i){const e=[];for(let r=0;r<s.length;r+=i){const a=s.slice(r,r+i);e.push(iL(a,t,n))}const a=iL(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(o){const e=new aL(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,a)}const{tensors2D:c,outShape:l}=function(e,t,n){const a=vf(e.map((e=>e.shape)),t),r=e.map((e=>EO({inputs:{x:e},attrs:{shape:[-1,Ge(e.shape.slice(t))]},backend:n})));return{tensors2D:r,outShape:a}}(s,t,n),u=new nL(c.map((e=>e.shape))),h=n.runWebGLProgram(u,c,a);c.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=EO({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),d}function cL(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=Qe(r,t[0].shape)[0];xf(t.map((e=>e.shape)),s);const o=vf(t.map((e=>e.shape)),s);if(0===Ge(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>Ge(e.shape)>0));return 1===i.length?cO({inputs:{x:i[0]},backend:n}):iL(i,s,n)}const lL={kernelName:$t,backendName:"webgl",kernelFunc:cL};class uL{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(x,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(b,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(g,"], coords[").concat(y,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(h,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(d,"; wC++) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            if (xC < 0 || xC >= ").concat(e.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(v,"\n        setOutput(result);\n      }\n    ")}}class hL{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(r,", ").concat(s,", ").concat(o,");\n      const ivec3 pads = ivec3(").concat(t,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(u,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(h,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,"; wC++) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class dL{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gF(this.outputShape.length);const s=e.padInfo.left,o=e.strideWidth,i=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,u=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<l;m++)h+="\n           vec4 xTexelC".concat(2*m,";\n           int xTexelC").concat(2*m,"Ready;\n           vec4 xTexelC").concat(2*m+1,";\n           int xTexelC").concat(2*m+1,"Ready;\n           vec4 xC").concat(m,";");h+="\n     for (int r = 0; r < ".concat(c,"; r++) {\n      for (int d1 = 0; d1 < ").concat(e.inChannels,"; d1 += 2) {\n       ");for(let m=0;m<l;m++)h+="\n           xTexelC".concat(2*m," = vec4(0.0);\n           xTexelC").concat(2*m,"Ready = 0;\n           xTexelC").concat(2*m+1," = vec4(0.0);\n           xTexelC").concat(2*m+1,"Ready = 0;\n           xC").concat(m," = vec4(0.0);");h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(u+1)/2;m++){const t=2*m;if(h+="\n           xC = xCCorner + ".concat(t*i,";\n           "),1===o){if(t<l&&(s%2===1?(h+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n               "),h+=1===i&&t>0?"\n                 xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                   } else {\n                     xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                   }\n                   ")):h+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xC").concat(t," = xTexelC").concat(t,";\n                 "),t+1<l)){const e=s%2===0?Pe(i):i;i%2===0&&s%2===1||i%2!==0&&s%2!==1?(h+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                     xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(t+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(t+1,"Ready = 1;\n                   }\n                   "),h+=i>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                     } else {\n                      xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                     }\n                     "):"\n                     xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                     ")):h+=1===e?"\n                     xC".concat(t+1," = xTexelC").concat(t,";\n                     "):"\n                     xCOffset = xC + ".concat(e,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                       xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(t+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(t+1,"Ready = 1;\n                     }\n\n                     xC").concat(t+1," = xTexelC").concat(t+1,";\n                     ")}}else t<l&&(s%2===1?(h+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n               "),t+1<l&&(h+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                 "))):(h+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(\n                   xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n               "),t+1<l&&(h+="\n                   xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                 "))));t<l&&(h+="\n             wTexel = getW(r, ".concat(t,", d1, d2);\n             dotProd += xC").concat(t,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(e.inChannels,") {\n               dotProd += xC").concat(t,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),t+1<l&&(h+="\n               wTexel = getW(r, ".concat(t+1,", d1, d2);\n               dotProd += xC").concat(t+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(e.inChannels,") {\n                 dotProd += xC").concat(t+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):r?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(d,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(h,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(f,"\n         ").concat(p,"\n         setOutput(result);\n       }\n     ")}}class pL{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=gF(this.outputShape.length);const{dataFormat:n}=t,a=K_(),r="channelsLast"===n,s=r?1:2,o=r?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(e[2]," && pos < ").concat(e[1],") {");let c="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)c+="\n          blockIndex = rc.z + ".concat(e,";\n          pos = rc.y + ").concat(l,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(s,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(o,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(r,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}function fL(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function mL(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}=e;const l=t.shape,u=r.texData.get(t.dataId),h=a.inChannels,d=l[0]*l[1]*l[2],p=a.outChannels,f="channelsLast"===a.dataFormat,m=!1;let g;const y=[];if(null!=o){const e=fL(o.shape,f);null!=e&&(o=EO({inputs:{x:o},backend:r,attrs:{shape:e}}),y.push(o))}if(null!=s){const e=fL(s.shape,f);null!=e&&(s=EO({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}if(!((1===d||1===p)&&h>WO)&&u.isPacked&&f&&null!=u.texture&&l[2]%2!==0&&He(u.shape.slice(-3),l.slice(-3))){const e=l[0]*l[1]*(l[2]+1),h={dataId:t.dataId,shape:[1,e,a.inChannels],dtype:t.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,We(P_(u.shape,h.shape),(()=>"packed reshape ".concat(u.shape," to ").concat(h.shape," isn't free")));const p=EO({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});y.push(p);const f=VO({a:h,b:p,backend:r,transposeA:false,transposeB:m,bias:s,activation:c,preluActivationWeights:o,leakyreluAlpha:i}),b=r.texData.get(f.dataId);We(b.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,b.shape=a.outShape,g=cO({inputs:{x:f},backend:r}),g.shape=a.outShape,y.push(f)}else{const e=a.outHeight*a.outWidth,l=EO({inputs:{x:t},backend:r,attrs:{shape:f?[a.batchSize,e,a.inChannels]:[a.batchSize,a.inChannels,e]}}),u=EO({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),h=VO({a:f?l:u,b:f?u:l,transposeA:!f,transposeB:m,backend:r,bias:s,activation:c,preluActivationWeights:o,leakyreluAlpha:i});g=EO({inputs:{x:h},backend:r,attrs:{shape:a.outShape}}),y.push(l),y.push(u),y.push(h)}for(const b of y)r.disposeIntermediateTensorInfo(b);return g}function gL(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}=e;const{filterWidth:l,filterHeight:u,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=a,m="channelsLast"===f,g=l*u*h,y=p*d,b=[a.batchSize,g,y],x=[];if(null!=o){const e=fL(o.shape,m);null!=e&&(o=EO({inputs:{x:o},backend:r,attrs:{shape:e}}),x.push(o))}if(null!=s){const e=fL(s.shape,m);null!=e&&(s=EO({inputs:{x:s},backend:r,attrs:{shape:e}}),x.push(s))}const v=EO({inputs:{x:n},backend:r,attrs:{shape:[1,g,Ge(n.shape)/g]}});x.push(v);const w=new pL(b,a),k=[t.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],S=r.runWebGLProgram(w,[t],"float32",k),N=EO({inputs:{x:S},backend:r,attrs:{shape:b}});x.push(S),x.push(N);const I=null!=s,T=null!=o,C="leakyrelu"===c,E=c?wO(c,!0):null,R=new kO(m?N.shape:v.shape,m?v.shape:N.shape,m?[a.batchSize,y,a.outChannels]:[a.batchSize,a.outChannels,y],!0,!1,I,E,T,C),A=m?[N,v]:[v,N];if(s&&A.push(s),T&&A.push(o),C){const e=r.makeTensorInfo([],"float32",cs(i,"float32"));A.push(e),x.push(e)}const _=r.runWebGLProgram(R,A,"float32"),F=EO({inputs:{x:_},backend:r,attrs:{shape:a.outShape}});x.push(_);for(const D of x)r.disposeIntermediateTensorInfo(D);return F}const yL={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a,h=vl(c),d=ul(r.shape,s.shape,o,l,i,u,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&vt().getBool("WEBGL_EXP_CONV")){const e=new dL(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[r,s],"float32",t)}else if(vt().getBool("WEBGL_CONV_IM2COL"))p=gL({x:r,filter:s,convInfo:d,backend:n});else{const e=new uL(d);p=n.runWebGLProgram(e,[r,s],"float32")}else p=mL({x:r,filter:s,convInfo:d,backend:n});const f=EO({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class bL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              ").concat(s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class xL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,c=s?1:2,l=s?2:3,u=s?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(u,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(l,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n\n              if (").concat(s,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class vL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(e.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(t," - ").concat(r,";\n\n            if (xF < 0 || xF >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(s,";\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(o,";\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class wL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,c=n-1-e.padInfo.top,l=a-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(l,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(t,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(r,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(e.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(t," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const kL={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a,h=vl(c),d=ul(r.shape,u,o,1,i,l,!1,h),p=new bL(d);return n.runWebGLProgram(p,[r,s],"float32")}};class SL{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=gF(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(r,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(e.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(e.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const NL={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,h=vl(l),d=ul(o,s.shape,i,1,c,u,!1,h);if(vt().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new SL(d);return n.runWebGLProgram(t,[r,s],"float32",e)}{const e=new xL(d);return n.runWebGLProgram(e,[r,s],"float32")}}};const IL={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a,l=hl(r.shape,s.shape,o,c,i),u=new hL(l);return n.runWebGLProgram(u,[r,s],"float32")}};const TL={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,filterShape:c}=a,l=hl(r.shape,c,o,1,i),u=new vL(l);return n.runWebGLProgram(u,[r,s],"float32")}};const CL={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:o,strides:i,inputShape:c}=a,l=hl(c,s.shape,i,1,o),u=new wL(l);return n.runWebGLProgram(u,[r,s],"float32")}},EL=xO({opSnippet:bO+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(oO,"\n  return result;\n")}),RL={kernelName:on,backendName:"webgl",kernelFunc:EL},AL=xO({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),_L={kernelName:cn,backendName:"webgl",kernelFunc:AL};class FL{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,c]=e,[l]=t,[u,h]=n;this.outputShape=[l,u,h,c];const d="bilinear"===a?1:0,[p,f]=["".concat(o-1,".0"),"".concat(i-1,".0")],[m,g,y]=u>1?["".concat((o-1)/(u-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[b,x,v]=h>1?["".concat((i-1)/(h-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(b,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(s,") {\n          return;\n        }\n\n        float height_scale = ").concat(g,";\n        float width_scale = ").concat(x,";\n\n        float in_y = ").concat(y,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n        float in_x = ").concat(v,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(d," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const DL={kernelName:hn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:l}=a,u=new FL(r.shape,s.shape,i,c,l);return n.runWebGLProgram(u,[r,s,o],"float32")}};var OL;!function(e){e.Prod="*",e.Sum="+"}(OL||(OL={}));class ML{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,s=this.op===OL.Prod?"1.0":"0.0",o=n?s:"getX(".concat(LL(r,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",l="";n?(c=a?"end != ".concat(i-1):"end != 0",l=a?"end + 1":"end - 1"):(c=a?"end + pow2 < ".concat(i):"end >= pow2",l=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(lF(r)," coords = getOutputCoords();\n        int end = ").concat(zL(r,"coords",this.op),";\n        float val = ").concat(o,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(l,";\n          ").concat(zL(r,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(LL(r,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function LL(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function zL(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function PL(e,t,n,a,r,s){const o=t.shape.length,i=wu([a],o);let c=t;null!=i&&(c=PO({inputs:{x:t},backend:n,attrs:{perm:i}}));const l=Su(1,o)[0];if(l!==o-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(a));const u=c.shape[l];let h=cO({inputs:{x:c},backend:n});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const t=new ML(e,c.shape,!1,s),a=[[d]],r=h;h=n.runWebGLProgram(t,[h],h.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){const t=new ML(e,c.shape,r,s),a=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=i){const e=PO({inputs:{x:h},backend:n,attrs:{perm:ku(i)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),e}return h}const BL={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return PL(OL.Prod,r,n,s,o,i)}};const WL={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return PL(OL.Sum,r,n,s,o,i)}};const VL={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(s.dataId),a=LF(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(s),a=zF(e,t,o,i);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};class UL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(t,";\n      int offset_h = imod(h, ").concat(t,");\n      int in_w = w / ").concat(t,";\n      int offset_w = imod(w, ").concat(t,");\n      int offset_d = (offset_h * ").concat(t," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const GL={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a,i=r.shape[0],c=("NHWC"===o?r.shape[1]:r.shape[2])*s,l=("NHWC"===o?r.shape[2]:r.shape[3])*s,u=("NHWC"===o?r.shape[3]:r.shape[1])/(s*s),h=new UL("NHWC"===o?[i,c,l,u]:[i,u,c,l],s,o);return n.runWebGLProgram(h,[r],r.dtype)}};class HL{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gF(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let c="",l="";n&&(c=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),l="result = activation(result);");const u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(s,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(u,"\n        ").concat(l,"\n        setOutput(result);\n      }\n    ")}}class jL{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gF(this.outputShape.length);const s=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,h=u;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<u;g++)d+="\n          vec4 xTexelC".concat(2*g,";\n          int xTexelC").concat(2*g,"Ready;\n          vec4 xTexelC").concat(2*g+1,";\n          int xTexelC").concat(2*g+1,"Ready;\n          vec4 xC").concat(g,";");d+="\n    for (int r = 0; r < ".concat(l,"; r++) {\n      ");for(let g=0;g<u;g++)d+="\n          xTexelC".concat(2*g," = vec4(0.0);\n          xTexelC").concat(2*g,"Ready = 0;\n          xTexelC").concat(2*g+1," = vec4(0.0);\n          xTexelC").concat(2*g+1,"Ready = 0;\n          xC").concat(g," = vec4(0.0);");d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(h+1)/2;g++){const e=2*g;if(d+="\n          xC = xCCorner + ".concat(e*c,";\n          "),1===i){if(e<u&&(o%2===1?(d+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n              "),d+=1===c&&e>0?"\n                xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                  } else {\n                    xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                  }\n                  ")):d+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xC").concat(e," = xTexelC").concat(e,";\n                "),e+1<u)){const t=o%2===0?Pe(c):c;c%2===0&&o%2===1||c%2!==0&&o%2!==1?(d+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                    xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(e+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(e+1,"Ready = 1;\n                  }\n                  "),d+=c>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                    } else {\n                     xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                    }\n                    "):"\n                    xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                    ")):d+=1===t?"\n                    xC".concat(e+1," = xTexelC").concat(e,";\n                    "):"\n                    xCOffset = xC + ".concat(t,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                      xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(e+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(e+1,"Ready = 1;\n                    }\n\n                    xC").concat(e+1," = xTexelC").concat(e+1,";\n                    ")}}else e<u&&(o%2===1?(d+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n              "),e+1<u&&(d+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                "))):(d+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(\n                  xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n              "),e+1<u&&(d+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                "))));e<u&&(d+="\n            wTexel = getW(r, ".concat(e,", d1, q);\n            dotProd += xC").concat(e," * vec4(wTexel.xz, wTexel.xz);\n          "),e+1<u&&(d+="\n              wTexel = getW(r, ".concat(e+1,", d1, q);\n              dotProd += xC").concat(e+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(p,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(s,";\n        int q = d2 - d1 * ").concat(s,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(d,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(m,"\n        ").concat(f,"\n        setOutput(result);\n      }\n    ")}}const qL={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=a;let u=c;null==u&&(u=[1,1]),We(bl(o,u),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(u,"'")));const h=ul(r.shape,s.shape,o,u,i,l,!0);let d;d=vt().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new jL(h):new HL(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,s],"float32",p)}};class KL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(s," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class XL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const YL={kernelName:mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a,h=ul(r.shape,u,o,i,c,l,!0),d=new KL(h);return n.runWebGLProgram(d,[r,s],"float32")}};const QL={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a,h=ul(u,s.shape,o,i,c,l,!0),d=new XL(h);return n.runWebGLProgram(d,[r,s],"float32")}};class ZL{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const JL={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=Ge(a.shape),o=EO({inputs:{x:a},backend:n,attrs:{shape:[s]}}),i=new ZL(s),c=n.runWebGLProgram(i,[o],o.dtype),l=EO({inputs:{x:c},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}};class $L{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:l}=e,{top:u,left:h}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(r,", ").concat(s,");\n      const ivec2 pads = ivec2(").concat(u,", ").concat(h,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(o,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(t,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(l,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const ez={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a,l=il(r.shape,s.shape,o,i,"NHWC",c);let u;const h=new $L(l);u=n.runWebGLProgram(h,[r,s],"float32");const d=EO({inputs:{x:u},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(u),d}};const tz={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:o,summedDims:i,idDims:c}=tm(r,s.length);am(o.length,c,s);const{path:l,steps:u}=rm(i,c),h=u.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const e of u[m]){const{permutationIndices:t,expandDims:a}=nm(p,c[e]);let r;sm(t)?r=s[e]:(r=PO({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(r));const o=r.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);He(r.shape,o)||(r=EO({inputs:{x:r},backend:n,attrs:{shape:o}}),f.push(r)),null===d?d=r:(d=TO({inputs:{a:r,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=LO({inputs:{x:d},backend:n,attrs:{axis:l[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},nz=xO({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),az={kernelName:Nn,backendName:"webgl",kernelFunc:nz},rz={kernelName:In,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new iO("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new sO("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},sz=vO({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:UF}),oz={kernelName:Cn,backendName:"webgl",kernelFunc:sz},iz=xO({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(zf,";\n  float a1 = ").concat(Pf,";\n  float a2 = ").concat(Bf,";\n  float a3 = ").concat(Wf,";\n  float a4 = ").concat(Vf,";\n  float a5 = ").concat(Uf,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),cz={kernelName:Tn,backendName:"webgl",kernelFunc:iz},lz=xO({opSnippet:bO+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:GF,dtype:"float32"}),uz={kernelName:En,backendName:"webgl",kernelFunc:lz};function hz(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,o=s.shape.length,i=s.shape.slice();let c=r;return r<0&&(We(-(o+1)<=r,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),c=o+r+1),i.splice(c,0,1),EO({inputs:{x:s},backend:a,attrs:{shape:i}})}const dz={kernelName:Rn,backendName:"webgl",kernelFunc:hz},pz="return exp(x) - 1.0;",fz=xO({opSnippet:pz,packedOpSnippet:pz,cpuKernelImpl:HF}),mz={kernelName:An,backendName:"webgl",kernelFunc:fz};class gz{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),s=n?"".concat(a,".0"):"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '.concat(e,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(r,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(s,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function yz(e,t,n){const a=n.texData.get(e.dataId),r=Ge(e.shape),s=e.shape[e.shape.length-1],o=EO({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}}),i=o.shape,c=new gz("real",i,t),l=new gz("imag",i,t),u=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:i},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:i}],h=n.runWebGLProgram(c,u,"float32"),d=n.runWebGLProgram(l,u,"float32"),p=uO({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=EO({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(p),f}const bz={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return yz(a,!1,n)}};class xz{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function vz(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||rt(r),"string"===s){const e=$e(s,Ge(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{const e=new xz(a,r),n=[[r]];return t.runWebGLProgram(e,[],s,n)}}const wz={kernelName:Fn,backendName:"webgl",kernelFunc:vz};class kz{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(t," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(t,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const Sz={kernelName:Dn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,r=n,s=new kz(a.shape);return r.runWebGLProgram(s,[a],a.dtype)}},Nz="return floor(x);",Iz=xO({opSnippet:Nz,packedOpSnippet:Nz,cpuKernelImpl:jF}),Tz={kernelName:On,backendName:"webgl",kernelFunc:Iz},Cz=vO({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Ez={kernelName:Mn,backendName:"webgl",kernelFunc:Cz};class Rz{constructor(e){this.variableNames=["A"];const t=K_(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(t.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class Az{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=K_(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(t.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}const _z={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:s}=a,o="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,i="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[c,l]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[l,c],h=[l,c,s];if(i||o){const e=vt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=Fz&&e===Dz||(Dz=e,Fz=document.createElement("canvas").getContext("2d",{willReadFrequently:Dz})),Fz.canvas.width=c,Fz.canvas.height=l,Fz.drawImage(r,0,0,c,l),r=Fz.canvas}const d=n.makeTensorInfo(u,"int32");n.texData.get(d.dataId).usage=m_.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=vt().getBool("WEBGL_PACK")?new Az(h):new Rz(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let Fz,Dz=vt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const Oz={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a,m=vl(u),g=ul(r.shape,s.shape,c,h,l,d,!1,m);let y;const b=[],x=null!=o,v=null!=i,w="leakyrelu"===p,k=()=>{const e=[r,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=EO({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(o,u)),v&&e.push(t(i,u)),w){const t=n.makeTensorInfo([],"float32",cs(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&vt().getBool("WEBGL_EXP_CONV")){const e=p?wO(p,!0):null,t=new dL(g,x,e,v,w),a=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],r=k();y=n.runWebGLProgram(t,r,"float32",a)}else if(vt().getBool("WEBGL_CONV_IM2COL"))y=gL({x:r,filter:s,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const e=p?wO(p,!1):null,t=new uL(g,x,e,v,w),a=k();y=n.runWebGLProgram(t,a,"float32")}else y=mL({x:r,filter:s,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});const S=EO({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};const Mz={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=a,f=[];let m=u;null==m&&(m=[1,1]),We(bl(c,m),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(c," and dilations '").concat(m,"'")));const g=ul(r.shape,s.shape,c,m,l,h,!0),y=vt().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?wO(d,y):null,x=[r,s],v=null!=o,w=null!=i,k="leakyrelu"===d;if(v&&x.push(o),w&&x.push(i),k){const e=n.makeTensorInfo([],"float32",cs(p,"float32"));x.push(e),f.push(e)}let S;S=y?new jL(g,v,b,w,k):new HL(g,v,b,w,k);const N=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],I=n.runWebGLProgram(S,x,"float32",N);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};class Lz{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const r=lF(n.length);let s="\n    int index;";for(let o=0;o<this.sliceDim;o++)s+="\n          index = round(getIndices(coords[0], ".concat(o,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[o],";\n          flattenIndex += index * ").concat(this.strides[o],";");this.userCode="\n         void main() {\n          ".concat(r," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(s,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const zz={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,o=s[s.length-1],i=Ge(a.shape),[c,l,u,h]=Of(a,r),d=EO({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),p=EO({inputs:{x:a},backend:n,attrs:{shape:[Ge(a.shape)/u,u]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),s=qF(e,t,a.dtype,l,o,u,h,a.shape,i);return n.makeTensorInfo(c,a.dtype,s.values)}const f=new Lz(o,h,[l,u],a.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=EO({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class Pz{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=lF(this.rank),a=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e.length;r++)2===r?a.push("index"):a.push("".concat(n[r]));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(e[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function Bz(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:o,batchDims:i}=a,c=Qe(o,r.shape)[0];if(vt().get("DEBUG")){const e=n.readSync(s.dataId),t=r.shape[c];for(let n=0;n<e.length;++n){const a=e[n];We(a<=t-1&&a>=0,(()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(t-1,"]")))}}const l=km(r,s,c,i),u=Ge(s.shape),h=[],d=EO({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=EO({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),a=KF(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,a.dtype,a.values)}const m=new Pz(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=EO({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const Wz={kernelName:zn,backendName:"webgl",kernelFunc:Bz},Vz=vO({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:XF,dtype:"bool"}),Uz={kernelName:Bn,backendName:"webgl",kernelFunc:Vz},Gz=vO({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:YF}),Hz={kernelName:Wn,backendName:"webgl",kernelFunc:Gz};const jz={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return yz(a,!0,n)}},qz=xO({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Kz={kernelName:Hn,backendName:"webgl",kernelFunc:qz},Xz=xO({opSnippet:"return float(isinf(x));",dtype:"bool"}),Yz={kernelName:jn,backendName:"webgl",kernelFunc:Xz},Qz=xO({opSnippet:"return float(isnan(x));",dtype:"bool"}),Zz={kernelName:qn,backendName:"webgl",kernelFunc:Qz},Jz=vO({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:QF,dtype:"bool"}),$z={kernelName:Xn,backendName:"webgl",kernelFunc:Jz},eP=vO({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:ZF,dtype:"bool"}),tP={kernelName:Yn,backendName:"webgl",kernelFunc:eP};const nP={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=JF(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},aP=xO({opSnippet:bO+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:$F}),rP={kernelName:Zn,backendName:"webgl",kernelFunc:aP},sP=xO({opSnippet:bO+"\n  return log(1.0 + x);\n"}),oP={kernelName:Jn,backendName:"webgl",kernelFunc:sP},iP=vO({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),cP={kernelName:$n,backendName:"webgl",kernelFunc:iP},lP=xO({opSnippet:"return float(!(x >= 1.0));"}),uP={kernelName:ea,backendName:"webgl",kernelFunc:lP},hP=vO({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),dP={kernelName:ta,backendName:"webgl",kernelFunc:hP};class pP{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(s,"; j <= ").concat(s,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(o,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class fP{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(s,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(s,"; j <= ").concat(s,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(o,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const mP={kernelName:na,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:o,alpha:i,beta:c}=a,l=vt().getBool("WEBGL_PACK_NORMALIZATION")?new fP(r.shape,s,o,i,c):new pP(r.shape,s,o,i,c);return n.runWebGLProgram(l,[r],r.dtype)}};class gP{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(t,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(t," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(r,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(r,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const yP={kernelName:aa,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a,h=new gP(r.shape,i,c,l,u);return n.runWebGLProgram(h,[r,s,o],r.dtype)}};function bP(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:o}=a,i=r.shape.length,c=Qe(s,r.shape);let l=c;const u=wu(l,i),h=null!=u,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(i);for(let n=0;n<t.length;n++)t[n]=r.shape[u[n]];const a=ED(e,r.shape,r.dtype,u,t);p=n.makeTensorInfo(t,r.dtype);n.texData.get(p.dataId).values=a}else p=MO(r,u,n);l=Su(l.length,i)}vu("max",l,i);const[f,m]=bu(p.shape,l);let g,y=f;if(o&&(y=xu(f,c)),d){const e=n.texData.get(p.dataId).values,t=eD(e,Ge(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,a){const r=Ge(t),s=EO({inputs:{x:e},attrs:{shape:[Ge(e.shape)/r,r]},backend:a}),o=FO(s,e.dtype,"max",a),i=EO({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const xP={kernelName:ra,backendName:"webgl",kernelFunc:bP},vP=vO({opSnippet:rO+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+oO+"\n  return result;\n",cpuKernelImpl:tD}),wP={kernelName:sa,backendName:"webgl",kernelFunc:vP};const kP={kernelName:oa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;j_(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;We(bl(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=cl(r.shape,s,o,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&He(l.inShape,l.outShape))return cO({inputs:{x:r},backend:n});const u=new vM(l,"max",!1);return n.runWebGLProgram(u,[r],r.dtype)}};const SP={kernelName:ca,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dataFormat:c,dimRoundingMode:l}=a,u=ll(r.shape,s,o,[1,1,1],i,l,c),h=new wM(u,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class NP{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=s-1-e.padInfo.left,c=r*s-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(r,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(t,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(s," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class IP{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.front,h=c-1-e.padInfo.top,d=l-1-e.padInfo.left,p=i*c*l-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(u,", ").concat(h,", ").concat(d,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(r,") {\n          float dyD = float(dyDCorner + wD) / ").concat(t,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(s,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(o,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(l," +\n                  wR * ").concat(l," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const TP={kernelName:la,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,h=ll(o.shape,i,c,[1,1,1],l,u),d=new wM(h,"max",!0),p=n.runWebGLProgram(d,[o],o.dtype),f=new IP(h),m=n.runWebGLProgram(f,[r,p],o.dtype);return n.disposeIntermediateTensorInfo(p),m}};const CP={kernelName:ia,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:o}=t,i=s;j_([s,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=cl(i.shape,c,l,1,u,h),p=new vM(d,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new NP(d),g=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const EP={kernelName:ua,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:c}=n,l=a;We(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const u=[1,1];We(bl(o,u),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(u,"'")));const h=cl(r.shape,s,o,u,i),[d,p]=function(e,t,n,a){let r=new vM(n,"max",!1);const s=a.runWebGLProgram(r,[e],"float32");return r=new vM(n,"max",!0,!0,t),[s,a.runWebGLProgram(r,[e],"float32")]}(r,c,h,l);return[d,p]}};const RP={kernelName:ha,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{keepDims:s,axis:o}=n,i=a,c=r.shape.length,l=Qe(o,r.shape);let u=l;const h=wu(u,c),d=null!=h,p=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(d){if(p){const e=i.texData.get(m.dataId).values,t=new Array(c);for(let a=0;a<t.length;a++)t[a]=r.shape[h[a]];const n=ED(e,r.shape,r.dtype,h,t);m=i.makeTensorInfo(t,r.dtype);i.texData.get(m.dataId).values=n}else m=MO(r,h,i);f.push(m),u=Su(u.length,c)}vu("sum",u,c);const[g,y]=bu(m.shape,u);let b=g;s&&(b=xu(g,l));const x=function(e,t,n,a){const r=Ge(t),s=EO({inputs:{x:e},attrs:{shape:[Ge(e.shape)/r,r]},backend:a}),o=FO(s,"float32","mean",a),i=EO({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(m,y,b,i);for(const v of f)i.disposeIntermediateTensorInfo(v);return x}};const AP={kernelName:da,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=Qe(s,r.shape);let l=c;const u=wu(l,i);let h=r;null!=u&&(h=PO({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Su(l.length,r.shape.length)),vu("min",l,i);const[d,p]=bu(h.shape,l),f=EO({inputs:{x:h},backend:n,attrs:{shape:[-1,Ge(p)]}}),m=FO(f,f.dtype,"min",n);let g;if(o){g=EO({inputs:{x:m},backend:n,attrs:{shape:xu(d,c)}})}else g=EO({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}},_P=vO({opSnippet:rO+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+oO+"\n  return result;\n",cpuKernelImpl:nD}),FP={kernelName:pa,backendName:"webgl",kernelFunc:_P};class DP{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=lF(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(r," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class OP{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=lF(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=_D("rc",a),c=_D("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h="reflect"===n?0:1;let d="";if(1===a){const e="\n        ".concat(r," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(h,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(h,";\n        }\n        source -= start;\n      ");d="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ")}else{const e="\n        ".concat(r," source = rc;\n        ").concat(r," lt = ").concat(r,"(lessThan(source, start));\n        ").concat(r," gte = ").concat(r,"(greaterThanEqual(source, end));\n        ").concat(r," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(h,") +\n                gte * ((end - 1) * 2 - source + ").concat(h,");\n        source -= start;\n      ");d="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(e,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(l,") {\n            ").concat(e,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(d,"\n        setOutput(result);\n      }\n    ")}}const MP={kernelName:fa,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r}=t,{paddings:s,mode:o}=a,i=vt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new OP(r.shape,s,o):new DP(r.shape,s,o);return n.runWebGLProgram(i,[r],r.dtype)}},LP=vO({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+oO+"\n  return result;\n"}),zP={kernelName:ma,backendName:"webgl",kernelFunc:LP};class PP{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(t-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(t-1,"));\n      }\n    ")}}const BP=vO({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),WP={kernelName:kn,backendName:"webgl",kernelFunc:BP},VP="return a - b;",UP=vO({opSnippet:VP,packedOpSnippet:VP,supportsComplex:!0,cpuKernelImpl:ID}),GP={kernelName:vr,backendName:"webgl",kernelFunc:UP};function HP(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,o=Qe([s],r.shape),i=bP({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),c=xu(i.shape,o),l=EO({inputs:{x:i},backend:n,attrs:{shape:c}}),u=UP({inputs:{a:r,b:l},backend:n}),h=lz({inputs:{x:u},backend:n}),d=LO({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),p=EO({inputs:{x:d},backend:n,attrs:{shape:c}}),f=BP({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const jP={kernelName:ir,backendName:"webgl",kernelFunc:HP};const qP={kernelName:ga,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:i}=a,c=i?r:HP({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=c.shape[0],u=c.shape[1],h=new PP(l,u,s),d=[[o]],p=n.runWebGLProgram(h,[c],"int32",d);return i||n.disposeIntermediateTensorInfo(c),p}},KP=BD+"\n  return -x;\n";const XP={kernelName:ba,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=rD(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r;return r=vt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new JD(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new PD(a.shape,KP),n.runWebGLProgram(r,[a],a.dtype)}},YP=Np;const QP={kernelName:va,backendName:"webgl",kernelFunc:function(e){zr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a,l=n.readSync(r.dataId),u=n.readSync(s.dataId),{selectedIndices:h}=YP(l,u,o,i,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},ZP=Ip;const JP={kernelName:wa,backendName:"webgl",kernelFunc:function(e){zr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a,u=n.readSync(r.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=ZP(u,h,o,i,c,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},$P=Tp;const eB={kernelName:ka,backendName:"webgl",kernelFunc:function(e){zr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a,u=n.readSync(r.dataId),h=n.readSync(s.dataId),d=o,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=$P(u,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class tB{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const nB={kernelName:Na,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:o,onValue:i,offValue:c}=a,l=Ge(r.shape),u=new tB(l,o,i,c),h=EO({inputs:{x:r},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(u,[h],s);n.disposeIntermediateTensorInfo(h);const p=EO({inputs:{x:d},backend:n,attrs:{shape:[...r.shape,o]}});return n.disposeIntermediateTensorInfo(d),p}};function aB(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=GM({inputs:{input:a},backend:n}),t=aB({inputs:{x:e},backend:n}),r=sL({inputs:{input:a},backend:n}),s=aB({inputs:{x:r},backend:n}),o=uO({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return vz({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const rB={kernelName:Ar,backendName:"webgl",kernelFunc:aB};const sB={kernelName:Sa,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=GM({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=sL({inputs:{input:r},backend:a}),o=aB({inputs:{x:s},backend:a}),i=uO({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return vz({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const oB={kernelName:Ia,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return hz({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{Ve(s,e.shape,"All tensors passed to stack must have matching shapes"),We(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=cL({inputs:t.map((e=>{const t=hz({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};class iB{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=lF(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(r," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class cB{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=lF(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=_D("rc",a),c=_D("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h=["".concat(r," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(l,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(l,") {")],d=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===a?2:4;f<m;f++)p+="\n        ".concat(h[f],"\n        if (").concat(d,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(r," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ");p+=1===a?"} ":"}}",this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const lB=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:o}=a;if(0===Ge(r.shape)){const e=s.map(((e,t)=>e[0]+r.shape[t]+e[1]));return vz({backend:n,attrs:{shape:e,value:o,dtype:r.dtype}})}const i=vt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new cB(r.shape,s,o):new iB(r.shape,s,o),c=[[o]];return n.runWebGLProgram(i,[r],r.dtype,c)},uB={kernelName:Ta,backendName:"webgl",kernelFunc:lB},hB=vO({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+oO+"\n  return result;\n"}),dB={kernelName:Ca,backendName:"webgl",kernelFunc:hB};const pB={kernelName:Ra,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=[],l=Qe(s,r.shape);let u=l;const h=wu(u,i);let d,p=r;if(null!=h&&(p=PO({inputs:{x:r},backend:n,attrs:{perm:h}}),u=Su(u.length,i),c.push(p)),vu("prod",u,i),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:a,outDtype:r}=oD(p.shape,p.dtype,e,u);d=n.makeTensorInfo(a,r,t)}else{const[e,t]=bu(p.shape,u),a=Ge(t),s=EO({inputs:{x:p},backend:n,attrs:{shape:[-1,a]}}),o=FO(s,Ws(r.dtype),"prod",n);d=EO({inputs:{x:o},backend:n,attrs:{shape:e}}),c.push(s),c.push(o)}if(o){c.push(d);const e=xu(d.shape,l);d=EO({inputs:{x:d},backend:n,attrs:{shape:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const fB={kernelName:Aa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.readSync(e.dataId))),l=r.map((e=>e.shape)),u=n.readSync(s.dataId),h=n.readSync(o.dataId),[d,p,f]=iD(c,l,u,s.shape,s.dtype,h,o.shape,i),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}};const mB={kernelName:_a,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=cD(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};const gB={kernelName:Fa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.readSync(r.dataId),u=n.readSync(s.dataId),h=n.readSync(o.dataId),d=i.map((e=>n.readSync(e.dataId))),p=i.map((e=>e.shape)),[f,m]=lD(l,r.shape,u,s.shape,s.dtype,h,o.shape,d,p,c);return n.makeTensorInfo(f,s.dtype,m)}},yB=e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:o}=n,i=uD(a,r,s,o);return t.makeTensorInfo([i.length],o,i)},bB={kernelName:Da,backendName:"webgl",kernelFunc:yB},xB=xO({opSnippet:"return 1.0 / x;"}),vB={kernelName:Ma,backendName:"webgl",kernelFunc:xB},wB=xO({opSnippet:BD+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),kB={kernelName:La,backendName:"webgl",kernelFunc:wB},SB=xO({opSnippet:BD+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),NB={kernelName:Ua,backendName:"webgl",kernelFunc:SB};class IB{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class TB{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const CB={kernelName:Wa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a,[c,l]=i,u=vt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new TB(r.shape,c,l,s,o):new IB(r.shape,c,l,s,o);return n.runWebGLProgram(u,[r],"float32")}};class EB{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(r-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const RB={kernelName:Va,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new EB(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class AB{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class _B{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const FB={kernelName:Pa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a,[c,l]=i,u=vt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new _B(r.shape,c,l,s,o):new AB(r.shape,c,l,s,o);return n.runWebGLProgram(u,[r],r.dtype)}};class DB{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const OB={kernelName:Ba,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new DB(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class MB{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=e,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(e[0]," - coord - 1));\n        }\n      "));const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),r=lF(n);this.userCode="\n      void main() {\n        ".concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class LB{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=e;const a=_D("rc",n),r="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),s="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),o=lF(n);function i(n){const a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(r,n))),r=a.join(","),s=a.slice(-2).join(",");return"getChannel(getX(".concat(r,"), vec2(").concat(s,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(e[0]," - rc - 1),\n            ").concat(e[0]," - rc - 1);\n          if(").concat(r,"){\n              result.g = getChannel(getX(").concat(e[0]," - (rc  + 1) - 1),\n                ").concat(e[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(o," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(e){return i(e)}(a.slice()),";\n          if(").concat(r,"){\n            result.g = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(a.slice()),";\n          }\n          if(").concat(s,") {\n            result.b = ").concat(function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            if(").concat(r,") {\n              result.a = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const zB={kernelName:Ga,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,o=r.shape.length,i=Qe(s,r.shape);if(0===o)return cO({inputs:{x:r},backend:n});const c=vt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new LB(r.shape,i):new MB(r.shape,i);return n.runWebGLProgram(c,[r],r.dtype)}};class PB{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let r="";r="number"===typeof t?"float outputValue = ".concat(t.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(t.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(r,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const BB={kernelName:Dr,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:o,center:i}=n,c=a,l=new PB(r.shape,o),[u,h]=Ef(i,r.shape[1],r.shape[2]),d=[[u,h,Math.sin(s),Math.cos(s)]];return c.runWebGLProgram(l,[r],r.dtype,d)}},WB=xO({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),VB={kernelName:Ha,backendName:"webgl",kernelFunc:WB},UB=xO({opSnippet:"return inversesqrt(x);",cpuKernelImpl:hD}),GB={kernelName:ja,backendName:"webgl",kernelFunc:UB};class HB{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=lF(r.length),c=lF(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(e,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(t,"; j++) {\n              int index = round(").concat(u,");\n              flattenedIndex += index * ").concat(m,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(d,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(f,", sum, float(found)));\n        }\n      ")}}class jB{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const i=lF(r.length),c=lF(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(e,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(t,"; j+=2) {\n              ivec4 index = round(").concat(u,");\n              flattenedIndex += index.xz * ").concat(m,";\n              if (j + 1 < ").concat(t,") {\n                flattenedIndex += index.yw * ").concat(g,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(d,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(f,", sum, found));\n        }\n      ")}}const qB={kernelName:qa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:o}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Od(0,r,o),d=[h/l,l];if(0===h)return n.makeTensorInfo(o,r.dtype);const p=EO({inputs:{x:r},backend:n,attrs:{shape:[c,i]}}),f=EO({inputs:{x:s},backend:n,attrs:{shape:[c,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=vt().getBool("WEBGL_PACK")?new jB(c,i,p.shape.length,f.shape.length,u,d):new HB(c,i,p.shape.length,f.shape.length,u,d);const y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=EO({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class KB{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r="for (int i = 0; i < ".concat(Math.ceil(Math.log2(t+1)),"; ++i) { if (left >= right) break;"),s=2===vt().getNumber("WEBGL_VERSION")?"while (left < right) {":r,o="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(s,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(o," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const XB={kernelName:Xa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,i=new KB(r.shape[0],r.shape[1],s.shape[1],o),c=[[r.shape[1]]];return n.runWebGLProgram(i,[r,s],"int32",c)}};class YB{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let a=0;a<t.length;a++)o.push("".concat(n[a])),a<e&&s.push("".concat(n[a]));a=s.join(),r=o.join()}const s=lF(n);this.userCode="\n      void main() {\n        ".concat(s," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(r,"));\n        } else {\n          setOutput(getB(").concat(r,"));\n        }\n      }\n    ")}}const QB={kernelName:Ya,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,o=new YB(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[a,r,s],Bs(r.dtype,s.dtype))}},ZB=xO({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(Mf,";\n  float scale = ").concat(Lf,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),JB={kernelName:Qa,backendName:"webgl",kernelFunc:ZB},$B=xO({opSnippet:bO+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:pD}),eW={kernelName:tr,backendName:"webgl",kernelFunc:$B},tW=xO({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),nW={kernelName:er,backendName:"webgl",kernelFunc:tW},aW=xO({opSnippet:bO+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(oO,"\n  return result;\n")}),rW={kernelName:Ja,backendName:"webgl",kernelFunc:aW},sW=xO({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),oW={kernelName:$a,backendName:"webgl",kernelFunc:sW},iW=xO({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),cW={kernelName:nr,backendName:"webgl",kernelFunc:iW},lW={kernelName:sr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:o}=a;We(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((e,t)=>e*t)),c=[[0,0]];c.push(...o);for(let y=1+s.length;y<r.shape.length;++y)c.push([0,0]);const l=[],u=lB({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),h=Rf(u.shape,s,i,!1),d=Af(h.length,s.length,!1),p=_f(u.shape,s,i,!1),f=EO({inputs:{x:u},backend:n,attrs:{shape:h}}),m=PO({inputs:{x:f},backend:n,attrs:{perm:d}}),g=EO({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(u),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const uW={kernelName:cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.readSync(a.dataId),c=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(o.dataId)[0],[h,d,p,f,m]=gD(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};const hW={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.readSync(r.dataId)),i=n.readSync(a.dataId),c=Array.from(n.readSync(s.dataId)),[l,u,h]=yD(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};const dW={kernelName:ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=bD(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const pW={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=bD(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const fW={kernelName:dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:o}=t,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=Od(0,r,i),p=!1;if("string"===s.dtype){const e=n.bufferSync(r),t=n.bufferSync(s),a=ds(n.readSync(o.dataId)[0]),f=dD(e,t,i,d,u,l,c,h,a,p);return n.makeTensorInfo(i,f.dtype,f.values)}const f=new HB(l,c,r.shape.length,s.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[s,r,o],s.dtype),g=EO({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(m),g}};const mW={kernelName:or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:o}=a,i=Qe(o,r.shape)[0],c=im(r,s,i),l=r.shape.length,u=new Array(l).fill(0),h=r.shape.slice();return c.map((e=>{const t=[...h];t[i]=e;const a=MM({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[i]+=e,a}))}},gW="return sqrt(x);",yW=xO({opSnippet:gW,packedOpSnippet:gW,cpuKernelImpl:xD}),bW={kernelName:ar,backendName:"webgl",kernelFunc:yW},xW={kernelName:fr,backendName:"webgl",kernelFunc:xO({opSnippet:"return x * x;"})},vW="return (a - b) * (a - b);",wW=vO({opSnippet:vW,packedOpSnippet:vW}),kW={kernelName:pr,backendName:"webgl",kernelFunc:wW};const SW={kernelName:mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const s=Sm(n.readSync(r.dataId)),o=vD(s,"string",a);return n.makeTensorInfo(r.shape,"string",o)}};const NW={kernelName:_r,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,s=BD+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),o=new PD(r.shape,s);return a.runWebGLProgram(o,[r],r.dtype)}};class IW{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=lF(n.length),s=lF(n.length);let o="";if(1===a)o="coords * strides + begin";else{let e=0;o=n.map(((t,a)=>(e++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(e-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(r," begin = ").concat(r,"(").concat(e,");\n      ").concat(r," strides = ").concat(r,"(").concat(t,");\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        setOutput(getX(").concat(o,"));\n      }\n    ")}}const TW={kernelName:gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=a,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Kc(r.shape,s,o,i,c,l,u,h,d);let w;if(m)w=EO({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){We(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=Oc(b,x,v),t=MM({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=EO({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=Ii(r.shape,r.dtype,e),a=wD(p,t,v,b);w=n.makeTensorInfo(f,r.dtype,a.values)}else{const e=new IW(b,v,p);w=n.runWebGLProgram(e,[r],r.dtype)}}const k=EO({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};const CW={kernelName:yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:h}=t,d=n.readSync(u.dataId),p=n.readSync(h.dataId),[f,m]=kD(d,p,r,s,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const EW={kernelName:br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.readSync(s.dataId),c=n.readSync(o.dataId)[0],[l,u,h]=SD(i,c,r),d=u.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const RW={kernelName:xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=ND(o,r);return n.makeTensorInfo(s.shape,"int32",i)}},AW=xO({opSnippet:"return tan(x);"}),_W={kernelName:wr,backendName:"webgl",kernelFunc:AW},FW=xO({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),DW={kernelName:kr,backendName:"webgl",kernelFunc:FW};const OW={kernelName:Ka,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:s,updates:o}=t,{}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Od(0,s,r.shape),d=[h/l,l];if(0===h)return n.makeTensorInfo(r.shape,s.dtype);const p=EO({inputs:{x:s},backend:n,attrs:{shape:[c,i]}}),f=EO({inputs:{x:o},backend:n,attrs:{shape:[c,l]}}),m=EO({inputs:{x:r},backend:n,attrs:{shape:d}}),g=new HB(c,i,p.shape.length,f.shape.length,u,d,!1,!0),y=n.runWebGLProgram(g,[f,p,m],m.dtype),b=EO({inputs:{x:y},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class MW{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const a=lF(this.rank),r=function(e){const t=e.length;if(t>5)throw Error("Tile for rank ".concat(t," is not yet supported"));if(1===t)return"imod(resRC, ".concat(e[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push("imod(".concat(n[r],", ").concat(e[r],")"));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}function LW(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>ds(e))):e,a=Ii(r.shape,r.dtype,t),o=TD(a,s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new MW(r.shape,s);return n.runWebGLProgram(o,[r],r.dtype)}const zW={kernelName:Sr,backendName:"webgl",kernelFunc:LW};class PW{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class BW{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function WW(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function VW(e){let t=1;for(;t<e;)t*=2;return t}const UW={kernelName:Nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a,i=vt().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=vt().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=r.shape,u=l[l.length-1];if(n.shouldExecuteOnCPU([r])||u<i||s>c){const e=n.readSync(r.dataId),[t,a]=CD(e,l,r.dtype,s,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,r.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===u)return[r,vz({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(r):r,f=Ge(l)/u,m=EO({inputs:{x:p},attrs:{shape:[f,u]},backend:n});d&&WW(n,p);const g=VW(s),y=VW(u);let b=null;const x=()=>null===b?[m,m]:[m,b],v=(e,t,a)=>{const r=x(),s=new PW(a),o=[[u],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=b;b=n.runWebGLProgram(s,r,"int32",o),WW(n,i)};for(let I=1;I<g;I*=2){const e=2*I;for(let t=I;t>=1;t/=2)v(e,t,[f,y])}for(let I=y;I>g;I/=2){const e=x(),t=new BW([f,I/2]),a=[[u],[null===b?1:0],[g]],r=b;b=n.runWebGLProgram(t,e,"int32",a),WW(n,r);const s=g/2,o=2*s;for(let n=s;n>=1;n/=2)v(o,n,b.shape)}let w=b;b=MM({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),WW(n,w);let k=Bz({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});WW(n,m);const S=l.slice(0,-1);S.push(s),w=b,b=EO({inputs:{x:b},attrs:{shape:S},backend:n}),WW(n,w);const N=k;return k=EO({inputs:{x:k},attrs:{shape:S},backend:n}),WW(n,N),[k,b]}};class GW{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(e," && 0 <= coordX && coordX < ").concat(t,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(r,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(r,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(t,"));\n                float mapY = mapCoord(inY, float(").concat(e,"));\n\n                if (").concat(o," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const HW={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=a,[u,h,d,p]=r.shape,[f,m]=null!=l?l:[h,d],g=new GW(h,d,o,i,c,[u,f,m,p]);return n.runWebGLProgram(g,[r,s],"float32")}};const jW={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;j_(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=a.readSync(s.dataId),{outputValues:i,outputShape:c,indices:l}=RD(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const qW={kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r,i=o.shape.length,c=r.shape[s],l=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==s&&(l[u++]=o.shape[m]);const h=[],d=new Array(i).fill(0),p=o.shape.slice();p[s]=1;const f=new Array(c);for(let m=0;m<f.length;m++){d[s]=m;const e=MM({inputs:{x:o},backend:n,attrs:{begin:d,size:p}}),t=EO({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class KW{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,o=s*Math.ceil(r/n);this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      "));let h="";r%n>0&&(h="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(h,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(s,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(s,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const XW={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:o}=a,i=r.shape.length,c=[];let l=0;const u=wu([l],i);let h=r;null!=u&&(h=PO({inputs:{x:r},backend:n,attrs:{perm:u}}),c.push(h),l=Su(1,i)[0]);const d=wm(h.shape,l,o),p=Ge([h.shape[l]]),f=EO({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});c.push(f);const m=Ws(r.dtype),g=(e,t,a,r,s)=>{const o=e.shape[0],i=e.shape[1],l=vm(i,s),u=new KW({windowSize:l,inSize:i,batchSize:o,numSegments:s},t),h=n.compileAndRun(u,[e,a],r);if(c.push(h),h.shape[1]===s)return h;const d=yB({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=LW({inputs:{x:d},backend:n,attrs:{reps:[i/l]}});c.push(d),c.push(p);return g(h,t,p,r,s)},y=EO({inputs:{x:g(f,"unsortedSegmentSum",s,m,o)},backend:n,attrs:{shape:d}});let b=y;if(null!=u){c.push(y);const e=ku(u);b=PO({inputs:{x:b},backend:n,attrs:{perm:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},YW=[UO,HO,qO,XO,ZO,eM,tM,nM,cM,lM,hM,pM,mM,yM,xM,kM,SM,TM,CM,EM,_M,zM,PM,BM,WM,qM,YM,JM,hO,tL,lL,yL,kL,NL,IL,TL,CL,RL,_L,DL,BL,WL,VL,GL,qL,YL,QL,JL,ez,tz,az,rz,oz,cz,uz,dz,mz,bz,wz,Sz,Tz,Ez,_z,Oz,Mz,zz,Wz,Uz,Hz,lO,jz,oL,Kz,Yz,Zz,fO,$z,tP,nP,rP,oP,cP,uP,dP,mP,yP,xP,wP,kP,SP,TP,CP,EP,RP,AP,FP,MP,zP,qP,CO,XP,QP,JP,eB,UM,nB,sB,oB,uB,dB,yO,pB,fB,mB,gB,bB,HM,WP,vB,kB,NB,RO,CB,RB,FB,OB,zB,BB,VB,GB,qB,XB,QB,JB,eW,nW,rW,oW,LM,jP,cW,lW,uW,hW,dW,pW,fW,mW,bW,xW,kW,SW,NW,TW,CW,EW,RW,GP,zO,_W,DW,OW,zW,UW,HW,BO,jW,qW,XW,rB];for(const n of YW)Hr(n);const QW=["cone"];class ZW{constructor(){this.get=e=>this.palette[Math.floor(e)%this.n],this.palette=["#FF3838","#FF9D97","#FF701F","#FFB21D","#CFD231","#48F90A","#92CC17","#3DDB86","#1A9334","#00D4BB","#2C99A8","#00C2FF","#344593","#6473FF","#0018EC","#8438FF","#520085","#CB38FF","#FF95C8","#FF37C7"],this.n=this.palette.length}}ZW.hexToRgba=(e,t)=>{var n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return n?"rgba(".concat([parseInt(n[1],16),parseInt(n[2],16),parseInt(n[3],16)].join(", "),", ").concat(t,")"):null};const JW=QW.length,$W=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:()=>{};const r=Date.now(),[s,o]=t.inputShape.slice(1,3);go().startScope();const[i,c,l]=((e,t,n)=>{let a,r;return[bo((()=>{const s=Rc(e),[o,i]=s.shape.slice(0,2),c=Math.max(i,o),l=s.pad([[0,c-o],[0,c-i],[0,0]]);return a=c/i,r=c/o,hf.resizeBilinear(l,[t,n]).div(255).expandDims(0)})),a,r]})(e,s,o),u=t.net.execute(i),h=u.transpose([0,2,1]),d=bo((()=>{const e=h.slice([0,0,2],[-1,-1,1]),t=h.slice([0,0,3],[-1,-1,1]),n=Xi(h.slice([0,0,0],[-1,-1,1]),_i(e,2)),a=Xi(h.slice([0,0,1],[-1,-1,1]),_i(t,2));return Il([a,n,Ri(a,t),Ri(n,e)],2).squeeze()})),[p,f]=bo((()=>{const e=h.slice([0,0,4],[-1,-1,JW]).squeeze(0);return[e.max(1),e.argMax(1)]})),m=await hf.nonMaxSuppressionAsync(d,p,5,.15,.7),g=d.gather(m,0).dataSync(),y=p.gather(m,0).dataSync(),b=f.gather(m,0).dataSync(),x=[];for(let S=0;S<y.length;++S){let[e,t,n,a]=g.slice(4*S,4*(S+1));t*=c,a*=c,e*=l,n*=l;let r=(t+a)/2/s,i=(e+n)/2/o;x.push({x:r,y:i,width:a-t,height:n-e,score:y[S],class:b[S]})}x.length>0&&(async e=>{try{const t=await fetch("https://survy-mac.tail49268.ts.net:8000/cone_detections",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({detections:e})});if(!t.ok)throw new Error("HTTP error! status: ".concat(t.status));return await t.json()}catch(t){console.error("Error sending data:",t)}})(x),((e,t,n,a,r)=>{const s=e.getContext("2d");s.clearRect(0,0,s.canvas.width,s.canvas.height);const o=new ZW,i="".concat(Math.max(Math.round(Math.max(s.canvas.width,s.canvas.height)/40),14),"px Arial");s.font=i,s.textBaseline="top";for(let c=0;c<n.length;++c){const e=QW[a[c]],l=o.get(a[c]),u=(100*n[c]).toFixed(1);let[h,d,p,f]=t.slice(4*c,4*(c+1));d*=r[0],f*=r[0],h*=r[1],p*=r[1];const m=f-d,g=p-h;s.fillStyle=ZW.hexToRgba(l,.2),s.fillRect(d,h,m,g),s.strokeStyle=l,s.lineWidth=Math.max(Math.min(s.canvas.width,s.canvas.height)/200,2.5),s.strokeRect(d,h,m,g),s.fillStyle=l;const y=s.measureText(e+" - "+u+"%").width,b=parseInt(i,10),x=h-(b+s.lineWidth);s.fillRect(d-1,x<0?0:x,y+s.lineWidth,b+s.lineWidth),s.fillStyle="#ffffff",s.fillText(e+" - "+u+"%",d-1,x<0?0:x)}})(n,g,y,b,[c,l]),xo([u,h,d,p,f,m]),a(),go().endScope();const v=Date.now()-r,w=n.getContext("2d");w.fillStyle="black",w.fillRect(0,0,110,55),w.fillStyle="white",w.font="Bold 16px Arial",w.fillText("Time: ".concat(v,"ms"),10,10);const k=1e3/v;w.fillText("FPS : ".concat(k.toFixed(2)),10,30)};class eV{constructor(){this.requestCameraPermission=async()=>{try{await navigator.mediaDevices.getUserMedia({video:!0})}catch(e){console.error("Error accessing camera:",e)}},this.openNormalCamera=async(e,t)=>{this.requestCameraPermission().then((async()=>{if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){const n=await navigator.mediaDevices.enumerateDevices();let a=n.find((e=>"videoinput"===e.kind&&e.label.toLowerCase().includes("back")&&!e.label.toLowerCase().includes("wide")&&!e.label.toLowerCase().includes("telephoto")&&!e.label.toLowerCase().includes("dual")&&!e.label.toLowerCase().includes("triple")));if(a||(console.log("No NORMAL BACK camera found, using any video input."),a=n.find((e=>"videoinput"===e.kind))),!a)return alert("No back camera found!"),void t(!1);navigator.mediaDevices.getUserMedia({video:{deviceId:{exact:a.deviceId}}}).then((n=>{e.srcObject=n,e.style.display="block",t("normal")}))}})).catch((e=>{throw console.error("Error accessing camera:",e),e}))},this.openTelephotoCamera=async(e,t)=>{this.requestCameraPermission().then((async()=>{if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){const n=await navigator.mediaDevices.enumerateDevices();let a=n.find((e=>"videoinput"===e.kind&&e.label.toLowerCase().includes("back")&&e.label.toLowerCase().includes("telephoto")&&!e.label.toLowerCase().includes("wide")&&!e.label.toLowerCase().includes("dual")&&!e.label.toLowerCase().includes("triple")));if(a||(console.log("No TELEPHOTO BACK camera found, using any video input."),a=n.find((e=>"videoinput"===e.kind))),!a)return alert("No back camera found!"),void t(!1);navigator.mediaDevices.getUserMedia({video:{deviceId:{exact:a.deviceId}}}).then((n=>{e.srcObject=n,e.style.display="block",t("telephoto")}))}})).catch((e=>{throw console.error("Error accessing camera:",e),e}))},this.close=(e,t)=>{e.srcObject&&(e.srcObject.getTracks().forEach((e=>{e.stop()})),e.srcObject=null,e.style.display="none"),t(!1)}}}const tV=function(){const e="cones_yolov8s",[t,n]=(0,E.useState)({loading:!0,progress:0}),[a,r]=(0,E.useState)({net:null,inputShape:[1,0,0,3]}),s=(0,E.useRef)(null),o=(0,E.useRef)(null),i=new eV,[c,l]=(0,E.useState)(!1);return(0,E.useEffect)((()=>{Zs.ready().then((async()=>{const t=await $S("".concat(window.location.href,"/").concat(e,"/model.json"),{onProgress:e=>{n({loading:!0,progress:e})}}),a=ph(t.inputs[0].shape),s=t.execute(a);n({loading:!1,progress:1}),r({net:t,inputShape:t.inputs[0].shape}),xo([s,a])}))}),[]),(0,E.useEffect)((()=>{a.net}),[a]),(0,_e.jsx)("div",{className:"flex justify-center",children:(0,_e.jsxs)("div",{className:"max-w-screen-md w-full",children:[(0,_e.jsx)("div",{className:"flex justify-center m-2",children:(0,_e.jsx)("h1",{className:"text-xl text-gray-800 font-semibold",children:"Camera Streamer!"})}),(0,_e.jsxs)("div",{className:"flex justify-center m-2 text-sm text-gray-800",children:[t.loading&&(0,_e.jsxs)("div",{children:["Loading: ",(0,_e.jsxs)("strong",{children:[(100*t.progress).toFixed(2),"%"]})]}),!t.loading&&1===t.progress&&(0,_e.jsxs)("div",{children:["Model: ",(0,_e.jsx)("strong",{children:e})]})]}),(0,_e.jsxs)("div",{className:"grid grid-cols-2 m-2 space-x-2 text-lg",children:[(0,_e.jsx)("button",{disabled:"telephoto"===c,className:"\n            bg-blue-500 text-white font-bold p-4 rounded\n            ".concat("telephoto"===c?"opacity-50":"","\n            "),onClick:()=>{c?i.close(s.current,l):i.openNormalCamera(s.current,l)},children:"normal"===c?"Stop":"Normal"}),(0,_e.jsx)("button",{disabled:"normal"===c,className:"\n            bg-blue-500 text-white font-bold p-4 rounded\n            ".concat("normal"===c?"opacity-50":"","\n            "),onClick:()=>{"telephoto"===c?i.close(s.current,l):(i.close(s.current,l),i.openTelephotoCamera(s.current,l))},children:"telephoto"===c?"Stop":"Telephoto"})]}),(0,_e.jsxs)("div",{className:"relative m-2",children:[(0,_e.jsx)("video",{className:"w-full h-auto",autoPlay:!0,display:"none",playsInline:!0,muted:!0,ref:s,onPlay:()=>((e,t,n)=>{const a=async()=>{if(0!==e.videoWidth||null!==e.srcObject)$W(e,t,n,(()=>{requestAnimationFrame(a)}));else{const e=n.getContext("2d");e.clearRect(0,0,e.canvas.width,e.canvas.height)}};a()})(s.current,a,o.current)}),(0,_e.jsx)("canvas",{className:"absolute top-0 left-0 w-full h-full",width:a.inputShape[1],height:a.inputShape[2],ref:o})]})]})})};const nV=function(){return(0,_e.jsx)("div",{className:"flex justify-center",children:(0,_e.jsxs)("div",{className:"max-w-screen-md w-full",children:[(0,_e.jsx)("div",{className:"flex justify-center m-2",children:(0,_e.jsx)("h1",{className:"text-xl text-gray-800 font-semibold",children:"Control Center!"})}),(0,_e.jsx)("div",{className:"grid grid-cols-1 m-2 space-y-2 text-lg ",children:(0,_e.jsx)("a",{href:"/",className:"bg-gray-300 text-black font-bold p-4 rounded text-center",children:"Home"})})]})})};const aV=function(){return(0,_e.jsxs)(Re,{children:[(0,_e.jsx)(Ce,{path:"/",element:(0,_e.jsx)(Fe,{})}),(0,_e.jsx)(Ce,{path:"/robo_magellan",element:(0,_e.jsx)(tV,{})}),(0,_e.jsx)(Ce,{path:"/control_center",element:(0,_e.jsx)(nV,{})})]})},rV=e=>{e&&e instanceof Function&&n.e(453).then(n.bind(n,453)).then((t=>{let{getCLS:n,getFID:a,getFCP:r,getLCP:s,getTTFB:o}=t;n(e),a(e),r(e),s(e),o(e)}))};var sV=n(950),oV=n.t(sV,2);new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);try{window.__reactRouterVersion="6"}catch(dV){}new Map;const iV=R.startTransition;oV.flushSync,R.useId;function cV(e){let{basename:t,children:n,future:a,window:r}=e,s=E.useRef();var o;null==s.current&&(s.current=(void 0===(o={window:r,v5Compat:!0})&&(o={}),B((function(e,t){let{pathname:n,search:a,hash:r}=e.location;return L("",{pathname:n,search:a,hash:r},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){return"string"===typeof t?t:z(t)}),null,o)));let i=s.current,[c,l]=E.useState({action:i.action,location:i.location}),{v7_startTransition:u}=a||{},h=E.useCallback((e=>{u&&iV?iV((()=>l(e))):l(e)}),[l,u]);return E.useLayoutEffect((()=>i.listen(h)),[i,h]),E.createElement(Ee,{basename:t,children:n,location:c.location,navigationType:c.action,navigator:i,future:a})}"undefined"!==typeof window&&"undefined"!==typeof window.document&&window.document.createElement;var lV,uV;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"})(lV||(lV={})),function(e){e.UseFetcher="useFetcher",e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(uV||(uV={}));A.createRoot(document.getElementById("root")).render((0,_e.jsx)(E.StrictMode,{children:(0,_e.jsx)(cV,{children:(0,_e.jsx)(aV,{})})})),rV()})()})();
//# sourceMappingURL=main.9f96408a.js.map